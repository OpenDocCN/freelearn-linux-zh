["```\n$ du  FILENAME1 FILENAME2 ..\n\n```", "```\n$ du file.txt\n4\n\n```", "```\n$ du -a DIRECTORY\n\n```", "```\n$  du -a test\n4  test/output.txt\n4  test/process_log.sh\n4  test/pcpu.sh\n16  test\n\n```", "```\n$ du test\n16  test\n\n```", "```\ndu -h FILENAME\n\n```", "```\n$ du -sh test/pcpu.sh\n4.0K  test/pcpu.sh\n# Multiple file arguments are accepted\n\n```", "```\n# du -h DIRECTORY\n$ du -h hack/\n16K  hack/\n\n```", "```\n$ du -c FILENAME1 FILENAME2..\n\n```", "```\ndu -c process_log.sh pcpu.sh\n4  process_log.sh\n4  pcpu.sh\n8  total\n\n```", "```\n$ du  -c DIRECTORY\n\n```", "```\n$ du -c test/\n16  test/\n16  total\n\n```", "```\n$ du -c *.txt\n# Wildcards\n\n```", "```\n$ du -s FILES(s)\n$ du -sh DIRECTORY\n\n```", "```\n$ du -sh slynux\n680K  slynux\n\n```", "```\n    $ du -b FILE(s)\n\n    ```", "```\n    $ du -k FILE(s)\n\n    ```", "```\n    $ du -m FILE(s)\n\n    ```", "```\n    $ du -B BLOCK_SIZE FILE(s)\n\n    ```", "```\n$ du pcpu.sh\n4  pcpu.sh\n$ du -b pcpu.sh\n439\tpcpu.sh\n$ du -k pcpu.sh\n4  pcpu.sh\n$ du -m pcpu.sh\n1  pcpu.sh\n$ du -B 4  pcpu.sh\n1024  pcpu.sh\n\n```", "```\n    $ du --exclude \"WILDCARD\" DIRECTORY\n\n    ```", "```\n    $ du --exclude \"*.txt\" FILES(s)\n    # Excludes all .txt files from calculation\n\n    ```", "```\n    $ du --exclude-from EXCLUDE.txt DIRECTORY\n    # EXCLUDE.txt is the file containing list\n\n    ```", "```\n$ du --max-depth 2 DIRECTORY\n\n```", "```\n$ du -ak SOURCE_DIR | sort -nrk 1 | head\n\n```", "```\n$ du -ak /home/slynux | sort -nrk 1 | head -n 4\n50220 /home/slynux\n43296 /home/slynux/.mozilla\n43284 /home/slynux/.mozilla/firefox\n43276 /home/slynux/.mozilla/firefox/8c22khxc.default\n\n```", "```\n$ find . -type f -exec du -k {} \\; | sort -nrk 1 | head\n\n```", "```\n$ df\nFilesystem           1K-blocks      Used Available Use% Mounted on\n/dev/sda1              9611492   2276840   6846412  25% /\nnone                    508828       240    508588   1% /dev\nnone                    513048       168    512880   1% /dev/shm\nnone                    513048        88    512960   1% /var/run\nnone                    513048         0    513048   0% /var/lock\nnone                    513048         0    513048   0% /lib/init/rw\nnone                   9611492   2276840   6846412  25% /var/lib/ureadahead/debugfs\n\n$ df -h\nFilesystemSize  Used Avail Use% Mounted on\n/dev/sda1             9.2G  2.2G  6.6G  25% /\nnone                  497M  240K  497M   1% /dev\nnone                  502M  168K  501M   1% /dev/shm\nnone                  502M   88K  501M   1% /var/run\nnone                  502M     0  502M   0% /var/lock\nnone                  502M     0  502M   0% /lib/init/rw\nnone                  9.2G  2.2G  6.6G  25% /var/lib/ureadahead/debugfs\n\n```", "```\n$ time COMMAND\n\n```", "```\n$ time ls\ntest.txt\nnext.txt\nreal    0m0.008s\nuser    0m0.001s\nsys     0m0.003s\n\n```", "```\n$ /usr/bin/time -o output.txt COMMAND\n\n```", "```\n$ /usr/bin/time \u2013a -o output.txt COMMAND\n\n```", "```\n$ /usr/bin/time -f \"FORMAT STRING\" COMMAND\n\n```", "```\n$ /usr/bin/time -f \"Time: %U\" -a -o timing.log uname\nLinux\n\n```", "```\n$ /usr/bin/time -f \"Time: %U\" uname> command_output.txt 2>time.log\n$ cat time.log\nTime: 0.00\n$ cat command_output.txt\nLinux\n\n```", "```\n$ /usr/bin/time -f \"Page size: %Z bytes\" ls> /dev/null\nPage size: 4096 bytes\n\n```", "```\n$ who\nslynux   pts/0   2010-09-29 05:24 (slynuxs-macbook-pro.local)\nslynux   tty7    2010-09-29 07:08 (:0) \n\n```", "```\n$ w\n 07:09:05 up  1:45,  2 users,  load average: 0.12, 0.06, 0.02\nUSER     TTY     FROM    LOGIN@   IDLE  JCPU PCPU WHAT\nslynux   pts/0   slynuxs 05:24  0.00s  0.65s 0.11s sshd: slynux \nslynux   tty7    :0      07:08  1:45m  3.28s 0.26s gnome-session\n\n```", "```\n$ users\nSlynux slynux slynux hacker\n\n```", "```\n$ users | tr ' ' '\\n' | sort | uniq\nslynux\nhacker\n\n```", "```\n$ uptime\n 21:44:33 up  3:17,  8 users,  load average: 0.09, 0.14, 0.09\n\n```", "```\n$ last\nslynux   tty7         :0              Tue Sep 28 18:27   still logged in\nreboot   system boot  2.6.32-21-generi Tue Sep 28 18:10 - 21:46  (03:35)\nslynux   pts/0        :0.0            Tue Sep 28 05:31 - crash  (12:39)\n\n```", "```\n$ last \u2013f /var/log/wtmp\n\n```", "```\n$ last USER\n\n```", "```\n$ last reboot\nreboot   system boot  2.6.32-21-generi Tue Sep 28 18:10 - 21:48  (03:37)\nreboot   system boot  2.6.32-21-generi Tue Sep 28 05:14 - 21:48  (16:33)\n\n```", "```\n# lastb\ntest     tty8         :0               Wed Dec 15 03:56 - 03:56  (00:00) \nslynux   tty8         :0               Wed Dec 15 03:55 - 03:55  (00:00)\n\n```", "```\n#!/bin/bash\n#Filename: top10_commands.sh\n#Description: Script to list top 10 used commands\n\nprintf \"COMMAND\\tCOUNT\\n\" ;\n\ncat ~/.bash_history | awk '{ list[$1]++; } \\\nEND{\nfor(i in list)\n{\nprintf(\"%s\\t%d\\n\",i,list[i]); }\n}'| sort -nrk 2 | head\n```", "```\n$ ./top10_commands.sh\nCOMMAND  COUNT\nping    80\nls      56\ncat     35\nps      34\nsudo    26\ndu      26\ncd      26\nssh     22\nsftp    22\nclear   21\n\n```", "```\n#!/bin/bash\n#Name: pcpu_usage.sh\n#Description: Script to calculate cpu usage by processes for 1 hour\n\nSECS=3600\nUNIT_TIME=60\n\n#Change the SECS to total seconds for which monitoring is to be performed.\n#UNIT_TIME is the interval in seconds between each sampling\n\nSTEPS=$(( $SECS / $UNIT_TIME ))\n\necho Watching CPU usage... ;\n\nfor((i=0;i<STEPS;i++))\ndo\n  ps -eo comm,pcpu | tail -n +2 >> /tmp/cpu_usage.$$\n  sleep $UNIT_TIME\ndone\n\necho\necho CPU eaters :\n\ncat /tmp/cpu_usage.$$ | \\\nawk '\n{ process[$1]+=$2; }\nEND{ \n  for(i in process)\n  {\n    printf(\"%-20s %s\",i, process[i] ;\n  }\n\n   }' | sort -nrk 2 | head\n\nrm /tmp/cpu_usage.$$\n#Remove the temporary log file\n```", "```\n$ ./pcpu_usage.sh\nWatching CPU usage...\nCPU eaters :\nXorg        20\nfirefox-bin   15\nbash        3\nevince      2\npulseaudio    1.0\npcpu.sh         0.3\nwpa_supplicant  0\nwnck-applet     0\nwatchdog/0      0\nusb-storage     0\n\n```", "```\n$ watch COMMAND\n\n```", "```\n$ watch ls\n\n```", "```\n$ watch 'COMMANDS'\n\n```", "```\n$ watch 'ls -l | grep \"^d\"'\n# list only directories\n\n```", "```\n$ watch -n 5 'ls -l'\n#Monitor the output of ls -l at regular intervals of 5 seconds\n\n```", "```\n$ watch -d 'COMMANDS'\n\n```", "```\n#/bin/bash\n#Filename: watchdir.sh\n#Description: Watch directory access\npath=$1\n#Provide path of directory or file \nas argument to script\n\ninotifywait -m -r -e create,move,delete $path  -q \n\n```", "```\n$ ./watchdir.sh .\n./ CREATE new\n./ MOVED_FROM new\n./ MOVED_TO news\n./ DELETE news\n\n```", "```\n$ cat /etc/logrotate.d/program\n/var/log/program.log {\nmissingok\nnotifempty\nsize 30k\n compress\nweekly\n rotate 5\ncreate 0600 root root\n}\n\n```", "```\n$ logger LOG_MESSAGE\n\n```", "```\n$ logger This is a test log line\n\n$ tail -n 1 /var/log/messages\nSep 29 07:47:44 slynux-laptop slynux: This is a test log line\n\n```", "```\n$ logger -t TAG This is a message\n\n$ tail -n 1 /var/log/messages\nSep 29 07:48:42 slynux-laptop TAG: This is a message\n\n```", "```\n$ logger -f /var/log/source.log\n\n```", "```\n#!/bin/bash\n#Filename: intruder_detect.sh\n#Description: Intruder reporting tool with auth.log input\nAUTHLOG=/var/log.auth.log\n\nif [[ -n $1 ]];\nthen\n  AUTHLOG=$1\n  echo Using Log file : $AUTHLOG\nfi\n\nLOG=/tmp/valid.$$.log\ngrep -v \"invalid\" $AUTHLOG > $LOG\nusers=$(grep \"Failed password\" $LOG | awk '{ print $(NF-5) }' | sort | uniq)\n\nprintf \"%-5s|%-10s|%-10s|%-13s|%-33s|%s\\n\" \"Sr#\" \"User\" \"Attempts\" \"IP address\" \"Host_Mapping\" \"Time range\"\n\nucount=0;\n\nip_list=\"$(egrep -o \"[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\" $LOG | sort | uniq)\"\n\nfor ip in $ip_list;\ndo\n  grep $ip $LOG > /tmp/temp.$$.log\n\nfor user in $users;\ndo\n  grep $user /tmp/temp.$$.log> /tmp/$$.log\n  cut -c-16 /tmp/$$.log > $$.time\n  tstart=$(head -1 $$.time);\n  start=$(date -d \"$tstart\" \"+%s\");\n\n  tend=$(tail -1 $$.time);\n  end=$(date -d \"$tend\" \"+%s\")\n\n  limit=$(( $end - $start ))\n\n  if [ $limit -gt 120 ];\n  then\n    let ucount++;\n\n    IP=$(egrep -o \"[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\" /tmp/$$.log | head -1 );\n\n    TIME_RANGE=\"$tstart-->$tend\"\n\n    ATTEMPTS=$(cat /tmp/$$.log|wc -l);\n\n    HOST=$(host $IP | awk '{ print $NF }' )\n\n  printf \"%-5s|%-10s|%-10s|%-10s|%-33s|%-s\\n\" \"$ucount\" \"$user\" \"$ATTEMPTS\" \"$IP\" \"$HOST\" \"$TIME_RANGE\";\n  fi\ndone\ndone\n\nrm /tmp/valid.$$.log /tmp/$$.log $$.time /tmp/temp.$$.log 2> /dev/null\n```", "```\n#!/bin/bash\n#Filename: disklog.sh\n#Description: Monitor disk usage health for remote systems\n\nlogfile=\"diskusage.log\"\n\nif [[ -n $1 ]]\nthen\n  logfile=$1\nfi\n\nif [ ! -e $logfile ]\nthen\n\n  printf \"%-8s %-14s %-9s %-8s %-6s %-6s %-6s %s\\n\" \"Date\" \"IP address\" \"Device\" \"Capacity\" \"Used\" \"Free\" \"Percent\" \"Status\" > $logfile\nfi\n\nIP_LIST=\"127.0.0.1 0.0.0.0\"\n#provide the list of remote machine IP addresses \n\n(\nfor ip in $IP_LIST;\ndo\n\n  ssh slynux@$ip 'df -H' | grep ^/dev/ > /tmp/$$.df\n\n  while read line;\n  do\n    cur_date=$(date +%D)\n    printf \"%-8s %-14s \" $cur_date $ip\n    echo $line | awk '{ printf(\"%-9s %-8s %-6s %-6s %-8s\",$1,$2,$3,$4,$5); }'\n\n  pusg=$(echo $line | egrep -o \"[0-9]+%\")\n  pusg=${pusg/\\%/};\n  if [ $pusg -lt 80 ];\n  then\n    echo SAFE\n  else\n    echo ALERT\n  fi\n\n  done< /tmp/$$.df\t\ndone\n\n) >> $logfile\n```", "```\n00 10 * * * /home/path/disklog.sh /home/user/diskusg.log\n```", "```\n$ ./disklog.sh\n\n```", "```\n#!/bin/bash\n#Filename: active_users.sh\n#Description: Reporting tool to find out active users\n\nlog=/var/log/wtmp\n\nif [[ -n $1 ]];\nthen\n  log=$1\nfi\n\nprintf \"%-4s %-10s %-10s %-6s %-8s\\n\" \"Rank\" \"User\" \"Start\" \"Logins\" \"Usage hours\"\n\nlast -f $log | head -n -2   > /tmp/ulog.$$\n\ncat /tmp/ulog.$$ |  cut -d' ' -f1 | sort | uniq> /tmp/users.$$\n\n(\nwhile read user;\ndo\n  grep ^$user /tmp/ulog.$$ > /tmp/user.$$\n  seconds=0\n\nwhile read t\n  do\n    s=$(date -d $t +%s 2> /dev/null) \n    let seconds=seconds+s\n  done< <(cat /tmp/user.$$ | awk '{ print $NF }' | tr -d ')(')\n\n  firstlog=$(tail -n 1 /tmp/user.$$ | awk '{ print $5,$6 }')\n  nlogins=$(cat /tmp/user.$$ | wc -l) \n  hours=$(echo \"$seconds / 60.0\" | bc)\n\n  printf \"%-10s %-10s %-6s %-8s\\n\"  $user \"$firstlog\" $nlogins $hours\ndone< /tmp/users.$$ \n\n) | sort -nrk 4 | awk '{ printf(\"%-4s %s\\n\", NR, $0) }' \nrm /tmp/users.$$ /tmp/user.$$ /tmp/ulog.$$\n```", "```\n$ ./active_users.sh\nRank User       Start      Logins Usage hours\n1    easyibaa   Dec 11     531    11437311943\n2    demoproj   Dec 10     350    7538718253\n3    kjayaram   Dec 9      213    4587849555\n4    cinenews   Dec 11     85     1830831769\n5    thebenga   Dec 10     54     1163118745\n6    gateway2   Dec 11     52     1120038550\n7    soft132    Dec 12     49     1055420578\n8    sarathla   Nov 1      45     969268728\n9    gtsminis   Dec 11     41     883107030\n10   agentcde   Dec 13     39     840029414\n\n```"]