["```\n#!/bin/sh\n#\n# 5/2/2017\n#\necho \"script1 - Linux Scripting Book\"\nx=1\nwhile [ $x -le 10 ]\ndo\n echo x: $x\n let x++\ndone\n\necho \"End of script1\"\n\nexit 0\n```", "```\n#!/bin/sh\n#\n# 5/2/2017\n#\necho \"script2 - Linux Scripting Book\"\n\nx=1\nwhile [ $x -ge 0 ]\ndo\n echo x: $x\n let x++\ndone\n\necho \"End of script2\"\n\nexit 0\n```", "```\n#!/bin/sh\n#\n# 5/2/2017\n#\necho \"script3 - Linux Scripting Book\"\n\nx=1\nwhile [ $x -le 10 ]\ndo\n echo x=$x\n mkdir chapter$x\n let x++\ndone\necho \"End of script3\"\n\nexit 0\n```", "```\n#!/bin/sh\n#\n# 5/2/2017\n#\necho \"script4 - Linux Scripting Book\"\n\nif [ $# -ne 1 ] ; then\n echo \"Usage: script4 string\"\n echo \"Will display the string on every line.\"\n exit 255\nfi\n\ntput clear                   # clear the screen\n\nx=1\nwhile [ $x -le $LINES ]\ndo\n echo \"********** $1 **********\"\n let x++\ndone\n\nexit 0\n```", "```\necho $LINES\n```", "```\nexport LINES=$LINES\n```", "```\n#!/bin/sh\n#\n# 5/2/2017\n#\n# script5 - Linux Scripting Book\n\ntput clear                   # clear the screen\n\nrow=1\nwhile [ $row -le $LINES ]\ndo\n col=1\n while [ $col -le $COLUMNS ]\n do\n  echo -n \"#\"\n  let col++\n done\n echo \"\"                     # output a carriage return\n let row++\ndone\n\nexit 0\n```", "```\n while [ condition ]\n do\n    other statements will go here\n done\n```", "```\n while [ condition ]\n do\n   while [ condition ]\n   do\n     other statements will go here\n   done\n done\n```", "```\n#!/bin/sh\n#\n# 5/3/2017\n#\necho \"script6 - Linux Scripting Book\"\n\necho \"This shows the while loop\"\n\nx=1\nwhile [ $x -lt 11 ]          # perform the loop while the condition \ndo                           # is true\n echo \"x: $x\"\n let x++\ndone\n\necho \"This shows the until loop\"\n\nx=1\nuntil [ $x -gt 10 ]          # perform the loop until the condition \ndo                           # is true\n echo \"x: $x\"\n let x++\ndone\n\necho \"End of script6\"\n\nexit 0\n```", "```\n for variable in list\n do\n     some commands\n done\n```", "```\n#!/bin/sh\n#\n# 5/4/2017\n#\necho \"script7 - Linux Scripting Book\"\n\nfor i in jkl.c bob Linux \"Hello there\" 1 2 3\ndo\n echo -n \"$i \"\ndone\n\nfor i in script*             # returns the scripts in this directory\ndo\n echo $i\ndone\n\necho \"End of script7\"\nexit 0\n```", "```\n#!/bin/sh\n#\n# 5/3/2017\n#\necho \"script8 - Linux Scripting Book\"\n\nif [ $# -eq 0 ] ; then\n echo \"Please enter at least 1 parameter.\"\n exit 255\nfi\n\nfor i in $*                  # the \"$*\" returns every parameter given \ndo                           # to the script\n echo -n \"$i \"\ndone\n\necho \"\"                      # carriage return\necho \"End of script8\"\n\nexit 0\n```", "```\n#!/bin/sh\n#\n# 5/3/2017\n#\necho \"script9 - Linux Scripting Book\"\n\nFN1=/tmp/break.txt\nFN2=/tmp/continue.txt\n\nx=1\nwhile [ $x -le 1000000 ]\ndo\n echo \"x:$x\"\n if [ -f $FN1 ] ; then\n  echo \"Running the break command\"\n  rm -f $FN1\n  break\n fi\n\n if [ -f $FN2 ] ; then\n  echo \"Running the continue command\"\n  rm -f $FN2\n  continue\n fi\n\n let x++\n sleep 1\ndone\n\necho \"x:$x\"\n\necho \"End of script9\"\n\nexit 0\n```", "```\nsleep 1       # sleep 1 second (the default is seconds)\nsleep 1s      # sleep 1 second\nsleep 1m      # sleep 1 minute\nsleep 1h      # sleep 1 hour\nsleep 1d      # sleep 1 day\n```", "```\n#!/bin/sh\n#\n# 5/3/2017\n#\necho \"script10 - Linux Scripting Book\"\n\necho \"Sleeping seconds...\"\nx=1\nwhile [ $x -le 5 ]\ndo\n date\n let x++\n sleep 1\ndone\n\necho \"Sleeping minutes...\"\nx=1\nwhile [ $x -le 2 ]\ndo\n date\n let x++\n sleep 1m\ndone\n\necho \"Sleeping hours...\"\nx=1\nwhile [ $x -le 2 ]\ndo\n date\n let x++\n sleep 1h\ndone\n\necho \"End of script10\"\nexit 0\n```", "```\n#!/bin/sh\n#\n# 5/3/2017\n#\necho \"script11 - Linux Scripting Book\"\n\nwhile [ true ]\ndo\n date\n sleep 60                    # 60 seconds\ndone\n\necho \"End of script11\"\n\nexit 0\n```", "```\n#!/bin/sh\n#\n# 5/3/2017\n#\necho \"script12 - Linux Scripting Book\"\n\nif [ $# -ne 1 ] ; then\n echo \"Usage: script12 process-directory\"\n echo \" For example: script12 /proc/20686\"\n exit 255\nfi\n\nFN=$1                        # process directory i.e. /proc/20686\nrc=1\nwhile [ $rc -eq 1 ]\ndo\n if [ ! -d $FN ] ; then      # if directory is not there\n  echo \"Process $FN is not running or has been terminated.\"\n  let rc=0\n else\n  sleep 1\n fi\ndone\n\necho \"End of script12\"\nexit 0\n```", "```\n    guest1   20686  0.0  0.0 106112  1260 pts/34   S+   17:20   0:00 /bin/sh ./script9\n    guest1   23334  0.0  0.0 103316   864 pts/18   S+   17:24   0:00 grep script9\n    ```", "```\n    $ script12 /proc/20686\n    ```", "```\n#!/bin/sh\n#\necho \"cbS by Lewis 5/4/2017\"\n\nif [ $# -eq 0 ] ; then\n echo \"Usage: cbS filename(s) \"\n echo \" Will make a numbered backup of the files(s) given.\"\n echo \" Files must be in the current directory.\"\n exit 255\nfi\n\nrc=0                         # return code, default is no error\nfor fn in $*                 # for each filename given on the command line\ndo\n if [ ! -f $fn ] ; then      # if not found\n  echo \"File $fn not found.\"\n  rc=1                       # one or more files were not found\n else\n  cnt=1                      # file counter\n  loop1=0                    # loop flag\n  while [ $loop1 -eq 0 ]\n  do\n   tmp=bak-$cnt.$fn\n   if [ ! -f $tmp ] ; then\n     cp $fn $tmp\n     echo \"File \"$tmp\" created.\"\n     loop1=1                 # end the inner loop\n   else\n     let cnt++               # try the next one\n   fi\n  done\n fi\ndone\n\nexit $rc                     # exit with return code\n```"]