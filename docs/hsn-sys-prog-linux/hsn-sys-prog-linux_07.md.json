["```\n$ cat > myfile\nThis is my file.\nIt has a few lines of not\nterribly exciting content.\n\nA blank line too! WOW.\n\nYou get it...\nOk fine, a useful line: we shall keep this file in the book's git repo.\nBye.\n$ ls -l myfile\n-rw-rw-r-- 1 seawolf seawolf 186 Feb 17 13:15 myfile\n$\n```", "```\necho \"I can append this string\" >> myfile\n```", "```\n$ grep seawolf /etc/passwd\nseawolf:x:1000:1000:Seawolf,,,:/home/seawolf:/bin/bash\n$ \n```", "```\nusername:<passwd>:UID:GID:descriptive_name:home_dir:program\n```", "```\n$ ps\n  PID  TTY          TIME  CMD\n13833 pts/5     00:00:00  bash\n30500 pts/5     00:00:00  ps\n$ \n```", "```\n$ id\nuid=1000(seawolf) gid=1000(seawolf) groups=1000(seawolf),4(adm),24(cdrom),27(sudo),[...]\n$ \n```", "```\necho \"I can append this string\" >> myfile\n```", "```\nif process_UID == file_UID\nthen\n     access_category = U\nelse if process_GID == file_GID\nthen\n     access_category = G\nelse\n     access_category = O\nfi\n```", "```\n$ ls -l myfile\n-rw-rw-r-- 1 seawolf seawolf 186 Feb 17 13:15 myfile\n$ \n```", "```\n$ stat myfile \n  File: myfile\n  Size: 186           Blocks: 8          IO Block: 4096   regular file\nDevice: 801h/2049d    Inode: 1182119     Links: 1\nAccess: (0664/-rw-rw-r--)  Uid: ( 1000/ seawolf)   Gid: ( 1000/ seawolf)\nAccess: 2018-02-17 13:15:52.818556856 +0530\nModify: 2018-02-17 13:15:52.818556856 +0530\nChange: 2018-02-17 13:15:52.974558288 +0530\n Birth: -\n$ \n```", "```\necho \"I can append this string\" >> <path/to/>myfile\n```", "```\n$ id\nuid=1000(seawolf) gid=1000(seawolf) groups=1000(seawolf),4(adm), [...]\n$ \n```", "```\n{RUID, EUID, RGID, EGID} = {1000, 1000, 1000, 1000}\n```", "```\n$ ls -l /etc/shadow\n-rw-r----- 1 root shadow 891 Jun  1  2017 /etc/shadow\n$ \n```", "```\n$ which passwd\n/usr/bin/passwd\n$ \n```", "```\ngcc hello.c -o hello\n```", "```\n$ ls -l hello\n-rwxrwxr-x 1 seawolf seawolf 8336 Feb 17 19:02 hello\n$ chmod u+s hello ; ls -l hello\n-rwsrwxr-x 1 seawolf seawolf 8336 Feb 17 19:02 hello\n$ chmod u-s,g+s hello ; ls -l hello\n-rwxrwsr-x 1 seawolf seawolf 8336 Feb 17 19:02 hello\n$ chmod g-s hello ; ls -l hello\n-rwxrwxr-x 1 seawolf seawolf 8336 Feb 17 19:02 hello\n$\n```", "```\n$ cat rootsh_hack1.c\n[...]\nint main(int argc, char **argv)\n{\n    /* Just spawn a shell.\n     * If this process runs as root,\n     * then, <i>Evil Laugh</i>, we're now root!\n     */\n    system(\"/bin/bash\");\n    exit (EXIT_SUCCESS);\n}\n```", "```\n$ gcc rootsh_hack1.c -Wall\n$ ls -l a.out \n-rwxrwxr-x 1 seawolf seawolf 8344 Feb 20 10:15 a.out\n$ ./a.out \nseawolf@seawolf-mindev:~/book_src/ch7$ id -u\n1000\nseawolf@seawolf-mindev:~/book_src/ch7$ exit\nexit\n$\n```", "```\n$ chmod u+s a.out \n$ ls -l a.out \n-rwsrwxr-x 1 seawolf seawolf 8344 Feb 20 10:15 a.out\n$ \n```", "```\n$ ./a.out \nseawolf@seawolf-mindev:~/book_src/ch7$ id -u\n1000\nseawolf@seawolf-mindev:~/book_src/ch7$ exit\nexit\n$\n```", "```\n$ chown root a.out \nchown: changing ownership of 'a.out': Operation not permitted\n$ \n```", "```\n$ sudo chown root a.out \n[sudo] password for seawolf: xxx\n$ ls -l a.out \n-rwxrwxr-x 1 root seawolf 8344 Feb 20 10:15 a.out*\n$ \n```", "```\n$ sudo chmod u+s a.out \n$ ls -l a.out \n-rwsrwxr-x 1 root seawolf 8344 Feb 20 10:15 a.out\n$ \n```", "```\n$ ./a.out \nseawolf@seawolf-mindev:~/book_src/ch7$ id -u\n1000\nseawolf@seawolf-mindev:~/book_src/ch7$ exit\nexit\n$ \n```", "```\n... as a security measure, bash 2 drops privileges on startup. \n```", "```\n#include <unistd.h>\n#include <sys/types.h>\n\nuid_t getuid(void);\nuid_t geteuid(void);\n\ngid_t getgid(void);\ngid_t getegid(void);\n```", "```\n#define SHOW_CREDS() do {        \\\n  printf(\"RUID=%d EUID=%d\\n\"    \\\n         \"RGID=%d EGID=%d\\n\",    \\\n        getuid(), geteuid(),    \\\n        getgid(), getegid());   \\\n} while (0)\n\nint main(int argc, char **argv)\n{\n    SHOW_CREDS();\n    if (geteuid() == 0) {\n        printf(\"%s now effectively running as root! ...\\n\", argv[0]);\n        sleep(1);\n    }\n    exit (EXIT_SUCCESS);\n}\n```", "```\n$ ./query_creds\nRUID=1000 EUID=1000\nRGID=1000 EGID=1000\n$ sudo ./query_creds\n[sudo] password for seawolf: xxx \nRUID=0 EUID=0\nRGID=0 EGID=0\n./query_creds now effectively running as root! ...\n$ \n```", "```\n$ which sudo\n/usr/bin/sudo\n$ ls -l $(which sudo)\n-rwsr-xr-x 1 root root 145040 Jun 13  2017 /usr/bin/sudo\n$ \n```", "```\n$ id\nuid=1000(seawolf) gid=1000(seawolf) groups=1000(seawolf),4(adm),24(cdrom),27(sudo), [...]\n$ \n```", "```\n$ sudo -u mail id\n[sudo] password for seawolf: xxx\nuid=8(mail) gid=8(mail) groups=8(mail)\n$ \n```", "```\n#include <sys/types.h>\n#include <unistd.h>\n\nint setuid(uid_t uid);\nint setgid(gid_t gid);\n\nint seteuid(uid_t euid);\nint setegid(gid_t egid);\n\nint setreuid(uid_t ruid, uid_t euid);\nint setregid(gid_t rgid, gid_t egid);\n```", "```\n$ cat rootsh_hack2.c\n[...]\nint main(int argc, char **argv)\n{\n    /* Become root */\n    if (setuid(0) == -1)\n        WARN(\"setuid(0) failed!\\n\");\n\n    /* Now just spawn a shell;\n     * <i>Evil Laugh</i>, we're now root!\n     */\n    system(\"/bin/bash\");\n    exit (EXIT_SUCCESS);\n}\n```", "```\n$ ls -l rootsh_hack2\n-rwxrwxr-x 1 seawolf seawolf 8864 Feb 19 18:03 rootsh_hack2\n$ sudo chown root rootsh_hack2\n[sudo] password for seawolf: \n$ sudo chmod u+s rootsh_hack2\n$ ls -l rootsh_hack2\n-rwsrwxr-x 1 root seawolf 8864 Feb 19 18:03 rootsh_hack2\n$ ./rootsh_hack2\nroot@seawolf-mindev:~/book_src/ch7# id -u\n0\nroot@seawolf-mindev:~/book_src/ch7# ps\n  PID TTY          TIME CMD\n 7049 pts/0    00:00:00 rootsh_hack2\n 7050 pts/0    00:00:00 sh\n 7051 pts/0    00:00:00 bash\n 7080 pts/0    00:00:00 ps\nroot@seawolf-mindev:~/book_src/ch7# exit\nexit\n$ \n```", "```\n echo \"Scanning /bin ...\"\n ls -l /bin/ | grep \"^-..s\" | awk '$3==\"root\" {print $0}'\n```", "```\n$ ./show_setuidgid.sh\n------------------------------------------------------------------\nSystem Information (LSB):\n------------------------------------------------------------------\nNo LSB modules are available.\nDistributor ID:    Ubuntu\nDescription:    Ubuntu 17.10\nRelease:    17.10\nCodename:    artful\nkernel: 4.13.0-32-generic\n------------------------------------------------------------------\nScanning various directories for (traditional) SETUID-ROOT binaries ...\n------------------------------------------------------------------\nScanning /bin            ...\n-rwsr-xr-x 1 root root   30800 Aug 11  2016 fusermount\n-rwsr-xr-x 1 root root   34888 Aug 14  2017 mount\n-rwsr-xr-x 1 root root  146128 Jun 23  2017 ntfs-3g\n-rwsr-xr-x 1 root root   64424 Mar 10  2017 ping\n-rwsr-xr-x 1 root root   40168 Aug 21  2017 su\n-rwsr-xr-x 1 root root   26696 Aug 14  2017 umount\n------------------------------------------------------------------\nScanning /usr/bin        ...\n-rwsr-xr-x 1 root root       71792 Aug 21  2017 chfn\n-rwsr-xr-x 1 root root       40400 Aug 21  2017 chsh\n-rwsr-xr-x 1 root root       75344 Aug 21  2017 gpasswd\n-rwsr-xr-x 1 root root       39944 Aug 21  2017 newgrp\n-rwsr-xr-x 1 root root       54224 Aug 21  2017 passwd\n-rwsr-xr-x 1 root root      145040 Jun 13  2017 sudo\n-rwsr-xr-x 1 root root       18448 Mar 10  2017 traceroute6.iputils\n------------------------------------------------------------------\nScanning /sbin           ...\n------------------------------------------------------------------\nScanning /usr/sbin       ...\n------------------------------------------------------------------\nScanning /usr/local/bin  ...\n------------------------------------------------------------------\nScanning /usr/local/sbin ...\n------------------------------------------------------------------\n\nScanning various directories for (traditional) SETGID binaries ...\n------------------------------------------------------------------\nScanning /bin            ...\n------------------------------------------------------------------\nScanning /usr/bin        ...\n-rwxr-sr-x 1 root tty        14400 Jul 27  2017 bsd-write\n-rwxr-sr-x 1 root shadow     62304 Aug 21  2017 chage\n-rwxr-sr-x 1 root crontab    39352 Aug 21  2017 crontab\n-rwxr-sr-x 1 root shadow     22808 Aug 21  2017 expiry\n-rwxr-sr-x 1 root mlocate    38992 Apr 28  2017 mlocate\n-rwxr-sr-x 1 root ssh       362640 Jan 16 18:58 ssh-agent\n-rwxr-sr-x 1 root tty        30792 Aug 14  2017 wall\n------------------------------------------------------------------\nScanning /sbin           ...\n-rwxr-sr-x 1 root shadow   34816 Apr 22  2017 pam_extrausers_chkpwd\n-rwxr-sr-x 1 root shadow   34816 Apr 22  2017 unix_chkpwd\n------------------------------------------------------------------\nScanning /usr/sbin       ...\n------------------------------------------------------------------\nScanning /usr/local/bin  ...\n------------------------------------------------------------------\nScanning /usr/local/sbin ...\n------------------------------------------------------------------\n$\n```", "```\n-rwxr-sr-x 1 root tty        30792 Aug 14  2017 wall\n```", "```\n$ ls -l /dev/tty2\ncrw--w---- 1 root tty 4, 2 Feb 19 18:04 /dev/tty2\n$ \n```", "```\n$ ./show_setuidgid.sh 1\n------------------------------------------------------------------\nSystem Information (LSB):\n------------------------------------------------------------------\nLSB Version:    :core-4.1-amd64:core-4.1-noarch\nDistributor ID:    Fedora\nDescription:    Fedora release 27 (Twenty Seven)\nRelease:    27\nCodename:    TwentySeven\nkernel: 4.14.18-300.fc27.x86_64\n------------------------------------------------------------------\nScanning various directories for (traditional) SETUID-ROOT binaries ...\n------------------------------------------------------------------\nScanning /bin            ...\n------------------------------------------------------------------\nScanning /usr/bin        ...\n-rwsr-xr-x.   1 root root       52984 Aug  2  2017 at\n-rwsr-xr-x.   1 root root       73864 Aug 14  2017 chage\n-rws--x--x.   1 root root       27992 Sep 22 14:07 chfn\n-rws--x--x.   1 root root       23736 Sep 22 14:07 chsh\n-rwsr-xr-x.   1 root root       57608 Aug  3  2017 crontab\n-rwsr-xr-x.   1 root root       32040 Aug  7  2017 fusermount\n-rwsr-xr-x.   1 root root       31984 Jan 12 20:36 fusermount-glusterfs\n-rwsr-xr-x.   1 root root       78432 Aug 14  2017 gpasswd\n-rwsr-xr-x.   1 root root       36056 Sep 22 14:07 mount\n-rwsr-xr-x.   1 root root       39000 Aug 14  2017 newgidmap\n-rwsr-xr-x.   1 root root       41920 Aug 14  2017 newgrp\n-rwsr-xr-x.   1 root root       39000 Aug 14  2017 newuidmap\n-rwsr-xr-x.   1 root root       27880 Aug  4  2017 passwd\n-rwsr-xr-x.   1 root root       27688 Aug  4  2017 pkexec\n-rwsr-xr-x.   1 root root       32136 Sep 22 14:07 su\n---s--x--x.   1 root root      151416 Oct  4 18:55 sudo\n-rwsr-xr-x.   1 root root       27880 Sep 22 14:07 umount\n------------------------------------------------------------------\nScanning /sbin           ...\n------------------------------------------------------------------\nScanning /usr/sbin       ...\n-rwsr-xr-x. 1 root root    114840 Jan 19 23:25 mount.nfs\n-rwsr-xr-x. 1 root root     89600 Aug  4  2017 mtr\n-rwsr-xr-x. 1 root root     11256 Aug 21  2017 pam_timestamp_check\n-rwsr-xr-x. 1 root root     36280 Aug 21  2017 unix_chkpwd\n-rws--x--x. 1 root root     40352 Aug  5  2017 userhelper\n-rwsr-xr-x. 1 root root     11312 Jan  2 21:06 usernetctl\n------------------------------------------------------------------\nScanning /usr/local/bin  ...\n------------------------------------------------------------------\nScanning /usr/local/sbin ...\n------------------------------------------------------------------\n\nScanning various directories for (traditional) SETGID binaries ...\n------------------------------------------------------------------\nScanning /bin            ...\n------------------------------------------------------------------\nScanning /usr/bin        ...\n-rwxr-sr-x.   1 root cgred      15640 Aug  3  2017 cgclassify\n-rwxr-sr-x.   1 root cgred      15600 Aug  3  2017 cgexec\n-rwx--s--x.   1 root slocate    40528 Aug  4  2017 locate\n-rwxr-sr-x.   1 root tty        19584 Sep 22 14:07 write\n------------------------------------------------------------------\nScanning /sbin           ...\n------------------------------------------------------------------\nScanning /usr/sbin       ...\n-rwx--s--x. 1 root lock     15544 Aug  4  2017 lockdev\n-rwxr-sr-x. 1 root root      7144 Jan  2 21:06 netreport\n------------------------------------------------------------------\nScanning /usr/local/bin  ...\n------------------------------------------------------------------\nScanning /usr/local/sbin ...\n------------------------------------------------------------------\n$ \n```", "```\nsetuid(getuid());    // make process unprivileged\n```", "```\nTime t0: initialization code: must run as root\nTime t1: func1(): must *not* run as root\nTime t2: func2(): must run as root\nTime t3: func3(): must *not* run as root\n[...]\n```", "```\nt0: we are running with root privilege due to *setuid-root* binary  \n    executable being run\n saved_setuid = geteuid()   // save it\nt1: seteuid(getuid())      // must *not* run as root\nt2: seteuid(saved_setuid)  // switch back to the saved-set, root\nt3: seteuid(getuid())      // must *not* run as root\n```", "```\nmake savedset_demo\nsudo chown root savedset_demo\nsudo chmod u+s savedset_demo\n```", "```\nint main(int argc, char **argv)\n{\n    uid_t saved_setuid;\n\n    printf(\"t0: Init:\\n\");\n    SHOW_CREDS();\n    if (0 != geteuid())\n        FATAL(\"Not a setuid-root executable,\"\n            \" aborting now ...\\n\"\n            \"[TIP: do: sudo chown root %s ;\"\n            \" sudo chmod u+s %s\\n\"\n            \" and rerun].\\n\"\n            , argv[0], argv[0], argv[0]);\n    printf(\" Ok, we're effectively running as root! (EUID==0)\\n\");\n\n    /* Save the EUID, in effect the \"saved set UID\", so that\n     * we can switch back and forth\n     */\n    saved_setuid = geteuid();\n\n    printf(\"t1: Becoming my original self!\\n\");\n    if (seteuid(getuid()) == -1)\n        FATAL(\"seteuid() step 2 failed!\\n\");\n    SHOW_CREDS();\n\n    printf(\"t2: Switching to privileged state now...\\n\");\n    if (seteuid(saved_setuid) == -1)\n        FATAL(\"seteuid() step 3 failed!\\n\");\n    SHOW_CREDS();\n    if (0 == geteuid())\n        printf(\" Yup, we're root again!\\n\");\n\n    printf(\"t3: Switching back to unprivileged state now ...\\n\");\n    if (seteuid(getuid()) == -1)\n        FATAL(\"seteuid() step 4 failed!\\n\");\n    SHOW_CREDS();\n\n    exit (EXIT_SUCCESS);\n}\n```", "```\n$ make savedset_demo\ngcc -Wall -o savedset_demo savedset_demo.c common.o\n#sudo chown root savedset_demo\n#sudo chmod u+s savedset_demo\n$ ls -l savedset_demo\n-rwxrwxr-x 1 seawolf seawolf 13144 Feb 20 09:22 savedset_demo*\n$ ./savedset_demo\nt0: Init:\nRUID=1000 EUID=1000\nRGID=1000 EGID=1000\nFATAL:savedset_demo.c:main:48: Not a setuid-root executable, aborting now ...\n[TIP: do: sudo chown root ./savedset_demo ; sudo chmod u+s ./savedset_demo\n and rerun].\n$ \n```", "```\n#define _GNU_SOURCE         /* See feature_test_macros(7) */\n#include <unistd.h>\n\nint setresuid(uid_t ruid, uid_t euid, uid_t suid);\nint setresgid(gid_t rgid, gid_t egid, gid_t sgid);\n```", "```\nvoid permanently_drop_suid(uid_t uid)\n[...]\ndebug(\"permanently_drop_suid: %u\", (u_int)uid);\nif (setresuid(uid, uid, uid) < 0)\n    fatal(\"setresuid %u: %.100s\", (u_int)uid, strerror(errno));\n\n[...]\n\n/* Verify UID drop was successful */\n    if (getuid() != uid || geteuid() != uid) {\n        fatal(\"%s: euid incorrect uid:%u euid:%u (should be %u)\",\n            __func__, (u_int)getuid(), (u_int)geteuid(), (u_int)uid);\n}\n```", "```\n$ id mail uid=8(mail) gid=8(mail) groups=8(mail) $ sudo strace -e trace=setuid,setreuid,setresuid sudo -u mail id\n[...]\nsetresuid(-1, 0, -1)                    = 0\nsetresuid(-1, -1, -1)                   = 0\nsetresuid(-1, 8, -1)                    = 0\nsetresuid(-1, 0, -1)                    = 0\n[...]\n```", "```\nrun setuid-root program; EUID = 0\n  do required work as root\nswitch to 'normal' privileges: setuid(getuid())\n  do remaining work as non-root\n  [...]\n```"]