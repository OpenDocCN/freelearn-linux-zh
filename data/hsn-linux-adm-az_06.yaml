- en: 'Chapter 6: Managing Linux Security and Identities'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第6章：管理Linux安全和身份
- en: 'In the previous chapter, we discussed handling storage, along with network
    and process management. However, as a system administrator, your primary goal
    is to secure your Linux machine to deny any unauthorized access or limit access
    to users. In an enterprise environment, security breaches are a massive concern.
    In this chapter, we''ll be covering security—the protection of your workload at
    the operating system level; for example, if your organization is a financial institution
    where you will be dealing with workloads that deal with monetary commitments and
    even the **personally identifiable information** (**PII**) of customers, it''s
    critical that you secure the workload to avoid any breaches. Of course, Azure
    already provides you with services to protect your VMs in many ways and at many
    levels. The following are a few of these services:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们讨论了处理存储、网络和进程管理。然而，作为系统管理员，您的主要目标是保护Linux机器，拒绝任何未经授权的访问或限制用户的访问。在企业环境中，安全漏洞是一个巨大的关注点。在本章中，我们将涵盖安全性——在操作系统级别保护您的工作负载；例如，如果您的组织是一个金融机构，在那里您将处理涉及货币承诺甚至客户的**个人可识别信息**（**PII**）的工作负载，那么保护工作负载以避免任何违规行为就至关重要。当然，Azure已经为您提供了多种方式和多个层面的服务来保护您的VM。以下是其中一些服务：
- en: Azure Resource Manager, which provides security, auditing, and tagging features
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure资源管理器，提供安全性、审计和标记功能
- en: Web Application Firewall, which protects against many attacks, such as SQL injection
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Web应用程序防火墙，可防范诸如SQL注入等许多攻击
- en: The stateful packet filtering feature of network security groups
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络安全组的有状态数据包过滤功能
- en: Azure Firewall, which provides a stateful firewall tightly integrated with the
    monitoring functions of Azure
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure防火墙，提供与Azure监控功能紧密集成的有状态防火墙
- en: You can also subscribe to the Azure Security Center service for unified security
    management with a number of attractive features, such as continuous security assessment.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以订阅Azure安全中心服务，进行统一的安全管理，具有许多有吸引力的功能，如持续安全评估。
- en: 'With all these possibilities, do we still need protection at the operating
    system level? In our opinion, multi-level protection is a good idea. It will cost
    a hacker more effort and time, and this will make it easier to detect the hacker.
    There is no such thing as bug-free software: if an application is vulnerable,
    at least the operating system should be protected.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 有了所有这些可能性，我们是否仍然需要在操作系统级别进行保护？在我们看来，多层保护是一个好主意。这将使黑客付出更多的努力和时间，这将使检测黑客变得更容易。没有完全没有漏洞的软件：如果一个应用程序有漏洞，至少操作系统应该受到保护。
- en: Identity management is a topic that is certainly related to security. You can
    integrate Linux with **Azure Active Directory** (**Azure AD**) to centralize your
    login accounts, make access fine-grained by using role-based access control, revoke
    access, and enable multi-factor authentication.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 身份管理是与安全相关的一个话题。您可以将Linux与**Azure Active Directory**（**Azure AD**）集成，以集中管理您的登录帐户，通过使用基于角色的访问控制进行细粒度访问，撤销访问权限，并启用多因素身份验证。
- en: 'By the end of this chapter, you''ll be able to:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章结束时，您将能够：
- en: Implement a **mandatory access control** (**MAC**) system, such as SELinux or
    AppArmor.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实施**强制访问控制**（**MAC**）系统，如SELinux或AppArmor。
- en: Understand the basics of **discretionary access control** (**DAC**).
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解**自主访问控制**（**DAC**）的基础知识。
- en: Use the identity management systems available in Azure.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Azure中可用的身份管理系统。
- en: Enhance Linux security with the firewall daemon and systemd.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用防火墙守护程序和systemd增强Linux安全性。
- en: Linux Security Tips
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Linux安全提示
- en: Before we deep dive into all the great security measures you can take, here
    are some tips regarding security.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在深入讨论您可以采取的所有出色安全措施之前，这里有一些关于安全性的提示。
- en: Security implementation on multiple levels is, in general, a good idea. This
    way, a hacker requires different approaches to gain access, and this costs them
    time. Because of this time, and hopefully also because of logging and monitoring,
    you have a greater chance of detecting unauthorized access.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，在多个层面上实施安全性是一个好主意。这样，黑客需要不同的方法来获取访问权限，这会花费他们时间。由于这段时间，希望也是由于日志记录和监控，您有更大的机会发现未经授权的访问。
- en: For files and directories, `suid/sgid` bit as much as possible. Are there users
    who need to change their own password? No? Then remove that bit from the `passwd`
    command.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 对于文件和目录，尽可能使用`suid/sgid`位。是否有需要更改自己密码的用户？没有？那么从`passwd`命令中删除该位。
- en: 'Use partitioning, especially for directories such as `/tmp`, `/var`, `/var/tmp`,
    and `/home`, and mount them with the `noexec`, `nodev`, and `nosuid` flags:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 使用分区，特别是对于`/tmp`、`/var`、`/var/tmp`和`/home`等目录，并使用`noexec`、`nodev`和`nosuid`标志进行挂载：
- en: In general, it's not a good idea for a user to be able to execute programs from
    these locations. Luckily, if you can't set the owner to root, you can copy a program
    with the `suid` bit to your own directory as a normal user.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一般来说，允许用户从这些位置执行程序并不是一个好主意。幸运的是，如果你无法将所有者设置为root，你可以将带有`suid`位的程序复制到自己的目录中作为普通用户。
- en: The `suid` and `sgid` permissions on files in these directories are very, very
    dangerous.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这些目录中文件的`suid`和`sgid`权限非常危险。
- en: Do not allow the creation or existence of characters or special devices on this
    partition.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不允许在此分区上创建或存在字符或特殊设备。
- en: To access the VM, use SSH key–based authentication, not passwords. Limit access
    to certain IPs, using ACLs or a firewall. Limit users and allow no remote access
    for root (use the `PermitRootLogin no` parameter and `AllowUsers` to only allow
    one or two accounts access). Use `sudo` to execute commands as root. Perhaps create
    special users, or groups of users, for special tasks in the `sudo` configuration.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 要访问虚拟机，请使用基于SSH密钥的身份验证，而不是密码。使用ACL或防火墙限制对特定IP的访问。限制用户，并且不允许root进行远程访问（使用`PermitRootLogin
    no`参数和`AllowUsers`只允许一个或两个帐户访问）。使用`sudo`以root身份执行命令。也许在`sudo`配置中创建特殊用户或用户组来执行特殊任务。
- en: Do not install too much software on a VM, especially when it comes to network
    services, such as web servers and email servers. Use the `ss` command from time
    to time to review the open ports and compare them with the ACLs and/or firewall
    rules.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 不要在虚拟机上安装太多软件，特别是涉及网络服务的软件，比如 Web 服务器和电子邮件服务器。定期使用 `ss` 命令来查看开放端口，并将其与 ACL 和/或防火墙规则进行比较。
- en: Another tip is not to disable SELinux on your system, which is a security module
    in the Linux kernel. Don't worry about this now, as we have a dedicated section
    on SElinux.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个提示是不要在系统上禁用 SELinux，这是 Linux 内核中的一个安全模块。现在不用担心这个问题，因为我们有一个专门的章节介绍 SELinux。
- en: Keep your system up to date; there is a reason why Linux vendors provide you
    with updates. Do it manually or with an automation/orchestration tool. Just do
    it!
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 保持系统更新；Linux 供应商提供更新是有原因的。可以手动进行更新，也可以使用自动化/编排工具。一定要做！
- en: Technical Requirements
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 技术要求
- en: For the purposes of this chapter, you'll need to deploy RedHat/CentOS 7 and
    an Ubuntu 18.04 VM. Another option is to use SUSE SLE 12 or openSUSE LEAP instead
    of the CentOS and Ubuntu VMs. SUSE supports all options discussed in this chapter.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您需要部署 RedHat/CentOS 7 和 Ubuntu 18.04 VM。另一个选择是使用 SUSE SLE 12 或 openSUSE
    LEAP 而不是 CentOS 和 Ubuntu VM。SUSE 支持本章讨论的所有选项。
- en: DAC
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DAC
- en: '**DAC** is also known as user-dictated access control. You may already be familiar
    with the classic permissions in Linux and ACLs. These combine to form DAC. Classic
    permissions check the **user ID** (**UID**) and **group ID** (**GID**) of the
    current process. Classic permissions match the UID and GID of the user trying
    to access the file with the UID and GID set to the file. Let''s see how DAC was
    introduced and what level of permission you have in Linux. However, we will not
    be discussing this in detail as the main intention is to get you familiarized
    with permissions in Linux.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**DAC** 也被称为用户控制的访问控制。您可能已经熟悉 Linux 中的经典权限和 ACL。这两者结合形成了 DAC。经典权限检查当前进程的 **用户
    ID**（**UID**）和 **组 ID**（**GID**）。经典权限将试图访问文件的用户的 UID 和 GID 与文件设置的 UID 和 GID 进行匹配。让我们看看
    DAC 是如何引入的，以及您在 Linux 中拥有什么级别的权限。但是，我们不会详细讨论这个问题，因为主要目的是让您熟悉 Linux 中的权限。'
- en: Introduction to DAC
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: DAC 简介
- en: The majority of operating systems, such as Linux, macOS, flavors of Unix, and
    even Windows, are based on DAC. MAC and DAC were defined in the **Trusted Computer
    System Evaluation Criteria** (**TCSEC**), also known as the Orange Book, published
    by the US **DoD** (**Department of Defense**). We'll be discussing MAC in the
    next section. As the name suggests, DAC allows the owners or creators of files
    to decide what level of access they need to give to other users for the same file.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数操作系统，如 Linux、macOS、各种 Unix 的变种，甚至 Windows，都是基于 DAC 的。MAC 和 DAC 在美国国防部发布的《可信计算机系统评估标准》（TCSEC），也称为橙皮书中定义。我们将在下一节讨论
    MAC。顾名思义，DAC 允许文件的所有者或创建者决定他们需要为同一文件提供其他用户的访问级别。
- en: Although we see DAC implemented in all systems, it is also regarded as weak.
    For example, if we grant read access to a user, it will be transitive in nature.
    So, there is nothing that will stop the user from copying the content of someone
    else's file to an object that the user has access to. In other words, the distribution
    of information is not administered in DAC. In the next section, we will take a
    quick look at file permissions.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们看到 DAC 在所有系统中都得到了实施，但它也被认为是薄弱的。例如，如果我们授予用户读取权限，它将具有传递性质。因此，没有任何东西会阻止用户将别人文件的内容复制到用户可以访问的对象中。换句话说，信息的分发在
    DAC 中没有得到管理。在下一节中，我们将快速了解文件权限。
- en: File Permissions in Linux
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Linux 中的文件权限
- en: 'Every file and directory in Linux is treated as an object and has three types
    of owner: user, group, and other. Going forward, we will generally refer to files
    and directories as objects. First, let''s understand the three different types
    of owners:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: Linux 中的每个文件和目录都被视为一个对象，并且具有三种所有者类型：用户、组和其他。接下来，我们通常将文件和目录称为对象。首先，让我们了解三种不同类型的所有者：
- en: '**User**: The user is the person who creates the object. By default, this person
    will become the owner of the object.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户：用户是创建对象的人。默认情况下，这个人将成为对象的所有者。
- en: '**Group**: A group is a collection of users. All users who are part of the
    same group will have the same access levels in relation to the object. The concept
    of a group makes it easier for you to assign permissions to multiple users at
    the same time. Think of a scenario where you will be creating a file and you want
    your team members to access the file as well. If you are part of a large team
    and assigning permissions to each user, this will be hectic. Instead, you can
    add the users to a group and define the permission for the group, meaning that
    all the users in the group inherit access.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**组**：组是用户的集合。所有属于同一组的用户将对对象具有相同的访问级别。组的概念使您能够一次为多个用户分配权限更加容易。想象一种情况，您将创建一个文件，并且希望您的团队成员也能访问该文件。如果您是一个庞大的团队，并且为每个用户分配权限，这将是繁琐的。相反，您可以将用户添加到一个组中，并为该组定义权限，这意味着组中的所有用户都继承了访问权限。'
- en: '**Other**: This refers to any other user who is not the owner (creator) of
    the object or who is not part of the user group who could own the object. In other
    words, think of a set containing the creator and all users in the group that has
    permission; ''''other'''' refers to a user who is not an element of this set.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**其他**：这指的是任何不是对象所有者（创建者）或不是用户组成员的其他用户。换句话说，想象一个包含创建者和具有权限的组中的所有用户的集合；“其他”指的是不是这个集合元素的用户。'
- en: 'As stated earlier, each object has three types of owner. Each owner (user,
    group, owner) will have three permissions on an object. These are as follows:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，每个对象都有三种所有者类型。每个所有者（用户、组、所有者）对对象都有三种权限。它们如下：
- en: '**Read**: Read permission will give permission to read or open a file. Read
    permission on a directory means that the user will be able to list the content
    of the directory.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**读取**：读取权限将允许读取或打开文件。目录上的读取权限意味着用户将能够列出目录的内容。'
- en: '**Write**: If applied to a file, this will give permission to alter the content
    of the file. Adding this permission to a directory will grant the authority to
    add, remove, and rename files in the directory.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**写入**：如果应用于文件，这将允许修改文件的内容。将此权限添加到目录将授予添加、删除和重命名文件的权限。'
- en: '**Execute**: This permission is mandatory for running an executable program
    or script. For example, if you have a bash script and you have read/write permission,
    this means you will be able to read and alter the code. To execute the code, however,
    you need this permission.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**执行**：这个权限对于运行可执行程序或脚本是必需的。例如，如果你有一个bash脚本并且有读/写权限，这意味着你可以读取和修改代码。然而，要执行代码，你需要这个权限。'
- en: 'Here is a pictorial representation of owners and the associated permissions:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 这是所有者和相关权限的图示表示：
- en: '![A flowchart representing three types of owners (user, group, and others)
    and their associated permissions on an object, namely read, write, and execute](img/B15455_06_01.jpg)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![代表三种所有者（用户、组和其他人）及其在对象上的读、写和执行权限的流程图](img/B15455_06_01.jpg)'
- en: 'Figure 6.1: Owner types and access permissions'
  id: totrans-44
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图6.1：所有者类型和访问权限
- en: Let's move on and understand how we can figure out the permissions from the
    Linux Terminal.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续了解如何从Linux终端中找出权限。
- en: To list the contents of a directory, execute `ls -lah`.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 要列出目录的内容，执行`ls -lah`。
- en: 'The output will be different based on the content you have in the directory
    you''re listing from:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 输出将根据你要列出的目录中的内容而有所不同：
- en: '![An output listing the contents of a directory](img/B15455_06_02.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![列出目录内容的输出](img/B15455_06_02.jpg)'
- en: 'Figure 6.2: Listing the contents of a directory'
  id: totrans-49
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图6.2：列出目录的内容
- en: If you observe the `data` line, the first letter is `d`, which implies that
    it is a directory. As regards `external.png`, it's showing `-`, which stands for
    a file, and there is `l` for `home`, which means a link (more like a shortcut).
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 如果观察`数据`行，第一个字母是`d`，这意味着它是一个目录。至于`external.png`，显示的是`-`，代表一个文件，而`home`有`l`，意味着一个链接（更像是一个快捷方式）。
- en: 'Let''s take a closer look:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们仔细看一下：
- en: '![A glance at the data line of the directory output](img/B15455_06_03.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![目录输出数据行的一瞥](img/B15455_06_03.jpg)'
- en: 'Figure 6.3: Data line of the directory output'
  id: totrans-53
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图6.3：目录输出的数据行
- en: First, `rwx` denotes that the user/owner has read, write, and execute permissions.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，`rwx`表示用户/所有者有读、写和执行权限。
- en: Second, `r-x` denotes that the group has read and execute permissions. However,
    write permission is not there.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 第二，`r-x`表示组有读和执行权限。然而，没有写权限。
- en: Third, `r-x` denotes that all others have read and execute access, but no write
    access.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 第三，`r-x`表示所有其他人都有读和执行权限，但没有写权限。
- en: Similarly, you can understand the permissions assigned to other objects.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 同样地，你可以理解分配给其他对象的权限。
- en: 'These will already be written in the order `read(r)`, `write(w)`, and `execute`.
    If a letter is missing, that means that the permission is not there. Here is a
    table explaining what these letters signify:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这些将按顺序写成`读(r)`、`写(w)`和`执行`。如果有一个字母缺失，那意味着该权限不存在。下面是一个解释这些字母代表的表格：
- en: '![List of access permissions and their corresponding symbols](img/B15455_06_04.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![访问权限列表及其对应的符号](img/B15455_06_04.jpg)'
- en: 'Figure 6.4: Symbols for access permissions'
  id: totrans-60
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图6.4：访问权限的符号
- en: 'You might be wondering who the owner of this file is and which group is getting
    access. This is answered in the output itself:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能想知道这个文件的所有者是谁，以及哪个组在访问。这在输出中已经有答案了：
- en: '![Output containing information regarding owners and groups](img/B15455_06_05.jpg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![包含有关所有者和组的信息的输出](img/B15455_06_05.jpg)'
- en: 'Figure 6.5: Owner and group details'
  id: totrans-63
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图6.5：所有者和组的详细信息
- en: 'In this case:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下：
- en: The user has read and write permission, but no execute permission.
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户有读和写权限，但没有执行权限。
- en: The group has read permission only, and no write and execute permission.
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 组只有读权限，没有写和执行权限。
- en: All others have read permission only.
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有其他人只有读权限。
- en: 'The following diagram will help you to understand how to differentiate between
    permissions for each owner:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 以下的图表将帮助你理解如何区分每个所有者的权限：
- en: '![Understanding the difference between various permissions for different owners](img/B15455_06_06.jpg)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![理解不同所有者的各种权限之间的差异](img/B15455_06_06.jpg)'
- en: 'Figure 6.6: Differentiating between permissions for each owner'
  id: totrans-70
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图6.6：区分每个所有者的权限
- en: 'You can change the permissions of a file or folder using the `chmod` command.
    The general syntax is:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用`chmod`命令来改变文件或文件夹的权限。一般的语法是：
- en: '[PRE0]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: However, applying a permission to the directory doesn't inherit the same to
    the sub-folders and files therein. If you would like the permissions to be inherited,
    you can use the `-R` parameter, which stands for *recursive*.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，对目录应用权限并不会继承到子文件夹和文件中。如果希望权限被继承，可以使用`-R`参数，代表*递归*。
- en: Also, this command doesn't give any output; that is, it doesn't return any output
    irrespective of whether it applied the permissions or not. You can use the `-v`
    parameter to get verbose output.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令也不会给出任何输出；也就是说，无论是否应用了权限，它都不会返回任何输出。你可以使用`-v`参数来获得详细输出。
- en: 'There are two ways in which you can pass permissions to the `chmod` command:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 有两种方式可以传递权限给`chmod`命令：
- en: Symbolic method
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 符号方法
- en: Absolute method/numeric model
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 绝对方法/数字模型
- en: Symbolic Method
  id: totrans-78
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 符号方法
- en: 'In the symbolic method, we will use the operator and user denotations. The
    following is a list of operators:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在符号方法中，我们将使用操作符和用户表示。以下是操作符列表：
- en: '![A list of operators for setting, adding, and removing permissions](img/B15455_06_07.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![用于设置、添加和移除权限的操作符列表](img/B15455_06_07.jpg)'
- en: 'Figure 6.7: Operators in symbolic method'
  id: totrans-81
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图6.7：符号方法中的操作符
- en: 'And here is a list of user denotations:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是用户表示列表：
- en: '![List of user denotations](img/B15455_06_08.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![用户表示列表](img/B15455_06_08.jpg)'
- en: 'Figure 6.8: User denotations'
  id: totrans-84
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图6.8：用户表示
- en: Let's now examine how we can combine the operator and denotation to change permission.
    We will be using the `-v` parameter to understand what's changed.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看如何结合操作符和表示法来更改权限。我们将使用“-v”参数来理解发生了什么变化。
- en: 'Let''s recall the permissions we had for the `external.png` file:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回顾一下我们对`external.png`文件的权限：
- en: '![Viewing the permissions for external.png file](img/B15455_06_09.jpg)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![查看external.png文件的权限](img/B15455_06_09.jpg)'
- en: 'Figure 6.9: Permissions for external.png file'
  id: totrans-88
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图6.9：external.png文件的权限
- en: 'As of now, the user doesn''t have execute permissions. To add these, execute
    the following command:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，用户没有执行权限。要添加这些权限，请执行以下命令：
- en: '[PRE1]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'In the output, you can see that the value changed from `rw-r--r--` to `rwxr--r--`:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在输出中，您可以看到该值从`rw-r--r--`更改为`rwxr--r--`：
- en: '![Adding execute permissions to a user](img/B15455_06_10.jpg)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![为用户添加执行权限](img/B15455_06_10.jpg)'
- en: 'Figure 6.10: Adding execute permissions'
  id: totrans-93
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图6.10：添加执行权限
- en: You will see some numbers here. We will discuss what these are when we discuss
    the absolute method.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 这里会显示一些数字。我们将在讨论绝对方法时讨论这些内容。
- en: 'Next, let''s try to write and execute permissions for the group by executing
    the following command:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们尝试为组添加写和执行权限，执行以下命令：
- en: '[PRE2]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'So, adding `wx(write, execute)` to `g(group)` will give you an output similar
    to the following. You can clearly understand the change from the output:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，向`g（组）`添加`wx（写、执行）`将给您一个类似以下的输出。您可以清楚地从输出中理解变化：
- en: '![Adding write and execute permissions to a group](img/B15455_06_11.jpg)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![为组添加写和执行权限](img/B15455_06_11.jpg)'
- en: 'Figure 6.11: Adding write and execute permissions to a group'
  id: totrans-99
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图6.11：为组添加写和执行权限
- en: Until now, we have been adding permissions. Now, let's see how to remove the
    existing read permissions of others.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们一直在添加权限。现在，让我们看看如何移除其他人的现有读权限。
- en: 'Execute the following:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下命令：
- en: '[PRE3]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'This will remove the read permission, which is evident from the following output:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 这将移除读权限，从以下输出中可以明显看出：
- en: '![An output showing change in read permissions](img/B15455_06_12.jpg)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![显示读权限更改的输出](img/B15455_06_12.jpg)'
- en: 'Figure 6.12: Removing the read permission'
  id: totrans-105
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图6.12：移除读权限
- en: Let's set read, write, and execute permissions for everyone (user, group, and
    other).
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们为所有人（用户、组和其他人）设置读、写和执行权限。
- en: 'Execute the following command:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下命令：
- en: '[PRE4]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The output shows that the permissions changed to `rwxrwxrwx`:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 输出显示权限更改为`rwxrwxrwx`：
- en: '![Setting read, write, and execute permissions to all owners (user, group,
    and others)](img/B15455_06_13.jpg)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![为所有所有者（用户、组和其他人）设置读、写和执行权限](img/B15455_06_13.jpg)'
- en: 'Figure 6.13: Setting read, write and execute permissions to everyone'
  id: totrans-111
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图6.13：为所有人设置读、写和执行权限
- en: 'Another example involves combining the permissions for each owner and passing
    these in a single shot, as shown here:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个例子涉及将每个所有者的权限组合在一起，并一次性传递这些权限，如下所示：
- en: '[PRE5]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Here, user permission is set to read and write, group permission to read-only,
    and other permission to execute-only. Likewise, you can separate the permissions
    using commas and use the necessary operators to grant permissions.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，用户权限设置为读写，组权限设置为只读，其他权限设置为仅执行。同样，您可以使用逗号分隔权限，并使用必要的运算符授予权限。
- en: Absolute (Numeric) Node
  id: totrans-115
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 绝对（数字）节点
- en: 'In this method, we will be using a three-digit octal number to set the permission.
    The following is a table of values and their corresponding permissions:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种方法中，我们将使用一个三位八进制数来设置权限。以下是数值及其对应权限的表格：
- en: '![List of numeric values and their corresponding permissions](img/B15455_06_14.jpg)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![数字值及其对应权限的列表](img/B15455_06_14.jpg)'
- en: 'Figure 6.14: Numeric values and their corresponding permissions'
  id: totrans-118
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图6.14：数字值及其对应权限
- en: 'Let''s take an example. Check the permissions of the `new-file` file, which
    is located in our current directory. Execute `ls -lah`:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们举个例子。检查位于当前目录中的`new-file`文件的权限。执行`ls -lah`：
- en: '![Executing ls -lah to check permissions of new-file](img/B15455_06_15.jpg)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![执行ls -lah以检查new-file的权限](img/B15455_06_15.jpg)'
- en: 'Figure 6.15: Checking permissions of new-file'
  id: totrans-121
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图6.15：检查new-file的权限
- en: Now, let's use numeric mode and assign permissions. We will change the user
    permission to `rwx`, so 4 + 2 + 1 = 7, and then change the group permission to
    `rw`, so 4 + 2 + 0 = 6, and only execute for others, so 0 + 0 + 1 = 1.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们使用数字模式并分配权限。我们将把用户权限更改为`rwx`，因此4 + 2 + 1 = 7，然后将组权限更改为`rw`，因此4 + 2 + 0
    = 6，其他人仅执行，因此0 + 0 + 1 = 1。
- en: Combining these three numbers, we get 761, so that is the value we need to pass
    to `chmod`.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 将这三个数字组合起来，我们得到761，因此这是我们需要传递给`chmod`的值。
- en: 'Execute the following command:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下命令：
- en: '[PRE6]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The output will be as follows:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Assigning permissions using 3-digit octal code](img/B15455_06_16.jpg)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![使用三位八进制代码分配权限](img/B15455_06_16.jpg)'
- en: 'Figure 6.16: Assigning permissions using the 3-digit octal code'
  id: totrans-128
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图6.16：使用三位八进制代码分配权限
- en: Now, we can relate the numbers we got in previous outputs when we were testing
    using the symbolic method.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以将我们在使用符号方法进行测试时得到的数字与之前的输出相关联。
- en: 'Here is a pictorial representation of the value:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 这是该值的图示表示：
- en: '![Pictorial representation of the 3-digit octal code](img/B15455_06_17.jpg)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![三位八进制代码的图示表示](img/B15455_06_17.jpg)'
- en: 'Figure 6.17: Pictorial representation of the 3-digit octal code'
  id: totrans-132
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图6.17：三位八进制代码的图示表示
- en: You may have noticed that there is an extra digit before the permission we assigned
    (for example, 0761). This `0` is for advanced file permissions. If you recall
    the tips, we had ''*The suid and sgid permissions on files in these directories
    are very, very dangerous*'' and ''*Try to avoid using the suid/sgid bit as much
    as possible*''. These `suid/sgid` values are passed via an additional digit. It's
    better not to use this and stick to the basic permission as these are very dangerous
    and can be complex.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能已经注意到我们分配的权限之前有一个额外的数字（例如，0761）。这个`0`是用于高级文件权限。如果您还记得提示，我们有“*这些目录中文件的suid和sgid权限非常危险*”和“*尽量避免使用suid/sgid位*”。这些`suid/sgid`值通过额外的数字传递。最好不要使用这个，而是坚持使用基本权限，因为这些非常危险且复杂。
- en: 'Now we know how to change permission, but how will we change the owning user
    and group? For this, we will be using the `chown` command. The syntax is as follows:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道如何更改权限，但是我们如何更改拥有用户和组呢？为此，我们将使用`chown`命令。语法如下：
- en: '[PRE7]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'This will change the owner and group of the file. If you want to change the
    owner only, you can use this:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 这将更改文件的所有者和组。如果只想更改所有者，可以使用这个：
- en: '[PRE8]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'If you want to change just the group, use the `chgrp` command:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 如果只想更改组，使用`chgrp`命令：
- en: '[PRE9]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: As explained in the case of the `chown` command, this command is also not recursive.
    If you want to make the change inherited to the subfolder and files of a directory,
    use the `-R` (recursive) parameter. You also have a verbose (`-v`) option as we
    saw in `chmod`.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 就像在`chown`命令的情况下解释的那样，这个命令也不是递归的。如果要使更改继承到目录的子文件夹和文件中，使用`-R`（递归）参数。就像我们在`chmod`中看到的那样，您还有一个详细的（`-v`）选项。
- en: Now that we know about handling permissions, let's go to the next section about
    MAC. DAC was all about permission checks using the UID and GID. On the other hand,
    MAC is policy-based access control. Let's now take a closer look at MAC.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道如何处理权限，让我们进入下一个关于MAC的部分。DAC完全是关于使用UID和GID进行权限检查。另一方面，MAC是基于策略的访问控制。现在让我们更仔细地看看MAC。
- en: MAC
  id: totrans-142
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: MAC
- en: In MAC, a system limits access to specific resources depending on the authorization
    and sensitivity of the specific resource. It's more policy-based and is implemented
    using **Linux Security Modules** (**LSM**).
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在MAC中，系统根据特定资源的授权和敏感性限制对特定资源的访问。它更多地基于策略，并使用**Linux安全模块**（**LSM**）来实现。
- en: Security labels are at the heart of MAC. Every subject is given a level of security
    clearance (for example, secret or confidential) and each data object gets a security
    classification. For instance, a user with a security clearance level of confidential
    who is trying to retrieve a data object with a security classification of top
    secret is denied access, because their clearance is lower than the classification
    of the object.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 安全标签是MAC的核心。每个主体都被赋予了一定级别的安全许可（例如，机密或保密），每个数据对象都有安全分类。例如，一个安全许可级别为保密的用户试图检索一个具有绝密安全分类的数据对象，因为他们的许可级别低于对象的分类，所以被拒绝访问。
- en: Hence, it is quite obvious that you can use the MAC model mostly in those environments
    where confidentiality is of the utmost importance (government institutions, and
    so on).
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，很明显，您可以在机密性非常重要的环境中（政府机构等）大多数情况下使用MAC模型。
- en: SELinux and AppArmor are examples of MAC-based commercial systems.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: SELinux和AppArmor是基于MAC的商业系统的例子。
- en: LSM
  id: totrans-147
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: LSM
- en: LSM is a framework for providing an interface for adding MAC on top of DAC.
    This extra layer of security can be added with SELinux (Red Hat–based distributions
    and SUSE), AppArmor (Ubuntu and SUSE), or the lesser-known Tomoyo (SUSE). In this
    section, we'll cover SELinux and AppArmor.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: LSM是一个提供在DAC之上添加MAC接口的框架。这种额外的安全层可以通过SELinux（基于Red Hat的发行版和SUSE）、AppArmor（Ubuntu和SUSE）或较少人知道的Tomoyo（SUSE）来添加。在本节中，我们将介绍SELinux和AppArmor。
- en: 'DAC is a model that provides access control based on users who are a member
    of a group and permissions on files and devices. MAC restricts access to resource
    objects such as the following:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: DAC是一个基于用户组成员和文件设备权限的访问控制模型。MAC限制对资源对象的访问，例如以下内容：
- en: Files
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件
- en: Processes
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 进程
- en: TCP/UDP ports
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TCP/UDP端口
- en: Users and their roles
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户及其角色
- en: MAC, as implemented by SELinux, works by assigning a classification label, also
    known as a context label, to every resource object, whereas AppArmor is path-based.
    In either case, if one resource object requires access to another object, it needs
    clearance. So, even if a hacker makes it into your web application, for instance,
    the other resources are still protected!
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: MAC，由SELinux实现，通过为每个资源对象分配一个分类标签，也称为上下文标签，来工作，而AppArmor是基于路径的。在任何情况下，如果一个资源对象需要访问另一个对象，它需要许可。因此，即使黑客成功进入您的网络应用程序，其他资源仍然受到保护！
- en: SELinux
  id: totrans-155
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: SELinux
- en: As we mentioned earlier, SELinux is a security module in Linux and, by way of
    a security tip, it's recommended that it not be disabled. SELinux was developed
    by the NSA and Red Hat. The initial release was on December 22, 2000, and, at
    the time of writing this book, the stable release available is 2.9, released in
    2019\. It can be used on every Red Hat–based distribution and SUSE. This book
    will cover implementation on Red Hat. If you want to use it on SUSE, visit the
    SUSE documentation at [https://doc.opensuse.org/documentation/leap/security/html/book.security/cha-selinux.html](https://doc.opensuse.org/documentation/leap/security/html/book.security/cha-selinux.html)
    to install and enable SELinux. After that, the procedures are the same. In the
    past, some effort was made to make it work on Ubuntu but, at the moment, there
    is no active development and the packages are broken.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前提到的，SELinux是Linux中的一个安全模块，作为一个安全提示，建议不要禁用它。SELinux是由NSA和Red Hat开发的。最初发布于2000年12月22日，在撰写本书时，可用的稳定版本是2019年发布的2.9版。它可以在每个基于Red
    Hat的发行版和SUSE上使用。本书将介绍在Red Hat上的实现。如果您想在SUSE上使用它，请访问SUSE文档[https://doc.opensuse.org/documentation/leap/security/html/book.security/cha-selinux.html](https://doc.opensuse.org/documentation/leap/security/html/book.security/cha-selinux.html)来安装和启用SELinux。之后，程序是相同的。过去曾经努力使其在Ubuntu上运行，但目前没有积极的开发，而且软件包已经损坏。
- en: 'All access must be explicitly granted but, on the distributions that utilize
    SELinux, many policies are already in place. This covers almost every resource
    object. On top of the list already mentioned in the documentation, it covers the
    following:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 所有访问必须明确授权，但在使用SELinux的发行版上，已经有许多策略。这几乎涵盖了每个资源对象。除了文档中已经提到的列表之外，还包括以下内容：
- en: The complete network stack, including IPsec
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 完整的网络堆栈，包括IPsec
- en: Kernel capabilities
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内核功能
- en: '**Inter-process communication** (**IPC**)'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**进程间通信**（**IPC**）'
- en: Memory protection
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内存保护
- en: File descriptor (communication channels) inheritance and transfer
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件描述符（通信通道）继承和传输
- en: For container virtualization solutions such as Docker, SELinux can protect the
    host and offers protection between containers.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Docker等容器虚拟化解决方案，SELinux可以保护主机并在容器之间提供保护。
- en: SELinux Configuration
  id: totrans-164
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: SELinux配置
- en: 'SELinux is configured via the `/etc/selinux/config` file:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: SELinux是通过`/etc/selinux/config`文件进行配置的：
- en: '[PRE10]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The status should be in `enforcing` mode in a production environment. Policies
    are enforced and, if access is restricted, auditing can be done to be able to
    fix the problems caused by SELinux. The `permissive` mode can become handy if
    you are a software developer or packager and you need to create SELinux policies
    for your software.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 在生产环境中，状态应该是`enforcing`模式。策略是强制执行的，如果访问受限，可以进行审计以修复SELinux引起的问题。如果您是软件开发人员或打包人员，并且需要为您的软件创建SELinux策略，`permissive`模式可能会有用。
- en: 'It''s possible to switch between the `enforcing` and `permissive` modes using
    the `setenforce` command. Use `setenforce 0` to switch to the permissive mode
    and `setenforce 1` to go back to the enforcing mode. The `getenforce` command
    is available to view the current status:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用`setenforce`命令在`enforcing`和`permissive`模式之间切换。使用`setenforce 0`切换到permissive模式，使用`setenforce
    1`切换回enforcing模式。`getenforce`命令可用于查看当前状态：
- en: '[PRE11]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The default policy—`targeted`, protects all resources and provides enough protection
    for most workloads. **Multi-level security** (**MLS**) offers additional security
    by using levels of clearance provided by categories and sensitivities (such as
    confidential, secret, and top secret) together with SELinux users and roles. This
    can be very useful for file servers that offer file shares.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 默认策略—`targeted`，保护所有资源，并为大多数工作负载提供足够的保护。**多级安全**（**MLS**）通过使用类别和敏感性提供的许可级别以及SELinux用户和角色提供额外的安全性。这对于提供文件共享的文件服务器非常有用。
- en: If the `minimum` type is selected, then only the bare minimum is protected;
    you need to configure everything else yourself if you want more protection. This
    type can be useful if there are difficulties in protecting a multi-process application
    (typically, very old applications) and a generated policy removes too many restrictions.
    In this scenario, it's better to leave the specific application unprotected, and
    protect the rest of the system. In this section, I'll only discuss `SELINUXTYPE=targeted`,
    which is the most widely used option.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 如果选择了`minimum`类型，那么只有最基本的保护；如果需要更多的保护，就需要自己配置其他所有内容。如果在保护多进程应用程序（通常是非常老的应用程序）时遇到困难，并且生成的策略去除了太多限制，那么这种类型可能会有用。在这种情况下，最好是让特定应用程序不受保护，并保护系统的其余部分。在本节中，我只会讨论`SELINUXTYPE=targeted`，这是最常用的选项。
- en: 'To show the state of SELinux, you can use the `sestatus` command. The output
    should be similar to the following screenshot:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 要显示SELinux的状态，可以使用`sestatus`命令。输出应该类似于以下屏幕截图：
- en: '![Running the sestatus command to view the state of SELinux](img/B15455_06_18.jpg)'
  id: totrans-173
  prefs: []
  type: TYPE_IMG
  zh: '![运行sestatus命令查看SELinux状态](img/B15455_06_18.jpg)'
- en: 'Figure 6.18: SELinux state'
  id: totrans-174
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图6.18：SELinux状态
- en: 'Before we explore SELinux, you''ll need to add the necessary packages to your
    system to be able to audit SELinux. Please execute the following command:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 在探索SELinux之前，您需要向系统添加必要的软件包，以便审计SELinux。请执行以下命令：
- en: '[PRE12]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'After this, you''ll need to reboot the VM:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，您需要重新启动虚拟机：
- en: '[PRE13]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'After the reboot, we''re ready to use and troubleshoot SELinux:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 重启后，我们准备使用和排除SELinux故障：
- en: '[PRE14]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Let''s start with an easy example involving the SSH service. As stated earlier,
    all processes are labeled with a context label. To make this label visible, many
    utilities, such as `ls`, `ps`, and `lsof`, have the `-Z` parameter. First, you
    have to find the main process ID of this service:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从涉及SSH服务的简单示例开始。如前所述，所有进程都带有上下文标签。为了使此标签可见，许多实用程序，如`ls`、`ps`和`lsof`，都有`-Z`参数。首先，您需要找到此服务的主要进程ID：
- en: '[PRE15]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Using this process ID, we can ask for the context label:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 使用此进程ID，我们可以请求上下文标签：
- en: '[PRE16]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The context label is `system_u`, `system_r`, `sshd_t`, and `s0-s0, c0.c1023`.
    Because we''re using the targeted SELinux type, we only take care of the SELinux
    type part: `sshd_t`.'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 上下文标签是`system_u`，`system_r`，`sshd_t`和`s0-s0，c0.c1023`。因为我们使用的是有针对性的SELinux类型，所以我们只关心SELinux类型部分：`sshd_t`。
- en: 'SSH is running on port 22\. Let''s now investigate the label on the port:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: SSH正在端口22上运行。现在让我们调查端口的标签：
- en: '[PRE17]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'You will establish that the context label is `system_u`, `system_r`, `sshd_t`,
    `s0-s0`, and `c0.c1023`, in other words, exactly the same. It''s not difficult
    to understand that the `sshd` process does indeed have permission to run on this
    port with the same label:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 您将确定上下文标签是`system_u`，`system_r`，`sshd_t`，`s0-s0`和`c0.c1023`，换句话说，完全相同。不难理解`sshd`进程确实具有以相同标签运行在此端口的权限：
- en: '![Context label for sshd process](img/B15455_06_19.jpg)'
  id: totrans-189
  prefs: []
  type: TYPE_IMG
  zh: '![sshd进程的上下文标签](img/B15455_06_19.jpg)'
- en: 'Figure 6.19: Context label for sshd process'
  id: totrans-190
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图6.19：sshd进程的上下文标签
- en: 'It''s not always that simple, but before going into a more complex scenario,
    let''s modify the port that the SSH server is listening on to port 44\. To do
    so, edit the `/etc/ssh/sshd_config` file:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 这并不总是那么简单，但在进入更复杂的情景之前，让我们将SSH服务器监听的端口修改为端口44。要这样做，请编辑`/etc/ssh/sshd_config`文件：
- en: '[PRE18]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Then, restart the SSH server:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，重新启动SSH服务器：
- en: '[PRE19]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'This will fail:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 这将失败：
- en: '[PRE20]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'If you execute the `journalctl -xe` command, you will see the following message:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您执行`journalctl -xe`命令，您将看到以下消息：
- en: '[PRE21]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'There are multiple methods for troubleshooting SELinux. You can use the log
    file, `/var/log/audit/audit.log`, directly, or with the `sealert -a /var/log/audit/audit.log`
    command, or use the `journalctl` command:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 有多种方法可以用于排除SELinux故障。您可以直接使用日志文件`/var/log/audit/audit.log`，或者使用`sealert -a /var/log/audit/audit.log`命令，或者使用`journalctl`命令：
- en: '[PRE22]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'The logging entry also states the following:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 日志条目还说明了以下内容：
- en: '[PRE23]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Execute this command (and maybe redirect the output to a file or pipe it through
    `less` or `more`), and it will not only show you the same SELinux message again,
    but it will also come with a suggestion for how to fix it:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 执行此命令（可能将输出重定向到文件或通过`less`或`more`进行管道传输），它不仅会再次显示相同的SELinux消息，而且还会提出如何修复它的建议：
- en: '[PRE24]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Before going into this solution, SELinux works with multiple databases that
    contain the resource object, and the context label, that is, `/`, should be applied
    to the resource object. The `semanage` tool is available to modify the database
    and add entries to it; in our scenario, the database port. The output of the logging
    suggests adding a context label for TCP port 44 to the database. There are three
    possible contexts; all of them will fix your problem.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 在进入此解决方案之前，SELinux与包含资源对象和上下文标签的多个数据库一起工作，即应将`/`应用于资源对象。`semanage`工具可用于修改数据库并向其中添加条目；在我们的情况下，是端口数据库。日志的输出建议为TCP端口44添加上下文标签到数据库。有三种可能的上下文；它们都将解决您的问题。
- en: Another important aspect is the fact that there are sometimes other possible
    solutions. There is a confidence rating to make the choice easier for you. But
    even then, you still have to read carefully. Especially with files, sometimes,
    you want to add a regular expression instead of doing it for every file over and
    over again.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个重要的方面是有时还有其他可能的解决方案。有一个信心评级可以让您更容易地做出选择。但即使如此，您仍然必须仔细阅读。特别是对于文件，有时，您希望添加一个正则表达式，而不是一遍又一遍地为每个文件做同样的事情。
- en: 'You can take a pragmatic approach and state "I am not using `vnc` and `xserver`,
    so I choose `ssh_port_t`" or you can use the `sepolicy` utility, part of the `policycoreutils-devel`
    package. If you''re getting an error message, install `policycoreutils-devel`
    using `sudo yum install –y policycoreutils-devel`:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以采取一种实用的方法并声明“我不使用`vnc`和`xserver`，所以我选择`ssh_port_t`”，或者您可以使用`sepolicy`实用程序，该程序是`policycoreutils-devel`软件包的一部分。如果您收到错误消息，请使用`sudo
    yum install –y policycoreutils-devel`安装`policycoreutils-devel`：
- en: '[PRE25]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Search in the output for the TCP `name_bind`, because SELinux access is preventing
    `/usr/sbin/sshd` from having `name_bind` access to `tcp_socket port 44`.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 在输出中搜索TCP `name_bind`，因为SELinux访问正在阻止`/usr/sbin/sshd`对`tcp_socket port 44`进行`name_bind`访问。
- en: 'Now that you know where the suggestion comes from, look into the current label
    of port 22:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您知道建议来自何处，请查看端口22的当前标签：
- en: '[PRE26]'
  id: totrans-211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: The label is `ssh_port_t`.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 标签是`ssh_port_t`。
- en: Note
  id: totrans-213
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: You can use `semanage port -l` and `grep` on port 22\.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用`semanage port -l`和`grep`来查找端口22的内容。
- en: 'It really makes sense to use the same label. Not convinced? Let''s generate
    man pages:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 使用相同的标签确实是有道理的。不相信？让我们生成手册页：
- en: '[PRE27]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: The `ssh_selinux` man page tells you in the `ssh_port_t`.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: '`ssh_selinux`手册页告诉您`ssh_port_t`。'
- en: 'Finally, let''s fix the problem:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，让我们解决问题：
- en: '[PRE28]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'You don''t have to restart the `sshd` service; `systemd` will restart this
    service automatically within 42 seconds. By the way, the `sshd_config` file already
    has a comment that describes this fix. It is explicitly stated in the line before
    `#Port 22`:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 您不必重新启动`sshd`服务；`systemd`将在42秒内自动重新启动此服务。顺便说一句，`sshd_config`文件已经有一条注释描述了这个修复。在`#Port
    22`之前的行中明确说明了这一点：
- en: '[PRE29]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: It's a good idea to undo the configuration change and configure it back to port
    22; otherwise, you might be locked out of the test system.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 最好撤消配置更改并将其重新配置为端口22；否则，您可能会被锁在测试系统外。
- en: SELinux Context on Files
  id: totrans-223
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 文件上的SELinux上下文
- en: 'After our first meeting with SELinux and investigating context labels on ports,
    it''s time to investigate context labels on files. As an example, we''re going
    to use an `vsftpd` and an FTP client:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们与SELinux的第一次会议以及调查端口上的上下文标签之后，现在是时候调查文件上的上下文标签了。作为示例，我们将使用`vsftpd`和FTP客户端：
- en: '[PRE30]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Then, create a directory called `/srv/ftp/pub`:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，创建一个名为`/srv/ftp/pub`的目录：
- en: '[PRE31]'
  id: totrans-227
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'And then create a file in `/srv/ftp`:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 然后在`/srv/ftp`中创建一个文件：
- en: '[PRE32]'
  id: totrans-229
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Edit the configuration file, `/etc/vsftpd/vsftpd.conf`, and add the following
    beneath the `local_enable=YES` line:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑配置文件`/etc/vsftpd/vsftpd.conf`，并在`local_enable=YES`行下添加以下内容：
- en: '[PRE33]'
  id: totrans-231
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'This makes `/srv/ftp` the default root directory for the `vsftpd` service for
    anonymous users. Now you are ready to start the service:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 这将使`/srv/ftp`成为匿名用户`vsftpd`服务的默认根目录。现在您可以开始服务了：
- en: '[PRE34]'
  id: totrans-233
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Using the `ftp` utility, try to log into the FTP server as the user `anonymous`,
    without a password:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`ftp`实用程序，尝试以用户`anonymous`的身份登录到FTP服务器，无需密码：
- en: '[PRE35]'
  id: totrans-235
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'And it works! Why is this possible? Because there is already an entry in the
    database for `/srv/ftp/README` with the correct label:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 而且它有效！为什么会这样？因为数据库中已经有了`/srv/ftp/README`的正确标签条目：
- en: '[PRE36]'
  id: totrans-237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'The preceding command shows the following line:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 上面的命令显示以下行：
- en: '[PRE37]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'It''s applied while creating a new file:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建新文件时应用：
- en: '[PRE38]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Both commands tell you that the type is `public_content_t`. The man page of
    `ftpd_selinux` has two sections that are important here: `public_content_t` type
    only allows you to read (download) files, but that you are not allowed to write
    (upload) files with this type. You need another type, `public_content_rw_t`, to
    be able to upload files.'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个命令告诉你类型是`public_content_t`。`ftpd_selinux`的man页面有两个在这里很重要的部分：`public_content_t`类型只允许你读取（下载）文件，但不允许你使用这种类型写入（上传）文件。你需要另一种类型`public_content_rw_t`才能上传文件。
- en: 'Create an upload directory:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个上传目录：
- en: '[PRE39]'
  id: totrans-244
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'View the current label and change it:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 查看当前标签并更改它：
- en: '[PRE40]'
  id: totrans-246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: First, you have to add the policy to the `fcontext` database; after that, you
    can apply the policy to the already existing directory.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，你必须将策略添加到`fcontext`数据库；之后，你可以将策略应用到已经存在的目录。
- en: Note
  id: totrans-248
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: Read the man page of `selinux-fcontext`. In addition to describing all the options,
    there are also some nice examples.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 阅读`selinux-fcontext`的man页面。除了描述所有选项外，还有一些很好的例子。
- en: SELinux Boolean
  id: totrans-250
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: SELinux布尔值
- en: 'Using a single string, you can change the behavior of SELinux. This string
    is called `SELinux Boolean`. You can get a list of Booleans and their values using
    `getsebool -a`. Using `boolean allow_ftpd_anon_write`, we are going to change
    the way in which SELinux reacts. Connect anonymously to the FTP server again and
    try to upload a file:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 使用单个字符串，你可以改变SELinux的行为。这个字符串被称为`SELinux布尔值`。你可以使用`getsebool -a`获取布尔值及其值的列表。使用`boolean
    allow_ftpd_anon_write`，我们将改变SELinux的反应方式。再次匿名连接到FTP服务器并尝试上传文件：
- en: '[PRE41]'
  id: totrans-252
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'The `journalctl --identifier setroubleshoot` command makes it very clear to
    you:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: '`journalctl --identifier setroubleshoot`命令非常清楚地告诉你：'
- en: '[PRE42]'
  id: totrans-254
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'The `sealert` command will provide you with the information necessary to fix
    the problem:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: '`sealert`命令将为你提供修复问题所需的信息：'
- en: '[PRE43]'
  id: totrans-256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'So, what''s happening here? Sometimes, simple rules for a port or file are
    not enough, for instance, if an NFS share has to be exported with Samba as well.
    In this scenario, it is possible to create your own complex SELinux policy or
    use the Boolean database with easy-to-use on/off switches. To do so, you can use
    the older `setsebool` utility or `semanage`:'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，这里发生了什么？有时，对于端口或文件的简单规则是不够的，例如，如果一个NFS共享也必须与Samba一起导出。在这种情况下，你可以创建自己的复杂SELinux策略，或者使用易于使用的开关数据库。为此，你可以使用较旧的`setsebool`实用程序或`semanage`：
- en: '[PRE44]'
  id: totrans-258
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: Using `setsebool` without `-P` makes the change, but it is not persistent. The
    `semanage` utility doesn't have the option to change it non-permanently.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`setsebool`而不加上`-P`会进行更改，但不是持久的。`semanage`实用程序没有选项可以进行非永久更改。
- en: AppArmor
  id: totrans-260
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: AppArmor
- en: In Debian, Ubuntu, and SUSE distributions, AppArmor is available to implement
    MAC. Please be aware that there are some minor differences between the distributions,
    but, in general, a distribution can add fewer or more profiles and some extra
    tooling. In this section, we use Ubuntu 18.04 as an example.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 在Debian、Ubuntu和SUSE发行版中，AppArmor可用于实现MAC。请注意，各发行版之间存在一些细微差异，但总的来说，一个发行版可以添加更少或更多的配置文件和一些额外的工具。在本节中，我们以Ubuntu
    18.04为例。
- en: Also, you must make sure that you keep your distribution up to date, especially
    with AppArmor; the packages in Debian and Ubuntu were plagued by bugs, which sometimes
    led to unexpected behavior.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，你必须确保保持你的发行版最新，特别是AppArmor；Debian和Ubuntu的软件包经常受到错误的困扰，有时会导致意外的行为。
- en: 'Make sure that the necessary packages are installed:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 确保必要的软件包已安装：
- en: '[PRE45]'
  id: totrans-264
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'There are some fundamental differences compared with SELinux:'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 与SELinux相比，存在一些基本差异：
- en: By default, only the bare minimum is protected. You have to apply security for
    each application.
  id: totrans-266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 默认情况下，只有最低限度受到保护。你必须为每个应用程序应用安全性。
- en: You can mix enforcing and complaining modes; you can decide in relation to each
    application.
  id: totrans-267
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以混合强制和投诉模式；你可以针对每个应用程序做出决定。
- en: 'When AppArmor development started, the scope was quite limited: processes and
    files. Nowadays, you can use it for **role-based access control** (**RBAC**),
    MLS, login policies, and other aspects besides.'
  id: totrans-268
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当AppArmor开发开始时，范围相当有限：进程和文件。如今，除了进程和文件，你还可以用它来进行基于角色的访问控制（RBAC）、MLS、登录策略以及其他方面的控制。
- en: 'In this chapter, we''ll cover the initial scope: processes that need access
    to files.'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖初始范围：需要访问文件的进程。
- en: AppArmor Status
  id: totrans-270
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: AppArmor状态
- en: 'The first thing to do is to check whether the AppArmor service is up and running:'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 首先要做的是检查AppArmor服务是否正在运行：
- en: '[PRE46]'
  id: totrans-272
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'Alternatively, execute the following command:'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，执行以下命令：
- en: '[PRE47]'
  id: totrans-274
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'And after that, view the status in greater detail with the following command:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，使用以下命令更详细地查看状态：
- en: '[PRE48]'
  id: totrans-276
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'Here is an alternative to the preceding command:'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是上述命令的替代方法：
- en: '[PRE49]'
  id: totrans-278
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'The following screenshot shows the status of AppArmor, derived using the `apparmor_status`
    command:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了使用`apparmor_status`命令派生的AppArmor状态：
- en: '![Checking the status of AppArmor using the apparmor_status command](img/B15455_06_20.jpg)'
  id: totrans-280
  prefs: []
  type: TYPE_IMG
  zh: 使用`apparmor_status`命令检查AppArmor状态
- en: 'Figure 6.20: AppArmor status'
  id: totrans-281
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图6.20：AppArmor状态
- en: Generating AppArmor Profiles
  id: totrans-282
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 生成AppArmor配置文件
- en: Each application you want to protect requires a profile, provided by the `apparmor-profiles`
    or `apparmor-profiles-extra` packages, the application package, or you. The profiles
    are stored in `/etc/apparmor.d`.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 你想要保护的每个应用程序都需要一个配置文件，可以由`apparmor-profiles`或`apparmor-profiles-extra`软件包、应用程序软件包或你自己提供。这些配置文件存储在`/etc/apparmor.d`中。
- en: 'Let''s install the nginx web server as an example:'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们以安装nginx web服务器为例：
- en: '[PRE50]'
  id: totrans-285
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'If you browse through the `/etc/apparmor.d` directory, there is no profile
    for nginx. Create a default one:'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您浏览`/etc/apparmor.d`目录，您会发现没有nginx的配置文件。创建一个默认的：
- en: '[PRE51]'
  id: totrans-287
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'A profile is created: `/etc/apparmor.d/usr.sbin.nginx`. This file is almost
    empty, and only includes some basic rules and variables, called abstractions,
    and the following line:'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 创建了一个配置文件：`/etc/apparmor.d/usr.sbin.nginx`。这个文件几乎是空的，只包括一些基本规则和变量，称为抽象，以及以下行：
- en: '[PRE52]'
  id: totrans-289
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'The `mr` value defines the access mode: `r` means read mode, and `m` allows
    a file to be mapped into memory.'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: '`mr`值定义了访问模式：`r`表示读取模式，`m`允许将文件映射到内存中。'
- en: 'Let''s enforce the mode for nginx:'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们强制执行nginx的模式：
- en: '[PRE53]'
  id: totrans-292
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'nginx will not start. The output of the preceding commands is as follows:'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: nginx将无法启动。前述命令的输出如下：
- en: '[PRE54]'
  id: totrans-294
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'This points very clearly in the direction of AppArmor:'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 这非常明显地指向了AppArmor：
- en: '[PRE55]'
  id: totrans-296
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'To fix the problem, set the complain mode for this profile. This way, it doesn''t
    enforce the policy, but complains about every violation of the security policy:'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 要解决问题，请为此配置文件设置投诉模式。这样，它不会强制执行策略，但会对安全策略的每个违规行为进行投诉：
- en: '[PRE56]'
  id: totrans-298
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'Make an `http` request, using a browser or a utility, for instance, `curl`:'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 通过浏览器或实用程序（例如`curl`）发出`http`请求：
- en: '[PRE57]'
  id: totrans-300
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'The next step is to scan the `logfile` and approve or reject every action:'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是扫描“日志文件”并批准或拒绝每个操作：
- en: '[PRE58]'
  id: totrans-302
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'Read very carefully and select the correct option with the arrow keys (if needed):'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 非常仔细地阅读并使用箭头键选择正确的选项（如果需要）：
- en: '![Configuring the profile for nginx](img/B15455_06_21.jpg)'
  id: totrans-304
  prefs: []
  type: TYPE_IMG
  zh: '![配置nginx配置文件](img/B15455_06_21.jpg)'
- en: 'Figure 6.21: Configuring the profile for nginx'
  id: totrans-305
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图6.21：配置nginx配置文件
- en: '**LXC** (**Linux Containers**) is a container technology, and we are just configuring
    the profile for a web server. Something to fix with DAC seems to be a good choice:'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: '**LXC**（**Linux容器**）是一种容器技术，我们只是在为web服务器配置配置文件。似乎修复DAC的问题是一个不错的选择：'
- en: '![Configuring the profile for a web server with DAC](img/B15455_06_22.jpg)'
  id: totrans-307
  prefs: []
  type: TYPE_IMG
  zh: '![使用DAC配置web服务器的配置文件](img/B15455_06_22.jpg)'
- en: 'Figure 6.22: Fixing DAC for nginx'
  id: totrans-308
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图6.22：修复nginx的DAC
- en: 'The audit suggests a new mode: `w` means write access to the `/var/log/nginx/error.log`
    file.'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 审计建议一个新模式：`w`表示对`/var/log/nginx/error.log`文件的写访问。
- en: 'In addition, you can block access to the following directories:'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，您可以阻止访问以下目录：
- en: Read access to `/etc/ssl/openssl.conf`. This is a difficult one, but the abstraction
    for `ssl` sounds right.
  id: totrans-311
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对`/etc/ssl/openssl.conf`的读访问。这是一个困难的问题，但是`ssl`的抽象听起来是正确的。
- en: Read access to `/etc/nginx/nginx.conf`. Again, not a container, so the owner
    of the file must be OK.
  id: totrans-312
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对`/etc/nginx/nginx.conf`的读访问。同样，不是一个容器，因此文件的所有者必须是OK的。
- en: In general, the owner of the file is a good choice.
  id: totrans-313
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一般来说，文件的所有者是一个不错的选择。
- en: 'Now, it is time to save the changes and try again:'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，是时候保存更改并重试了：
- en: '[PRE59]'
  id: totrans-315
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: Everything seems to work now, at least for a request to a simple website. As
    you can see, it's all largely based on educated guesses. The alternative is a
    deep dive into all the suggested abstractions.
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 一切似乎现在都运行正常，至少对于对一个简单网站的请求。正如您所看到的，这主要是基于合理的猜测。另一种选择是深入研究所有建议的抽象。
- en: 'The created file, `/etc/apparmor.d/usr.sbin.nginx`, is relatively easy to read.
    It starts with all the tunable variables that should be available for every profile:'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 创建的文件`/etc/apparmor.d/usr.sbin.nginx`相对容易阅读。它以应该对每个配置文件可用的所有可调整变量开始：
- en: '[PRE60]'
  id: totrans-318
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'The file is then followed by other abstractions, such as the following:'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 文件之后是其他抽象，比如以下内容：
- en: '[PRE61]'
  id: totrans-320
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'To know what they are doing, just view the file. For instance, the `/etc/apparmor.d/abstractions/nameservice`
    file states the following:'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 要知道他们在做什么，只需查看文件。例如，`/etc/apparmor.d/abstractions/nameservice`文件中列出了以下内容：
- en: '[PRE62]'
  id: totrans-322
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: Note
  id: totrans-323
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: Many programs wish to perform name service–like operations, such as looking
    up users by name or ID, groups by name or ID, and hosts by name or IP. These operations
    may be performed through DNS, NIS, NIS+, LDAP, hesiod, and wins files. Allow all
    of these options here.
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 许多程序希望执行类似名称服务的操作，例如按名称或ID查找用户、按名称或ID查找组，以及按名称或IP查找主机。这些操作可以通过DNS、NIS、NIS+、LDAP、hesiod和wins文件执行。在这里允许所有这些选项。
- en: 'The next section is about Posix capabilities; refer to `man 7 capabilities`
    for more information:'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 下一节是关于Posix功能的；有关更多信息，请参阅`man 7 capabilities`：
- en: '[PRE63]'
  id: totrans-326
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'The final section is the permissions; for a complete list, refer to the `man
    5 apparmor.d`:'
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一节是权限；有关完整列表，请参阅`man 5 apparmor.d`：
- en: '[PRE64]'
  id: totrans-328
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: '`aa-logprof`, in particular, can be a little bit overwhelming when you start
    using it. But the profile is not that difficult to read; every option is in the
    two man pages, and the abstractions included are documented by comments.'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 特别是在开始使用`aa-logprof`时，可能会有点压倒性。但是配置文件并不难阅读；每个选项都在两个man页面中，并且包含的抽象都有注释进行了记录。
- en: firewalld and systemd
  id: totrans-330
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: firewalld和systemd
- en: In *Chapter 5*, *Advanced Linux Administration*, systemd was covered as a system
    and service manager. In systemd, there are several options to add an extra layer
    of protection to your daemons and filesystem.
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 在*第5章*，*高级Linux管理*中，systemd被介绍为系统和服务管理器。在systemd中，有几个选项可以为您的守护进程和文件系统添加额外的保护层。
- en: To be honest, in our opinion, it really makes sense to use Azure Firewall on
    top of Azure network security groups. It is easy to set up, provides central administration,
    and requires almost no maintenance. It provides security between VMs, virtual
    networks, and even different Azure subscriptions.
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 老实说，我们认为在Azure网络安全组之上使用Azure防火墙确实是有道理的。它易于设置，提供集中管理，并且几乎不需要维护。它在VM、虚拟网络甚至不同的Azure订阅之间提供安全性。
- en: Note
  id: totrans-333
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: There is an additional cost if you want to use this firewall. However, a Linux
    firewall doesn't incur any charges as it is a security measure installed on your
    machine.
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想使用这个防火墙，还会有额外的费用。但是Linux防火墙不会产生任何费用，因为它是安装在您的机器上的安全措施。
- en: 'The choice between Azure Firewall and a Linux firewall depends on many things:'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 在Azure防火墙和Linux防火墙之间的选择取决于许多因素：
- en: Cost
  id: totrans-336
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 成本
- en: Deployment and orchestration of your VMs and applications
  id: totrans-337
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: VM和应用程序的部署和编排
- en: 'Different roles: is there one administrator for everything?'
  id: totrans-338
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不同的角色：是否有一个管理员负责一切？
- en: I hope that after covering one of the Linux firewall implementations, it becomes
    clear that a Linux firewall is in no way a complete replacement for Azure Firewall.
    It can only provide security for incoming traffic to the VM, and yes, it is possible
    to configure this firewall to block outgoing traffic as well, but that's quite
    complex. On the other hand, if it's configured on top of Azure network security
    groups, in many cases, that is more than enough.
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 希望在介绍了 Linux 防火墙实现之一后，可以清楚地了解 Linux 防火墙绝不是 Azure 防火墙的完全替代品。它只能为 VM 的传入流量提供安全性，是的，也可以配置此防火墙来阻止传出流量，但这相当复杂。另一方面，如果它配置在
    Azure 网络安全组之上，在许多情况下，这已经足够了。
- en: 'There are different types of firewall solutions available for Linux, including
    firewalld and iptables. In this book, we''ll be following firewalld on account
    of the configuration options available and its popularity. Please make sure that
    the firewalld software is installed and that other firewall software is removed
    from the system to avoid conflicts. In RHEL/CentOS-based distributions, this is
    already the case. In Ubuntu, use the following commands:'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: Linux 有不同类型的防火墙解决方案，包括 firewalld 和 iptables。在本书中，我们将遵循 firewalld，因为它具有可用的配置选项和流行度。请确保已安装
    firewalld 软件，并且已从系统中删除其他防火墙软件，以避免冲突。在基于 RHEL/CentOS 的发行版中，这已经是这样。在 Ubuntu 中，使用以下命令：
- en: '[PRE65]'
  id: totrans-341
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: 'In SUSE-based distributions, use the following commands:'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 在基于 SUSE 的发行版中，使用以下命令：
- en: '[PRE66]'
  id: totrans-343
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: There are multiple firewall implementations for Linux; some of them are even
    developed for a specific distribution, such as SuSEfirewall2\. In this chapter,
    we'll cover firewalld, which is available on every distribution.
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: Linux 有多种防火墙实现；其中一些甚至是为特定发行版开发的，比如 SuSEfirewall2。在本章中，我们将介绍 firewalld，它在每个发行版上都可用。
- en: 'firewalld consists of a daemon that manages all the components of the firewall:'
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: firewalld 由一个管理防火墙所有组件的守护程序组成：
- en: Zones
  id: totrans-346
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 区域
- en: Interfaces
  id: totrans-347
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 接口
- en: Sources
  id: totrans-348
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 来源
- en: Direct rules for iptables and ebtables (not covered in this book)
  id: totrans-349
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: iptables 和 ebtables 的直接规则（本书未涉及）
- en: 'firewalld utilizes kernel modules: iptables/IP6 tables for IPv4 and IPv6 traffic,
    and ebtables for the filtering of network traffic passing through a Linux bridge.
    In more recent distributions, such as RHEL 8, the `nftables` module is used.'
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: firewalld 利用内核模块：iptables/IP6 表用于 IPv4 和 IPv6 流量，ebtables 用于过滤通过 Linux 桥接的网络流量。在较新的发行版中，比如
    RHEL 8，使用 `nftables` 模块。
- en: 'To configure the firewalld rules, there is a command-line utility available:
    `firewall-cmd`. Rules can be runtime-only or persistent. There are two important
    reasons for this behavior: this way, it''s not necessary to reload all the rules,
    implying a temporary security risk. You can dynamically add and remove rules.
    If you make a mistake, and you are not able to log in again because of this; just
    reboot as a quick solution. We can also use the `systemd-run --oncalendar` command
    to create a scheduled task that executes `firewall-cmd --reload`, which is an
    even better solution:'
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 要配置 firewalld 规则，有一个命令行实用程序可用：`firewall-cmd`。规则可以是运行时的或持久的。这种行为有两个重要的原因：这样就不需要重新加载所有规则，意味着临时的安全风险。您可以动态添加和删除规则。如果您犯了一个错误，因此无法再次登录，只需重新启动作为一个快速解决方案。我们还可以使用
    `systemd-run --oncalendar` 命令创建一个定时任务，执行 `firewall-cmd --reload`，这是一个更好的解决方案：
- en: '[PRE67]'
  id: totrans-352
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: Don't forget to stop and disable the timer if the firewall rules were correct
    (and you did not lock yourself out).
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 如果防火墙规则正确（并且您没有被锁定），不要忘记停止和禁用计时器。
- en: You can also configure the daemon with orchestration tools that talk to the
    daemon or push XML files to the host.
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用编排工具配置守护程序，这些工具与守护程序通信或将 XML 文件推送到主机。
- en: Note
  id: totrans-355
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: The ports are only open for the VMs connected to the virtual machine network,
    unless you open the ports in the network security group!
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 端口仅对连接到虚拟机网络的虚拟机开放，除非您在网络安全组中打开了端口！
- en: 'It is important to know that Azure Service Fabric (the infrastructure) will
    add, if necessary, extra rules to your firewall configuration. It''s recommended
    not to remove these rules as they are important, given that they are used by the
    Azure platform. You can see this if you search in the logging database with the
    `journalctl` command:'
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的是要知道 Azure Service Fabric（基础设施）将根据需要向防火墙配置添加额外规则。建议不要删除这些规则，因为它们很重要，因为它们被
    Azure 平台使用。如果您使用 `journalctl` 命令在日志数据库中搜索，就可以看到这一点：
- en: '[PRE68]'
  id: totrans-358
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: 'Use the `iptables-save` command to view all the active firewall rules, or if
    your distribution is using `nftables`:'
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `iptables-save` 命令查看所有活动防火墙规则，或者如果您的发行版使用 `nftables`：
- en: '[PRE69]'
  id: totrans-360
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: firewalld Zones
  id: totrans-361
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: firewalld 区域
- en: One of the most important concepts of firewalld is the zone. A zone consists
    of a default rule, called a target, a network interface or network source, and
    additional services, ports, protocols, and rich rules.
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: firewalld 的最重要的概念之一是区域。区域包括默认规则（称为目标）、网络接口或网络源，以及其他服务、端口、协议和丰富规则。
- en: A zone is only active if a network interface is attached to the interface or
    a network source.
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 只有在网络接口连接到接口或网络源时，区域才处于活动状态。
- en: 'To list the zones available, use the following command:'
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 要列出可用的区域，请使用以下命令：
- en: '[PRE70]'
  id: totrans-365
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: These zones are configured in `/usr/lib/firewalld/zones`. You should not make
    changes to these files. New zones or changes to a zone are written into the `/etc/firewalld/zones`
    directory.
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 这些区域配置在 `/usr/lib/firewalld/zones` 中。您不应该对这些文件进行更改。新区域或对区域的更改将写入 `/etc/firewalld/zones`
    目录。
- en: 'The default zone is the public zone:'
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 默认区域是公共区域：
- en: '[PRE71]'
  id: totrans-368
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: 'To list the zone configuration of the public zone, use the following command:'
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 要列出公共区域的区域配置，请使用以下命令：
- en: '[PRE72]'
  id: totrans-370
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: 'The zone configuration will be as shown here:'
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 区域配置如下所示：
- en: '[PRE73]'
  id: totrans-372
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: The public zone has the target policy `default`, which means that everything
    incoming is blocked by default, except the configured services, ports, and protocols.
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 公共区域的目标策略是 `default`，这意味着默认情况下会阻止所有传入的东西，除非配置了服务、端口和协议。
- en: 'The corresponding `/usr/lib/firewalld/zones/public.xml` file of this zone is
    as follows:'
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 该区域的相应 `/usr/lib/firewalld/zones/public.xml` 文件如下：
- en: '[PRE74]'
  id: totrans-375
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: There are also options for configuring masquerading and port forwarding. Rich
    rules are advanced firewall rules, as described in the `firewalld.richlanguage`
    man page.
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 还有用于配置伪装和端口转发的选项。丰富规则是高级防火墙规则，如`firewalld.richlanguage`手册中所述。
- en: 'Execute `man firewalld.richlanguages` as shown in the following screenshot:'
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: 执行`man firewalld.richlanguages`，如下截图所示：
- en: '![Output of man firewalld.richlanguages command](img/B15455_06_23.jpg)'
  id: totrans-378
  prefs: []
  type: TYPE_IMG
  zh: '![`man firewalld.richlanguages`命令的输出](img/B15455_06_23.jpg)'
- en: 'Figure 6.23: Output of `man firewalld.richlanguages command`'
  id: totrans-379
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图6.23：`man firewalld.richlanguages`命令的输出
- en: Depending on the distribution that you're using, you may have additional service
    names. For example, if you are using RHEL 8, you might see `cockpit` listed as
    a service. `cockpit` is a web-based interface used to administer RHEL machines.
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 根据您使用的发行版，可能会有其他服务名称。例如，如果您使用的是RHEL 8，您可能会看到`cockpit`列为服务。`cockpit`是用于管理RHEL机器的基于Web的界面。
- en: 'You may have noticed that in the public zone, it says `target: default`. The
    target is the default behavior. The possible values are as follows:'
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: '您可能已经注意到，在公共区域中，它说`target: default`。目标是默认行为。可能的值如下：'
- en: '`default`: Don''t do anything, accept every ICMP packet, and reject everything
    else.'
  id: totrans-382
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 默认：不执行任何操作，接受每个ICMP数据包，并拒绝其他所有内容。
- en: '`%%REJECT%%`: This sends a reject response to the client via the ICMP protocol.'
  id: totrans-383
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`%%REJECT%%`：这通过ICMP协议向客户端发送拒绝响应。'
- en: '`DROP`: This sends a TCP SYN/ACK, as on an open port, but all other traffic
    is dropped. There is no ICMP message to inform the client.'
  id: totrans-384
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DROP`：这会发送TCP SYN/ACK，就像在打开端口上一样，但所有其他流量都会被丢弃。没有ICMP消息通知客户端。'
- en: '`ACCEPT`: Accept everything.'
  id: totrans-385
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 接受：接受一切。
- en: 'In Ubuntu, by default, there is no network interface attached. Please don''t
    reboot the VM before an interface is attached! Execute the following command:'
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 在Ubuntu中，默认情况下，没有附加网络接口。请不要在附加接口之前重新启动虚拟机！执行以下命令：
- en: '[PRE75]'
  id: totrans-387
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: If you modify a zone, the file is copied from `/usr/lib/firewalld/zones` to
    `/etc/firewalld/zones`. The next modification will create a backup of the zone
    with the file extension `.old` and create a new file with the modifications in
    it.
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 如果修改区域，则文件将从`/usr/lib/firewalld/zones`复制到`/etc/firewalld/zones`。下一次修改将创建一个带有`.old`文件扩展名的区域备份，并创建一个包含修改内容的新文件。
- en: firewalld Services
  id: totrans-389
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: firewalld服务
- en: 'A service is an application-centric configuration to allow one or more ports.
    To receive a list of the services available, use the following command:'
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 服务是一个以应用为中心的配置，允许一个或多个端口。要接收可用服务的列表，请使用以下命令：
- en: '[PRE76]'
  id: totrans-391
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: 'If you want to add a service, for instance, MySQL, execute the following commands:'
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 如果要添加服务，例如MySQL，请执行以下命令：
- en: '[PRE77]'
  id: totrans-393
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: If you want to remove a service from a zone, use the `--remove-service` parameter.
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: 如果要从区域中删除服务，请使用`--remove-service`参数。
- en: The services are configured in the `/usr/lib/firewalld/services` directory.
    Again, you shouldn't modify these files. You can change them or create your own
    by copying them to the `/etc/firewalld/services` directory.
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: 服务配置在`/usr/lib/firewalld/services`目录中。同样，您不应该修改这些文件。您可以通过将它们复制到`/etc/firewalld/services`目录中来更改它们或创建自己的服务。
- en: 'It is possible to add single ports as well, but, in general, that''s not a
    good idea: can you still remember after a while which ports are in use by which
    application? Instead, if the service is not already defined, create your own service.'
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: 也可以添加单个端口，但一般来说，这不是一个好主意：过一段时间后，您还能记得哪些端口被哪个应用程序使用吗？相反，如果服务尚未定义，请创建自己的服务。
- en: 'Let''s now create a service file for the Microsoft PPTP firewall protocol,
    `/etc/firewalld/services/pptp.xml`:'
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们为Microsoft PPTP防火墙协议创建一个服务文件，`/etc/firewalld/services/pptp.xml`：
- en: '[PRE78]'
  id: totrans-398
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: 'In the preceding file, you can see that TCP port `1723` is allowed. You can
    add as many port rules as you want. For example, if you want to add TCP port `1724`,
    then the line item will be as follows:'
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的文件中，您可以看到允许TCP端口`1723`。您可以添加尽可能多的端口规则。例如，如果要添加TCP端口`1724`，则行项目将如下所示：
- en: '[PRE79]'
  id: totrans-400
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: 'After reloading the firewall with `firewalld-cmd --reload`, the service is
    available. This is not enough: the **GRE** (**Generic Routing Encapsulation**)
    protocol is not allowed. To allow this protocol, use the following commands:'
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`firewalld-cmd --reload`重新加载防火墙后，服务可用。这还不够：**GRE**（通用路由封装）协议不被允许。要允许此协议，请使用以下命令：
- en: '[PRE80]'
  id: totrans-402
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: 'This will add the following line to the service file:'
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: 这将向服务文件添加以下行：
- en: '[PRE81]'
  id: totrans-404
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: You can remove the protocol using the `--remove-protocol` parameter.
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用`--remove-protocol`参数删除协议。
- en: firewalld Network Sources
  id: totrans-406
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: firewalld网络源
- en: A zone is only active when a network interface is attached to it, or a network
    source. It doesn't make sense to add a network interface to the drop zone. The
    drop zone is where all the incoming packets are dropped with no reply; however,
    outgoing connections are allowed. So, as I mentioned, if you add the network interface
    to the drop zone, all incoming packets will be dropped by firewalld, which doesn't
    make any sense at all.
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: 只有在网络接口连接到它或网络源时，区域才处于活动状态。将网络接口添加到拒绝区域是没有意义的。拒绝区域是所有传入数据包都被丢弃且不回复的地方；但是，允许传出连接。所以，正如我提到的，如果将网络接口添加到拒绝区域，所有传入数据包将被firewalld丢弃，这根本没有任何意义。
- en: 'However, it does make sense to add a network source. A source consists of one
    or more entries: a media access control address, IP addresses, or IP ranges.'
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，添加网络源是有意义的。源由一个或多个条目组成：媒体访问控制地址、IP地址或IP范围。
- en: 'For instance, for whatever reason, say you want to block all traffic from Bermuda.
    The website [http://ipdeny.com](http://ipdeny.com) can provide you with a list
    of IP addresses:'
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，出于任何原因，假设您想要阻止来自百慕大的所有流量。网站[http://ipdeny.com](http://ipdeny.com)可以为您提供IP地址列表：
- en: '[PRE82]'
  id: totrans-410
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: 'There are several types of `ipset`. To view the list of supported `ipset` types,
    execute the following command:'
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种类型的`ipset`。要查看支持的`ipset`类型列表，请执行以下命令：
- en: '[PRE83]'
  id: totrans-412
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: 'In our scenario, we want the type for `hash:net` IP ranges:'
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的场景中，我们希望`hash:net` IP范围的类型：
- en: '[PRE84]'
  id: totrans-414
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: 'Now, we can add entries to `ipset` using the downloaded file:'
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以使用下载的文件向`ipset`添加条目：
- en: '[PRE85]'
  id: totrans-416
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: 'The final step involves adding `ipset` as a source to the zone:'
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一步涉及将`ipset`添加为区域的源：
- en: '[PRE86]'
  id: totrans-418
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: 'The purpose of the drop zone is to drop all traffic without letting the client
    know that the traffic is dropped. Adding `ipset` to this zone makes it active,
    and all the traffic coming from Bermuda will be dropped:'
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: 丢弃区的目的是在不让客户端知道流量被丢弃的情况下丢弃所有流量。将`ipset`添加到此区域会使其激活，并且来自百慕大的所有流量都将被丢弃：
- en: '[PRE87]'
  id: totrans-420
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: Now that we know how firewalld works, and how we can secure our machine using
    zones, let's jump to the next section.
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道了firewalld的工作原理，以及如何使用区域来保护我们的机器，让我们跳到下一节。
- en: systemd Security
  id: totrans-422
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: systemd安全
- en: As mentioned in the previous chapter, systemd is responsible for starting all
    processes in parallel during the boot process, except those processes that are
    created by their kernel. After that, it's a question of activating services, among
    other things, on demand. systemd units can also provide an extra layer of security.
    You can add several options to your unit file to make your unit more secure.
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: 如前一章所述，systemd负责在启动过程中并行启动所有进程，除了那些由内核创建的进程。之后，问题在于按需激活服务等。systemd单元还可以提供额外的安全层。您可以向单元文件添加多个选项，以使您的单元更加安全。
- en: 'Just edit the unit file using `systemctl edit` and add the security measures.
    For example, execute the following command:'
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: 只需使用`systemctl edit`编辑单元文件并添加安全措施。例如，执行以下命令：
- en: '[PRE88]'
  id: totrans-425
  prefs: []
  type: TYPE_PRE
  zh: '[PRE88]'
- en: 'Then, add the following lines:'
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，添加以下行：
- en: '[PRE89]'
  id: totrans-427
  prefs: []
  type: TYPE_PRE
  zh: '[PRE89]'
- en: 'Save the file, re-read the `systemctl` configuration, and restart `sshd`:'
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
  zh: 保存文件，重新读取`systemctl`配置，并重新启动`sshd`：
- en: '[PRE90]'
  id: totrans-429
  prefs: []
  type: TYPE_PRE
  zh: '[PRE90]'
- en: 'Now, log in again with your SSH client and try to save a file in your home
    directory. This will fail because it''s a read-only filesystem:'
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，使用SSH客户端再次登录，并尝试在您的家目录中保存文件。这将失败，因为它是一个只读文件系统：
- en: '![Unable to save file in home directory as permission has been changed to read-only](img/B15455_06_24.jpg)'
  id: totrans-431
  prefs: []
  type: TYPE_IMG
  zh: '![无法在家目录中保存文件，因为权限已更改为只读](img/B15455_06_24.jpg)'
- en: 'Figure 6.24: Log in failed as unit file changed to read-only'
  id: totrans-432
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图6.24：登录失败，因为单元文件被更改为只读
- en: Restricting Access to the Filesystem
  id: totrans-433
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 限制对文件系统的访问
- en: 'The `ProtectHome` parameter is a very interesting one. The following values
    are available:'
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
  zh: '`ProtectHome`参数是一个非常有趣的参数。以下值可用：'
- en: '`true`: The directories `/home`, `/root`, and `/run/user` are not accessible
    by the unit, and show empty for processes starting within the unit.'
  id: totrans-435
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`true`：`/home`、`/root`和`/run/user`目录对该单元不可访问，并且对于在该单元内启动的进程来说是空的。'
- en: '`read-only`: These directories are read-only.'
  id: totrans-436
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`read-only`：这些目录是只读的。'
- en: 'Another very similar parameter is `ProtectSystem`:'
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个非常相似的参数是`ProtectSystem`：
- en: '`true`: `/usr` and `/boot` are mounted as read-only.'
  id: totrans-438
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`true`：`/usr`和`/boot`被挂载为只读。'
- en: '`full`: `/etc` is mounted as read-only, along with `/usr` and `/boot`.'
  id: totrans-439
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`full`：`/etc`被挂载为只读，以及`/usr`和`/boot`。'
- en: '`strict`: The full filesystem is read-only, except `/proc`, `/dev`, and `/sys`.'
  id: totrans-440
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`strict`：整个文件系统是只读的，除了`/proc`、`/dev`和`/sys`。'
- en: 'Instead of `ProtectHome` and `ProtectSystem`, additionally, you can use the
    following parameters: `ReadWritePaths` to whitelist directories, `ReadOnlyPaths`,
    and `InaccessiblePaths`.'
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: 除了`ProtectHome`和`ProtectSystem`之外，还可以使用以下参数：`ReadWritePaths`来列出目录，`ReadOnlyPaths`和`InaccessiblePaths`。
- en: Some daemons use the `/tmp` directory for temporary storage. The problem with
    this directory is that it's world-readable. The `PrivateTmp=true` parameter sets
    up a new temporary filesystem for the process, which is only accessible by the
    process.
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
  zh: 一些守护进程使用`/tmp`目录进行临时存储。这个目录的问题在于它是可读的。`PrivateTmp=true`参数为进程设置了一个新的临时文件系统，只能被该进程访问。
- en: 'There are also kernel-related parameters: the `ProtectKernelModules=true` parameter
    makes it impossible to load modules, and the `ProtectKernelTunables=true` parameter
    makes it impossible to change kernel parameters with the `sysctl` command or manually
    in the `/proc` and `/sys` directory structure.'
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: 还有与内核相关的参数：`ProtectKernelModules=true`参数使加载模块变得不可能，`ProtectKernelTunables=true`参数使使用`sysctl`命令或手动在`/proc`和`/sys`目录结构中更改内核参数变得不可能。
- en: Last, but not least, the `SELinuxContext` and `AppArmorProfile` parameters force
    the context for the unit.
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，`SELinuxContext`和`AppArmorProfile`参数强制了单元的上下文。
- en: Restricting Network Access
  id: totrans-445
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 限制网络访问
- en: systemd can also be used to restrict network access, as in you can list those
    IP addresses that can be allowed or denied. Newer versions of systemd, after version
    235, such as those used by Ubuntu 18.04, SLE 15 SP1, and RHEL 8, also support
    IP accounting and access lists to restrict network access.
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: systemd也可以用于限制网络访问，例如可以列出可以允许或拒绝的IP地址。在版本235之后的新版本systemd，例如Ubuntu 18.04、SLE
    15 SP1和RHEL 8，还支持IP账户和访问列表来限制网络访问。
- en: '`IPAccounting=yes` allows a unit to collect and analyze network data. To view
    the results, you can use the `systemctl` command:'
  id: totrans-447
  prefs: []
  type: TYPE_NORMAL
  zh: '`IPAccounting=yes`允许一个单元收集和分析网络数据。要查看结果，可以使用`systemctl`命令：'
- en: '[PRE91]'
  id: totrans-448
  prefs: []
  type: TYPE_PRE
  zh: '[PRE91]'
- en: 'As with every parameter, you can use this with `systemd-run` as well:'
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
  zh: 与每个参数一样，您也可以在`systemd-run`中使用它：
- en: '![Using the systemd-run and systemctl commands to collect and analyze network
    data](img/B15455_06_25.jpg)'
  id: totrans-450
  prefs: []
  type: TYPE_IMG
  zh: '![使用systemd-run和systemctl命令收集和分析网络数据](img/B15455_06_25.jpg)'
- en: 'Figure 6.25: Using systemd-run and systemctl to collect and analyze network
    data'
  id: totrans-451
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图6.25：使用systemd-run和systemctl收集和分析网络数据
- en: 'You can use `IPAddressDeny` to deny an IP address or an IP range. An exception
    can be made with `IPAddressAllow`. It''s even possible to deny everything system-wide
    and whitelist on a per-service basis:'
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用`IPAddressDeny`来拒绝IP地址或IP范围。可以使用`IPAddressAllow`进行例外。甚至可以在系统范围内拒绝所有内容，并在每个服务的基础上进行白名单处理：
- en: '[PRE92]'
  id: totrans-453
  prefs: []
  type: TYPE_PRE
  zh: '[PRE92]'
- en: Note
  id: totrans-454
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: If you are using Ubuntu, the service name is `walinuxagent`.
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您使用的是Ubuntu，服务名称是`walinuxagent`。
- en: '[PRE93]'
  id: totrans-456
  prefs: []
  type: TYPE_PRE
  zh: '[PRE93]'
- en: 'The changes are saved in the `/etc/systemd/system.control` directory structure:'
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: 更改保存在`/etc/systemd/system.control`目录结构中：
- en: '![Changes saved in the system.control directory](img/B15455_06_26.jpg)'
  id: totrans-458
  prefs: []
  type: TYPE_IMG
  zh: '![更改保存在system.control目录中](img/B15455_06_26.jpg)'
- en: 'Figure 6.26: Saving the changes in system.control directory'
  id: totrans-459
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图6.26：保存更改在system.control目录中
- en: 'Here are some remarks:'
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些备注：
- en: Of course, you have to change the IP range to your virtual subnet, and you have
    to allow access to the first IP address of your subnet for the Azure agent and
    network service, such as **DHCP** (**Dynamic Host Configuration Protocol**).
  id: totrans-461
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当然，您必须将IP范围更改为您的虚拟子网，并且必须允许对您的子网的第一个IP地址进行访问，以供Azure代理和网络服务使用，例如**DHCP**（动态主机配置协议）。
- en: It's also a very good idea to restrict SSH access to the IP address of your
    own network.
  id: totrans-462
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将SSH访问限制为您自己网络的IP地址也是一个很好的主意。
- en: View the systemd journal very carefully, to find out whether you need more ports
    to open.
  id: totrans-463
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 非常仔细地查看systemd日志，以找出是否需要打开更多端口。
- en: The systemd access list feature is perhaps not as advanced as firewalld, but
    it is a very good alternative for restrictions on the application level (hosts
    allow directives in the configuration files of the daemon, or `/etc/hosts.allow`
    and `/etc/hosts.deny` for applications that are compiled with `libwrap` support).
    And, in our opinion, in Azure, you don't need more than this. If only all distributions
    had a recent version of systemd.
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: systemd访问列表功能可能不像firewalld那样先进，但它是应用级别限制的一个很好的替代方法（在守护程序的配置文件中使用hosts allow指令，或者对于使用libwrap支持编译的应用程序，使用`/etc/hosts.allow`和`/etc/hosts.deny`）。在我们看来，在Azure中，您不需要更多。如果所有发行版都有最新版本的systemd就好了。
- en: Note
  id: totrans-465
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: We won't cover the `libwrap` library in this book, because more and more applications
    are no longer using this option, and some vendors, such as SUSE, are busy removing
    the complete support for this library.
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不会在本书中涵盖`libwrap`库，因为越来越多的应用程序不再使用这个选项，一些供应商，如SUSE，正忙于删除对这个库的完全支持。
- en: Identity and Access Management in Azure – IAM
  id: totrans-467
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Azure中的身份和访问管理 - IAM
- en: Up to now, we have been discussing how to manage security in Linux. Since we
    are deploying in Azure, Azure also provides some added security to our Linux VMs.
    For example, earlier, we discussed Azure Firewall and network security groups,
    which help in controlling traffic, limiting access to unwanted ports, and filtering
    traffic originating from unknown locations. On top of this, there are other services
    in Azure, such as Azure AD Domain Services, which will let you join a Linux VM
    to a domain. Recently, Microsoft launched an option by which Azure AD users can
    sign in to the Linux VM. The advantage of this is that you don't have to use other
    usernames; instead, you can use Azure AD credentials. Let's take a closer look
    at these services and understand how we can make use of them to increase the security
    of our Linux VMs.
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们一直在讨论如何在Linux中管理安全性。由于我们在Azure中部署，Azure还为我们的Linux VM提供了一些额外的安全性。例如，之前我们讨论了Azure防火墙和网络安全组，这有助于控制流量，限制对不需要的端口的访问，并过滤来自未知位置的流量。除此之外，Azure还有其他服务，如Azure
    AD域服务，它将允许您将Linux VM加入到域中。最近，微软推出了一项选项，允许Azure AD用户登录Linux VM。这样做的好处是您不必使用其他用户名；相反，您可以使用Azure
    AD凭据。让我们更仔细地了解这些服务，并了解如何利用它们来增加我们的Linux VM的安全性。
- en: Azure AD Domain Services
  id: totrans-469
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Azure AD域服务
- en: Until now, we have been discussing what can be done inside the Linux VM. Since
    we are on Azure, we should take advantage of **Azure AD Domain Services**, by
    which you can domain join your Linux machines and enforce your organization's
    policies. Azure AD Domain Services is a domain controller as a service that provides
    you with a DNS service and identity management. Central identity management is
    always an important part of security solutions. It enables the user to access
    resources. On top of that, you can enforce policies and enable multi-factor authentication.
  id: totrans-470
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们一直在讨论Linux VM内部可以做什么。由于我们在Azure上，我们应该利用**Azure AD域服务**，通过它可以将Linux机器加入域并强制执行组织的策略。Azure
    AD域服务是一个作为服务的域控制器，为您提供DNS服务和身份管理。集中身份管理始终是安全解决方案的重要组成部分。它使用户能够访问资源。除此之外，您还可以强制执行策略并启用多因素身份验证。
- en: In this section, we will focus on how to set up a service and how to join a
    domain.
  id: totrans-471
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们将重点讨论如何设置服务和加入域。
- en: Setting up Azure AD Domain Services
  id: totrans-472
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设置Azure AD域服务
- en: The easiest way to set up Azure AD Domain Services is via the Azure portal.
    In the left-hand bar, select **Create a resource** and search for *Domain Services*.
    Select **Azure AD Domain Services** and click on the **Create** button.
  id: totrans-473
  prefs: []
  type: TYPE_NORMAL
  zh: 设置Azure AD域服务的最简单方法是通过Azure门户。在左侧栏中，选择**创建资源**并搜索*Domain Services*。选择**Azure
    AD域服务**，然后单击**创建**按钮。
- en: 'In the wizard, you will be asked for some settings:'
  id: totrans-474
  prefs: []
  type: TYPE_NORMAL
  zh: 在向导中，您将被要求进行一些设置：
- en: '`.onmicrosoft.com`. For the purposes of this book, that is sufficient.'
  id: totrans-475
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: .onmicrosoft.com。对于本书的目的，这就足够了。
- en: '**Virtual network**: It''s a good idea to create a new virtual network and
    a new subnet. Labeling doesn''t matter.'
  id: totrans-476
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**虚拟网络**：创建一个新的虚拟网络和一个新的子网是一个好主意。标签并不重要。'
- en: '`AAD DC Administrators`. To be able to join a domain with a user, the user
    must be a member of this group, using the **Active Directory** section in the
    left-hand bar in the Azure portal.'
  id: totrans-477
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AAD DC Administrators。要能够使用用户加入域，用户必须是该组的成员，在Azure门户中的左侧栏中使用**Active Directory**部分。
- en: Now you are ready to deploy the service. This will take a while; in my personal
    experience, it can take 20 to 30 minutes.
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经准备好部署服务了。这将需要一些时间；根据我的个人经验，可能需要20到30分钟。
- en: When you are finished, go to the **Virtual Networks** section in the left-hand
    bar and enter the newly created virtual network. You will find two newly created
    network interfaces and their IP addresses. You'll need this information, so make
    a note of it.
  id: totrans-479
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，转到左侧栏中的**虚拟网络**部分，并输入新创建的虚拟网络。您将找到两个新创建的网络接口及其IP地址。您将需要这些信息，所以记下来。
- en: It is a good idea to create a new subnet in this virtual network, but it's not
    necessary.
  id: totrans-480
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个虚拟网络中创建一个新的子网是一个好主意，但不是必需的。
- en: Linux Configuration
  id: totrans-481
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Linux配置
- en: You have to deploy the Linux VM in the same virtual network or on a peered network
    where Azure AD Directory Services is deployed. As stated, it is a good idea to
    attach it to another subnet. Here, we are not following the secure LDAP.
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
  zh: 您必须在与部署Azure AD目录服务的相同虚拟网络或对等网络中部署Linux VM。正如所述，最好将其附加到另一个子网。在这里，我们不遵循安全LDAP。
- en: Hostname
  id: totrans-483
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 主机名
- en: 'Change the hostname with the `hostnamectl` utility to the correct `fqdn`:'
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`hostnamectl`实用程序将主机名更改为正确的`fqdn`：
- en: '[PRE94]'
  id: totrans-485
  prefs: []
  type: TYPE_PRE
  zh: '[PRE94]'
- en: 'Then edit the `/etc/hosts` file. Add an entry such as the following:'
  id: totrans-486
  prefs: []
  type: TYPE_NORMAL
  zh: 然后编辑`/etc/hosts`文件。添加以下条目：
- en: '[PRE95]'
  id: totrans-487
  prefs: []
  type: TYPE_PRE
  zh: '[PRE95]'
- en: DNS Servers
  id: totrans-488
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: DNS服务器
- en: In the left-hand bar of the Azure portal, go to **Virtual Networks** and navigate
    to the subnet where the Azure AD Domain Services network interfaces are located.
    Select **DNS servers** and use the custom options to set the IP addresses of the
    Azure AD Domain Services network interfaces. By doing so, whenever DNS resolution
    of the hostname is required, it will be pointed to Azure AD Domain Services.
  id: totrans-489
  prefs: []
  type: TYPE_NORMAL
  zh: 在Azure门户的左侧栏中，转到**虚拟网络**，并导航到Azure AD域服务网络接口所在的子网。选择**DNS服务器**并使用自定义选项设置Azure
    AD域服务网络接口的IP地址。通过这样做，每当需要主机名的DNS解析时，它将指向Azure AD域服务。
- en: Alternatively, if your Azure AD Domain Services is a new deployment, in the
    **Overview** pane of the Azure portal, it will ask you to change the DNS servers.
    Just clicking the **Configure** button would change the DNS servers in the virtual
    network to point to Azure AD Domain Services.
  id: totrans-490
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，如果您的Azure AD域服务是新部署的，在Azure门户的**概述**窗格中，它将要求您更改DNS服务器。只需点击**配置**按钮即可将虚拟网络中的DNS服务器更改为指向Azure
    AD域服务。
- en: Normally, restarting the network in the VM should suffice, but it's a better
    idea to reboot now. From time to time, the old and new settings both survive.
  id: totrans-491
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，重新启动VM中的网络应该就足够了，但最好现在重启。有时，旧设置和新设置都会生效。
- en: In RHEL, Ubuntu, and SUSE, view the content of the `/etc/resolv.conf` file to
    verify the result. Then, look into the settings for `eth0`.
  id: totrans-492
  prefs: []
  type: TYPE_NORMAL
  zh: 在RHEL、Ubuntu和SUSE中，查看`/etc/resolv.conf`文件的内容以验证结果。然后，查看`eth0`的设置。
- en: Installing Dependencies
  id: totrans-493
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装依赖项
- en: 'There are some important components and dependencies that are required in order
    to be able to use Azure AD Domain Services:'
  id: totrans-494
  prefs: []
  type: TYPE_NORMAL
  zh: 有一些重要的组件和依赖项是必需的，才能使用Azure AD域服务：
- en: A Kerberos client, for authorization
  id: totrans-495
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于授权的Kerberos客户端
- en: SSSD, a backend that is responsible for the configuration and utilization of
    features such as using and caching credentials
  id: totrans-496
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SSSD，负责配置和利用功能，如使用和缓存凭据的后端
- en: Samba libraries, to be compatible with Windows features/options
  id: totrans-497
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Samba库，以兼容Windows功能/选项
- en: Some utilities to join and manage the domain, such as `realm`, `adcli`, and
    the `net` command
  id: totrans-498
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一些用于加入和管理域的实用程序，如`realm`，`adcli`和`net`命令
- en: Install the necessary software to be able to join the domain.
  id: totrans-499
  prefs: []
  type: TYPE_NORMAL
  zh: 安装必要的软件以便能够加入域。
- en: 'For RHEL/CentOS-based distributions, execute the following command:'
  id: totrans-500
  prefs: []
  type: TYPE_NORMAL
  zh: 对于基于RHEL/CentOS的发行版，执行以下命令：
- en: '[PRE96]'
  id: totrans-501
  prefs: []
  type: TYPE_PRE
  zh: '[PRE96]'
- en: 'In Ubuntu, execute the following command:'
  id: totrans-502
  prefs: []
  type: TYPE_NORMAL
  zh: 在Ubuntu中，执行以下命令：
- en: '[PRE97]'
  id: totrans-503
  prefs: []
  type: TYPE_PRE
  zh: '[PRE97]'
- en: In SLE/OpenSUSE LEAP, dependencies will be handled by YaST.
  id: totrans-504
  prefs: []
  type: TYPE_NORMAL
  zh: 在SLE/OpenSUSE LEAP中，依赖项将由YaST处理。
- en: Joining the Domain – Ubuntu and RHEL/CentOS
  id: totrans-505
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 加入域 - Ubuntu和RHEL/CentOS
- en: 'In Ubuntu- and RHEL/CentOS-based distributions, the `realm` utility is available
    to join the domain. First, discover the domain:'
  id: totrans-506
  prefs: []
  type: TYPE_NORMAL
  zh: 在Ubuntu和基于RHEL/CentOS的发行版中，`realm`实用程序可用于加入域。首先，发现域：
- en: '[PRE98]'
  id: totrans-507
  prefs: []
  type: TYPE_PRE
  zh: '[PRE98]'
- en: 'The output should be similar to this:'
  id: totrans-508
  prefs: []
  type: TYPE_NORMAL
  zh: 输出应类似于以下内容：
- en: '![Discovering the domain in Ubuntu- and RHEL/CentOS-based distributions](img/B15455_06_27.jpg)'
  id: totrans-509
  prefs: []
  type: TYPE_IMG
  zh: '![在Ubuntu和基于RHEL/CentOS的发行版中发现域](img/B15455_06_27.jpg)'
- en: 'Figure 6.27: Discovering the domain'
  id: totrans-510
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图6.27：发现域
- en: 'Now, you are ready to join the domain:'
  id: totrans-511
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您已经准备好加入域：
- en: '[PRE99]'
  id: totrans-512
  prefs: []
  type: TYPE_PRE
  zh: '[PRE99]'
- en: Use the username you added earlier on as a member of the Azure AD Domain Services
    administrator group. If you get a message saying `Necessary packages are not installed`,
    but you are certain that they are installed, add the `--install=/` parameter to
    the `realm` command.
  id: totrans-513
  prefs: []
  type: TYPE_NORMAL
  zh: 使用您之前添加的用户名作为Azure AD域服务管理员组的成员。如果收到`未安装必要的软件包`的消息，但您确定已安装，可以在`realm`命令中添加`--install=/`参数。
- en: 'To verify the result, execute the following command:'
  id: totrans-514
  prefs: []
  type: TYPE_NORMAL
  zh: 要验证结果，请执行以下命令：
- en: '[PRE100]'
  id: totrans-515
  prefs: []
  type: TYPE_PRE
  zh: '[PRE100]'
- en: 'The output should be similar to the following:'
  id: totrans-516
  prefs: []
  type: TYPE_NORMAL
  zh: 输出应类似于以下内容：
- en: '![Using realm utility to join the domain](img/B15455_06_28.jpg)'
  id: totrans-517
  prefs: []
  type: TYPE_IMG
  zh: '![使用realm实用程序加入域](img/B15455_06_28.jpg)'
- en: 'Figure 6.28: Joining the domain'
  id: totrans-518
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图6.28：加入域
- en: 'You should be able to do things such as the following:'
  id: totrans-519
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该能够执行以下操作：
- en: '[PRE101]'
  id: totrans-520
  prefs: []
  type: TYPE_PRE
  zh: '[PRE101]'
- en: Log in remotely with `ssh` with this user.
  id: totrans-521
  prefs: []
  type: TYPE_NORMAL
  zh: 使用此用户远程登录`ssh`。
- en: Note
  id: totrans-522
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: If this doesn't work, and the join was successful, reboot the VM.
  id: totrans-523
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这不起作用，并且加入成功，请重新启动VM。
- en: Joining the Domain – SUSE
  id: totrans-524
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 加入域 - SUSE
- en: In SUSE SLE and LEAP, the best way to join the domain is by using YaST.
  id: totrans-525
  prefs: []
  type: TYPE_NORMAL
  zh: 在SUSE SLE和LEAP中，加入域的最佳方法是使用YaST。
- en: 'Start the YaST utility:'
  id: totrans-526
  prefs: []
  type: TYPE_NORMAL
  zh: 启动YaST实用程序：
- en: '[PRE102]'
  id: totrans-527
  prefs: []
  type: TYPE_PRE
  zh: '[PRE102]'
- en: From the YaST main window, start the **User Logon Management** module and click
    on **Change Settings**. Click on **Join Domain** and fill in the domain name.
    After that, you will be able to enroll in the domain successfully. If necessary,
    dependencies will be installed.
  id: totrans-528
  prefs: []
  type: TYPE_NORMAL
  zh: 从YaST主窗口开始**用户登录管理**模块，然后点击**更改设置**。点击**加入域**并填写域名。之后，您将能够成功加入域。如果需要，将安装依赖项。
- en: 'A new window will appear to manage the domain user logons. You need at least
    the following: **Allow Domain User Logon** and **Create Home Directory**. All
    the other options are not yet possible in Azure AD Domain Services.'
  id: totrans-529
  prefs: []
  type: TYPE_NORMAL
  zh: 将出现一个新窗口来管理域用户登录。您至少需要以下内容：**允许域用户登录**和**创建主目录**。在Azure AD域服务中，其他所有选项目前都不可能。
- en: 'YaST will give you a colorful GUI-like interface on the shell, the use of which
    means you can join the machine to the domain. Once you run `sudo yast`, you will
    get a screen as shown here. From the list, use the arrow keys to select **Network
    Services** and then **Windows Domain Membership**:'
  id: totrans-530
  prefs: []
  type: TYPE_NORMAL
  zh: YaST将为您在shell上提供一个类似GUI的彩色界面，使用它可以将机器加入域。运行`sudo yast`后，您将会得到如下所示的屏幕。从列表中，使用箭头键选择**网络服务**，然后选择**Windows域成员资格**：
- en: '![Viewing the YaST interface by running the run sudo yast command](img/B15455_06_29.jpg)'
  id: totrans-531
  prefs: []
  type: TYPE_IMG
  zh: '![运行sudo yast命令查看YaST界面](img/B15455_06_29.jpg)'
- en: 'Figure 6.29: YaST interface on the Shell'
  id: totrans-532
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图6.29：在Shell上的YaST界面
- en: 'The best part is that if any dependencies are missing, YaST will prompt you
    to install them, so please go ahead and complete the dependency installation.
    Right after installation, you can enter your domain name and, once you save, you
    will be prompted to enter the username and password, as shown in the following
    screenshot:'
  id: totrans-533
  prefs: []
  type: TYPE_NORMAL
  zh: 最好的部分是，如果缺少任何依赖项，YaST将提示您安装它们，因此请继续并完成依赖项安装。安装完成后，您可以输入您的域名，一旦保存，您将被提示输入用户名和密码，如下面的屏幕截图所示：
- en: '![Providing credentials in YaST to register the machine to Azure AD Domain
    Services](img/B15455_06_30.jpg)'
  id: totrans-534
  prefs: []
  type: TYPE_IMG
  zh: '![在YaST中提供凭据以将机器注册到Azure AD域服务](img/B15455_06_30.jpg)'
- en: 'Figure 6.30: Providing credentials to register the machine'
  id: totrans-535
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图6.30：提供注册机器的凭据
- en: 'Enter your credentials in the format `user@domain` and then your password.
    Once you complete the process, the SUSE machine will reach out to Azure AD Domain
    Services and register your machine. If joining is successful, you will get a message
    on your screen as shown here:'
  id: totrans-536
  prefs: []
  type: TYPE_NORMAL
  zh: 以`user@domain`格式输入您的凭据，然后输入您的密码。完成流程后，SUSE机器将连接到Azure AD域服务并注册您的机器。如果加入成功，您将在屏幕上收到一条消息，如下所示：
- en: '![A message prompt indicating successful domain join](img/B15455_06_31.jpg)'
  id: totrans-537
  prefs: []
  type: TYPE_IMG
  zh: '![提示成功加入域的消息提示](img/B15455_06_31.jpg)'
- en: 'Figure 6.31: Domain join successful'
  id: totrans-538
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图6.31：域加入成功
- en: 'You can verify by switching the current user to your AD username using the
    `su` command, as shown in the following screenshot:'
  id: totrans-539
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过使用`su`命令将当前用户切换为您的AD用户名来进行验证，如下面的屏幕截图所示：
- en: '![Using su command to verify the domain join](img/B15455_06_32.jpg)'
  id: totrans-540
  prefs: []
  type: TYPE_IMG
  zh: '![使用su命令验证域加入](img/B15455_06_32.jpg)'
- en: 'Figure 6.32: Verifying the domain join'
  id: totrans-541
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图6.32：验证域加入
- en: Finally, we have completed joining our Linux machine to Azure AD Domain Services.
    Recently, Microsoft added support for Azure AD sign-in to Linux VMs without the
    need to join the machines to the domain. An agent will be installed on the machine
    to complete the authorization. This will be discussed in the next section.
  id: totrans-542
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们已经成功将我们的Linux机器加入了Azure AD域服务。最近，微软添加了对Linux VM进行Azure AD登录的支持，无需将机器加入域。将在下一节中讨论安装代理以完成授权。
- en: Logging in with Azure AD Credentials to the Linux VM
  id: totrans-543
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用Azure AD凭据登录到Linux VM
- en: Another form of identity management is possible with Azure AD. This is a completely
    different identity management system, without LDAP and Kerberos, as discussed
    in the preceding section. In Linux, Azure AD will allow you to use your Azure
    credentials to log into your VM, but has no support at an application level. At
    the time of writing this book, this feature is still in preview. Also, this feature
    is not available in SUSE.
  id: totrans-544
  prefs: []
  type: TYPE_NORMAL
  zh: Azure AD还可以实现另一种形式的身份管理。这是一个完全不同的身份管理系统，没有LDAP和Kerberos，正如前一节所讨论的。在Linux中，Azure
    AD将允许您使用Azure凭据登录到您的VM，但不支持应用程序级别。在撰写本书时，此功能仍处于预览阶段。此外，此功能在SUSE中不可用。
- en: 'To be able to use Azure AD, you have to deploy a VM extension, for instance,
    using the Azure CLI:'
  id: totrans-545
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用Azure AD，您必须部署一个VM扩展，例如使用Azure CLI：
- en: '[PRE103]'
  id: totrans-546
  prefs: []
  type: TYPE_PRE
  zh: '[PRE103]'
- en: 'After this, you have to assign a role, either the `Virtual Machine Administrator
    Login` (with root privileges) or `Virtual Machine User Login` (unprivileged user)
    role, to your Azure AD account, with the scope limited to this VM:'
  id: totrans-547
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，您必须为您的Azure AD帐户分配一个角色，可以是`虚拟机管理员登录`（具有root权限）或`虚拟机用户登录`（非特权用户）角色，并将范围限制在此VM上：
- en: '[PRE104]'
  id: totrans-548
  prefs: []
  type: TYPE_PRE
  zh: '[PRE104]'
- en: Here, you can set the scope at the subscription level, `--scope /subscriptions/<subcription
    ID>`. By doing so, the role will be inherited by all resources in the subscription.
  id: totrans-549
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，您可以在订阅级别设置范围，`--scope /subscriptions/<subcription ID>`。通过这样做，该角色将被订阅中的所有资源继承。
- en: 'If you want granular-level access only to a particular VM, you can execute
    the following command (in PowerShell):'
  id: totrans-550
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您只想对特定的VM进行细粒度访问控制，可以执行以下命令（在PowerShell中）：
- en: '[PRE105]'
  id: totrans-551
  prefs: []
  type: TYPE_PRE
  zh: '[PRE105]'
- en: '`$vm.Id` will give you the scope of the VM.'
  id: totrans-552
  prefs: []
  type: TYPE_NORMAL
  zh: '`$vm.Id` 将为您提供虚拟机的范围。'
- en: 'In bash, execute the following command:'
  id: totrans-553
  prefs: []
  type: TYPE_NORMAL
  zh: 在bash中，执行以下命令：
- en: '[PRE106]'
  id: totrans-554
  prefs: []
  type: TYPE_PRE
  zh: '[PRE106]'
- en: This command will query the ID of the VM and is the scope for role assignment.
  id: totrans-555
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令将查询虚拟机的ID，并且是角色分配的范围。
- en: 'You can log in using your AD credentials:'
  id: totrans-556
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用您的AD凭据登录：
- en: '[PRE107]'
  id: totrans-557
  prefs: []
  type: TYPE_PRE
  zh: '[PRE107]'
- en: Finally, you will be able to see that you are logged into the Linux VM using
    your Azure AD credentials.
  id: totrans-558
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，您将能够看到您正在使用Azure AD凭据登录到Linux VM。
- en: Other Security Solutions in Azure
  id: totrans-559
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Azure中的其他安全解决方案
- en: 'In this chapter, we have discussed how to increase the Linux security level
    and incorporate certain Azure services to improve security. Having said that,
    the list of Azure services that can be used to increase security is very long.
    Some of them are highlighted here:'
  id: totrans-560
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们已经讨论了如何提高Linux安全级别并整合某些Azure服务来提高安全性。话虽如此，可以用于提高安全性的Azure服务列表非常长。以下是其中一些重点：
- en: 'Azure AD Managed Identity: Using this, you can create managed identities for
    VMs, which can be used to authenticate any service that supports Azure AD authentication
    ([https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/overview](https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/overview)).
    Formerly, this service was known as **Managed Service Identity** (**MSI**) which
    is now called as **managed identities for Azure resources**.'
  id: totrans-561
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure AD托管身份：使用此功能，您可以为虚拟机创建托管身份，用于对支持Azure AD身份验证的任何服务进行身份验证。以前，此服务被称为**托管服务身份**（**MSI**），现在称为**Azure资源的托管身份**。
- en: 'Key Vault: This can be used to store your keys securely. For example, in Azure
    Disk Encryption, the key will be stored in a key vault and accessed whenever required
    ([https://docs.microsoft.com/en-us/azure/key-vault/basic-concepts](https://docs.microsoft.com/en-us/azure/key-vault/basic-concepts)).'
  id: totrans-562
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 密钥保管库：可用于安全存储密钥。例如，在Azure磁盘加密中，密钥将存储在密钥保管库中，并在需要时进行访问。
- en: 'Azure Disk Encryption: Disk encryption will help you encrypt the operating
    system disk, as well as the data disk, so as to have additional security for the
    data stored ([https://docs.microsoft.com/en-us/azure/virtual-machines/linux/disk-encryption-overview](https://docs.microsoft.com/en-us/azure/virtual-machines/linux/disk-encryption-overview)).'
  id: totrans-563
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure磁盘加密：磁盘加密将帮助您加密操作系统磁盘以及数据磁盘，从而为存储的数据提供额外的安全性。
- en: 'RBAC: RBAC in Azure gives you the ability to assign granular permission to
    your VMs. There are lots of in-built roles available in Azure and you can assign
    one depending upon your security requirements. Also, you can create custom RBAC
    roles to give more granular permissions ([https://docs.microsoft.com/en-us/azure/role-based-access-control/overview](https://docs.microsoft.com/en-us/azure/role-based-access-control/overview)).'
  id: totrans-564
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RBAC：Azure中的RBAC允许您为虚拟机分配细粒度权限。Azure中有许多内置角色可用，您可以根据安全需求分配其中一个。此外，您可以创建自定义RBAC角色以提供更细粒度的权限。
- en: '**Azure Security Center** (**ASC**): ASC is a unified infrastructure security
    management system designed to consolidate your security ([https://docs.microsoft.com/en-us/azure/security-center/security-center-intro](https://docs.microsoft.com/en-us/azure/security-center/security-center-intro)).'
  id: totrans-565
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure安全中心**（**ASC**）：ASC是一个统一的基础设施安全管理系统，旨在 consolida您的安全。'
- en: 'Azure Policy Guest Configuration: This can be used to audit settings inside
    your Linux VM. It has been discussed in detail in *Chapter 8*, *Exploring Continuous
    Configuration Automation*.'
  id: totrans-566
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure策略客户端配置：这可用于审核Linux虚拟机内部的设置。在*第8章* *探索持续配置自动化*中已经详细讨论过。
- en: We would recommend that you go through the Microsoft documentation pertaining
    to these services in order to have a better insight into how these can be used
    in your environment to strengthen the overall security aspect.
  id: totrans-567
  prefs: []
  type: TYPE_NORMAL
  zh: 我们建议您阅读微软文档，以更好地了解这些服务如何在您的环境中使用，以加强整体安全性。
- en: Summary
  id: totrans-568
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结
- en: Security is a very important topic nowadays. Many reports, books, and so on
    have been written on this subject. In this chapter, we covered several options
    in Linux to increase security levels. All of them come on top of the basic security
    already provided by Azure through network security groups. They are relatively
    easy to implement and will make a big difference!
  id: totrans-569
  prefs: []
  type: TYPE_NORMAL
  zh: 安全是当今一个非常重要的话题。关于这个主题已经写了许多报告、书籍等。在本章中，我们介绍了Linux中增加安全级别的几种选项。所有这些选项都是在Azure通过网络安全组提供的基本安全性之上的。它们相对容易实施，并将产生重大影响！
- en: Central identity management is not only a way of providing users with access
    to the VM, but it's also a part of reducing the security risks. Azure AD Domain
    Services provides, via LDAP and Kerberos, an identity management solution for
    all operating systems and applications that have support for these protocols.
  id: totrans-570
  prefs: []
  type: TYPE_NORMAL
  zh: 中央身份管理不仅是为用户提供访问虚拟机的一种方式，也是减少安全风险的一部分。Azure AD域服务通过LDAP和Kerberos为所有支持这些协议的操作系统和应用程序提供身份管理解决方案。
- en: '*Chapter 8, Exploring Continuous Configuration Automation*, will cover automation
    and orchestration. Please note that all the security measures covered in this
    chapter can be easily orchestrated. Orchestration makes central configuration
    management possible. One of its big advantages is the prevention of mistakes and
    unmanageable configurations. This way, even orchestration is a part of your security
    plan!'
  id: totrans-571
  prefs: []
  type: TYPE_NORMAL
  zh: '*第8章，探索持续配置自动化*，将涵盖自动化和编排。请注意，本章涵盖的所有安全措施都可以轻松进行编排。编排使得中央配置管理成为可能。其一个重要优势是防止错误和难以管理的配置。因此，即使编排也是您安全计划的一部分！'
- en: And it would be nice if you are going to create your own VMs, especially if
    you're going to build your own images. We will discuss in the next chapter how
    to build your own images. Also, we will consider the security aspects of pushing
    these images and deploying them in your environment.
  id: totrans-572
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您要创建自己的虚拟机，尤其是如果您要构建自己的镜像，那将是很好的。我们将在下一章讨论如何构建自己的镜像。此外，我们将考虑推送这些镜像和在您的环境中部署它们的安全方面。
- en: Questions
  id: totrans-573
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: If you are going to implement firewalld, what are the methods for configuring
    this firewall?
  id: totrans-574
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果要实施firewalld，有哪些配置此防火墙的方法？
- en: What is the reason for using the `--permanent` parameter of `firewall-cmd`?
  id: totrans-575
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`--permanent`参数的`firewall-cmd`的原因是什么？
- en: What other options are available to restrict network access?
  id: totrans-576
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 还有哪些选项可用于限制网络访问？
- en: Explain the difference between DAC and MAC.
  id: totrans-577
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解释DAC和MAC之间的区别。
- en: Why is it important to utilize Linux security modules in a VM running on Azure?
  id: totrans-578
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Azure上运行的VM中使用Linux安全模块为什么很重要？
- en: Which MAC system is available for which distribution?
  id: totrans-579
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个MAC系统适用于哪个发行版？
- en: What is the main difference between AppArmor and SELinux?
  id: totrans-580
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: AppArmor和SELinux之间的主要区别是什么？
- en: What are the requirements to be able to join Azure AD Domain Services in regards
    to dependencies and Linux configuration?
  id: totrans-581
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在依赖和Linux配置方面，加入Azure AD域服务的要求是什么？
- en: Further Reading
  id: totrans-582
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: Similar to the previous chapter, I strongly suggest you visit *Chapter 11*,
    *Troubleshooting and Monitoring Your Workloads*, to read about logging in Linux,
    because often, the `systemctl status` command doesn't provide you with enough
    information. I have also already pointed to the blog by Lennart Poettering, and
    the systemd website.
  id: totrans-583
  prefs: []
  type: TYPE_NORMAL
  zh: 与上一章类似，我强烈建议您访问*第11章*，“故障排除和监视工作负载”，以了解有关Linux日志记录的信息，因为通常`systemctl status`命令提供的信息不足够。我也已经指向了Lennart
    Poettering的博客和systemd网站。
- en: For Linux security in general, you can start reading the book *Mastering Linux
    Security and Hardening*, by Donald A. Tevault. Many of the topics covered in this
    chapter, and many more besides, are explained in great detail.
  id: totrans-584
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Linux安全性，您可以开始阅读Donald A. Tevault的书*掌握Linux安全和加固*。本章涵盖的许多主题以及其他许多主题都有详细的解释。
- en: 'The firewalld daemon has a project website, [https://firewalld.org](https://firewalld.org),
    with a blog and excellent documentation. For older distributions, the wiki of
    Arch Linux is a good place to start to learn more: [https://wiki.archlinux.org/index.php/iptables](https://wiki.archlinux.org/index.php/iptables).
    And since iptables is utilized by firewalld, it''s a good start before diving
    into the man page of `firewalld.richlanguage`.'
  id: totrans-585
  prefs: []
  type: TYPE_NORMAL
  zh: firewalld守护程序有一个项目网站，[https://firewalld.org](https://firewalld.org)，有博客和优秀的文档。对于较旧的发行版，Arch
    Linux的维基是学习更多的好地方：[https://wiki.archlinux.org/index.php/iptables](https://wiki.archlinux.org/index.php/iptables)。由于iptables被firewalld使用，所以在深入研究`firewalld.richlanguage`的man页面之前，这是一个很好的开始。
- en: 'All the details regarding SELinux are covered in guides provided by Red Hat:
    [https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/selinux_users_and_administrators_guide/](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/selinux_users_and_administrators_guide/)
    And although it''s slightly out of date, it''s a very good idea to watch this
    video of a Red Hat Summit on YouTube relating to SELinux: [https://www.youtube.com/watch?v=MxjenQ31b70](https://www.youtube.com/watch?v=MxjenQ31b70).'
  id: totrans-586
  prefs: []
  type: TYPE_NORMAL
  zh: 有关SELinux的所有细节都在Red Hat提供的指南中有所涵盖：[https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/selinux_users_and_administrators_guide/](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/selinux_users_and_administrators_guide/)虽然有点过时，但观看这个关于SELinux的Red
    Hat峰会的YouTube视频是一个很好的主意：[https://www.youtube.com/watch?v=MxjenQ31b70](https://www.youtube.com/watch?v=MxjenQ31b70)。
- en: However, it's more difficult to find good information about AppArmor. There
    is project documentation available at [https://gitlab.com/apparmor/apparmor/wikis/Documentation](https://gitlab.com/apparmor/apparmor/wikis/Documentation),
    and the Ubuntu server guide is a good start. This is available at [https://help.ubuntu.com/lts/serverguide/apparmor.html.en](https://help.ubuntu.com/lts/serverguide/apparmor.html.en).
  id: totrans-587
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，要找到关于AppArmor的好信息更加困难。在[https://gitlab.com/apparmor/apparmor/wikis/Documentation](https://gitlab.com/apparmor/apparmor/wikis/Documentation)上有项目文档可用，Ubuntu服务器指南是一个很好的起点。这可以在[https://help.ubuntu.com/lts/serverguide/apparmor.html.en](https://help.ubuntu.com/lts/serverguide/apparmor.html.en)找到。
