- en: Chapter 8. Hardware Troubleshooting
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第8章 硬件故障排除
- en: In the last chapter, we identified that the filesystems on our NFS were mounted
    as **Read-Only**. In order to identify the cause, we performed quite a bit of
    troubleshooting around NFS and filesystems. We used commands such as `showmount`
    to see what NFS shares are available and the `mount` command to show the mounted
    filesystems.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们确定了我们的NFS上的文件系统被挂载为**只读**。为了确定原因，我们围绕NFS和文件系统进行了大量的故障排除。我们使用了诸如`showmount`查看可用的NFS共享和`mount`命令显示已挂载的文件系统等命令。
- en: Once we identified the issue, we were able to use the `fsck` command to perform
    a filesystem check and recover the filesystems.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们确定了问题，我们就能够使用`fsck`命令执行文件系统检查和恢复文件系统。
- en: In this chapter, we will continue down the path from [Chapter 7](part0044_split_000.html#19UOO2-8ae10833f0c4428b9e1482c7fee089b4
    "Chapter 7. Filesystem Errors and Recovery"), *FileSystem Errors and Recovery*
    and investigate a hardware device failure. This chapter will cover many of the
    log files and tools necessary to determine not only whether a hardware failure
    has occurred, but why it has occurred as well.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将继续从[第7章](part0044_split_000.html#19UOO2-8ae10833f0c4428b9e1482c7fee089b4
    "第7章 文件系统错误和恢复")*文件系统错误和恢复*的路径，并调查硬件设备故障。本章将涵盖许多日志文件和工具，这些工具不仅可以确定硬件故障是否发生，还可以确定为什么发生。
- en: Starting with a log entry
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从日志条目开始
- en: 'In [Chapter 7](part0044_split_000.html#19UOO2-8ae10833f0c4428b9e1482c7fee089b4
    "Chapter 7. Filesystem Errors and Recovery"), *FileSystem Errors and Recovery*
    while looking through the `/var/log/messages` log file to identify issues with
    the NFS servers filesystems, we noticed the following messages:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第7章](part0044_split_000.html#19UOO2-8ae10833f0c4428b9e1482c7fee089b4 "第7章
    文件系统错误和恢复")*文件系统错误和恢复*中，当查看`/var/log/messages`日志文件以识别NFS服务器文件系统的问题时，我们注意到了以下消息：
- en: '[PRE0]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The preceding messages indicate that the RAID device `/dev/md127` had a failure.
    Since the previous chapter was solely focused on the issues with the filesystem
    itself, we did not investigate the RAID device failure further. In this chapter,
    we will investigate to determine the cause and resolution.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的消息表明RAID设备`/dev/md127`发生了故障。由于上一章主要关注文件系统本身的问题，我们没有进一步调查RAID设备的故障。在本章中，我们将进行调查以确定原因和解决方法。
- en: To start the investigation, we should first review the original log messages
    as these can tell us quite a bit about the state of the RAID device.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 为了开始调查，我们应该首先查看原始日志消息，因为这些消息可以告诉我们关于RAID设备状态的很多信息。
- en: 'As a start, let''s break down the messages into smaller sections as follows:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们将消息分解成以下几个小节：
- en: '[PRE1]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The first log message is actually quite telling. The first key piece of information
    shown is the RAID device that the message is about `(md/raid1:md127)`.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 第一条日志消息实际上非常有意义。显示的第一个关键信息是消息所涉及的RAID设备`(md/raid1:md127)`。
- en: By the name of this device, we already know quite a bit. The first thing we
    know is that this RAID device is created by Linux's software raid system **multiple
    device driver** (**md**). This system allows Linux to take two independent disks
    and apply a RAID to them.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这个设备的名称，我们已经知道了很多。我们知道的第一件事是，这个RAID设备是由Linux的软件RAID系统**多设备驱动程序**（**md**）创建的。该系统允许Linux将两个独立的磁盘应用RAID。
- en: Since we will be working primarily with a RAID in this chapter, we should first
    understand what RAID is and how it works.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 由于本章主要涉及RAID，我们应该首先了解RAID是什么以及它是如何工作的。
- en: What is a RAID?
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是RAID？
- en: '**Redundant Array of Independent Disks** (**RAID**) is often either a software-
    or hardware-based system that allows users to take multiple disks and use them
    as one device. The RAID can be configured in multiple ways, allowing for either
    greater data redundancy or performance.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**独立磁盘冗余阵列**（**RAID**）通常是一个软件或硬件系统，允许用户将多个磁盘作为一个设备使用。RAID可以以多种方式配置，从而实现更大的数据冗余或性能。'
- en: This configuration is commonly referred to as a RAID level. The different types
    of RAID levels provide different functionality to get a better idea of the RAID
    levels. Let's explore a few that are commonly used.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这种配置通常被称为RAID级别。不同类型的RAID级别提供不同的功能，以更好地了解RAID级别。让我们探索一些常用的RAID级别。
- en: RAID 0 – striping
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: RAID 0 – 分区
- en: RAID 0 is one of the simplest RAID levels to understand. The way RAID 0 works
    is by taking multiple disks and combining them to act as one. When data is written
    to the RAID device, the data is split and parts are written on each disk. To understand
    this better, let's put together a simple scenario.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: RAID 0是最简单的RAID级别之一。RAID 0的工作原理是将多个磁盘组合起来作为一个磁盘。当数据写入RAID设备时，数据被分割，部分数据被写入每个磁盘。为了更好地理解这一点，让我们举一个简单的例子。
- en: If we had a simple RAID 0 device that consisted of five 500 GB drives, our RAID
    device would be the size of all the five drives together—2500 GB or 2.5 TB. If
    we were to write a 50 MB file to the RAID device, 10 MB of the file's data would
    be written to each disk at the same time.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果我们有一个由五个500GB驱动器组成的简单RAID 0设备，我们的RAID设备将是所有五个驱动器的大小——2500GB或2.5TB。如果我们要向RAID设备写入一个50MB的文件，文件的10MB数据将同时写入每个磁盘。
- en: This process is commonly referred to as **striping**. In the same context, when
    that 50 MB file is read from the RAID device, the read request will be processed
    by each disk at the same time as well.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这个过程通常被称为**分区**。在同样的情况下，当从RAID设备中读取那个50MB文件时，读取请求也将同时由每个磁盘处理。
- en: The ability to split a file and process parts of it to each disk at the same
    time provides better performance of the write or read requests. In fact, because
    we have five disks, the requests are faster by a multiple of 5.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 将文件分割并同时处理每个磁盘的部分可以提供更好的写入或读取请求性能。事实上，因为我们有五个磁盘，请求速度会提高5倍。
- en: A simple analogy to this would be if you had five people building a wall at
    equal speed, they would be five times faster than a single person building the
    same wall.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 一个简单的类比是，如果你有五个人以相同的速度建造一堵墙，他们将比一个人建造同样的墙快五倍。
- en: While RAID 0 provides performance, it does not provide any data protection.
    If a single drive in this RAID fails, the data from that drive is not available
    and such a failure could result in complete data loss with RAID 0.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然RAID 0提供了性能，但它并不提供任何数据保护。如果这种RAID中的单个驱动器失败，该驱动器的数据将不可用，这种故障可能导致完全的数据丢失。
- en: RAID 1 – mirroring
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: RAID 1 - 镜像
- en: RAID 1 is another simple RAID level. Unlike RAID 0 where the drives are combined,
    in RAID 1 the drives are mirrored. RAID 1 generally consists of two or more drives.
    When data is written to the RAID device, the data is written to each device in
    its entirety.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: RAID 1是另一种简单的RAID级别。与RAID 0不同，RAID 1中的驱动器是镜像的。RAID 1通常由两个或更多个驱动器组成。当数据被写入RAID设备时，数据会完整地写入每个设备。
- en: 'This process is referred to as **mirroring**, since the data is essentially
    mirrored on all drives:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 这个过程被称为**镜像**，因为数据基本上在所有驱动器上都是镜像的：
- en: Using the same scenario as before, if we had five 500 GB disk drives in a RAID
    1 configuration, the total disk size would be 500 GB. When we write the same 50
    MB file to the RAID device, each drive will get its own copy of that 50 MB file.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用与之前相同的场景，如果我们在RAID 1配置中有五个500GB磁盘驱动器，总磁盘大小将为500GB。当我们将相同的50MB文件写入RAID设备时，每个驱动器将获得该50MB文件的副本。
- en: This also means that the write request will only be as fast as the slowest drive
    in the RAID. With RAID 1, every drive must complete the write request before it
    is considered complete.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这也意味着写请求的速度将只有RAID中最慢的驱动器那么快。对于RAID 1，每个驱动器必须在被视为完成之前完成写请求。
- en: Read requests, however, can be served by any one of the RAID 1 drives. Because
    of this, a RAID 1 can sometimes provide read requests faster, as each request
    can be performed by a different drive in the RAID.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 然而，读请求可以由RAID 1中的任何一个驱动器提供。因此，RAID 1有时可以更快地提供读请求，因为每个请求可以由RAID中的不同驱动器执行。
- en: RAID 1 provides the highest level of data resiliency, as it only requires one
    disk drive to remain active during failures. Using our five-disk scenario, we
    could lose four of the five disks and still rebuild and use the RAID. This is
    the reason why RAID 1 should be used when data protection is more important than
    disk performance.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: RAID 1提供了最高级别的数据弹性，因为在故障期间只需要一个磁盘驱动器保持活动。使用我们的五盘场景，我们可以丢失五个磁盘中的四个并且仍然重建和使用RAID。这就是为什么在数据保护比磁盘性能更重要时应该使用RAID
    1的原因。
- en: RAID 5 – striping with distributed parity
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: RAID 5 - 条带化与分布式奇偶校验
- en: '**RAID 5** is an example of a difficult-to-understand RAID level. RAID 5 works
    by striping data across multiple disks such as RAID 0, but it also includes parity.
    Parity data is special data that is generated by performing an exclusive OR operation
    on the data written to the RAID device. The resulting data can be used to rebuild
    the missing data from another drive.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**RAID 5**是一个难以理解的RAID级别的例子。RAID 5通过将数据条带化到多个磁盘上来工作，就像RAID 0一样，但它还包括奇偶校验。奇偶校验数据是通过对写入RAID设备的数据执行异或运算而生成的特殊数据。生成的数据可以用于从另一个驱动器重建丢失的数据。'
- en: Using the same example as we did earlier, where we have five 500 GB hard drives
    in a RAID 5 configuration, if we were to yet again write a 50 MB file, each disk
    will receive 10 MB of data; this is exactly like RAID 0\. However, unlike RAID
    0, parity data is also written to each disk. Because of the additional parity
    data, the total data size available to the RAID is the total of the four drives,
    with one drive's worth of data allocated to parity. In our case, this would mean
    2 TB of available disk space with 500 GB used for parity.
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用与之前相同的例子，我们在RAID 5配置中有五个500GB硬盘驱动器，如果我们再次写入一个50MB的文件，每个磁盘将接收10MB的数据；这与RAID
    0完全相同。然而，与RAID 0不同的是，每个磁盘还会写入奇偶校验数据。由于额外的奇偶校验数据，RAID可用的总数据大小是四个驱动器的总和，其中一个驱动器的数据分配给奇偶校验。在我们的情况下，这意味着可用的磁盘空间为2TB，其中500GB用于奇偶校验。
- en: Often, there is a misconception that the parity data is written to a dedicated
    drive with RAID 5\. This is not the case. It is simply that the parity data size
    is a full disk's worth of space. This data, however, is distributed against all
    disks.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 通常有一个误解，即奇偶校验数据是写入专用驱动器的RAID 5。事实并非如此。只是奇偶校验数据的大小是一个完整磁盘的空间。然而，这些数据是分布在所有磁盘上的。
- en: A reason to use RAID 5 over RAID 0 is the fact that it is possible for the data
    to be rebuilt if a single drive fails. The only problem with RAID 5 is if two
    drives fail, the RAID cannot be rebuilt and may result in data loss.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 使用RAID 5而不是RAID 0的原因是，如果单个驱动器失败，数据可以被重建。RAID 5的唯一问题是，如果两个驱动器失败，RAID无法重建，可能导致数据丢失。
- en: RAID 6 – striping with double distributed parity
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: RAID 6 - 双分布式奇偶校验条带化
- en: '**RAID 6** is essentially the same type of RAID as RAID 5; however, the parity
    data is doubled. By doubling the parity data, the RAID can survive up to two disk
    failures. Since the parity is doubled if we were to take five 500 GB hard drives
    and place them into a RAID 6 configuration, the available disk space would be
    1.5 TB, the sum of 3 drives; the other 1 TB of data space would be occupied by
    two sets of parity data.'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '**RAID 6**本质上与RAID 5相同类型的RAID；但是，奇偶校验数据是双倍的。通过加倍奇偶校验数据，RAID可以在最多两个磁盘故障时存活。由于奇偶校验是双倍的，如果我们将五个500GB硬盘驱动器放入RAID
    6配置中，可用的磁盘空间将是1.5TB，即3个驱动器的总和；另外1TB的数据空间将被两组奇偶校验数据占用。'
- en: RAID 10 – mirrored and striped
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: RAID 10 - 镜像和条带化
- en: '**RAID 10** (commonly known as RAID 1 + 0) is another very common RAID level.
    RAID 10 is essentially a combination of both RAID 1 and RAID 0\. With RAID 10
    each disk has a mirror and data is striped across all of the mirrored drives.
    To explain this we will use a similar example as above; however, we will do this
    with six 500 GB drives.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**RAID 10**（通常称为RAID 1 + 0）是另一种非常常见的RAID级别。RAID 10本质上是RAID 1和RAID 0的组合。使用RAID
    10，每个磁盘都有一个镜像，并且数据被条带化到所有镜像驱动器上。为了解释这一点，我们将使用与上面类似的例子；但是，我们将使用六个500GB驱动器。'
- en: If we were to write a 30 MB file, it will be broken into 10 MB chunks and striped
    to three RAID devices. These RAID devices are RAID 1 mirrors. Essentially, a RAID
    10 is numerous RAID 1 devices striped together in a RAID 0 configuration.
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果我们要写入一个30MB的文件，它将被分成10MB的块，并分别写入三个RAID设备。这些RAID设备是RAID 1的镜像。基本上，RAID 10是许多RAID
    1设备在RAID 0配置中一起条带化。
- en: The RAID 10 configuration is a good balance between performance and data protection.
    In order for a complete failure to occur, both sides of a mirror must fail; this
    means 2 sides of a RAID 1.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: RAID 10配置在性能和数据保护之间取得了良好的平衡。为了发生完全故障，镜像的两侧都必须失败；这意味着RAID 1的两侧都会失败。
- en: Considering the number of disks in the RAID the chances of this are less likely
    than those of RAID 5\. From a performance standpoint, RAID 10 still benefits from
    the striping methodology and is able to write different chunks of a single file
    to each disk, by increasing the write speed.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到RAID中的磁盘数量，这种情况发生的可能性比RAID 5的可能性要小。从性能的角度来看，RAID 10仍然受益于条带化方法，并且能够将单个文件的不同块写入到每个磁盘，从而提高写入速度。
- en: RAID 10 also benefits from having two disks with the same data; as with RAID
    1, when a read request is made either disk may serve that request allowing for
    concurrent read requests to be handled by each disk independently.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: RAID 10也受益于具有相同数据的两个磁盘；与RAID 1一样，当发出读取请求时，任何一个磁盘都可以处理该请求，从而允许每个磁盘独立处理并发的读取请求。
- en: The downside to RAID 10 is while it often can meet or exceed the performance
    of RAID 5 it often takes more hardware to do this as each disk is mirrored and
    you lose half of the total disk space to the RAID.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: RAID 10的缺点是，虽然它通常可以满足或超过RAID 5的性能，但通常需要更多的硬件来实现这一点，因为每个磁盘都是镜像的，你会失去一半的总磁盘空间。
- en: With our preceding example, our usable space for six 500 GB drives in a RAID
    10 configuration would be 1.5 TB. Simply put, it is 50 percent of our disk capacity.
    This same capacity is available with 4 drives for RAID 5.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 以我们之前的例子，我们在RAID 10配置中使用六个500GB驱动器的可用空间将是1.5TB。简单来说，它是我们磁盘容量的50%。这个相同的容量在RAID
    5中使用4个驱动器也是可用的。
- en: Back to troubleshooting our RAID
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 回到排除故障我们的RAID
- en: Now that we have a better understanding of RAID and the different configurations,
    let's go back to investigating our errors.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们对RAID和不同的配置有了更好的理解，让我们回到调查我们的错误。
- en: '[PRE2]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: From the preceding error, we can see that our RAID device is **md127**. We can
    also see that this device is a RAID 1 device (`md/raid1`). The message stating
    *Operation continuing on 1 devices* means the second part of the mirror is still
    operational.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的错误中，我们可以看到我们的RAID设备是**md127**。我们还可以看到这个设备是一个RAID 1设备（`md/raid1`）。表明*操作在1个设备上继续*的消息意味着镜像的第二部分仍然可用。
- en: The good thing is that, if both sides of the mirror were unavailable, the RAID
    would completely fail and result in worse issues.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 好消息是，如果镜像的两侧都不可用，RAID将完全失败并导致更严重的问题。
- en: 'Since we now know the RAID device affected, the type of RAID used, and even
    the hard disk that failed, we have quite a bit of information about this failure.
    If we continue looking at the log entries from `/var/log/messages`, we can find
    out even more:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们现在知道受影响的RAID设备、使用的RAID类型，甚至是失败的硬盘，我们对这次故障有了相当多的信息。如果我们继续查看`/var/log/messages`中的日志条目，我们甚至可以找到更多信息：
- en: '[PRE3]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The preceding messages are interesting as they indicate that MD the Linux software
    RAID service attempted to recover the RAID:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的消息很有趣，因为它们表明Linux软件RAID服务MD尝试恢复RAID：
- en: '[PRE4]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'In the first line of this section of logs, it seems that the device `sdb1`
    was removed from the RAID:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在日志的这一部分的第一行中，似乎设备`sdb1`已从RAID中移除：
- en: '[PRE5]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The third line, however, is stating that the device `sdb1` has been re-added
    to the RAID or "**bound**" to the RAID.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，第三行表明设备`sdb1`已重新添加到RAID或“**绑定**”到RAID。
- en: 'The fourth and fifth lines show that the RAID started recovery steps:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 第四和第五行显示RAID开始了恢复步骤：
- en: '[PRE6]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: How RAID recovery works
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: RAID恢复的工作原理
- en: Earlier we discussed how various RAID levels are able to rebuild and recover
    data from lost devices. This happens either via parity data or mirrored data.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 早些时候，我们讨论了各种RAID级别如何能够通过奇偶校验数据或镜像数据重建和恢复丢失的设备数据。
- en: When a RAID device loses one of its drives and that drive is either replaced
    or re-added to the RAID, the RAID manager, whether it is a software or hardware
    RAID, will start rebuilding the data. The goal of this rebuild is to recreate
    the data that should be on the missing drive.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 当RAID设备失去其中一个驱动器，并且该驱动器被替换或重新添加到RAID时，无论是软件还是硬件RAID管理器都将开始重建数据。重建的目标是重新创建应该在丢失的驱动器上的数据。
- en: If the RAID is a mirrored RAID, the data from the available mirrored disk will
    be read and written to the replaced disk.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 如果RAID是镜像RAID，将从可用的镜像磁盘读取数据并写入替换的磁盘。
- en: For parity-based RAIDs, the rebuild will be based on the surviving data that
    has been striped across the RAID and the parity data within the RAID.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 对于基于奇偶校验的RAID，重建将基于RAID中已经条带化的存活数据和奇偶校验数据。
- en: During the rebuild process for parity-based RAIDs, any additional failure could
    result in a failed rebuild. With mirror-based RAIDs, the failure can occur on
    any disk as long as there is one full copy of the data being used for the rebuild.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在奇偶校验RAID的重建过程中，任何额外的故障都可能导致重建失败。对于基于镜像的RAID，只要有一份完整的数据副本用于重建，故障可以发生在任何磁盘上。
- en: 'At the end of our captured log messages, we can see that the rebuild was successful:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们捕获的日志消息的末尾，我们可以看到重建成功了：
- en: '[PRE7]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: It appears that the RAID `device /dev/md127` is healthy based on the end of
    the log messages found in the previous chapter.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 根据前一章中日志消息的结尾，RAID`设备/dev/md127`是健康的。
- en: Checking the current RAID status
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 检查当前的RAID状态
- en: While `/var/log/messages` is a great way to see what has happened on the server,
    it doesn't necessarily mean that those log messages are accurate with regard to
    the current state of the RAID.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然`/var/log/messages`是查看服务器上发生了什么的好方法，但这并不一定意味着这些日志消息与RAID的当前状态准确无误。
- en: In order to see the current status of the RAID devices, we can run a few commands.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 为了查看RAID设备的当前状态，我们可以运行一些命令。
- en: 'The first command we will use is the `mdadm` command:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用的第一个命令是`mdadm`命令：
- en: '[PRE8]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The `mdadm` command is used to manage Linux MD based RAIDs. In the preceding
    command, we specified the flag `--detail` followed by a RAID device. This tells
    `mdadm` to print the details of the specified RAID device.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '`mdadm`命令用于管理基于Linux MD的RAID。在上述命令中，我们指定了标志`--detail`，后跟一个RAID设备。这告诉`mdadm`打印指定RAID设备的详细信息。'
- en: The `mdadm` command can perform more than just printing status; it can also
    be used to perform RAID activities such as creating, destroying, or modifying
    a RAID device.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '`mdadm`命令不仅可以打印状态，还可以用于执行RAID活动，如创建、销毁或修改RAID设备。'
- en: 'To understand the output of the `--detail` flag, let''s break down the output
    from above as follows:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 为了理解`--detail`标志的输出，让我们将上面的输出分解如下：
- en: '[PRE9]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The first section tells us quite a bit about the RAID itself. Important items
    to note are the `Creation Time`, which in this case is `Wed April 15th` at 9:39
    A.M. This tells us when the RAID was first created.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 第一部分告诉我们关于RAID本身的很多信息。需要注意的重要项目是`Creation Time`，在这种情况下是`Wed April 15th`上午9:39。这告诉我们RAID首次创建的时间。
- en: The `Raid Level` is also noted, which as we saw in `/var/log/messages` is RAID
    1\. We can also see the `Array Size`, which tells us the total available disk
    space the RAID device will provide (524 MB) and the number of `Raid Devices` used
    in this RAID array, which in this case is two devices.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '`Raid Level`也被记录下来，就像我们在`/var/log/messages`中看到的那样是RAID 1。我们还可以看到`Array Size`，告诉我们RAID设备将提供的总可用磁盘空间（524
    MB）和在这个RAID数组中使用的`Raid Devices`的数量，这种情况下是两个设备。'
- en: The number of devices that make up this RAID is important as it can help us
    understand the state of this RAID.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 组成这个RAID的设备数量很重要，因为它可以帮助我们了解这个RAID的状态。
- en: Since our RAID is made up of a total of two devices, if any one device fails,
    we know that our RAID will be at risk of a complete failure if the leftover disk
    is lost. If our RAID consisted of three devices, however, we would know that even
    the loss of two disks would not cause a complete RAID failure.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们的RAID由总共两个设备组成，如果任何一个设备失败，我们知道我们的RAID将面临完全失败的风险，如果剩下的磁盘丢失。然而，如果我们的RAID由三个设备组成，我们将知道即使丢失两个磁盘也不会导致完全的RAID失败。
- en: 'Just from the first half of the `mdadm` command, we can see quite a bit of
    information about this RAID. From the second half, we will find even more key
    information as follows:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 仅从`mdadm`命令的前半部分，我们就可以看到关于这个RAID的相当多的信息。从后半部分，我们将找到更多关键信息，如下所示：
- en: '[PRE10]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The `Update Time` is useful as it shows the last time this RAID changed status,
    whether that status change was the addition of a disk or a rebuild.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '`Update Time`很有用，因为它显示了此RAID更改状态的最后时间，无论该状态更改是添加磁盘还是重建。'
- en: This timestamp can be useful, especially if we are trying to correlate it with
    log entries in `/var/log/messages` or other system events.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 这个时间戳可能很有用，特别是如果我们试图将其与`/var/log/messages`或其他系统事件中的日志条目相关联。
- en: Another key piece of information is the `RAID Device State`, which, for our
    example, is clean, degraded. The degraded state means that while the RAID has
    a failed device, the RAID itself is still functional. Degraded simply means functional
    but suboptimal.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个重要的信息是`RAID Device State`，对于我们的例子来说，是clean, degraded。降级状态意味着RAID有一个失败的设备，但RAID本身仍然是功能性的。Degraded只是意味着功能性但不是最佳状态。
- en: If our RAID device was actively rebuilding or recovering right now, we would
    also see those statuses listed.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们的RAID设备正在进行重建或恢复，我们也会看到这些状态列出。
- en: Under the current state output, we can see four device categories that tell
    us about the hard disks used for this RAID. The first being `Active Devices`;
    this tells us the number of drives that are currently active in the RAID.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在当前状态输出下，我们可以看到四个设备类别，告诉我们关于用于此RAID的硬盘的信息。第一个是`Active Devices`；这告诉我们当前在RAID中活动的驱动器数量。
- en: The second is `Working Devices`; this tells us the number of working drives.
    Often, the number of `Working Devices` and `Active Devices` will be the same.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个是`Working Devices`；这告诉我们工作驱动器的数量。通常，`Working Devices`和`Active Devices`的数量将是相同的。
- en: The fourth item in this list is `Failed Devices`; this is the number of devices
    currently marked as failed. Even though our RAID currently has a failed device,
    this number is `0`. There is a valid reason for this, but we will cover that reason
    in a bit.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 列表中的第四项是`Failed Devices`；这是当前标记为失败的设备数量。尽管我们的RAID目前有一个失败的设备，但这个数字是`0`。有一个有效的原因，但我们稍后会解释这个原因。
- en: The last item in our list is the number of `Spare Devices`. In some RAID systems,
    you can create spare devices, which are used to rebuild a RAID in events such
    as drive failure.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 列表中的最后一项是`Spare Devices`的数量。在一些RAID系统中，您可以创建备用设备，用于在发生诸如驱动器故障之类的事件中重建RAID。
- en: These spare devices can come in handy, as the RAID system will usually automatically
    rebuild the RAID, which reduces the likelihood of complete failure of the RAID.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 这些备用设备可能会派上用场，因为RAID系统通常会自动重建RAID，从而降低RAID完全失败的可能性。
- en: 'With the final two lines of the output of `mdadm`, we can see information about
    the drives that make up the RAID:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 通过`mdadm`的输出的最后两行，我们可以看到组成RAID的驱动器的信息。
- en: '[PRE11]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: From the output, we can see that we have one disk device `/dev/sda1` that is
    currently in an active sync state. We can also see that another device has been
    removed from the RAID.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 从输出中，我们可以看到我们有一个磁盘设备`/dev/sda1`，目前处于活动同步状态。我们还可以看到另一个设备已从RAID中移除。
- en: Summarizing the key information
  id: totrans-96
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 总结关键信息
- en: From the output of `mdadm --detail`, we can see that `/dev/md127` is a RAID
    device that has a RAID level of 1 and is currently in a degraded state. We can
    see from the details that the degraded state is due to the fact that one of the
    drives that make up the RAID is currently removed.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 从`mdadm --detail`的输出中，我们可以看到`/dev/md127`是一个RAID设备，其RAID级别为1，目前处于降级状态。我们可以从详细信息中看到，降级状态是由于组成RAID的驱动器之一目前被移除。
- en: Looking at md status with /proc/mdstat
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用/proc/mdstat查看md状态
- en: 'Another useful place to look for the current status of MD is `/proc/mdstat`;
    this file, like many files in `/proc`, is constantly updated by the kernel. If
    we use the `cat` command to read this file, we can take a quick look at this server''s
    current RAID status:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个查看MD当前状态的有用位置是`/proc/mdstat`；这个文件和`/proc`中的许多文件一样，是由内核不断更新的。如果我们使用`cat`命令来读取这个文件，我们可以快速查看服务器当前的RAID状态：
- en: '[PRE12]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: The contents of `/proc/mdstat` are somewhat cryptic, but if we break them down
    it contains quite a lot of information.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '`/proc/mdstat`的内容有些晦涩，但如果我们分解它们，它包含了相当多的信息。'
- en: '[PRE13]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The first line `Personalities` tells us what RAID levels the kernel on this
    system currently supports. For our example, it is RAID 1:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 第一行的`Personalities`告诉我们这个系统上内核当前支持的RAID级别。对于我们的例子，它是RAID 1：
- en: '[PRE14]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The next set of lines is the current status of `/dev/md126`, another RAID device
    on this system that we have not yet looked at. These three lines can actually
    give us quite a bit of information about `md126`; in fact, they give us much the
    same information as `mdadm --detail` would tell us.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的几行是`/dev/md126`的当前状态，这是系统上另一个我们还没有看过的RAID设备。这三行实际上可以给我们提供关于`md126`的相当多的信息；事实上，它们给了我们和`mdadm
    --detail`几乎相同的信息。
- en: '[PRE15]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Within the first line itself, we can see the device name `md126`. We can see
    the current state of the RAID, which is active. We can also see the RAID level
    of this RAID device RAID 1\. Finally, we can also see the disk devices that make
    up this RAID; which, in our example, is only `sda2`.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一行中，我们可以看到设备名称`md126`。我们可以看到RAID的当前状态是活动的。我们还可以看到这个RAID设备的RAID级别是RAID 1。最后，我们还可以看到组成这个RAID的磁盘设备；在我们的例子中，只有`sda2`。
- en: 'The second line also contains key information as follows:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 第二行还包含以下关键信息：
- en: '[PRE16]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Specifically, the last two values are the most useful for our current task,
    `[2/1]` shows how many disk devices are allocated to this RAID and how many are
    available. From the value in the example we can see that 2 drives are expected
    but only 1 drive is available.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 具体来说，最后两个值对我们当前的任务最有用，`[2/1]`显示了分配给这个RAID的磁盘设备数量以及可用的数量。从例子中的值我们可以看到，期望有2个驱动器，但只有1个可用。
- en: The last value `[U_]` shows the current status of the drives that make up this
    RAID. The status U is for up and the "`_`" is for down.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一个值`[U_]`显示了组成这个RAID的驱动器的当前状态。状态U表示正常，"_"表示不正常。
- en: In our example we can see that one disk device is up, and the other is down.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的例子中，我们可以看到一个磁盘设备是正常的，另一个是不正常的。
- en: Given the above information, we were able to determine that the RAID device
    `/dev/md126` is currently in an active state; it is using RAID level 1 and currently
    has one of two disks unavailable.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 根据以上信息，我们能够确定RAID设备`/dev/md126`目前处于活动状态；它正在使用RAID级别1，目前有两个磁盘中的一个不可用。
- en: If we keep looking through the `/proc/mdstat` file we can see a similar status
    for `md127`.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们继续查看`/proc/mdstat`文件，我们可以看到`md127`的状态也类似。
- en: Using both /proc/mdstat and mdadm
  id: totrans-115
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用/proc/mdstat和mdadm
- en: After going through `/proc/mdstat` and `mdadm --detail` we can see that both
    provide similar information. From my experience I've found using both `mdstat`
    and `mdadm` can be useful. The `/proc/mdstat` file is generally where I go for
    a quick and easy snapshot of all RAID devices on the system, whereas the `mdadm`
    command is generally what I use for deeper RAID device details (details such as
    the number of spare drives, creation time and the last update time).
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在查看`/proc/mdstat`和`mdadm --detail`之后，我们可以看到两者提供了类似的信息。根据我的经验，我发现同时使用`mdstat`和`mdadm`是有用的。`/proc/mdstat`文件通常是我快速查看系统上所有RAID设备的快照的地方，而`mdadm`命令通常是我用来获取更深入的RAID设备详细信息的地方（例如备用驱动器的数量、创建时间和最后更新时间等细节）。
- en: Identifying a bigger issue
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 识别更大的问题
- en: Earlier while using `mdadm` to look at the current status of `md127`, we could
    see that the RAID device `md127` had a disk removed from service. While looking
    through `/proc/mdstat` we discovered that there is another RAID device `/dev/md126`,
    and that too has a disk removed from service.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 之前在使用`mdadm`查看`md127`的当前状态时，我们发现RAID设备`md127`有一个磁盘被移出服务。在查看`/proc/mdstat`时，我们发现还有另一个RAID设备`/dev/md126`，也有一个磁盘被移出服务。
- en: 'Another interesting item that we can see is that the RAID device `/dev/md126`
    is a surviving disk: `/dev/sda1`. This is interesting because the surviving disk
    for `/dev/md127` is `/dev/sda2`. If we remember from the earlier chapter `/dev/sda1`
    and `/dev/sda2` are simply 2 partitions from the same physical disk. Given the
    fact that both RAID devices have a missing drive and that our logs state that
    `/dev/md127` had `/dev/sdb1` removed and re-added. It is likely that both `/dev/md127`
    and `/dev/md126` are using partitions from `/dev/sdb`.'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以看到的另一个有趣的事实是，RAID设备`/dev/md126`是一个存活的磁盘：`/dev/sda1`。这很有趣，因为`/dev/md127`的存活磁盘是`/dev/sda2`。如果我们记得之前的章节，`/dev/sda1`和`/dev/sda2`只是来自同一物理磁盘的两个分区。考虑到两个RAID设备都有一个丢失的驱动器，而我们的日志表明`/dev/md127`曾经将`/dev/sdb1`移除并重新添加。很可能`/dev/md127`和`/dev/md126`都在使用`/dev/sdb`的分区。
- en: 'Since `/proc/mdstat` only has two statuses for RAID devices, up or down, we
    can confirm whether the second disk has actually been removed from `/dev/md126`
    using the `--detail` flag:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 由于`/proc/mdstat`对于RAID设备只有两种状态，正常或不正常，我们可以使用`--detail`标志来确认第二个磁盘是否真的已经从`/dev/md126`中移除：
- en: '[PRE17]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: From the output, we can see that the current status and configuration for `/dev/md126`
    is exactly the same as `/dev/md127`. Given this information, we can make an assumption
    that `/dev/md126` once had `/dev/sdb2` as part of its RAID.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 从输出中，我们可以看到`/dev/md126`的当前状态和配置与`/dev/md127`完全相同。根据这个信息，我们可以假设`/dev/md126`曾经将`/dev/sdb2`作为其RAID的一部分。
- en: 'Since we suspect that the problem may simply be that a single hard drive is
    having an issue, we need to validate if that is truly the case or not. The first
    step is to identify whether or not there truly is a `/dev/sdb` device; the fasted
    way to do this is to perform a directory listing in `/dev` with the `ls` command:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们怀疑问题可能只是一个硬盘出了问题，我们需要验证这是否真的是这种情况。第一步是确定是否真的存在`/dev/sdb`设备；这样做的最快方法是使用`ls`命令在`/dev`中执行目录列表：
- en: '[PRE18]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: We can see from the results of this `ls` command that there is in fact an `sdb`,
    `sdb1`, and `sdb2` device. Before going further, let's get a clearer understanding
    of `/dev`.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 从这个`ls`命令的结果中，我们可以看到实际上有一个`sdb`、`sdb1`和`sdb2`设备。在进一步之前，让我们更清楚地了解一下`/dev`。
- en: Understanding /dev
  id: totrans-126
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解/dev
- en: The `/dev` directory is a special directory where the contents are created by
    the kernel at installation time. This directory contains special files that allow
    users or applications to interact with physical and sometimes logical devices.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '`/dev`目录是一个特殊的目录，其中的内容是内核在安装时创建的。该目录包含特殊文件，允许用户或应用程序与物理设备，有时是逻辑设备进行交互。'
- en: If we look at the previous `ls` command's results, we can see that within the
    `/dev` directory there are several files that begin with `sd`.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们看一下之前`ls`命令的结果，我们可以看到在`/dev`目录中有几个以`sd`开头的文件。
- en: In the previous chapter, we learned that files that start with `sd` are actually
    seen as SCSI or SATA drives. In our case, we have both `/dev/sda` and `/dev/sdb`;
    this means, on this system, there are two physical SCSI or SATA drives.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们学到以`sd`开头的文件实际上被视为SCSI或SATA驱动器。在我们的情况下，我们有`/dev/sda`和`/dev/sdb`；这意味着在这个系统上有两个物理SCSI或SATA驱动器。
- en: The additional devices `/dev/sda1`, `/dev/sda2`, `/dev/sdb1`, and `/dev/sdb2`
    are simply partitions of those disks. In fact, with disk drives, a device name
    that ends with a numeric value is often a partition of another device, just as
    `/dev/sdb1` is a partition of `/dev/sdb`. While there are of course some exceptions
    to this rule, it is often safe to make this assumption when troubleshooting disk
    drives.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 额外的设备`/dev/sda1`、`/dev/sda2`、`/dev/sdb1`和`/dev/sdb2`只是这些磁盘的分区。实际上，对于磁盘驱动器，以数字结尾的设备名称通常是另一个设备的分区，就像`/dev/sdb1`是`/dev/sdb`的分区一样。虽然当然也有一些例外，但通常在排除磁盘驱动器故障时，做出这种假设是安全的。
- en: More than just disk drives
  id: totrans-131
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 不仅仅是磁盘驱动器
- en: The `/dev/` directory contains far more than just disk drives. If we look in
    `/dev/`, we can actually see quite a few common devices.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '`/dev/`目录中包含的不仅仅是磁盘驱动器。如果我们查看`/dev/`，我们实际上可以看到一些常见的设备。'
- en: '[PRE19]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: From the results of this `ls`, we can see that there are numerous files, directories,
    and symlinks in the `/dev` directory.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 从这个`ls`的结果中，我们可以看到`/dev`目录中有许多文件、目录和符号链接。
- en: 'The following is a list of common devices or directories that are useful to
    know and understand:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些常见的有用的设备或目录列表：
- en: '**/dev/cdrom**: This is often a symlink to the `cdrom` device. The CD-ROM''s
    actual device follows a naming convention similar to hard disks, where it starts
    with `sr` and is followed by the number of the device. We can see where the `/dev/cdrom`
    symlink points with the `ls` command:'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**/dev/cdrom**：这通常是一个指向`cdrom`设备的符号链接。CD-ROM的实际设备遵循类似硬盘的命名约定，它以`sr`开头，后面跟着设备的编号。我们可以用`ls`命令看到`/dev/cdrom`符号链接指向哪里：'
- en: '[PRE20]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '**/dev/console**: This device is not necessarily linked to a specific hardware
    device like `/dev/sda` or `/dev/sr0`. The console device is used for interacting
    with the systems console, which may or may not be an actual monitor.'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**/dev/console**：这个设备不一定与特定的硬件设备（如`/dev/sda`或`/dev/sr0`）相关联。控制台设备用于与系统控制台进行交互，这可能是实际的监视器，也可能不是。'
- en: '**/dev/cpu**: This is actually a directory that contains additional directories
    within it for each CPU on the system. Within those directories is a `cpuid` file
    used to query information about the CPU:'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**/dev/cpu**：实际上，这是一个目录，其中包含系统上每个CPU的附加目录。在这些目录中有一个`cpuid`文件，用于查询有关CPU的信息：'
- en: '[PRE21]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '**/dev/md**: This is another directory that contains symlinks with user-friendly
    names that link to actual RAID devices. If we use `ls`, we can see the available
    RAID devices on this system:'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**/dev/md**：这是另一个目录，其中包含指向实际RAID设备的用户友好名称的符号链接。如果我们使用`ls`，我们可以看到该系统上可用的RAID设备：'
- en: '[PRE22]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '**/dev/random** and **/dev/urandom**: These two devices are used for generating
    random data. The `/dev/random` and `/dev/urandom` devices will both pull random
    data from the kernel''s entropy pool. One difference between these two is that
    when the system''s entropy count is low, the `/dev/random` device will wait until
    sufficient entropy has been re-added.'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**/dev/random**和**/dev/urandom**：这两个设备用于生成随机数据。`/dev/random`和`/dev/urandom`设备都会从内核的熵池中提取随机数据。这两者之间的一个区别是，当系统的熵计数较低时，`/dev/random`设备将等待直到重新添加足够的熵。'
- en: As we learned earlier, the `/dev/` directory has quite a few useful files and
    directories. Getting back to our original issue, however, we have identified that
    `/dev/sdb` exists and there are two partitions `/dev/sdb1` and `/dev/sdb2`.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前学到的，`/dev/`目录中有一些非常有用的文件和目录。然而，回到我们最初的问题，我们已经确定`/dev/sdb`存在，并且有两个分区`/dev/sdb1`和`/dev/sdb2`。
- en: We have not, however, identified whether `/dev/sdb` was originally part of the
    two RAID devices currently in a degraded state. To do this, we can utilize the
    `dmesg` facility.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，我们还没有确定`/dev/sdb`最初是否是两个当前处于降级状态的RAID设备的一部分。为了做到这一点，我们可以利用`dmesg`设施。
- en: Device messages with dmesg
  id: totrans-146
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用dmesg查看设备消息
- en: The `dmesg` command is a great command for troubleshooting hardware issues.
    When a system initially boots, the kernel will identify the various hardware devices
    available to that system.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '`dmesg`命令是一个用于排除硬件问题的好命令。当系统初始启动时，内核将识别该系统可用的各种硬件设备。'
- en: As the kernel identifies these devices, the information is written to the kernel's
    ring buffer. This ring buffer is essentially an internal log for the kernel. The
    `dmesg` command can be used to print this ring buffer.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 当内核识别这些设备时，信息被写入内核的环形缓冲区。这个环形缓冲区本质上是内核的内部日志。`dmesg`命令可以用来打印这个环形缓冲区。
- en: 'The following is an example output from the `dmesg` command; in this example,
    we will use the `head` command to shorten the output to only the first 15 lines:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是`dmesg`命令的一个示例输出；在这个示例中，我们将使用`head`命令将输出缩短到只有前15行：
- en: '[PRE23]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'The reason we limited the output to just 15 lines is because the `dmesg` command
    will output quite a bit of data. To put it in perspective, we can run the command
    again, but this time send the output to `wc -l`, which will count the number of
    lines printed:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将输出限制为只有15行，是因为`dmesg`命令会输出大量的数据。换个角度来看，我们可以再次运行命令，但这次将输出发送到`wc -l`，它将计算打印的行数：
- en: '[PRE24]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: As we can see, the `dmesg` command returns `597` lines. Reading all the 597
    lines of the kernel's ring buffer is not a quick process.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所看到的，`dmesg`命令返回了`597`行。阅读内核环形缓冲区的所有597行并不是一个快速的过程。
- en: 'Since our goal was to find out information about `/dev/sdb`, we can run the
    `dmesg` command again, this time using the `grep` command to filter the output
    to `/dev/sdb` related information:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们的目标是找出关于`/dev/sdb`的信息，我们可以再次运行`dmesg`命令，这次使用`grep`命令来过滤输出到`/dev/sdb`相关的信息：
- en: '[PRE25]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: When executing the preceding example, the `–C` (context) flag was used to tell
    `grep` to include five lines of context to the output. Generally, when `grep`
    is run with no flags, only lines that contain the search string ( "`sdb`" , in
    this case) are printed. With the context flag set to five, the `grep` command
    will print 5 lines before and 5 lines after each line that contains the search
    string.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 在执行前面的示例时，使用了`-C`（上下文）标志来告诉`grep`将五行上下文包含在输出中。通常情况下，当`grep`不带标志运行时，只会打印包含搜索字符串（本例中为"`sdb`"）的行。将上下文标志设置为五，`grep`命令将打印包含搜索字符串的每一行之前和之后的5行。
- en: This use of `grep` allows us to see not only the lines that include the string
    `sdb`, but also the lines before and after, which may contain additional information.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 这种使用`grep`的方法使我们不仅能看到包含字符串`sdb`的行，还能看到之前和之后的行，这些行可能包含额外的信息。
- en: 'Now that we have this additional information, let''s break it down to understand
    what it is telling us better:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了这些额外的信息，让我们来分解一下，以更好地理解它告诉我们的内容：
- en: '[PRE26]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: The preceding information seems to be standard information about `/dev/sdb`.
    We can see some basic information about `/dev/sda` and `/dev/sdb` from these messages.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的信息似乎是关于`/dev/sdb`的标准信息。我们可以从这些消息中看到关于`/dev/sda`和`/dev/sdb`的一些基本信息。
- en: 'One useful thing we can see from the preceding information is the size of these
    drives:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的信息中我们可以看到一个有用的东西是这些驱动器的大小：
- en: '[PRE27]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'We can see that each drive is `8.58` GB in size. While the information is useful
    in general, it is not useful for our current situation. What is useful, however,
    is the last four lines from the preceding code snippet:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到每个驱动器的大小为`8.58`GB。虽然这些信息一般来说是有用的，但对于我们目前的情况并不适用。然而，有用的是前面代码片段的最后四行：
- en: '[PRE28]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: These last four lines are showing the available partitions on both `/dev/sda`
    and `/dev/sdb` as well as a message stating that each disk has been `Attached`.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 这最后的四行显示了`/dev/sda`和`/dev/sdb`上的可用分区，以及一条消息说明每个磁盘都已经`Attached`。
- en: This information is quite useful as it tells us at the most basic level that
    these two drives are working. This is something that is in question for `/dev/sdb`,
    since we suspect that the RAID system has removed it from service.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 这些信息非常有用，因为它在最基本的层面上告诉我们这两个驱动器正在工作。这对于`/dev/sdb`来说是一个问题，因为我们怀疑RAID系统已经将其移出了服务。
- en: So far, the `dmesg` command has already given us a bit of useful information;
    let's keep looking through the data to better understand these disks.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，`dmesg`命令已经给了我们一些有用的信息；让我们继续查看数据，以更好地理解这些磁盘。
- en: '[PRE29]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: The preceding three lines would be useful if we troubleshoot an issue with our
    CD-ROM device. However, for our disk issue, they are not useful and are only included
    due to grep's context being set to 5.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的三行在我们排除CD-ROM设备问题时可能有用。然而，对于我们的磁盘问题，它们并不有用，只是因为`grep`的上下文设置为5而包含在内。
- en: 'The following lines, however, will tell us quite a bit about our disk drives:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，以下的行将会告诉我们关于我们的磁盘驱动器的很多信息：
- en: '[PRE30]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'The last section of dmesg''s output tells us quite a bit about the RAID devices
    and `/dev/sdb`. Since there is quite a bit of data, we will need to break this
    down to really understand it all:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: dmesg输出的最后一部分告诉了我们关于RAID设备和`/dev/sdb`的很多信息。由于数据量很大，我们需要将其分解以真正理解其中的内容：
- en: '[PRE31]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '[PRE32]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '[PRE33]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'The preceding messages look very similar to the messages from `/dev/md127`;
    however, there are a few lines that were not present in the messages at `/dev/md127`:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的消息看起来与`/dev/md127`的消息非常相似；然而，有几行消息在`/dev/md127`的消息中没有出现：
- en: '[PRE34]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: If we look at these messages, we can see that `/dev/md126` attempted to use
    `/dev/sdb2` in the RAID array; however, it found the drive to be non-fresh. The
    non-fresh message is interesting as it might explain why `/dev/sdb` is not being
    included into the RAID devices.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们看这些消息，我们可以看到`/dev/md126`尝试在RAID阵列中使用`/dev/sdb2`；然而，它发现该驱动器不是新的。非新的消息很有趣，因为它可能解释了为什么`/dev/sdb`没有被包含到RAID设备中。
- en: Summarizing what dmesg has provided
  id: totrans-179
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结dmesg提供的信息
- en: In a RAID set, each disk maintains an event count for every write request. The
    RAID uses this event count to ensure that each disk has received the appropriate
    amount of write requests. This allows the RAID to validate the consistency of
    the entire RAID.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 在RAID集中，每个磁盘都维护每个写请求的事件计数。RAID使用这个事件计数来确保每个磁盘接收了适当数量的写请求。这使得RAID能够验证整个RAID的一致性。
- en: When a RAID is restarting, the RAID manager will check the event count of each
    disk and ensure that they are consistent.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 当RAID重新启动时，RAID管理器将检查每个磁盘的事件计数，并确保它们是一致的。
- en: From the preceding messages, it appears that `/dev/sda2` may have a higher event
    count than `/dev/sdb2`. This would indicate that some writes occurred on `/dev/sda1`
    that never occurred on `/dev/sdb2`. This would be abnormal for a mirrored array
    and would indicate an issue with `/dev/sdb2`.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的消息中，看起来`/dev/sda2`的事件计数可能比`/dev/sdb2`高。这表明`/dev/sda1`上发生了一些写操作，而`/dev/sdb2`上从未发生过。这对于镜像阵列来说是异常的，也表明了`/dev/sdb2`存在问题。
- en: How do we check whether the event counts are different? With the `mdadm` command,
    we can display the event count for each disk device.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 当设备名称发生变化时，我们如何检查事件计数是否不同？使用`mdadm`命令，我们可以显示每个磁盘设备的事件计数。
- en: Using mdadm to examine the superblock
  id: totrans-184
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用mdadm来检查超级块
- en: 'To view the event count, we will use the `mdadm` command with the `--examine`
    flag to examine the disk devices:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 为了查看事件计数，我们将使用`mdadm`命令和`--examine`标志来检查磁盘设备：
- en: '[PRE35]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: The `--examine` flag is very similar to `--detail` except where `--detail` is
    used to print the RAID device details. `--examine` is used to print RAID details
    from the individual disks that make up the RAID. The details that `--examine`
    prints are actually from the superblock details on the disk.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '`--examine`标志与`--detail`非常相似，不同之处在于`--detail`用于打印RAID设备的详细信息。`--examine`用于打印组成RAID的单个磁盘的RAID详细信息。`--examine`打印的详细信息实际上来自磁盘上的超级块详细信息。'
- en: When the Linux RAID is utilizing a disk as part of a RAID device, the RAID system
    will reserve some space on the disk for a **superblock**. This superblock is simply
    used to store metadata about the disk and the RAID.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 当Linux RAID利用磁盘作为RAID设备的一部分时，RAID系统会在磁盘上保留一些空间用于**超级块**。这个超级块简单地用于存储关于磁盘和RAID的元数据。
- en: 'In the preceding command, we simply printed the RAID superblock information
    from `/dev/sda1`. To get a better understanding of the RAID superblock, let''s
    take a look at the details the `--examine` flag provides:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的命令中，我们只是打印了`/dev/sda1`的RAID超级块信息。为了更好地理解RAID超级块，让我们看一下`--examine`标志提供的详细信息：
- en: '[PRE36]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: The first section of this output provides quite a bit of useful information.
    The magic number, for instance, is used as a superblock header. This is a value
    that is used to indicate the beginning of the superblock.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 这个输出的第一部分提供了相当多有用的信息。例如，魔术数字被用作超级块头。这是一个用来指示超级块开始的值。
- en: 'Another useful piece of information is the `Array UUID`. This is a unique identifier
    for the RAID that this disk belongs to. If we print the details of RAID `md127`,
    we can see that the Array UUID from `/dev/sda1` and the UUID from `md127` match:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个有用的信息是`Array UUID`。这是这个磁盘所属的RAID的唯一标识符。如果我们打印`md127`的RAID的详细信息，我们可以看到`/dev/sda1`的Array
    UUID和`md127`的UUID是匹配的：
- en: '[PRE37]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: This can be useful when a device name has changed and you need to identify the
    disks that belong to a specific RAID. An example of this would be if someone accidently
    put drives into the wrong slot during hardware maintenance. If the drives still
    contain the UUID, it is possible to identify the RAID the misplaced drives belong
    to.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 当Linux RAID利用磁盘作为RAID设备的一部分时，RAID系统会在磁盘上保留一些空间用于**超级块**。这个超级块简单地用于存储关于磁盘和RAID的元数据。
- en: The bottom three lines `Creation Time`, `RAID Level`, and `RAID Devices` are
    also very useful when used with the output of `--detail`.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 底部的三行`Creation Time`、`RAID Level`和`RAID Devices`在与`--detail`输出一起使用时也非常有用。
- en: 'This second snippet of information is useful for determining information about
    the disk device:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 这第二段信息对于确定磁盘设备的信息非常有用：
- en: '[PRE38]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: '[PRE39]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: '[PRE40]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'The next section of information from the `--examine` output is very useful
    for our issue:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '`--examine`输出的下一部分信息对我们的问题非常有用：'
- en: '[PRE41]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: In this section, we can see the `Events` information, which is showing the current
    event count value on this disk. We can also see the `Array State` value of `/dev/sda1`.
    The value of `A`. indicates that from the perspective of `/dev/sda1`, its mirrored
    partner is missing.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分中，我们可以看到`Events`信息，显示了这个磁盘上的当前事件计数值。我们还可以看到`/dev/sda1`的`Array State`值。`A`的值表示从`/dev/sda1`的角度来看，它的镜像伙伴丢失了。
- en: 'As we examine the details of the superblock under `/dev/sdb1`, we will see
    an interesting difference in the `Array State` and `Events` values:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们检查`/dev/sdb1`下超级块的详细信息时，我们会看到`Array State`和`Events`值的一个有趣的差异：
- en: '[PRE42]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: From the results, we have answered quite a few questions about `/dev/sdb1`.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 从结果来看，我们已经回答了关于`/dev/sdb1`的很多问题。
- en: The first question that we had is whether /`dev/sdb1` was part of a RAID or
    not. From the fact that this device has a RAID superblock and that information
    is printable via `mdadm`, we can safely say `yes`.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 我们最初的问题是`/dev/sdb1`是否是RAID的一部分。从这个设备具有RAID超级块并且可以通过`mdadm`打印信息的事实来看，我们可以肯定是。
- en: '[PRE43]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'By looking at the `Array UUID`, we can also determine whether this device was
    a part of `/dev/md127`, as we suspected:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 通过查看`Array UUID`，我们还可以确定这个设备是否是`/dev/md127`的一部分，正如我们所怀疑的那样：
- en: '[PRE44]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: As it appears, `/dev/sdb1` was at some point part of `/dev/md127`.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来`/dev/sdb1`在某个时候是`/dev/md127`的一部分。
- en: 'The final question we need to answer is whether or not the `Events` values
    differ between `/dev/sda1` and `/dev/sdb1`. From the `--examine` information from
    `/dev/sda1`, we can see the event count is set to 60\. In the preceding code,
    `--examine` results from `/dev/sdb1`; we can see that the event count is much
    lower—`48`:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要回答的最后一个问题是`/dev/sda1`和`/dev/sdb1`之间的`Events`值是否不同。从`/dev/sda1`的`--examine`信息中，我们可以看到事件计数设置为60。在前面的代码中，从`/dev/sdb1`的`--examine`结果中，我们可以看到事件计数要低得多——48：
- en: '[PRE45]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: Given the difference, we can safely say that `/dev/sdb1` is 12 events behind
    `/dev/sda1`. This is a very significant difference and a sensible reason for MD
    to reject adding `/dev/sdb1` to the RAID array.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 鉴于这种差异，我们可以确定`/dev/sdb1`比`/dev/sda1`落后12个事件。这是一个非常重要的差异，也是MD拒绝将`/dev/sdb1`添加到RAID数组的一个合理原因。
- en: 'As an interesting side note, if we look at the `Array State` of `/dev/sdb1`,
    we can see that it still believes that it is an active disk in the `/dev/md127`
    array:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的是，如果我们查看`/dev/sdb1`的`Array State`，我们可以看到它仍然认为自己是`/dev/md127`数组中的一个活动磁盘：
- en: '[PRE46]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'This is due to the fact that since the device is no longer part of the RAID,
    it is not being updated with the current status. We can see this in the update
    time as well:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 这是因为由于设备不再是RAID的一部分，它不会被更新为当前状态。我们也可以从更新时间中看到这一点：
- en: '[PRE47]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: The `Update Time` for `/dev/sda1` is much more recent; thus, it should be trusted
    above the disk `/dev/sdb1`.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: '`/dev/sda1`的“更新时间”要新得多；因此，应该比磁盘`/dev/sdb1`更可信。'
- en: Checking /dev/sdb2
  id: totrans-219
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 检查`/dev/sdb2`
- en: Now that we know the reasons behind `/dev/sdb1` not being added to `/dev/md127`,
    we should determine whether the same situation is true for `/dev/sdb2` and `/dev/md126`.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道了`/dev/sdb1`未被添加到`/dev/md127`的原因，我们应该确定是否对`/dev/sdb2`和`/dev/md126`也是如此。
- en: 'Since we already know that `/dev/sda2` is healthy and part of the `/dev/md126`
    array, we will focus solely on capturing its `Events` value:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们已经知道`/dev/sda2`是健康的并且是`/dev/md126`数组的一部分，我们将专注于捕获其“事件”值：
- en: '[PRE48]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: The event count of `/dev/sda2` is quite high in comparison to `/dev/sda1`. From
    this, we can determine that `/dev/md126` is probably a very active RAID device.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 与`/dev/sda1`相比，`/dev/sda2`的事件计数相当高。从中我们可以确定`/dev/md126`可能是一个非常活跃的RAID设备。
- en: 'Now that we have the event count, let''s take a look at the details of /`dev/sdb2`:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道了事件计数，让我们来看看`/dev/sdb2`的详细信息：
- en: '[PRE49]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Again, from the fact that we were able to print superblock information from
    `/dev/sdb2`, we have determined that this device is in fact part of a RAID:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，从我们能够从`/dev/sdb2`打印超级块信息的事实中，我们已经确定这个设备实际上是RAID的一部分：
- en: '[PRE50]'
  id: totrans-227
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'If we compare the `Array UUID` of `/dev/sdb2` with the `UUID` of `/dev/md126`,
    we will also see that it was in fact part of that RAID array:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们将`/dev/sdb2`的“数组UUID”与`/dev/md126`的“UUID”进行比较，我们还将看到它实际上是该RAID数组的一部分：
- en: '[PRE51]'
  id: totrans-229
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'This answers our question as to whether `/dev/sdb2` was part of the `md126`
    RAID. If we look at the event count of `/dev/sdb2`, we can also answer the question
    as to why it is not currently part of that RAID:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 这回答了我们关于`/dev/sdb2`是否是`md126` RAID的一部分的问题。如果我们查看`/dev/sdb2`的事件计数，我们也可以回答为什么它目前不是该RAID的一部分的问题：
- en: '[PRE52]'
  id: totrans-231
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: It appears that this device has missed write events that were sent to the `md126`
    RAID, given that the `Events` count from `/dev/sda2` was 7517 and the `Events`
    count from `/dev/sdb2` is 541.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来这个设备错过了发送到`md126` RAID的写事件，因为`/dev/sda2`的“事件”计数为7517，而`/dev/sdb2`的“事件”计数为541。
- en: What we have learned so far
  id: totrans-233
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 到目前为止我们学到的内容
- en: 'From the troubleshooting steps that we have taken so far, we have collected
    quite a few key pieces of data. Let''s walk through what we have learned and what
    we can infer from these findings:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经采取了一些故障排除步骤，收集了一些关键数据。让我们走一遍我们学到的东西，以及我们可以从这些发现中推断出什么：
- en: On our system, we have two RAID devices.
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在我们的系统上，我们有两个RAID设备。
- en: Using the `mdadm` command and the contents of `/proc/mdstat`, we were able to
    determine that this system has two RAID devices`—/dev/md126` and `/dev/md127`.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`mdadm`命令和`/proc/mdstat`的内容，我们能够确定该系统有两个RAID设备—`/dev/md126`和`/dev/md127`。
- en: Both RAID devices are a RAID 1 and missing a mirrored device.
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 两个RAID设备都是RAID 1，缺少一个镜像设备。
- en: With the `mdadm` command and output of `dmesg`, we were able to identify that
    both RAID devices are set up as a RAID 1 device. On top of that, we were also
    able to see that both RAID devices were missing a disk; both the missing devices
    were partitions from the `/dev/sdb` hard disk.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 通过`mdadm`命令和`dmesg`输出，我们能够确定两个RAID设备都设置为RAID 1设备。此外，我们还能够看到两个RAID设备都缺少一个磁盘；缺少的设备都是来自`/dev/sdb`硬盘的分区。
- en: Both `/dev/sdb1` and `/dev/sdb2` have mismatched event counts.
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/dev/sdb1`和`/dev/sdb2`的事件计数不匹配。'
- en: With the `mdadm` command, we were able to inspect the `superblock` details of
    the `/dev/sdb1` and `/dev/sdb2` devices. During this, we were able to see that
    the event counts for those devices are not matching the active partitions on `/dev/sda`.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 通过`mdadm`命令，我们能够检查`/dev/sdb1`和`/dev/sdb2`设备的“superblock”详细信息。在此期间，我们能够看到这些设备的事件计数与`/dev/sda`上的活动分区不匹配。
- en: For this reason, the RAID will not re-add the `/dev/sdb` devices to their respective
    RAID arrays.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，RAID不会将`/dev/sdb`设备重新添加到它们各自的RAID数组中。
- en: The disk `/dev/sdb` seems to be functional.
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 磁盘`/dev/sdb`似乎是正常的。
- en: While the RAID hasn't added `/dev/sdb1` or `/dev/sdb2` to their respective RAID
    arrays, it does not mean that the device `/dev/sdb` is faulty.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然RAID没有将`/dev/sdb1`或`/dev/sdb2`添加到各自的RAID数组中，但这并不意味着设备`/dev/sdb`有故障。
- en: From the messages in `dmesg`, we did not see any errors for the `/dev/sdb` device
    itself. We also were able to use `mdadm` to inspect the partitions on those drives.
    From everything we have done so far, these drives appear to be functional.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 从`dmesg`中的消息中，我们没有看到`/dev/sdb`设备本身的任何错误。我们还能够使用`mdadm`来检查这些驱动器上的分区。从到目前为止我们所做的一切来看，这些驱动器似乎是正常的。
- en: Re-adding the drives to the arrays
  id: totrans-245
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 重新将驱动器添加到数组
- en: The `/dev/sdb` disk seems to be functional and, outside the event count difference,
    we cannot see any reason the RAID would reject the devices. Our next step will
    be an attempt to re-add the removed devices to their RAID arrays.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: '`/dev/sdb`磁盘似乎是正常的，除了事件计数的差异外，我们看不到RAID拒绝设备的任何原因。我们的下一步将是尝试将已移除的设备重新添加到它们的RAID数组中。'
- en: 'The first RAID we will attempt this with is `/dev/md127`:'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先尝试这样做的第一个RAID是`/dev/md127`：
- en: '[PRE53]'
  id: totrans-248
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: The simplest way to re-add the drive is to simply use the `-a` (add) flag with
    `mdadm`.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 重新添加驱动器的最简单方法就是简单地使用`mdadm`的`-a`（添加）标志。
- en: '[PRE54]'
  id: totrans-250
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: The preceding command will tell `mdadm` to add the device `/dev/sdb1` to the
    RAID device `/dev/md127`. Since `/dev/sdb1` was already part of the RAID array,
    the MD service simply re-adds the disk and re-syncs the missing events from `/dev/sda1`.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令将告诉`mdadm`将设备`/dev/sdb1`添加到RAID设备`/dev/md127`中。由于`/dev/sdb1`已经是RAID数组的一部分，MD服务只是重新添加磁盘并同步来自`/dev/sda1`的丢失事件。
- en: 'We can see this in action if we look at the RAID details with the `--detail`
    flag:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们使用`--detail`标志查看RAID的详细信息，我们就可以看到这一点：
- en: '[PRE55]'
  id: totrans-253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'From the preceding output, we can see a few differences from the earlier examples.
    One very important difference is the `Rebuild Status`:'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的输出中，我们可以看到与之前示例的一些不同之处。一个非常重要的区别是`重建状态`：
- en: '[PRE56]'
  id: totrans-255
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: With `mdadm --detail`, we can see the completion status of the drives re-syncing.
    If there were any errors in this process, we will also be able to see this. If
    we look at the bottom three lines, we can also see which devices are active and
    which are being rebuilt.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 通过`mdadm --detail`，我们可以看到驱动器重新同步的完成状态。如果在此过程中有任何错误，我们也将能够看到。如果我们看底部的三行，我们还可以看到哪些设备是活动的，哪些正在重建。
- en: '[PRE57]'
  id: totrans-257
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'After a few seconds, if we run `mdadm --detail` again, we should see that the
    RAID device has re-synced:'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 几秒钟后，如果我们再次运行`mdadm --detail`，我们应该看到RAID设备已经重新同步：
- en: '[PRE58]'
  id: totrans-259
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: Now we can see that both drives are listed as `active sync` state and that the
    RAID `State` is simply `clean`.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以看到两个驱动器都列为`active sync`状态，而RAID的`State`只是`clean`。
- en: The preceding output is what a functional RAID 1 device should look like. At
    this point, we can consider the issue with `/dev/md127` resolved.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 上述输出是一个正常的RAID 1设备应该看起来的样子。在这一点上，我们可以认为`/dev/md127`的问题已经解决。
- en: Adding a new disk device
  id: totrans-262
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加新的磁盘设备
- en: Sometimes you will find yourself in a situation where your disk drive was actually
    faulty and the actual physical hardware must be replaced. In situations like this,
    once the partitions `/dev/sdb1` and `/dev/sdb2` are recreated, the device can
    simply be added to the RAID using the same steps as we used earlier.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 有时你会发现自己处于一个情况，你的磁盘驱动实际上是有故障的，实际的物理硬件必须被替换。在这种情况下，一旦重新创建分区`/dev/sdb1`和`/dev/sdb2`，设备可以简单地使用与之前相同的步骤添加到RAID中。
- en: When the command `mdadm <raid device> -a <disk device>` is executed, `mdadm`
    first checks to see whether the disk device was ever once part of the RAID.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 当执行命令`mdadm <raid device> -a <disk device>`时，`mdadm`首先检查磁盘设备是否曾经是RAID的一部分。
- en: It does this by reading the superblock information on the disk device. If the
    device was previously part of the RAID, it simply re-adds it and starts a rebuild
    to re-sync the drives.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 它通过读取磁盘设备上的超级块信息来执行此操作。如果设备以前曾是RAID的一部分，它会简单地重新添加并开始重建以重新同步驱动器。
- en: If the disk device was never part of the RAID, it will be added as a spare device,
    and if the RAID is degraded, the spare device will be used to get the RAID back
    into a clean state.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 如果磁盘设备以前从未参与过RAID，它将被添加为备用设备，如果RAID处于降级状态，备用设备将被用来使RAID恢复到干净状态。
- en: When disks are not added cleanly
  id: totrans-267
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 当磁盘没有被清洁添加时
- en: In a previous work environment, when we replaced hard drives the drives were
    always quality tested before being used to replace faulty drives in production
    environments. Often, this quality testing involved creating partitions and adding
    those partitions to an existing RAID.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 在以前的工作环境中，当我们更换硬盘时，硬盘总是在用于替换生产环境中故障硬盘之前进行质量测试。通常，这种质量测试涉及创建分区并将这些分区添加到现有的RAID中。
- en: 'Because those devices already had a RAID superblock on them, `mdadm` would
    reject the addition of the devices to the RAID. It is possible to clear an existing
    RAID `superblock` using the `mdadm` command:'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 因为这些设备已经在它们上面有一个RAID超级块，`mdadm`会拒绝将这些设备添加到RAID中。可以使用`mdadm`命令清除现有的RAID`超级块`：
- en: '[PRE59]'
  id: totrans-270
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'The preceding command will tell `mdadm` to remove the RAID `superblock` information
    from the specified disk—in this case, `/dev/sdb2`:'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令将告诉`mdadm`从指定的磁盘中删除RAID`超级块`信息—在本例中是`/dev/sdb2`：
- en: '[PRE60]'
  id: totrans-272
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: Using `--examine`, we can see that there is now no superblock on the device
    that had one before.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`--examine`，我们可以看到现在设备上没有超级块。
- en: The `--zero-superblock` flag should be used with caution and only when the device
    data is no longer required. Once this superblock information is removed, the RAID
    sees this disk as a blank disk, and during any re-sync process, the existing data
    will be overwritten.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: '`--zero-superblock`标志应谨慎使用，只有当设备数据不再需要时才使用。一旦删除了这些超级块信息，RAID将把这个磁盘视为空白磁盘，在任何重新同步过程中，现有数据将被覆盖。'
- en: 'Once the superblock is removed, the same steps can be performed to add it to
    a RAID array:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦超级块被移除，同样的步骤可以执行以将其添加到RAID阵列中：
- en: '[PRE61]'
  id: totrans-276
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: Another way to watch the rebuild status
  id: totrans-277
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 观察重建状态的另一种方法
- en: 'Earlier we used `mdadm --detail` to show the rebuild status of `md127`. Another
    way to see this information is via `/proc/mdstat`:'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 之前我们使用`mdadm --detail`来显示`md127`的重建状态。另一种查看这些信息的方法是通过`/proc/mdstat`：
- en: '[PRE62]'
  id: totrans-279
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: 'After a bit, the RAID will finish re-syncing; now, both the RAID arrays are
    in a healthy status:'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 过一会儿，RAID将完成重新同步；现在，两个RAID阵列都处于健康状态：
- en: '[PRE63]'
  id: totrans-281
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: Summary
  id: totrans-282
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In the previous chapter, [Chapter 7](part0044_split_000.html#19UOO2-8ae10833f0c4428b9e1482c7fee089b4
    "Chapter 7. Filesystem Errors and Recovery"), *FileSystem Errors and Recovery*
    we noticed a simple RAID failure message in our `/var/log/messages` log file.
    In this chapter, we used a `Data Collector` approach to investigate the cause
    of that failure message.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 在前一章中，[第7章](part0044_split_000.html#19UOO2-8ae10833f0c4428b9e1482c7fee089b4
    "第7章。文件系统错误和恢复")，*文件系统错误和恢复*，我们注意到在`/var/log/messages`日志文件中出现了一个简单的RAID故障消息。在本章中，我们使用了`数据收集器`方法来调查故障消息的原因。
- en: After investigating with the RAID management command `mdadm`, we found several
    RAID devices in a degraded state. Using `dmesg`, we were able to determine which
    hard drive devices were affected and that the disks at some point were removed
    from service. We also found that the disk **event counts** were mismatched, preventing
    the disks from being re-added automatically.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用RAID管理命令`mdadm`进行调查后，我们发现了几个处于降级状态的RAID设备。使用`dmesg`，我们能够确定哪些硬盘设备受到影响，以及这些硬盘在某个时候被移出了服务。我们还发现硬盘的**事件计数**不匹配，阻止了硬盘的自动重新添加。
- en: We verified that the devices were not physically faulty with `dmesg` and choose
    to re-add them to the RAID array.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过`dmesg`验证了设备没有物理故障，并选择将它们重新添加到RAID阵列中。
- en: While this chapter focused heavily on RAID and disk failures, both `/var/log/messages`
    and `dmesg` can be used to troubleshoot other device failures. For devices other
    than hard disks, however, the solution is often a simple replacement. Of course,
    like most things, this depends on the type of failure experienced.
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 本章重点介绍了RAID和磁盘故障，但`/var/log/messages`和`dmesg`都可以用于排除其他设备故障。然而，对于除硬盘以外的设备，解决方案通常是简单的更换。当然，像大多数事情一样，这取决于所经历的故障类型。
- en: In the next chapter, we will show how to troubleshoot custom user applications
    and the use of system tools to perform some advanced troubleshooting.
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将展示如何排除自定义用户应用程序的故障，并使用系统工具进行一些高级故障排除。
