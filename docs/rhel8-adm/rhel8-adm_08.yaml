- en: '*Chapter 7*: Adding, Patching, and Managing Software'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第7章*：添加、打补丁和管理软件'
- en: Maintaining a system's software, to close security issues, apply fixes, and
    keep the system up to date is an essential task in systems management. In this
    chapter, we will review how the **Red Hat Subscription Management system** works,
    how to ensure that packages are verified, and other software management tasks
    to keep the system fresh.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 维护系统的软件，关闭安全问题，应用修复程序并保持系统最新是系统管理中的重要任务。在本章中，我们将回顾**Red Hat订阅管理系统**的工作原理，如何确保软件包经过验证，以及保持系统更新的其他软件管理任务。
- en: Going a bit more into the details, in this chapter, we will go over how the
    subscription system works and how to use your developer subscription for self-training
    or installing a personal server. We will also check how to manage the software
    origins, also known as repositories, that your system will use. That includes
    learning the role of signatures in package management, to ensure the software
    installed is the one Red Hat provides. We will also learn about key tasks such
    as adding and removing packages and package groups, using different software versions
    with modularity, and reviewing and rolling back changes.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 深入了解一些细节，在本章中，我们将介绍订阅系统的工作原理以及如何使用开发者订阅进行自我培训或安装个人服务器。我们还将检查如何管理软件来源，也称为仓库，您的系统将使用它们。这包括学习软件包管理中签名的作用，以确保安装的软件是Red
    Hat提供的软件。我们还将学习添加和删除软件包和软件包组，使用模块化的不同软件版本，以及审查和回滚更改等关键任务。
- en: To simplify expanding your knowledge, enabling you to prepare your own labs,
    we will see how to have a full local copy of all the **Red Hat Enterprise Linux
    (RHEL)** repositories in your system.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 为了简化扩展您的知识，使您能够准备自己的实验室，我们将看到如何在您的系统中拥有所有**Red Hat企业Linux（RHEL）**仓库的完整本地副本。
- en: And last but not the least, we need to understand **Red Hat Package Manager**
    (**RPM**), now changed to RPM Package Manager, by learning the basics of how the
    internals of package management work.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 最后但同样重要的是，我们需要了解**Red Hat软件包管理器**（**RPM**），现在更名为RPM软件包管理器，通过学习软件包管理内部工作的基础知识。
- en: 'In summary, we will cover the following topics in this chapter:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，在本章中，我们将涵盖以下主题：
- en: RHEL subscription registration and management
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RHEL订阅注册和管理
- en: Managing repositories and signatures with Yum/DNF
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Yum/DNF管理仓库和签名
- en: Doing software installations, updates, and rollbacks with Yum/DNF
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Yum/DNF进行软件安装、更新和回滚
- en: Creating and syncing repositories with createrepo and reposync
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用createrepo和reposync创建和同步仓库
- en: Understanding RPM internals
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解RPM内部
- en: Now, let's start managing the software in our systems.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们开始管理我们系统中的软件。
- en: RHEL subscription registration and management
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: RHEL订阅注册和管理
- en: RHEL is a fully **open source operating system**, which means that all the source
    code used to build it is available to access, modify, redistribute and learn from.
    Pre-built binaries are, on the other hand, delivered as a service, and accessible
    via a subscription. As seen in [*Chapter 1*](B16799_01_Final_SK_ePub.xhtml#_idTextAnchor014),
    *Installing RHEL8*, we can have, for our own personal use, a developer subscription.
    That subscription provides access to ISO images, but also to the updated, signed
    packages that are part of RHEL 8\. These are the exact same bits that are used
    in production by so many companies worldwide.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: RHEL是一个完全的**开源操作系统**，这意味着用于构建它的所有源代码都可以访问、修改、重新分发和学习。另一方面，预构建的二进制文件是作为服务交付的，并通过订阅可访问。正如在[*第1章*](B16799_01_Final_SK_ePub.xhtml#_idTextAnchor014)中所见，*安装RHEL8*，我们可以为自己的个人使用获得开发者订阅。该订阅提供对ISO映像的访问，还提供了RHEL
    8的更新、签名软件包。这些软件包与全球许多公司在生产中使用的完全相同。
- en: Let's see how to use that subscription with our own system.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何在我们自己的系统中使用该订阅。
- en: 'First, let''s take a look at the **Red Hat Customer Portal** at [https://access.redhat.com](https://access.redhat.com)
    and click **LOG IN**:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们来看看**Red Hat客户门户**[https://access.redhat.com](https://access.redhat.com)，然后点击**登录**：
- en: '![Figure 7.1 – Log into the Red Hat Customer Portal'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.1–登录到Red Hat客户门户'
- en: '](img/B16799_07_001.jpg)'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_07_001.jpg)'
- en: Figure 7.1 – Log into the Red Hat Customer Portal
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.1–登录到Red Hat客户门户
- en: 'Once we click on `student` as an example:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们点击`student`作为示例：
- en: '![Figure 7.2 – Entering our username in Red Hat Single Sign-On'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.2–在Red Hat单一登录中输入我们的用户名'
- en: '](img/B16799_07_002.jpg)'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_07_002.jpg)'
- en: Figure 7.2 – Entering our username in Red Hat Single Sign-On
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.2–在Red Hat单一登录中输入我们的用户名
- en: 'Now it''s time to type our password to validate:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候输入我们的密码进行验证了：
- en: '![Figure 7.3 – Entering our password in Red Hat Single Sign-On'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.3–在Red Hat单一登录中输入我们的密码'
- en: '](img/B16799_07_003.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_07_003.jpg)'
- en: Figure 7.3 – Entering our password in Red Hat Single Sign-On
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.3–在Red Hat单一登录中输入我们的密码
- en: 'Once logged in, we shall go to the **Red Hat subscriptions page** by clicking
    on the **SUBSCRIPTIONS** link in the top bar:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 登录后，我们将通过点击顶部栏中的**订阅**链接转到**Red Hat订阅页面**：
- en: '![Figure 7.4 – Accessing the subscriptions page in the Red Hat Customer Portal'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.4–在Red Hat客户门户中访问订阅页面'
- en: '](img/B16799_07_004.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_07_004.jpg)'
- en: Figure 7.4 – Accessing the subscriptions page in the Red Hat Customer Portal
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.4–在Red Hat客户门户中访问订阅页面
- en: 'The subscriptions page will look like this for a user with one physical machine
    subscribed:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 对于已订阅一个物理机的用户，订阅页面将如下所示：
- en: '![Figure 7.5 – Subscription page example in the Red Hat Customer Portal'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.5–Red Hat客户门户中的订阅页面示例'
- en: '](img/B16799_07_005.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_07_005.jpg)'
- en: Figure 7.5 – Subscription page example in the Red Hat Customer Portal
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.5–Red Hat客户门户中的订阅页面示例
- en: Tip
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: The Developer Subscription was updated in January 2021 to support up to 16 systems.
    You can use your account for more than one single system to simulate larger production-like
    deployments.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 开发者订阅于2021年1月更新，支持最多16个系统。您可以使用您的帐户为一个以上的单个系统模拟类似生产的部署。
- en: 'Now let''s register our new system:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们注册我们的新系统：
- en: '[PRE0]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: With this, our system will be registered in the Red Hat **Content Delivery Network**
    (**CDN**) but will still not have a subscription assigned.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这个，我们的系统将被注册到红帽**内容交付网络**（**CDN**），但仍然没有分配订阅。
- en: 'Let''s go to the subscriptions page and refresh to see the new system there.
    We will click on **View all Systems** to continue:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们转到订阅页面并刷新以查看新系统。我们将点击**查看所有系统**以继续：
- en: '![Figure 7.6 – Subscriptions page with the new subscribed system'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.6 - 具有新订阅系统的订阅页面'
- en: '](img/B16799_07_006.jpg)'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_07_006.jpg)'
- en: Figure 7.6 – Subscriptions page with the new subscribed system
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.6 - 具有新订阅系统的订阅页面
- en: 'We can see our new system on the page, `rhel8.example.com`, with a red square
    next to it to show it does not have a subscription attached to it. Let''s click
    on the name of the system to see the details:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在页面上看到我们的新系统`rhel8.example.com`，旁边有一个红色的方块，表示它没有附加的订阅。让我们点击系统名称以查看详细信息：
- en: '![Figure 7.7 – Subscription page with the new subscribed system'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.7 - 具有新订阅系统的订阅页面'
- en: '](img/B16799_07_007.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_07_007.jpg)'
- en: Figure 7.7 – Subscription page with the new subscribed system
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.7 - 具有新订阅系统的订阅页面
- en: 'Once on the specific system page, we see all the details for the system. We
    click on **Subscriptions** to see the attached ones:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦进入特定系统页面，我们就可以看到系统的所有详细信息。我们点击**订阅**以查看已附加的订阅：
- en: '![Figure 7.8 – Subscriptions page with the new subscribed system''s details'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.8 - 具有新订阅系统详细信息的订阅页面'
- en: '](img/B16799_07_008.jpg)'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_07_008.jpg)'
- en: Figure 7.8 – Subscriptions page with the new subscribed system's details
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.8 - 具有新订阅系统详细信息的订阅页面
- en: 'We can see on the page that there are no attached subscriptions for this system:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在页面上看到，这个系统没有附加的订阅：
- en: '![Figure 7.9 – Subscriptions page with the new subscribed system, with no subscription
    attached'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.9 - 具有新订阅系统的订阅页面，没有附加的订阅'
- en: '](img/B16799_07_009.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_07_009.jpg)'
- en: Figure 7.9 – Subscriptions page with the new subscribed system, with no subscription
    attached
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.9 - 具有新订阅系统的订阅页面，没有附加的订阅
- en: 'Let''s attach a subscription to our system using `subscription-manager attach`:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用`subscription-manager attach`为我们的系统附加一个订阅：
- en: '[PRE1]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The result of the command shows that the system is now registered and has a
    subscription attached to it for `Red Hat Enterprise Linux for x86_64`. Let''s
    refresh the page for the system to ensure the subscription attachment runs properly:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 命令的结果显示，系统现在已注册，并为`Red Hat Enterprise Linux for x86_64`附加了一个订阅。让我们刷新系统页面以确保订阅附加正常运行：
- en: '![Figure 7.10 – Subscriptions page with the new subscribed system, with one
    subscription attached'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.10 - 具有新订阅系统的订阅页面，附有一个订阅'
- en: '](img/B16799_07_010.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_07_010.jpg)'
- en: Figure 7.10 – Subscriptions page with the new subscribed system, with one subscription
    attached
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.10 - 具有新订阅系统的订阅页面，附有一个订阅
- en: With this, we know for sure that the system is properly registered and subscribed
    to the Red Hat CDN and it's ready to access all the software, patches, and updates
    available from it.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这个，我们可以确定系统已正确注册并订阅了红帽CDN，并且已准备好访问来自它的所有软件、补丁和更新。
- en: 'Also, in the system, we can see that a new file with the information on the
    software **repositories**, or **repos** for short, has been created:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，在系统中，我们可以看到一个包含有关软件**存储库**或**repos**信息的新文件已经创建：
- en: '[PRE2]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Now we know how to manage available subscriptions and assign them to a running
    system so it has access to the software binaries built by Red Hat. Let's learn
    more about how to use the provided repositories in the next section.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道如何管理可用的订阅并将它们分配给正在运行的系统，以便它可以访问由红帽构建的软件二进制文件。让我们在下一节中了解如何使用提供的存储库。
- en: Managing repositories and signatures with YUM/DNF
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用YUM/DNF管理存储库和签名
- en: RHEL like many other Linux distributions, has a mechanism to provide software
    based on repos. These contain a list of software packages (which could be end
    user applications such as Firefox, or components for them such as GTK3), a list
    of dependencies between the packages, and other useful metadata.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 像许多其他Linux发行版一样，RHEL有一个基于存储库提供软件的机制。这些存储库包含软件包的列表（可以是最终用户应用程序，如Firefox，或者用于它们的组件，如GTK3），软件包之间的依赖关系列表以及其他有用的元数据。
- en: 'Once we finish subscribing the system, we can take a look at the repositories
    available in the system using `yum` or `dnf`:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们完成订阅系统，我们可以使用`yum`或`dnf`查看系统中可用的存储库：
- en: '[PRE3]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'As you can see, the output of `yum` and `dnf` is exactly the same. As a matter
    of fact, `dnf` is the evolution of `yum`, and in RHEL8 the `yum` command is just
    a symbolic link to `dnf`:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所看到的，`yum`和`dnf`的输出完全相同。事实上，`dnf`是`yum`的演变，在RHEL8中，`yum`命令只是`dnf`的符号链接：
- en: '[PRE4]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: They both can be used indistinctively in RHEL8\. From now on, we will use `dnf`
    only, but remember, if you prefer `yum`, feel free to use it.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 它们在RHEL8中可以互换使用。从现在开始，我们将只使用`dnf`，但请记住，如果您更喜欢`yum`，请随意使用。
- en: Tip
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: '**YUM** used to be an acronym for **Yellowdog Updater Modified**, a project
    that started as a Linux distribution for Macs called Yellowdog. **DNF** stands
    for **Dandified YUM**.'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '**YUM**曾经是**Yellowdog Updater Modified**的首字母缩写，这是一个最初是为Mac开发的Linux发行版项目。**DNF**代表**Dandified
    YUM**。'
- en: 'Now let''s take a look at the repository definition created during the subscription
    attachment `/etc/yum.repos.d/redhat.repo`. We can edit the file and go to the
    entry of the `BaseOS` repository shown above `rhel-8-for-x86_64-baseos-rpms`:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们来看一下在订阅附加期间创建的存储库定义`/etc/yum.repos.d/redhat.repo`。我们可以编辑文件并转到`BaseOS`存储库的条目，如上面显示的`rhel-8-for-x86_64-baseos-rpms`：
- en: '[PRE5]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'As you can see, every section in the file starts with the name of the section
    between brackets – in the previous case, `[rhel-8-for-x86_64-baseos-rpms]`. Now
    let''s check all the entries under this section:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所看到的，文件中的每个部分都以方括号之间的部分名称开头 - 在前面的情况下，`[rhel-8-for-x86_64-baseos-rpms]`。现在让我们检查此部分下的所有条目：
- en: '**name**: A long descriptive name for the repository. It''s the one displayed
    when we listed the repos in the previous example.'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**name**：存储库的长描述性名称。这是我们在前面的示例中列出存储库时显示的名称。'
- en: '`$releasever` variable that will be substituted before being accessed. Other
    methods are NFS, HTTP, and FTP.'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`$releasever` 变量将在访问之前被替换。其他方法包括 NFS、HTTP 和 FTP。'
- en: '`1`, it will be enabled, and when set to `0` it will be disabled.'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`1`，它将被启用，设置为 `0` 时将被禁用。'
- en: '`1` it will be enabled and all the packages installed in the system with `dnf`
    / `yum` will be verified using their `gpg` signatures against a provided key.'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`1` 将启用，并且系统中使用 `dnf` / `yum` 安装的所有软件包将使用它们的 `gpg` 签名钥匙进行验证。'
- en: '`gpg`, the downloaded packages.'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`gpg`，下载的软件包。'
- en: '`1`, and disabled when set to `0`.'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`1`，设置为 `0` 时将被禁用。'
- en: '**sslcacert**: A certificate used as a Certificate Authority to validate client
    certificates.'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**sslcacert**：用作证书颁发机构的证书，用于验证客户端证书。'
- en: '**sslclient key**: A client key used to habilitate the client certificate.'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**sslclient key**：用于激活客户端证书的客户端密钥。'
- en: '**sslclientcert**: The client certificate that the machine will use to identify
    itself against the CDN.'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**sslclientcert**：机器用来在 CDN 上标识自己的客户端证书。'
- en: '**metadata_expire**: The time in seconds after which to consider the retrieved
    metadata as expired. The default, as shown here, is 24 hours.'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**metadata_expire**：在检索到的元数据被视为过期之后的秒数。默认值如下所示，为 24 小时。'
- en: '`dnf`) to use the metadata as downloaded in this repository.'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dnf`）以使用在此存储库中下载的元数据。'
- en: 'The minimal required options to have a running repository are: `name`, `baseurl`,
    and `gpgckeck`, having this last one set to `0`.'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 拥有运行存储库所需的最小选项是：`name`、`baseurl` 和 `gpgckeck`，并将最后一个设置为 `0`。
- en: Important note
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: Although it is possible to change the configuration of the repositories by editing
    the files, the best way to modify the Red Hat provided repos is by using commands
    that will be shown in this chapter. That's because the `redhat.repo` file will
    be overwritten by the subscription manager when refreshing data.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然可以通过编辑文件更改存储库的配置，但修改 Red Hat 提供的存储库的最佳方法是使用本章中将显示的命令。这是因为当刷新数据时，`redhat.repo`
    文件将被订阅管理器覆盖。
- en: 'By running `dnf repolist`, we obtained the list of repositories `enabled` in
    the system. What if we want to see all the repositories, the ones enabled and
    the ones disabled? That can be done by running `dnf` `repolist --all`:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 通过运行 `dnf repolist`，我们获得了系统中 `enabled` 的存储库列表。如果我们想要查看所有存储库，包括已启用和已禁用的存储库，该怎么办？可以通过运行
    `dnf` `repolist --all` 来实现。
- en: '![Figure 7.11 – Partial output of dnf repolist –all'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.11 – dnf repolist –all 的部分输出'
- en: '](img/B16799_07_011.jpg)'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_07_011.jpg)'
- en: Figure 7.11 – Partial output of dnf repolist –all
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.11 – dnf repolist –all 的部分输出
- en: 'The list is very extensive. It includes the repositories with the binaries
    as used in many production cases, from SAP to managing systems with Satellite.
    We can filter it with `grep` to search for `supplementary`:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 列表非常广泛。它包括了许多生产案例中使用的二进制库，从 SAP 到使用 Satellite 管理系统。我们可以使用 `grep` 过滤它来搜索 `supplementary`：
- en: '[PRE6]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'There are four different types of channels here:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有四种不同类型的通道：
- en: '`rhel-8-for-x86_64-supplementary-rpms`, which contains the packages, also known
    as `rpms`, ready to be installed in the system. These apply during the standard
    maintenance period.'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rhel-8-for-x86_64-supplementary-rpms`，其中包含准备安装在系统中的软件包，也称为 `rpms`。这些适用于标准维护期间。'
- en: '`rhel-8-for-x86_64-supplementary-eus-rpms`, which contains `eus` in the name.
    These provide packages with backports to be able to keep the same minor version
    for a longer time. Don''t use them unless it is required by a third-party vendor.'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rhel-8-for-x86_64-supplementary-eus-rpms`，其中名称中包含 `eus`。这些提供了带有后端支持的软件包，以便能够保持相同的次要版本更长时间。除非第三方供应商要求，否则不要使用它们。'
- en: '`rhel-8-for-x86_64-supplementary-source-rpms`, which contains `source` in the
    name. They provide the source used to build the packages delivered in *regular*
    and *extended updated support* channels.'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rhel-8-for-x86_64-supplementary-source-rpms`，其中名称中包含 `source`。它们提供了用于构建 *常规*
    和 *扩展更新支持* 通道中交付的软件包的源代码。'
- en: '`rhel-8-for-x86_64-supplementary-debug-rpms`, which contain `debug` in their
    name. These include the debugging information as generated when building a package
    useful for deep troubleshooting of issues.'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rhel-8-for-x86_64-supplementary-debug-rpms`，其中名称中包含 `debug`。这些包括在构建软件包时生成的调试信息，对于深度故障排除非常有用。'
- en: 'We can enable `rhel-8-for-x86_64-supplementary-rpms` by using the `config-manager`
    option of `dnf`, running the following:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用 `dnf` 的 `config-manager` 选项启用 `rhel-8-for-x86_64-supplementary-rpms`，运行以下命令：
- en: '[PRE7]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The repository is now enabled. You may want to try to enable and disable other
    repositories to practice.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 存储库现在已启用。您可能希望尝试启用和禁用其他存储库以进行练习。
- en: 'Let''s now try to add a repository for which we know only its URL, such as
    the `dnf config-manager`:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们尝试添加一个我们只知道其 URL 的存储库，例如 `dnf config-manager`：
- en: '[PRE8]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'We can inspect the newly created file – `/etc/yum.repos.d/mirror.uv.es_mirror_fedora-epel_8_Everything_x86_64_.repo`:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以检查新创建的文件 – `/etc/yum.repos.d/mirror.uv.es_mirror_fedora-epel_8_Everything_x86_64_.repo`：
- en: '[PRE9]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'You may have realized that there is an option missing in this repo, however,
    let''s move ahead. I can search for a package available in EPEL, such as, for
    example, `screen`:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能已经意识到这个存储库中缺少一个选项，但是，让我们继续。我可以搜索 EPEL 中可用的软件包，例如 `screen`：
- en: '[PRE10]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The package is found, now let''s try to install it:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 找到了软件包，现在让我们尝试安装它：
- en: '[PRE11]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: As we can see there is an error trying to install from this source, as it required
    the `gpgcheck` and `gpgkey` entries to be configured to have a properly secured
    repo (as `gpg` ensures that the content delivered is the same as the content created).
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所看到的，尝试从此源安装时出现了错误，因为它要求配置 `gpgcheck` 和 `gpgkey` 条目以确保具有适当的安全性（因为 `gpg`
    确保交付的内容与创建的内容相同）。
- en: 'We can obtain `gpgkey` from the same mirror, at the URL [http://mirror.uv.es/mirror/fedora-epel/RPM-GPG-KEY-EPEL-8](http://mirror.uv.es/mirror/fedora-epel/RPM-GPG-KEY-EPEL-8),
    and drop it where `dnf` will search for it, `/etc/pki/rpm-gpg/`:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以从同一个镜像获取`gpgkey`，URL为[http://mirror.uv.es/mirror/fedora-epel/RPM-GPG-KEY-EPEL-8](http://mirror.uv.es/mirror/fedora-epel/RPM-GPG-KEY-EPEL-8)，并将其放在`dnf`将搜索的位置`/etc/pki/rpm-gpg/`：
- en: '[PRE12]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Now let''s modify the file `/etc/yum.repos.d/mirror.uv.es_mirror_fedora-epel_8_Everything_x86_64_.repo`
    to look like this:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们修改文件`/etc/yum.repos.d/mirror.uv.es_mirror_fedora-epel_8_Everything_x86_64_.repo`，使其如下所示：
- en: '[PRE13]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'You can see we added both the `gpgcheck` and `gpgkey` entries in the file.
    Let''s try installing the `screen` package again:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以看到我们在文件中添加了`gpgcheck`和`gpgkey`条目。让我们再次尝试安装`screen`包：
- en: '[PRE14]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'You''ll notice that there is a step in which it asks you to confirm that the
    `gpg` key fingerprint is correct: `94E2 79EB 8D8F 25B2 1810 ADF1 21EA 45AB 2F86
    D6A1`. To do so, you can go to the Fedora security page, as the Fedora project
    is managing EPEL, and check. The URL for that page is [https://getfedora.org/security/](https://getfedora.org/security/):'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 您会注意到有一步要求您确认`gpg`密钥指纹是否正确：`94E2 79EB 8D8F 25B2 1810 ADF1 21EA 45AB 2F86 D6A1`。为此，您可以转到Fedora安全页面进行检查，因为Fedora项目正在管理EPEL。该页面的URL是[https://getfedora.org/security/](https://getfedora.org/security/)：
- en: '![Figure 7.12 – Partial capture of the Fedora security page with an EPEL8 gpg
    fingerprint'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.12 – Fedora安全页面的部分截图，带有EPEL8 gpg指纹'
- en: '](img/B16799_07_012.jpg)'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_07_012.jpg)'
- en: Figure 7.12 – Partial capture of the Fedora security page with an EPEL8 gpg
    fingerprint
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.12 – Fedora安全页面的部分截图，带有EPEL8 gpg指纹
- en: As you can see, it is correct. We have just verified that the signature we are
    using has the same fingerprint as announced by the project managing it, and now
    all the packages downloaded from this repo will be verified with it to avoid package
    tampering (which is someone changing the content before you receive it).
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所看到的，是正确的。我们刚刚验证了我们使用的签名与项目管理它的公告的指纹相同，现在从该仓库下载的所有包都将使用它进行验证，以避免包篡改（即在您收到包之前有人更改内容）。
- en: 'Let''s review the commands that we used, which `dnf` provides to manage repos:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回顾一下我们使用的命令，`dnf`提供了管理仓库的命令：
- en: '![](img/B16799_07_Table_7.1.jpg)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16799_07_Table_7.1.jpg)'
- en: Now that we know how to securely manage repositories in RHEL, let's start adding
    more packages to our system, updating them, and undoing installations if we need
    to.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道如何在RHEL中安全地管理仓库，让我们开始向系统添加更多的包，更新它们，并在需要时撤消安装。
- en: Doing software installations, updates, and rollbacks with YUM/DNF
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用YUM/DNF进行软件安装、更新和回滚
- en: 'In the previous section, we saw how to install a package. During the process,
    we saw a confirmation request to ensure that we were sure that we wanted to include
    new software in the system. Let''s now install software with `dnf install`, but
    using the `–y` option to answer yes to all questions that the command will issue:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 在前一节中，我们看到了如何安装一个包。在这个过程中，我们看到了一个确认请求，以确保我们确定要在系统中包含新软件。现在让我们使用`dnf install`安装软件，但使用`-y`选项来回答命令将发出的所有问题都是“是”：
- en: '[PRE15]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: As you can see, the `zip` package was installed, and also a dependent package
    called `unzip`, without asking questions. We also notice that `dnf` finds the
    dependent packages, resolves the **dependencies**, and installs all that is needed
    for a package to run. This way, the system is kept in a coherent status, making
    it more reliable and predictable.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所看到的，`zip`包已经安装，还有一个名为`unzip`的依赖包，而不需要询问问题。我们还注意到`dnf`找到了依赖包，解决了**依赖关系**，并安装了所有运行一个包所需的内容。这样，系统就保持在一个一致的状态，使其更加可靠和可预测。
- en: 'We cam see which packages are ready to be updated using the `dnf check-update`
    command:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`dnf check-update`命令来查看哪些包准备更新：
- en: '[PRE16]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The easiest way to update a package and apply fixes and security patches is
    to use `dnf update`:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 更新包并应用修复和安全补丁的最简单方法是使用`dnf update`：
- en: '[PRE17]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'To update everything, just run `dnf update` without specifying the package:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 要更新所有内容，只需运行`dnf update`而不指定包：
- en: '![Figure 7.13 – Partial capture of RHEL updating with dnf/yum'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.13 – RHEL使用dnf/yum进行部分更新的截图'
- en: '](img/B16799_07_013.jpg)'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_07_013.jpg)'
- en: Figure 7.13 – Partial capture of RHEL updating with dnf/yum
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.13 – RHEL使用dnf/yum进行部分更新的截图
- en: 'The result of running `dnf update` in the system is the following:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在系统中运行`dnf update`的结果如下：
- en: '[PRE18]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: These were examples of packages upgraded in a system. Your system, depending
    on the time you last upgraded it and the newly released packages, may have a different
    output.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是系统中升级的包的示例。您的系统，根据您上次升级的时间和新发布的包，可能会有不同的输出。
- en: Important note
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: The `kernel` is the most important part of the system. It enables hardware access
    and all the basic functions of the operating system. That's why, instead of upgrading
    it, a new version is installed. The system keeps the previous two versions just
    in case the system becomes unbootable, and one of them can be selected to run
    easily.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '`kernel`是系统中最重要的部分。它使硬件访问和操作系统的所有基本功能都得以实现。这就是为什么，而不是升级它，会安装一个新版本。系统会保留前两个版本，以防系统无法启动，可以轻松选择其中一个来运行。'
- en: 'We can search the packages available with the `dnf search` command:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`dnf search`命令搜索可用的包：
- en: '[PRE19]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'We can obtain extended information about a package, installed or not, with
    `dnf info`:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`dnf info`来获取有关包的详细信息，无论是已安装还是未安装的：
- en: '[PRE20]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'We can also remove an installed package with `dnf remove`:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以使用`dnf remove`来删除已安装的包：
- en: '[PRE21]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Sometimes you want to install some packages that come together to perform a
    specific task, and that''s what `dnf grouplist`:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 有时您想安装一些一起执行特定任务的包，这就是`dnf grouplist`的作用：
- en: '[PRE22]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: You may run it without `| grep Tools` to see the full list.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以不使用`| grep Tools`来查看完整的列表。
- en: 'Let''s install the `System Tools` group with `dnf groupinstall`:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用`dnf groupinstall`来安装`System Tools`组：
- en: '[PRE23]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'The entire output of the preceding command is shown in the following screenshot:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令的整个输出显示在以下截图中：
- en: '![Figure 7.14 – Partial capture of RHEL installing a group dnf/yum'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.14 – RHEL安装组dnf/yum的部分截图'
- en: '](img/B16799_07_014.jpg)'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_07_014.jpg)'
- en: Figure 7.14 – Partial capture of RHEL installing a group dnf/yum
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.14 - RHEL安装组dnf/yum的部分截图
- en: 'Once the preinstallation completes, we can see that we will install 78 packages:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦预安装完成，我们可以看到我们将安装78个软件包：
- en: '[PRE24]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Replying with `y` will perform the installation (note that the `–y` option works
    here too, assuming yes to all questions).
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 回复`y`将执行安装（请注意，`-y`选项在这里也有效，假设对所有问题都回答是）。
- en: 'We can check the history of all the installation transactions with `dnf history`:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`dnf history`来检查所有安装交易的历史记录：
- en: '![Figure 7.15 – Partial capture of RHEL dnf/yum history'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.15 - RHEL dnf/yum历史记录的部分截图'
- en: '](img/B16799_07_015.jpg)'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_07_015.jpg)'
- en: Figure 7.15 – Partial capture of RHEL dnf/yum history
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.15 - RHEL dnf/yum历史记录的部分截图
- en: 'It''s easy to obtain specific info from each transaction specifying the number
    of it to `dnf history`:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 从每个交易中获取特定信息很容易，只需指定交易编号为`dnf history`：
- en: '[PRE25]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'More interestingly, we can roll back to one of the previous points marked with
    `dnf history rollback`. To make it faster, *install* the `lsof` package and then
    *roll back* to the previous number:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 更有趣的是，我们可以回滚到以`dnf history rollback`标记的以前的某个点。为了加快速度，*安装*`lsof`软件包，然后*回滚*到以前的编号：
- en: '[PRE26]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'We can also undo a single transaction with `yum history undo`. Let''s see it
    with this transaction:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 我们也可以使用`yum history undo`来撤消单个交易。让我们看看这个交易：
- en: '[PRE27]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Let''s review the most important transactions done with `dnf`:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回顾使用`dnf`进行的最重要的交易：
- en: '![](img/B16799_07_Table_7.2a.jpg)'
  id: totrans-175
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16799_07_Table_7.2a.jpg)'
- en: '![](img/B16799_07_Table_7.2b.png)'
  id: totrans-176
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16799_07_Table_7.2b.png)'
- en: 'There is a new feature on RHEL 8 that wasn''t available in the previous version,
    which is `dnf` so there is no need to install extra software:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 在RHEL 8中有一个在以前版本中不可用的新功能，即`dnf`，因此无需安装额外的软件：
- en: '[PRE28]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Tip
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: The `dnf module list` command, without specifying any package, would show the
    full list of modules. Try it!
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`dnf module list`命令，不指定任何软件包，将显示完整的模块列表。试试看！
- en: As you can see, we have three different versions of the PostgreSQL database
    available in RHEL8, which are 9.6, 10, and 12\. None of them are enabled and the
    default one is version 10\.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所看到的，我们在RHEL8中有三个不同版本的PostgreSQL数据库可用，分别是9.6、10和12。它们都没有启用，默认版本是10。
- en: 'Let''s enable version 12 of PostgreSQL using `dnf module`:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`dnf module`启用PostgreSQL的版本12：
- en: '[PRE29]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'The output of the preceding command can be seen in the following screenshot:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令的输出可以在以下截图中看到：
- en: '![Figure 7.16 – Capture of the PostgreSQL module list'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.16 - PostgreSQL模块列表的截图'
- en: '](img/B16799_07_016.jpg)'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_07_016.jpg)'
- en: Figure 7.16 – Capture of the PostgreSQL module list
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.16 - PostgreSQL模块列表的截图
- en: 'From now on Yum will install, update, and maintain in this system version 12
    of PostgreSQL. Let''s install it:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 从现在开始，Yum将在此系统中安装、更新和维护PostgreSQL的版本12。让我们安装它：
- en: '[PRE30]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: In the previous example, version 12 was installed.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的例子中，安装了版本12。
- en: 'We can remove the PostgreSQL package and reset the module status to go back
    to the initial point:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以删除PostgreSQL软件包并重置模块状态以返回到初始状态：
- en: '[PRE31]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Let''s review the commands shown in this section for modularity:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回顾一下本节中显示的模块化命令：
- en: '![](img/B16799_07_Table_7.3.jpg)'
  id: totrans-194
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16799_07_Table_7.3.jpg)'
- en: Tip
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: For more info on modularity, go to the system's manual page by running `man
    dnf.modularity`.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解有关模块化的更多信息，请运行`man dnf.modularity`查看系统的手册页。
- en: Now that we have learned how to handle software transactions in RHEL, let's
    go ahead with how to create and handle local repositories.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经学会了如何在RHEL中处理软件交易，让我们继续学习如何创建和处理本地存储库。
- en: Creating and syncing repositories with createrepo and reposync
  id: totrans-198
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用createrepo和reposync创建和同步存储库
- en: It's common that we receive an RPM file and keep it in a repository that we
    can use on our machine (and sometimes share it with other machines with a web
    server of an NFS share). It's also common that when we start building our own
    RPMs, we distribute them and, to do so, we need to create a repository. To do
    that, we can use the **createrepo** tool.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 通常我们会收到一个RPM文件并将其保存在我们可以在自己的机器上使用的存储库中（有时还会与具有Web服务器或NFS共享的其他机器共享）。当我们开始构建自己的RPM时，通常会分发它们，为了这样做，我们需要创建一个存储库。为此，我们可以使用**createrepo**工具。
- en: 'First let''s create a folder in `/var/tmp` for repos:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 首先让我们在`/var/tmp`中为存储库创建一个文件夹：
- en: '[PRE32]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Then let''s create a folder for `slack`, a common tool to communicate with
    your team, and download the RPM package:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 然后让我们为`slack`创建一个文件夹，这是一个与您的团队进行通信的常用工具，并下载RPM软件包：
- en: '[PRE33]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Now we have a repository with an RPM file. We could have one with as many RPMs
    as we want but we will continue with only this single package.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有一个带有RPM文件的存储库。我们可以有一个带有任意数量RPM的存储库，但我们将继续只使用这个单个软件包。
- en: 'Let''s install the `createrepo` tool:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们安装`createrepo`工具：
- en: '[PRE34]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'And now we could simply run it to create a repository in the current folder
    with the following command:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以简单地运行它，在当前文件夹中使用以下命令创建一个存储库：
- en: '[PRE35]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'We see that the `repodata` folder has been created. In it, we can find the
    `repomd.xml` file that defines the repository content and also the recently created
    index files:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到`repodata`文件夹已经被创建。在其中，我们可以找到定义存储库内容的`repomd.xml`文件，还有最近创建的索引文件：
- en: '[PRE36]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Now we can add the repository to the system. We could do it without `gpg` signatures,
    setting the `gpgcheck` variable to `0` but, to have better security, let''s do
    it with the `gpg` signature. By searching in the `slack` page, we find the signature
    and download it to the `/etc/pki/rpm-gpg` directory:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以将存储库添加到系统中。我们可以在没有`gpg`签名的情况下进行，将`gpgcheck`变量设置为`0`，但为了更好的安全性，让我们使用`gpg`签名。通过在`slack`页面搜索，我们找到签名并将其下载到`/etc/pki/rpm-gpg`目录：
- en: '[PRE37]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Then we add the repository to the system by creating the file `/etc/yum.repos.d/local-slack.repo`
    with the following content:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 然后通过创建文件`/etc/yum.repos.d/local-slack.repo`并添加以下内容将存储库添加到系统中：
- en: '[PRE38]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'And now we can try installing `slack`. To run completely, it would require
    that the package group *Server with a GUI* is installed, however, for the purpose
    of this exercise, we can continue with its installation. We can do so by running
    `dnf -y install slack` – please note how the `gpg` key gets imported automatically
    and the package is verified and installed:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以尝试安装`slack`。要完全运行，需要安装*带有GUI的服务器*软件包组，但是为了完成本练习，我们可以继续安装。我们可以通过运行`dnf
    -y install slack`来实现这一点-请注意`gpg`密钥如何自动导入并验证和安装软件包：
- en: '[PRE39]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Once a new version of Slack appears, we can download it to the same folder,
    and regenerate the repository index by running `createrepo` again. This way all
    the systems using this repository will update `slack` when they run a `yum update`.
    It's a good way to keep all systems standardized and in the same version. For
    advanced features when managing RPM repositories, please check Red Hat Satellite.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦出现Slack的新版本，我们可以将其下载到同一文件夹，并通过再次运行`createrepo`来重新生成仓库索引。这样，所有使用该仓库的系统在运行`yum
    update`时都会更新`slack`。这是保持所有系统标准化和版本一致的好方法。有关管理RPM仓库的高级功能，请查看Red Hat Satellite。
- en: Sometimes we want to have a local replica of the repositories in our system.
    To do that, we can use the **reposync** tool.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 有时我们希望在我们的系统中有仓库的本地副本。为此，我们可以使用**reposync**工具。
- en: 'First, we install `reposync`, which comes in the `yum-utils` package:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们安装`reposync`，它包含在`yum-utils`软件包中：
- en: '[PRE40]'
  id: totrans-220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Tip
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: If you try to install the `dnf-utils` package, this same package will be installed.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 如果尝试安装`dnf-utils`软件包，将安装相同的软件包。
- en: 'Now it''s time to disable all repos provided by Red Hat except `rhel-8-for-x86_64-baseos-rpms`,
    which can be done with the following command:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候禁用Red Hat提供的除`rhel-8-for-x86_64-baseos-rpms`之外的所有仓库了，可以使用以下命令完成：
- en: '[PRE41]'
  id: totrans-224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Time to check the change:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 检查变化的时间到了：
- en: '[PRE42]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'We can also disable the other repos, but this time we will do it in a different
    way, renaming them to something that doesn''t end with `.repo`:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 我们也可以禁用其他仓库，但这次我们将以不同的方式进行，将它们重命名为不以`.repo`结尾的名称：
- en: '[PRE43]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'Now we can run `reposync` with some options:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以使用一些选项运行`reposync`：
- en: '[PRE44]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'This will download the latest packages for the enabled channels. Let''s review
    the options:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 这将下载已启用通道的最新软件包。让我们来看看选项：
- en: '`--newest-only`: Red Hat repositories keep all the versions of the packages
    since the first release. This will download only the latest version.'
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--newest-only`：Red Hat仓库保留自首次发布以来的所有软件包版本。这将仅下载最新版本。'
- en: '`--download-metadata`: To be sure that we download a fully functional repo,
    and we do not need to run `createrepo` on it, we can use this option, which will
    retrieve all metadata in a source repository.'
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--download-metadata`：为了确保我们下载一个完全功能的仓库，并且不需要在其上运行`createrepo`，我们可以使用这个选项，它将检索源仓库中的所有元数据。'
- en: '`--destdir /var/tmp/repos`: Sets the destination directory for the downloaded
    files. It will also create a directory for each repo configured so the specified
    directory will be the parent of them all.'
  id: totrans-234
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--destdir /var/tmp/repos`：设置下载文件的目标目录。它还将为每个配置的仓库创建一个目录，因此指定的目录将是它们所有的父目录。'
- en: With this replicated repository, we can also work in isolated environments.
    It could be very convenient to prepare test environments. For advanced repo management
    features, please remember to try Red Hat Satellite.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这个复制的仓库，我们还可以在隔离的环境中工作。准备测试环境可能非常方便。对于高级的仓库管理功能，请记得尝试Red Hat Satellite。
- en: After learning the basics of repositories and how to use them to manage software,
    let's dive into the technology behind it, the **Red Hat Package Manager**, or
    **RPM**.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 在学习了仓库的基础知识以及如何使用它们来管理软件之后，让我们深入了解其背后的技术，即**Red Hat软件包管理器**或**RPM**。
- en: Understanding RPM internals
  id: totrans-237
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解RPM内部
- en: Linux distributions tend to have their own package manager, from Debian with
    `.deb` to Pacman in Arch Linux and other more exotic mechanisms. The intention
    of the package managers is to keep software installed on the system, update it,
    patch it, keep dependencies, and maintain an internal database of what is installed
    on the system. RPM is used by distributions such as Fedora, openSUSE, CentOS,
    Oracle Linux, and, of course, RHEL.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: Linux发行版往往有自己的软件包管理器，从Debian的`.deb`到Arch Linux中的Pacman和其他更奇特的机制。软件包管理器的目的是保持系统上安装的软件，更新它，修补它，保持依赖关系，并维护系统上安装的内部数据库。RPM被Fedora、openSUSE、CentOS、Oracle
    Linux和当然还有RHEL等发行版使用。
- en: To handle RPMs, the `rpm` command is available in the system, however, since
    the introduction of `yum`/`dnf`, it is hardly ever used in system administration,
    and is not included in RHCSA.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 要处理RPM包，系统中有`rpm`命令，但自从引入`yum`/`dnf`以来，它在系统管理中几乎不再使用，并且不包含在RHCSA中。
- en: 'RPMs contain the following:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: RPM包含以下内容：
- en: The files to be installed on the system, stored in CPIO format and compressed
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要安装在系统上的文件，以CPIO格式存储并压缩
- en: Information on permissions and the assigned owner and group for each file
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关每个文件的权限和分配的所有者和组的信息
- en: The dependencies required and provided by each package, along with, conflicts
    with other packages
  id: totrans-243
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个软件包所需和提供的依赖关系，以及与其他软件包的冲突
- en: Install, uninstall, and upgrade scripts to be applied in any of those phases
  id: totrans-244
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在任何这些阶段应用的安装、卸载和升级脚本
- en: A signature to ensure the package was not modified
  id: totrans-245
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保软件包未被修改的签名
- en: To learn a bit about it, we will show some simple useful commands.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 为了了解一些简单有用的命令，我们将展示一些。
- en: 'Commands to check packages include the following:'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 检查软件包的命令包括以下内容：
- en: '`rpm –qa`: Lists all the installed packages in the system'
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rpm –qa`：列出系统中安装的所有软件包'
- en: '`rpm –qf <filename>`: Shows which package installed the mentioned filename'
  id: totrans-249
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rpm –qf <filename>`：显示安装了所述文件名的软件包'
- en: '`rpm –ql <packagefile>`: Lists the files included in a downloaded package (interesting
    to check the previously downloaded packages)'
  id: totrans-250
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rpm –ql <packagefile>`：列出下载软件包中包含的文件（检查先前下载的软件包很有趣）'
- en: 'Commands to install, upgrade, and remove include the following:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 安装、升级和删除的命令包括以下内容：
- en: '`rpm –i <packagefile>`: Installs the list of provided packages, not fetching
    dependencies.'
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rpm -i <packagefile>`：安装提供的软件包列表，不获取依赖项。'
- en: '`rpm –U <packagefile>`: Upgrades a package with the downloaded one. Checks
    dependencies but doesn''t manage them.'
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rpm -U <packagefile>`：使用下载的软件包升级一个软件包。检查依赖关系，但不管理它们。'
- en: '`rpm –e <packagename>`: Removes the packages specified, although it won''t
    remove dependencies.'
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rpm -e <packagename>`：删除指定的软件包，尽管它不会删除依赖项。'
- en: If you want to understand how the dependency management system works in `yum`/`dnf`,
    try installing packages with `rpm –i`.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想了解`yum`/`dnf`中的依赖管理系统是如何工作的，可以尝试使用`rpm -i`安装软件包。
- en: It is important to know that all the databases of installed packages are located
    in `/var/lib/rpm` and can be managed with the `rpmdb` command.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的是要知道，所有已安装软件包的数据库都位于`/var/lib/rpm`中，并且可以使用`rpmdb`命令进行管理。
- en: In modern times, having to work with the `rpm` command usually means having
    a low-level issue, so it's better to try to break a test system before having
    to use it in real life.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 在现代时代，不得不使用`rpm`命令通常意味着有低级问题，所以最好在真实生活中使用之前先尝试在测试系统中进行测试。
- en: With this, we've completed software management in RHEL systems.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这个，我们已经完成了RHEL系统中的软件管理。
- en: Summary
  id: totrans-259
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we have gone through the admin parts of software management
    in a RHEL 8 system, from subscriptions to installation, to modularity, and other
    miscellaneous tips.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们已经了解了RHEL 8系统中软件管理的管理部分，从订阅到安装，再到模块化和其他杂项提示。
- en: All the system patching, updating, and management in RHEL relies on `yum`/`dnf`
    and simplifies managing dependencies, installing the right versions of software,
    and distributing it in isolated environments. This is one of the tasks more common
    for system administrators and should be understood completely.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: RHEL中所有的系统修补、更新和管理都依赖于`yum`/`dnf`，简化了管理依赖关系、安装正确版本的软件以及在隔离环境中分发软件。这是系统管理员更常见的任务之一，应该完全理解。
- en: For the Red Hat Certified Engineer level, a more in-depth look will be required,
    including creating RPM packages, which are very useful to manage, maintain, and
    distribute internally produced software in your own environments leveraging the
    experience and tools that Red Hat provides.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 对于红帽认证工程师级别，需要更深入地了解，包括创建RPM软件包，这对于在自己的环境中管理、维护和分发内部生产的软件非常有用，利用红帽提供的经验和工具。
- en: Now that our systems are up to date, let's move on to learn how to manage them
    remotely in the upcoming chapter.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们的系统已经更新，让我们继续学习如何在即将到来的章节中远程管理它们。
