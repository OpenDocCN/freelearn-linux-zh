- en: Chapter 2. Setting up Postfix
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二章。设置Postfix
- en: The **Mail Transfer Agent** (**MTA**) is perhaps the most important part of
    a mail system. It is responsible for receiving messages from the Internet or from
    your own users and doing what it can to make sure that the messages arrive at
    their destinations—other mail servers or mailboxes of your users.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**邮件传输代理**（**MTA**）可能是邮件系统中最重要的部分。它负责接收来自互联网或您自己用户的消息，并尽其所能确保消息到达其目的地——其他邮件服务器或您用户的邮箱。'
- en: Postfix has been chosen as the mail transfer agent to be covered in this book.
    Postfix has a large feature set, it has an excellent security track record, it
    is fast, easy to configure, and under active development.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Postfix被选为本书涵盖的邮件传输代理。Postfix具有丰富的功能集，具有出色的安全记录，运行速度快，易于配置，并处于活跃的开发中。
- en: This book assumes that you are running Postfix 2.0 or later. Any feature or
    behavior of Postfix that is specific to releases later than 2.0 will be noted.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本书假设您正在运行Postfix 2.0或更高版本。将注意到Postfix的任何特定于2.0之后版本的功能或行为。
- en: Introduction to Postfix
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Postfix简介
- en: This first section gives a brief introduction to Postfix, how it works, and
    describes how its behavior can be controlled.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本节首先简要介绍了Postfix的工作原理，并描述了如何控制其行为。
- en: What is Postfix
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是Postfix
- en: '**Postfix** is a modular mail transfer agent developed by IBM researcher Wietse
    Venema. It is free software and was released publicly for the first time in 1998
    under the name **VMailer**. It is written in **C** and currently consists of about
    105,000 lines of code (comments excluded), which makes it fairly small. It works
    on most non-historic variants of UNIX and Linux.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**Postfix**是由IBM研究员Wietse Venema开发的模块化邮件传输代理。它是免费软件，于1998年首次以**VMailer**的名称公开发布。它用**C**编写，目前包含约105,000行代码（不包括注释），因此相当小。它适用于大多数非历史性的UNIX和Linux变体。'
- en: As a pure mail transfer agent, Postfix does not provide any service for allowing
    users to collect their mail via the **POP or IMAP** protocols. That task must
    be carried out by some other piece of software. The software discussed in this
    book for facilitating retrieval of mail from the host is **Courier IMAP.**
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 作为纯邮件传输代理，Postfix不提供任何允许用户通过**POP或IMAP**协议收取邮件的服务。这项任务必须由其他软件完成。本书讨论的用于从主机检索邮件的软件是**Courier
    IMAP**。
- en: All official Postfix documentation, as well as the source code and links to
    third-party software and archives of the very active mailing list can be found
    at the Postfix website at [http://www.postfix.org/.](http://www.postfix.org/.)
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 所有官方的Postfix文档，以及源代码和第三方软件的链接以及非常活跃的邮件列表的存档，都可以在Postfix网站[http://www.postfix.org/.](http://www.postfix.org/.)找到。
- en: 'Postfix architecture: An overview'
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Postfix架构：概述
- en: This section will describe the different parts of the Postfix mail transfer
    agent and explain what really goes on when you send a message through the system.
    Although this might not be the most exciting text you have ever read, understanding
    the basics of how Postfix works is essential if you wish to successfully manage
    a Postfix server.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将描述Postfix邮件传输代理的不同部分，并解释当您通过系统发送消息时实际发生了什么。虽然这可能不是您读过的最激动人心的文本，但如果您希望成功管理Postfix服务器，了解Postfix工作原理的基础是必不可少的。
- en: Postfix is divided into a number of separate **daemons**, or background processes,
    that communicate with each other. The daemons have distinct areas of responsibility,
    may run in different security contexts, and may have different rules for the number
    of processes of their type that may be created. All daemon processes are created
    as needed and are supervised by a mother daemon, the `master`. Some daemons are
    rarely or never restarted, but most of them will commit suicide after having served
    a configurable number of requests or after they have been idle for a configurable
    duration of time. The following figure shows how messages flow through a Postfix
    system, and can be used to accompany the text that follows. The solid lines show
    the path of the message content while dotted lines show other forms of communication.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: Postfix分为多个独立的**守护程序**或后台进程，它们相互通信。这些守护程序有不同的责任领域，可能在不同的安全上下文中运行，并可能具有不同的规则，以限制其类型的进程数量。所有守护进程都是根据需要创建的，并由母守护进程`master`监督。一些守护程序很少或从不重新启动，但它们中的大多数在服务了可配置数量的请求或在可配置的空闲时间后会自杀。下图显示了消息如何在Postfix系统中流动，并可用于随后的文本。实线显示了消息内容的路径，而虚线显示了其他形式的通信。
- en: '![Postfix architecture: An overview](img/8648_02_01.jpg)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![Postfix架构：概述](img/8648_02_01.jpg)'
- en: Not all Postfix daemons will be described here, just the important ones. A complete
    rundown of all daemons can be found in the *Postfix Architecture Overview* document
    at [http://www.postfix.org/OVERVIEW.html](http://www.postfix.org/OVERVIEW.html).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这里不会描述所有Postfix守护程序，只会描述重要的守护程序。可以在[http://www.postfix.org/OVERVIEW.html](http://www.postfix.org/OVERVIEW.html)的*Postfix架构概述*文档中找到所有守护程序的完整介绍。
- en: New message arrival
  id: totrans-15
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 新消息到达
- en: New messages can arrive into the Postfix system in three ways. The most common
    way is, of course, via the **Simple Mail Transfer Protocol**(**SMTP**). The daemon
    responsible for receiving messages via SMTP is named `smtpd`. The uncommon **QMQP
    Submission Protocol**, introduced in Daniel J. Bernstein's MTA **qmail**, is also
    supported with the `qmqpd` daemon. However, this book will not discuss QMQP.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 新消息可以通过三种方式进入Postfix系统。最常见的方式当然是通过**简单邮件传输协议**（**SMTP**）。负责通过SMTP接收消息的守护程序被命名为`smtpd`。不常见的**QMQP提交协议**，由Daniel
    J. Bernstein的MTA **qmail**引入，也支持`qmqpd`守护程序。然而，本书不会讨论QMQP。
- en: The third way in which a message can arrive is via local submission with the
    `sendmail` program. This is the standard way to submit mail messages from programs
    and scripts running on a UNIX host. Postfix provides a `sendmail` program that
    in most regards is compatible with the `sendmail` program of the sendmail mail
    transfer agent ([http://www.sendmail.org/](http://www.sendmail.org/)). Many UNIX
    mail user agents such as Mail, Pine, and Mutt, as well as webmail software such
    as SquirrelMail and IMP use the `sendmail` interface to submit new messages, although
    some software offer the option to submit messages via SMTP instead.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 消息到达的第三种方式是通过 `sendmail` 程序进行本地提交。这是从在 UNIX 主机上运行的程序和脚本提交邮件消息的标准方式。Postfix 提供了一个
    `sendmail` 程序，它在大多数方面与 sendmail 邮件传输代理的 `sendmail` 程序兼容（[http://www.sendmail.org/](http://www.sendmail.org/)）。许多
    UNIX 邮件用户代理，如 Mail、Pine 和 Mutt，以及诸如 SquirrelMail 和 IMP 等的网络邮件软件，使用 `sendmail`
    接口提交新消息，尽管一些软件提供通过 SMTP 提交消息的选项。
- en: The `sendmail` program hands messages on to the **postdrop** program, which
    places message files in the `maildrop` directory within the Postfix `queue` directory.
    The `pickup` daemon waits for messages to arrive into the `maildrop` directory,
    and passes them on to the `cleanup` daemon. From there on, `sendmail-`submitted
    messages take the same road as messages submitted via SMTP or QMQP. Messages can
    be submitted via `sendmail` even if Postfix is not running on the machine at the
    moment. When Postfix starts the next time, `pickup` will discover the queued-up
    message files and process them.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '`sendmail` 程序将消息传递给 **postdrop** 程序，后者将消息文件放在 Postfix `queue` 目录中的 `maildrop`
    目录中。`pickup` 守护进程等待消息到达 `maildrop` 目录，并将其传递给 `cleanup` 守护进程。从那里开始，通过 `sendmail`
    提交的消息与通过 SMTP 或 QMQP 提交的消息走同样的路线。即使 Postfix 当时没有在机器上运行，也可以通过 `sendmail` 提交消息。当
    Postfix 下次启动时，`pickup` 将发现排队的消息文件并处理它们。'
- en: When `smtpd, qmqpd`, or `pickup` receives a new message, it hands it to the
    `cleanup` daemon. This daemon enforces restrictions on the message's size, acts
    on any content restrictions configured by the user, rewrites sender and/or recipient
    addresses as required by the configuration, adds any required headers that are
    missing, and does a few other things. The `cleanup` daemon uses the `trivial-rewrite`
    daemon for some address rewriting operations. When done with its business, `cleanup`
    puts the queue file in the incoming queue and notifies the queue manager.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 当 `smtpd, qmqpd` 或 `pickup` 接收到新消息时，它将其交给 `cleanup` 守护进程。该守护进程对消息的大小施加限制，执行用户配置的任何内容限制，根据配置需要重写发件人和/或收件人地址，添加任何缺失的必需标头，并执行其他一些操作。`cleanup`
    守护进程使用 `trivial-rewrite` 守护进程进行一些地址重写操作。完成其任务后，`cleanup` 将队列文件放入传入队列并通知队列管理器。
- en: Scheduling message deliveries
  id: totrans-20
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 调度消息交付
- en: The **queue manager**, `qmgr`, is responsible for scheduling the delivery of
    messages. To decide how a message should be delivered to each recipient (namely
    the delivery method and the next destination), `qmgr` gets help from `trivial-rewrite`.
    The queue manager requests delivery agent processes from the `master` daemon and
    collects the results of the deliveries.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**队列管理器** `qmgr` 负责安排消息的交付。为了决定如何将消息交付给每个收件人（即交付方法和下一个目的地），`qmgr` 从 `trivial-rewrite`
    获取帮助。队列管理器从 `master` 守护进程请求交付代理进程，并收集交付结果。'
- en: The queue manager is responsible for all messages from the point when the `cleanup`
    daemon hands them over until they are removed from the queue. The removal can
    be either because they have been successfully delivered to all recipients or because
    they have been in the queue for so long that Postfix decides that they are undeliverable.
    By default, messages will remain in the queue for a maximum of five days. The
    queue manager calls upon the `bounce` daemon to send a `bounce` message to the
    sender.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 队列管理器负责从 `cleanup` 守护进程交接消息开始直到它们从队列中被移除。移除可能是因为它们已成功交付给所有收件人，也可能是因为它们在队列中停留的时间太长，Postfix
    决定它们无法交付。默认情况下，消息将在队列中最多保留五天。队列管理器调用 `bounce` 守护进程向发件人发送 `bounce` 消息。
- en: The queue manager uses a number of directories for different purposes. The incoming
    queue is monitored for new messages, and the next stop is the **active queue**.
    The active queue contains the messages that are ready for delivery and are waiting
    to be dispatched to a delivery agent. If a delivery attempt fails, the message
    is moved to the **deferred queue**. That queue will be scanned periodically and,
    if it is time to retry the delivery of a message, the queue file for the message
    will be moved back into the active queue. Whether a delivery of a message should
    be reattempted when the queue is scanned depends on two—factors how much time
    has passed since the message arrived and the two configuration parameters that
    set a minimum and maximum time interval between the reattempts.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 队列管理器用于不同目的的多个目录。传入队列会监视新消息，下一个目的地是**活动队列**。活动队列包含准备交付的消息，并等待被派发到交付代理。如果交付尝试失败，消息将被移动到**延迟队列**。该队列将定期扫描，如果是重新尝试消息交付的时间，消息的队列文件将被移回活动队列。当队列扫描时，消息的交付是否应该重新尝试取决于两个因素：消息到达以来经过了多长时间以及设置重新尝试之间的最小和最大时间间隔的两个配置参数。
- en: In addition to these queues, there is also a special-purpose queue named **hold**.
    This queue contains messages that have been put on hold by the system administrator
    using the `postsuper` command. Postfix will not touch these messages at all until
    they are taken off hold with the same command. The hold queue can be used to temporarily
    stall the delivery of certain messages, for example because they are large and
    need to be delivered during off-peak hours, or because they are deemed suspicious
    and need to be inspected before they are allowed to be delivered.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 除了这些队列，还有一个名为**hold**的特殊用途队列。这个队列包含了被系统管理员使用`postsuper`命令暂停的消息。Postfix不会触及这些消息，直到它们被相同的命令解除暂停。暂停队列可用于暂时延迟某些消息的投递，例如因为它们很大，需要在非高峰时段投递，或者因为它们被视为可疑，需要在允许投递之前进行检查。
- en: The different queues used by Postfix are described in detail in the *QSHAPE_README*
    document ([http://www.postfix.org/QSHAPE_README.html](http://www.postfix.org/QSHAPE_README.html)).
    This document also describes `qshape`, a script that ships with Postfix and analyzes
    the contents of the queues, and helps you identify bottlenecks.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: Postfix使用的不同队列在*QSHAPE_README*文档中有详细描述（[http://www.postfix.org/QSHAPE_README.html](http://www.postfix.org/QSHAPE_README.html)）。该文档还描述了`qshape`，这是一个随Postfix一起提供的脚本，用于分析队列的内容，并帮助您识别瓶颈。
- en: Message delivery
  id: totrans-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 消息投递
- en: Postfix comes with a number of delivery agents that are used to deliver messages
    using various means and protocols. The delivery agents are the last daemons that
    touch the messages before they leave your system.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: Postfix配备了许多投递代理，用于使用各种方式和协议投递消息。这些投递代理是在消息离开您的系统之前最后接触消息的守护程序。
- en: The Postfix SMTP client, `smtp` (not to be confused with the SMTP server, `smtpd`),
    is used to deliver messages to other hosts via the SMTP protocol. It is very similar
    to the LMTP client, `lmtp`, which delivers messages via the **Local Mail Transfer
    Protocol** (**LMTP**). As a network protocol, LMTP is very similar to SMTP, but
    where SMTP is used to transport messages between MTAs, LMTP is used for the final
    delivery of messages to the mail store from which users can access the messages.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: Postfix SMTP客户端`smtp`（不要与SMTP服务器`smtpd`混淆）用于通过SMTP协议将消息传递到其他主机。它与LMTP客户端`lmtp`非常相似，后者通过**本地邮件传输协议**（**LMTP**）传递消息。作为一种网络协议，LMTP与SMTP非常相似，但SMTP用于在MTA之间传输消息，而LMTP用于将消息最终传递到用户可以访问消息的邮件存储中。
- en: The local delivery agent, `local`, delivers messages to users with normal accounts
    on the system. It supports aliases for simple mailing lists or role addresses
    as well as `.forward` files so that users themselves can set up forwarding of
    their messages.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 本地投递代理`local`将消息投递给系统上具有普通帐户的用户。它支持简单邮件列表或角色地址的别名，以及`.forward`文件，以便用户自己设置消息的转发。
- en: If you have virtual mailbox users—users that do not have real accounts (for
    example, shell accounts) on the system their messages are delivered with `virtual`
    Postfix daemon.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您有虚拟邮箱用户，即在系统上没有真实帐户（例如shell帐户）的用户，他们的消息将通过`virtual` Postfix守护程序传递。
- en: If Postfix's standard delivery agents do not suffice, you can write your own
    delivery agent and have Postfix invoke it for some (or all) messages. In that
    case, you can either use the `pipe` daemon to have the message bodies given to
    your delivery agent via the standard input stream, or you can use the `spawn`
    daemon if you want to write a delivery agent that accepts messages via some network
    protocol.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 如果Postfix的标准投递代理不够用，您可以编写自己的投递代理，并让Postfix为一些（或全部）消息调用它。在这种情况下，您可以使用`pipe`守护程序，通过标准输入流将消息正文传递给您的投递代理，或者您可以使用`spawn`守护程序，如果您想编写一个通过某种网络协议接收消息的投递代理。
- en: Supporting programs
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 支持程序
- en: Postfix contains a number of supporting programs that you can use to control,
    test, and debug your Postfix system. This list is not exhaustive and gives only
    a brief description of each program, but some of the programs will be used later
    in the chapter. It is a good idea to get acquainted with them so that you at least
    know what sort of problems they can help you solve.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: Postfix包含许多支持程序，您可以使用这些程序来控制、测试和调试您的Postfix系统。这个列表并不详尽，只是对每个程序进行了简要描述，但其中一些程序将在本章后面使用。熟悉它们是个好主意，这样至少您知道它们可以帮助您解决什么样的问题。
- en: '| Program | Description |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| 程序 | 描述 |'
- en: '| --- | --- |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `mailq` | Views the current contents of the Postfix queue. The output includes
    the size, time of arrival, sender address, and recipient address/addresses of
    each message. Internally `mailq` just invokes the `postqueue` command and exists
    only for backwards compatibility with the `sendmail` mail transfer agent. |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| `mailq` | 查看Postfix队列的当前内容。输出包括每条消息的大小、到达时间、发件人地址和收件人地址。内部上，`mailq`只是调用`postqueue`命令，仅用于与`sendmail`邮件传输代理的向后兼容性。'
- en: '| `newaliases` | Uses the `postalias` command to rebuild all local alias files.
    Local aliases will be covered in the *Virtual alias domains and local aliases*
    section. |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| `newaliases` | 使用`postalias`命令重建所有本地别名文件。本地别名将在*虚拟别名域和本地别名*部分介绍。'
- en: '| `postalias` | Rebuilds a single alias file or queries an alias lookup table.
    |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| `postalias` | 重建单个别名文件或查询别名查找表。'
- en: '| `postcat` | Shows the contents of a binary queue file residing in the Postfix
    queue. |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| `postcat` | 显示存储在Postfix队列中的二进制队列文件的内容。 |'
- en: '| `postconf` | Shows the current or default values of Postfix''s configuration
    parameters. Can also modify the main configuration file, which can be useful in
    scripts. |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '`postconf` | 显示Postfix配置参数的当前或默认值。也可以修改主配置文件，在脚本中很有用。'
- en: '| `postfix` | Starts, stops, or restarts Postfix, or reloads its configuration.
    Can also be used to check the integrity of the queue directories and a few other
    seldom-used administrative tasks. |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| `postfix` | 启动、停止或重新启动Postfix，或重新加载其配置。也可用于检查队列目录的完整性和一些其他很少使用的管理任务。'
- en: '| `postmap` | Rebuilds an indexed database file used for table lookups or queries
    any lookup table. The *Troubleshooting lookup tables with postmap* section discusses
    how this can be used to debug a Postfix setup. |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| `postmap` | 重建用于表查找或查询任何查找表的索引数据库文件。*使用postmap调试Postfix设置的查找表故障*部分讨论了如何使用它来调试Postfix设置。
    |'
- en: '| `postqueue` | Apart from carrying out the work for the `mailq` program, `postqueue`
    can also be used to flush the queue. Flushing a queue means moving all messages
    in the deferred queue to the active queue. This can be useful to schedule immediate
    message delivery, but be careful. If your server is heavily loaded and performing
    badly, flushing the queue will only make matters worse. The `sendmail` program
    can also be used to flush the queue, again for compatibility reasons. |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| `postqueue` | 除了执行`mailq`程序的工作外，`postqueue`还可以用于刷新队列。刷新队列意味着将延迟队列中的所有消息移动到活动队列中。这可以用于安排立即发送消息，但要小心。如果您的服务器负载过重且性能不佳，刷新队列只会使情况变得更糟。`sendmail`程序也可以用于刷新队列，出于兼容性原因。
    |'
- en: '| `postsuper` | Allows you to take actions on already queued messages, for
    example deleting or re-queuing them. It can also perform a structural check on
    the queue directories and fix problems such as queue files having the wrong names.
    Such a check is, for example, necessary if the whole queue directory has been
    moved or restored from a backup. |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| `postsuper` | 允许您对已排队的消息采取行动，例如删除或重新排队。它还可以对队列目录进行结构检查，并修复诸如队列文件名称错误之类的问题。例如，如果整个队列目录已经移动或从备份中恢复，这样的检查是必要的。
    |'
- en: Installation and basic configuration
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装和基本配置
- en: In this section, we will take a look at how to obtain and install Postfix as
    well as how to make basic configuration changes. By the end of this section, you
    will be able to use Postfix to send and receive e-mail messages.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将介绍如何获取和安装Postfix以及如何进行基本配置更改。在本节结束时，您将能够使用Postfix发送和接收电子邮件。
- en: Choosing the Postfix version
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 选择Postfix版本
- en: There are two separate branches of Postfix development—the official release
    and the experimental release. The official release is sometimes referred to as
    the stable release, but that is somewhat misleading as it implies that the experimental
    release is unstable. That is not the case. The experimental release is used to
    introduce all new Postfix features. When the implementations of the features and
    their interfaces (for example, their configuration parameters) have stabilized
    sufficiently, they are brought into the official release. Normally, the only changes
    made to the official release are bug fixes and fixes for portability problems.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: Postfix开发有两个独立的分支——官方发布和实验发布。官方发布有时被称为稳定发布，但这有点误导，因为这意味着实验发布不稳定。事实并非如此。实验发布用于引入所有新的Postfix功能。当功能的实现和它们的接口（例如它们的配置参数）已经足够稳定时，它们将被引入官方发布。通常，官方发布只会进行错误修复和可移植性问题的修复。
- en: The experimental release is usable in production environments, but the code
    is of course less tested, and configuration parameters and their semantics may
    change between releases. If you run the experimental builds, you are more likely
    to run into bugs and other oddities that the stable release should not have. On
    the other hand, you get access to new features before those using stable builds.
    If you choose to use the experimental release, you should build and install Postfix
    from source code instead of using some package management system (say RPMs). This
    will allow you to easily apply any patches for newly discovered problems.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 实验发布可在生产环境中使用，但代码当然经过的测试较少，配置参数及其语义可能会在发布之间发生变化。如果您运行实验构建，您更有可能遇到稳定发布不应该有的错误和其他奇怪的问题。另一方面，您可以在使用稳定构建之前访问新功能。如果选择使用实验发布，您应该从源代码构建和安装Postfix，而不是使用某些软件包管理系统（例如RPM）。这将使您能够轻松应用任何新发现问题的补丁。
- en: The experimental release has a version number that indicates the number of the
    upcoming official release together with the release date of the experimental release
    in question. For example, at the time of writing the current official release
    was 2.6.3 and the current experimental release was 2.7-20090807.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 实验发布的版本号表示即将发布的官方版本的编号以及所讨论的实验发布的发布日期。例如，在撰写本文时，当前的官方发布版本是2.6.3，当前的实验发布版本是2.7-20090807。
- en: Installing from a package
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从软件包安装
- en: Most Linux distributions include Postfix as a package that can easily be installed.
    You are better off with the distribution's package unless you are comfortable
    building software from source and, if required, debugging any build problems that
    might occur. Most packages come prebuilt with some extra features that would otherwise
    require a more complicated build process.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数Linux发行版都将Postfix作为一个可以轻松安装的软件包。除非您习惯于从源代码构建软件并且必要时调试可能出现的任何构建问题，否则最好使用发行版的软件包。大多数软件包都预先构建了一些额外的功能，否则需要更复杂的构建过程。
- en: Because there are many different packaging systems, the actual process of installing
    the Postfix package(s) will not be covered in this book. Please consult the documentation
    of your package management system for details.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 由于存在许多不同的打包系统，本书不会涵盖安装Postfix软件包的实际过程。请查阅您的软件包管理系统的文档以获取详细信息。
- en: Tip
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: 'A word of caution for users of distributions that allow multiple mail transfer
    agents to be installed at the same time: If you are installing Postfix to replace
    another mail transfer agent, you should make sure the previous software is properly
    removed from your system. As probably all mail transfer agents provide a `sendmail`
    program, this file is installed with a name such as `sendmail.postfix`, and a
    symbolic link points from `sendmail` to `sendmail.postfix` or whatever mail transfer
    agent''s `sendmail` program is chosen to be the main one. If that symbolic link
    does not point to Postfix''s `sendmail` program, you might get surprised when
    you attempt to send a message.'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 对于允许同时安装多个邮件传输代理的发行版的用户，需要注意一点：如果您安装Postfix以替换另一个邮件传输代理，您应该确保以前的软件已从系统中正确删除。因为几乎所有的邮件传输代理都提供`sendmail`程序，这个文件安装时的名称可能是`sendmail.postfix`，并且符号链接从`sendmail`指向`sendmail.postfix`或者选择为主要邮件传输代理的任何邮件传输代理的`sendmail`程序。如果该符号链接不指向Postfix的`sendmail`程序，当您尝试发送消息时可能会感到惊讶。
- en: Installing from source code
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从源代码安装
- en: Installing Postfix from the original source code is not very difficult and enables
    you to run any version you want and not just the version chosen by the package
    maintainer of your Linux distribution. The Postfix source code can be downloaded
    from a number of mirrors accessible from the main Postfix website [http://www.postfix.org/download.html](http://www.postfix.org/download.html).
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 从原始源代码安装Postfix并不是很困难，这样可以让您运行任何您想要的版本，而不仅仅是您的Linux发行版的软件包维护者选择的版本。Postfix源代码可以从主要Postfix网站[http://www.postfix.org/download.html](http://www.postfix.org/download.html)上访问的多个镜像中下载。
- en: Once you have downloaded and unpacked the archive in a suitable directory (for
    example)`/usr/local/src`, you will notice that the Postfix build system does not
    use GNU autotools and therefore does not have the `configure` script that one
    normally finds in the root directory of the unpacked source code archive. The
    Postfix build system will automatically take care of this step. Do not worry if
    you want to install Postfix in some non‑standard location, you will have an opportunity
    to set various installation directories later.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您在一个合适的目录（例如`/usr/local/src`）中下载并解压了存档文件，您会注意到Postfix构建系统不使用GNU autotools，因此在解压后的源代码存档的根目录中通常找不到`configure`脚本。Postfix构建系统将自动处理此步骤。如果您想要在一些非标准位置安装Postfix，不用担心，您将有机会稍后设置各种安装目录。
- en: 'If you need to enable non-standard features such as support for MySQL or LDAP
    lookups, you must inform the build system about this and where to find the libraries
    and header files for each feature. For exact instructions and details about each
    non-standard feature, please review the `README` file for each and every one of
    them. For example, the MySQL instructions found in `README_FILES/MYSQL_README`
    tell you to run the following command to enable MySQL support when building Postfix:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您需要启用非标准功能，例如对MySQL或LDAP查找的支持，您必须通知构建系统，并告知每个功能的库和头文件的位置。有关每个非标准功能的确切说明和详细信息，请查看每个`README`文件。例如，在`README_FILES/MYSQL_README`中找到的MySQL说明告诉您在构建Postfix时运行以下命令以启用MySQL支持：
- en: '[PRE0]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Adjust the paths to where the MySQL header files and shared libraries are located
    on your system. You must have the development header files and libraries for MySQL
    installed. Depending on your Linux distribution these may have to be installed
    separately.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 调整路径，使其指向系统中的MySQL头文件和共享库所在的位置。您必须安装了MySQL的开发头文件和库。根据您的Linux发行版，这些可能需要单独安装。
- en: 'If you need more than one extra feature, you will have to combine the commands
    given in each of the `README` files. Pay close attention when doing this. All
    quotes, equal signs, and spaces need to go at precisely the right places. The
    `CCARGS` and `AUXLIBS` variables must be set only once, so the general form of
    combining several configuration commands is this:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您需要多个额外功能，您将不得不结合每个`README`文件中给出的命令。在这样做时要特别注意。所有引号、等号和空格都需要放在准确的位置。`CCARGS`和`AUXLIBS`变量只能设置一次，因此结合几个配置命令的一般形式是这样的：
- en: '[PRE1]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'After this, you are all set to build Postfix using the following command:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，您可以使用以下命令构建Postfix：
- en: '[PRE2]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: When the build is complete (hopefully without errors), it is time to create
    a user and some groups that Postfix can use for many of its daemons. Start by
    adding two groups— `postfix` and `postdrop`. For example, you can use the `groupadd`
    tool that probably is available in your Linux distribution.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 构建完成后（希望没有错误），是时候创建一个用户和一些组，供Postfix的许多守护程序使用。首先添加两个组——`postfix`和`postdrop`。例如，您可以使用您的Linux发行版中可能可用的`groupadd`工具。
- en: '[PRE3]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Verify this by checking the contents of `/etc/group`. It should by now contain
    lines similar to this:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 通过检查`/etc/group`的内容来验证。现在它应该包含类似于这样的行：
- en: '[PRE4]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The next step is to create a user named `postfix`. This user requires neither
    shell access nor a valid home directory. The primary group of this new user should
    be the newly created `postfix` group. Here is how to do it using the `useradd`
    tool:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是创建一个名为`postfix`的用户。这个用户既不需要shell访问权限，也不需要有效的主目录。这个新用户的主要组应该是新创建的`postfix`组。以下是使用`useradd`工具执行此操作的方法：
- en: '[PRE5]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Again, verify by checking the contents of `/etc/passwd:`
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 再次通过检查`/etc/passwd`的内容来验证：
- en: '[PRE6]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The next and final step is to install your newly built Postfix. If you are
    installing Postfix for the first time in this particular Linux installation, run
    the following command:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步，也是最后一步，是安装您新构建的Postfix。如果您是在此特定的Linux安装中首次安装Postfix，请运行以下命令：
- en: '[PRE7]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: This command will guide you through an interactive installation procedure where
    you get to choose various installation directories and file locations.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令将引导您完成交互式安装过程，在此过程中，您可以选择各种安装目录和文件位置。
- en: 'If you are upgrading Postfix from a previous release, run the following command
    instead:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您正在从以前的版本升级Postfix，请运行以下命令：
- en: '[PRE8]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: All right! Postfix is now installed on your system and you will soon be ready
    to use it.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 好了！Postfix现在已经安装在您的系统上，很快您就可以开始使用它了。
- en: To make sure that Postfix starts when your system boots, some extra measures
    are needed. Most Linux systems have a `SysV-style init`, so you need to construct
    an `init` script and make proper links in the runlevel directories.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保Postfix在系统启动时启动，需要采取一些额外措施。大多数Linux系统都有`SysV-style init`，因此您需要构建一个`init`脚本，并在运行级别目录中创建适当的链接。
- en: The Postfix configuration
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Postfix配置
- en: Like most UNIX software, Postfix reads its configuration from text files stored
    in the `/etc` directory or a subdirectory thereof. Postfix configuration files
    are usually stored in `/etc/postfix`, but you can configure Postfix to use any
    other directory. Postfix uses two main configuration files, `master.cf` and `main.cf`,
    and any auxiliary files that you set up yourself.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 像大多数UNIX软件一样，Postfix从存储在`/etc`目录或其子目录中的文本文件中读取其配置。Postfix配置文件通常存储在`/etc/postfix`中，但您可以配置Postfix使用任何其他目录。Postfix使用两个主要配置文件，`master.cf`和`main.cf`，以及您自己设置的任何辅助文件。
- en: After a change to any of these files, Postfix must be reloaded. This can be
    done with the same program that started Postfix, either via the `init` scripts
    or via some other service management tool that your distribution provides.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 对这些文件的任何更改后，必须重新加载Postfix。可以使用启动Postfix的相同程序来执行此操作，可以通过`init`脚本或您的发行版提供的其他一些服务管理工具来执行。
- en: '[PRE9]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Note
  id: totrans-85
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '**Postfix restart required after changing**'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '**更改后需要重新启动Postfix**'
- en: If the `inet_interfaces` parameter is changed, a reload is not enough. Postfix
    must be stopped and restarted for the changes to take effect. This is also true
    for the `inet_protocols` parameter introduced in Postfix 2.2.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 如果更改`inet_interfaces`参数，则仅重新加载是不够的。必须停止并重新启动Postfix才能使更改生效。对于Postfix 2.2中引入的`inet_protocols`参数也是如此。
- en: main.cf
  id: totrans-88
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: main.cf
- en: 'The file you will be editing most frequently is `main.cf`. This file defines
    the parameters that control the behavior of Postfix''s daemon processes. Each
    line has the following form:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 您将经常编辑的文件是`main.cf`。该文件定义了控制Postfix守护进程行为的参数。每行的格式如下：
- en: '[PRE10]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'This simply means that the configuration parameter named `parameter` is assigned
    the contents `value`. A parameter may only be specified once in `main.cf`. If
    you mistakenly give the same parameter different contents at different places
    in `main.cf`, the last occurrence will be the one used by Postfix. Apart from
    this, the order in which parameters are listed in `main.cf` is insignificant.
    However, within the parameter contents the order of the keywords may matter. For
    example, the following two parameter settings are not necessarily equivalent:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 这只是意味着名为`parameter`的配置参数被赋予内容`value`。在`main.cf`中，一个参数只能被指定一次。如果您在`main.cf`的不同位置错误地给出相同参数不同的内容，Postfix将使用最后出现的内容。除此之外，在`main.cf`中列出参数的顺序是无关紧要的。但是，在参数内容中，关键字的顺序可能很重要。例如，以下两个参数设置不一定是等价的：
- en: '[PRE11]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: If the value of a parameter is not specified in `main.cf`, Postfix will use
    a default. The default for most parameters is hardwired in the source code, but
    some default values are determined at build time and a few of them at run time.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在`main.cf`中未指定参数的值，Postfix将使用默认值。大多数参数的默认值在源代码中是硬编码的，但有些默认值是在构建时确定的，还有一些是在运行时确定的。
- en: Lines in `main.cf` can be marked as comments by starting them with `#`.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在`main.cf`中以`#`开头的行可以标记为注释。
- en: '[PRE12]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'This short example also shows how the current value of another parameter can
    be inserted when setting a parameter value; simply type a dollar sign directly
    followed by the name of the parameter whose value you wish to obtain. The last
    line in the previous code snippet is equivalent to the following:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 这个简短的例子还展示了在设置参数值时如何插入另一个参数的当前值；只需直接输入一个美元符号，后面紧跟您希望获得其值的参数的名称。前面代码片段中的最后一行等同于以下内容：
- en: '[PRE13]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Sometimes it is not convenient to have everything on one line. By starting
    a line with whitespace, you tell Postfix that the line is a continuation of the
    previous line. For example, the following two are equivalent:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 有时将所有内容放在一行上并不方便。通过以空格开头的方式，您告诉Postfix该行是前一行的延续。例如，以下两种方式是等价的：
- en: '[PRE14]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Starting with Postfix 2.1, the format of the `main.cf` configuration file is
    documented in the `postconf(5)` manual page that also describes all available
    configuration parameters. The manual page is available online from [http://www.postfix.org/postconf.5.html](http://www.postfix.org/postconf.5.html).
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 从Postfix 2.1开始，`main.cf`配置文件的格式在`postconf(5)`手册页面中有详细说明，该页面还描述了所有可用的配置参数。该手册页面可从[http://www.postfix.org/postconf.5.html](http://www.postfix.org/postconf.5.html)在线获取。
- en: The `postconf` program is very useful for examining the current and default
    value of `main.cf` parameters. Start the program with one or more parameter names
    as options and it will report the values that Postfix would use. If you use the
    `-d` option, `postconf` will report the default value of the parameter(s) you
    list.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '`postconf`程序非常有用，可以用来检查`main.cf`参数的当前值和默认值。使用一个或多个参数名称作为选项启动程序，它将报告Postfix将使用的值。如果使用`-d`选项，`postconf`将报告您列出的参数的默认值。'
- en: 'For example, here is how to compare the current value of `mydestination` with
    its default value:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，以下是如何比较`mydestination`的当前值与其默认值：
- en: '[PRE15]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Using this method is often quicker than looking in `main.cf` or wading through
    a huge manual page to find the default value. It also reveals the actual value
    that Postfix thinks a parameter has, making it easier to spot typing errors.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这种方法通常比查看`main.cf`或浏览庞大的手册页面以找到默认值更快。它还揭示了Postfix认为参数具有的实际值，使得更容易发现打字错误。
- en: In addition to displaying `main.cf` configuration parameters, the `postconf`
    program can edit `main.cf` for you. This is especially useful if you want to automate
    configuration changes in scripts. This is done with the `-e` option that expects
    one or more parameter assignments to follow.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 除了显示`main.cf`配置参数外，`postconf`程序还可以为您编辑`main.cf`。如果您想要在脚本中自动化配置更改，这将非常有用。这是通过`-e`选项完成的，该选项需要接下来的一个或多个参数赋值。
- en: '[PRE16]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: master.cf
  id: totrans-107
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: master.cf
- en: The `master.cf` file configures the Postfix master daemon that was discussed
    earlier. For most simple Postfix setups, `master.cf` does not need to be touched
    at all.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '`master.cf`文件配置了前面讨论过的Postfix主守护程序。对于大多数简单的Postfix设置，`master.cf`根本不需要被修改。'
- en: Each line in `master.cf` defines a service that a certain program carries out.
    For example, the daemon that receives and processes SMTP connections, `smtpd`,
    is one service. The program that delivers messages to the local users, `local`,
    is another service. In addition to the 15 20 services that Postfix defines from
    the start, you can add your own services.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '`master.cf`中的每一行定义了某个程序执行的服务。例如，接收和处理SMTP连接的守护程序`smtpd`是一个服务。将消息传递给本地用户的程序`local`是另一个服务。除了Postfix从一开始就定义的15到20个服务之外，您还可以添加自己的服务。'
- en: The fifth column in `master.cf` controls whether each service should be run
    in a `chroot` environment. `chroot` is a UNIX feature that changes the root of
    the file system, making it impossible to access a file outside the new root directory
    even if a running process is compromised by an evildoer with root privileges.
    The source distribution of Postfix disables `chroot` completely by default, but
    some Linux distributions have it enabled. Although `chroot` is a security feature
    that can be quite useful as an extra safety net, it makes Postfix more difficult
    to maintain and is more or less useless unless the rest of your system is tightly
    secured.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '`master.cf`中的第五列控制每个服务是否应在`chroot`环境中运行。`chroot`是UNIX的一个功能，它改变了文件系统的根目录，使得即使运行中的进程被具有root权限的恶意用户入侵，也无法访问新根目录之外的文件。Postfix的源代码发行版默认完全禁用`chroot`，但一些Linux发行版已启用它。尽管`chroot`是一个非常有用的安全功能，可以作为额外的安全网，但它会使Postfix更难以维护，并且在其余系统没有得到严格保护的情况下几乎没有用处。'
- en: In Postfix 2.2 and later, the format of the `master.cf` configuration file is
    documented in the `master(5)` manual page. In earlier releases, most of that information
    can be found in comments in the `master.cf` file itself.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在Postfix 2.2及更高版本中，`master.cf`配置文件的格式在`master(5)`手册页中有文档记录。在早期版本中，大部分信息可以在`master.cf`文件的注释中找到。
- en: Lookup tables
  id: totrans-112
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 查找表
- en: Some information cannot be conveniently represented in `main.cf` or `master.cf`.
    Postfix's concept of lookup tables allows information to be stored in external
    files, relational databases, or LDAP directories.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 一些信息无法方便地表示在`main.cf`或`master.cf`中。Postfix的查找表概念允许将信息存储在外部文件、关系数据库或LDAP目录中。
- en: To Postfix, a lookup table is an abstract entity that maps one string, the **lookup
    key**, to another string, the **lookup result**. Those who are mathematically
    inclined may look upon it as a function or as a collection of (key, value) tuples,
    and programmers may recognize it as a hash table. Basically, it functions like
    a phonebook; you look up a name and get a phone number or an address back.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Postfix来说，查找表是一个将一个字符串（查找键）映射到另一个字符串（查找结果）的抽象实体。数学倾向的人可能会将其视为一个函数或（键，值）元组的集合，程序员可能会将其视为哈希表。基本上，它的功能类似于电话簿；您查找一个名字，然后得到一个电话号码或地址。
- en: Postfix supports many different kinds of lookup tables. Some of them are referred
    to as *indexed*, meaning that the `postmap` command is used to compile the input
    file written by the user to a binary format the Postfix reads. This is done for
    performance reasons and allows the tables to contain tens of thousands or even
    hundreds of thousands of entries without affecting performance. This means you
    need to remember to use `postmap` after editing the file.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: Postfix支持许多不同类型的查找表。其中一些被称为*索引*，这意味着使用`postmap`命令将用户编写的输入文件编译为Postfix读取的二进制格式。出于性能原因，这样做可以使表包含成千上万甚至数十万条目而不影响性能。这意味着您需要记住在编辑文件后使用`postmap`。
- en: 'The following table describes the most important lookup table types:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格描述了最重要的查找表类型：
- en: '| Type | Description |'
  id: totrans-117
  prefs: []
  type: TYPE_TB
  zh: '| 类型 | 描述 |'
- en: '| --- | --- |'
  id: totrans-118
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `cdb` | An indexed map type that uses the CDB library. Very fast for large
    number of entries. Supported by Postfix 2.2 and later versions. |'
  id: totrans-119
  prefs: []
  type: TYPE_TB
  zh: '| `cdb` | 使用CDB库的索引映射类型。对于大量条目非常快速。由Postfix 2.2及更高版本支持。 |'
- en: '| `cidr` | Allows lookups of IP addresses using the CIDR notation. Supported
    by Postfix 2.1 and later versions. |'
  id: totrans-120
  prefs: []
  type: TYPE_TB
  zh: '| `cidr` | 允许使用CIDR表示法查找IP地址。由Postfix 2.1及更高版本支持。 |'
- en: '| `dbm` | DBM is a classic UNIX indexed database format that is available on
    Linux too, but its use is discouraged because it uses two files to represent the
    database. This increases the risk of inconsistencies as the two files cannot be
    updated atomically. Use hash or cdb instead. |'
  id: totrans-121
  prefs: []
  type: TYPE_TB
  zh: '| `dbm` | DBM是一种经典的UNIX索引数据库格式，在Linux上也可用，但不建议使用，因为它使用两个文件来表示数据库。这增加了不一致性的风险，因为无法原子更新这两个文件。请改用哈希或cdb。
    |'
- en: '| `hash` | This indexed lookup table type is probably the most commonly used,
    and utilizes the Berkeley DB library. |'
  id: totrans-122
  prefs: []
  type: TYPE_TB
  zh: '| `hash` | 这种索引查找表类型可能是最常用的，它利用了Berkeley DB库。 |'
- en: '| `ldap` | LDAP directories are often used in corporate and university environments
    to store user databases. Microsoft''s Active Directory is also accessible through
    LDAP, simplifying the use of Postfix in a heterogeneous environment. |'
  id: totrans-123
  prefs: []
  type: TYPE_TB
  zh: '| `ldap` | LDAP目录通常用于企业和大学环境中存储用户数据库。Microsoft的Active Directory也可以通过LDAP访问，简化了在异构环境中使用Postfix的操作。
    |'
- en: '| `mysql` | The well-known MySQL relational database engine is supported, allowing
    you to make almost any type of SQL query. |'
  id: totrans-124
  prefs: []
  type: TYPE_TB
  zh: '| `mysql` | 支持广为人知的MySQL关系数据库引擎，允许您进行几乎任何类型的SQL查询。 |'
- en: '| `pcre` | Allows matching the looked-up strings against a list of regular
    expressions where the first matching expression wins. Uses the widespread **Perl
    Compatible Regular Expressions** (**PCRE**) library. |'
  id: totrans-125
  prefs: []
  type: TYPE_TB
  zh: '| `pcre` | 允许将查找的字符串与一系列正则表达式进行匹配，第一个匹配的表达式获胜。使用广泛使用的**Perl兼容正则表达式**（**PCRE**）库。|'
- en: '| `pgsql` | The PostgreSQL relational database engine is also supported. |'
  id: totrans-126
  prefs: []
  type: TYPE_TB
  zh: '| `pgsql` | 也支持PostgreSQL关系数据库引擎。|'
- en: '| `proxy` | The proxy type is a special lookup table type that is used to wrap
    other lookup tables. This is useful for reducing the number of concurrent connections
    when lookup tables are being used from services with a high process count. For
    example, accessing LDAP directories from the SMTP server can cause the maximum
    number of connections in the LDAP server to hit the roof, but accessing the LDAP
    directory through the proxy lookup table will reduce the concurrency. |'
  id: totrans-127
  prefs: []
  type: TYPE_TB
  zh: '| `proxy` | 代理类型是一种特殊的查找表类型，用于包装其他查找表。这对于减少并发连接的数量很有用，当查找表从具有高进程计数的服务中使用时。例如，从SMTP服务器访问LDAP目录可能会导致LDAP服务器的最大连接数达到上限，但通过代理查找表访问LDAP目录将减少并发性。|'
- en: '| `regexp` | Works such as `pcre` but without the dependency to the PCRE library.
    The regular expression grammar supported is limited and the performance may be
    worse than with `pcre`. If possible, choose `pcre` rather than `regexp`. |'
  id: totrans-128
  prefs: []
  type: TYPE_TB
  zh: '| `regexp` | 类似于`pcre`，但不依赖于PCRE库。支持的正则表达式语法有限，性能可能不如`pcre`。如果可能的话，选择`pcre`而不是`regexp`。|'
- en: '| `static` | This type is a special-purpose one that always returns a given
    string regardless of what is being looked up. This can be used in cases where
    Postfix expects a lookup table reference instead of a fixed string, but you really
    want to specify a fixed string. |'
  id: totrans-129
  prefs: []
  type: TYPE_TB
  zh: '| `static` | 这种类型是一个特殊用途的类型，无论查找什么，它总是返回一个给定的字符串。这可以用在Postfix期望查找表引用而不是固定字符串的情况下，但您确实想要指定一个固定字符串时使用。|'
- en: You can use any type of lookup table for any purpose; Postfix does not impose
    any limitations except that security considerations require that some features
    of regular expression tables are disabled under some circumstances. That said,
    not all lookup table types make sense to use for each and every purpose.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以为任何目的使用任何类型的查找表；Postfix不会强加任何限制，除了安全考虑要求在某些情况下禁用正则表达式表的某些功能。也就是说，并非所有查找表类型都适合用于每个目的。
- en: Many of the lookup table types are always supported by Postfix, but some of
    them are optional and require support to be compiled into Postfix. Many Linux
    vendors provide additional packages that you can install to obtain, for example,
    LDAP support. To find out which lookup table types your Postfix installation supports,
    use the `postconf` command.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: Postfix始终支持许多查找表类型，但其中一些是可选的，并且需要支持才能编译到Postfix中。许多Linux供应商提供了额外的软件包，您可以安装以获取，例如，LDAP支持。要找出您的Postfix安装支持哪些查找表类型，请使用`postconf`命令。
- en: '[PRE17]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: In most cases, the simple indexed lookup table types will be the most convenient
    ones. An indexed lookup table is nothing more than a text file that you can edit
    using your favorite text editor. The first part of each line, up to the first
    space or tab, will be taken as a lookup key and the rest of the line will be taken
    as the corresponding value.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数情况下，简单的索引查找表类型将是最方便的。索引查找表只是一个文本文件，您可以使用您喜欢的文本编辑器进行编辑。每行的第一部分，直到第一个空格或制表符，将被视为查找键，而行的其余部分将被视为相应的值。
- en: '[PRE18]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: One possible drawback with indexed lookup table types is that you do have to
    remember to run `postmap` when you have updated the table. You do not have to
    reload or restart Postfix after updating an indexed file with `postmap`. Postfix
    will discover the updated file itself and restart its daemon processes as required.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 索引查找表类型的一个可能的缺点是，当您更新表时，您必须记得运行`postmap`。更新带有`postmap`的索引文件后，您不必重新加载或重新启动Postfix。Postfix将自行发现更新的文件，并根据需要重新启动其守护进程。
- en: The topic of lookup tables could fill a whole chapter by itself, so this section
    will just touch upon them. We will use lookup tables in a few places later in
    this chapter, for example, when we set up policies for spam control.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 查找表的主题本身就可以填满一整章，因此本节只是简单涉及。我们将在本章的后面的一些地方使用查找表，例如，当我们设置垃圾邮件控制策略时。
- en: For a more elaborated discussion of lookup tables and a list of all available
    lookup table types, see `DATABASE_README` ([http://www.postfix.org/DATABASE_README.html](http://www.postfix.org/DATABASE_README.html))
    and the manual pages that document the use of some of the more complex lookup
    table types.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 有关查找表的更详细讨论和所有可用查找表类型的列表，请参阅`DATABASE_README`（[http://www.postfix.org/DATABASE_README.html](http://www.postfix.org/DATABASE_README.html)）和记录一些更复杂的查找表类型使用的手册页面。
- en: Getting Postfix up and running
  id: totrans-138
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 启动Postfix。
- en: Now that you have installed Postfix, let's make some basic configuration changes,
    fire it up, and take it for a test drive. If you installed Postfix from a package
    you may already have answered some configuration questions and have had Postfix
    started for you.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 既然您已经安装了Postfix，让我们进行一些基本配置更改，启动它，并进行测试。如果您从软件包中安装了Postfix，您可能已经回答了一些配置问题，并已经启动了Postfix。
- en: Domains and hostnames
  id: totrans-140
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 域名和主机名
- en: 'Before starting Postfix, let''s review some fundamental settings in `main.cf`.
    The first ones concern the names of your domain and your mailhost. The `mydomain`
    parameter should be set to your main Internet domain. If you run Example Inc.
    having the domain`http://www.example.com/`, the following setting would be reasonable:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在启动Postfix之前，让我们在`main.cf`中审查一些基本设置。首先是您的域名和邮件主机的名称。`mydomain`参数应设置为您的主要互联网域。如果您运行Example
    Inc.，拥有域`http://www.example.com/`，以下设置是合理的：
- en: '[PRE19]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: The value of `mydomain` will affect how Postfix transforms hostnames that are
    not fully qualified. This means that all bare hostnames encountered in places
    such as sender and recipient addresses will be qualified with this domain—a hostname
    such as `jeeves` will, in this case, be turned into `jeeves.example.com`. We will
    also refer to `mydomain` in other parameters using the `$parameter` notation described
    earlier. Note that the feature of appending `mydomain` can be disabled by setting
    the `append_dot_mydomain` parameter to `NO`, and some Linux distributions make
    this modification by default. In general, the value should be left as `YES`.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '`mydomain`的值将影响Postfix如何转换未完全合格的主机名。这意味着在发件人和收件人地址等位置遇到的所有裸主机名都将用该域进行修饰——在这种情况下，诸如`jeeves`的主机名将变成`jeeves.example.com`。我们还将在其他参数中使用`$parameter`符号提到`mydomain`。请注意，通过将`append_dot_mydomain`参数设置为`NO`可以禁用附加`mydomain`的功能，一些Linux发行版默认进行此修改。通常情况下，该值应保留为`YES`。'
- en: A related parameter is `myhostname` that incidentally tells Postfix the hostname
    of the machine. The hostname is among other things used as default when the Postfix
    SMTP server greets a client and when the SMTP client says HELLO to a server. Postfix
    is normally able to determine this by itself, but sometimes you want to override
    this. Use the `postconf` command to see if the current value looks good.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 与之相关的一个参数是`myhostname`，它偶然告诉Postfix机器的主机名。主机名在其他情况下用作默认值，当Postfix SMTP服务器向客户端问候时以及SMTP客户端向服务器问好时。Postfix通常能够自行确定这一点，但有时您可能想要覆盖这一点。使用`postconf`命令查看当前值是否合适。
- en: '[PRE20]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Yes, this looks fine. Note that this hostname is not fully qualified, so the
    actual hostname used in various places will include `mydomain`.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，这看起来不错。请注意，此主机名未完全合格，因此各处使用的实际主机名将包括`mydomain`。
- en: A parameter that is related to `mydomain` is `myorigin`. This parameter specifies
    the domain that should be used to qualify e-mail addresses that have no domain
    part at all. This may seem highly irregular, but it is actually pretty common.
    Messages submitted with the `sendmail` program will by default get the current
    username as the sender address and, because usernames do not have domains, the
    username will be qualified with `myorigin` before the message is delivered anywhere.
    By default, `myorigin` is set to the same value as `myhostname`.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 与`mydomain`相关的一个参数是`myorigin`。该参数指定应该用于修饰没有域部分的电子邮件地址的域。这可能看起来非常不规则，但实际上相当常见。使用`sendmail`程序提交的消息将默认以当前用户名作为发件人地址，因为用户名没有域，所以在消息传递到任何地方之前，用户名将在`myorigin`之前进行修饰。默认情况下，`myorigin`设置为与`myhostname`相同的值。
- en: '[PRE21]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: This should be fine, but you might want to set it to `mydomain` instead.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该没问题，但您可能希望将其设置为`mydomain`。
- en: '[PRE22]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: The next parameter that we will give attention to is `mydestination`. This parameter
    is quite important because it tells Postfix which domains are considered local,
    that is, which domains should be delivered to UNIX accounts on this machine. Unlike
    `mydomain` and `myorigin, mydestination` may contain multiple domains separated
    by space or commas. By listing `example.com` here, Postfix will accept messages
    addressed to `joe@example.com` and deliver them to the UNIX user "joe".
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将要关注的下一个参数是`mydestination`。该参数非常重要，因为它告诉Postfix哪些域被视为本地域，也就是说，哪些域应该传递到此计算机上的UNIX帐户。与`mydomain`和`myorigin`不同，`mydestination`可以包含由空格或逗号分隔的多个域。通过在此处列出`example.com`，Postfix将接受发送到`joe@example.com`的消息并将其传递给UNIX用户“joe”。
- en: One important property of local domains is that they are all considered equal.
    If `example.com` and `example.net` are both listed in `mydestination, joe@example.com`
    will be equivalent to `joe@example.net`. If you need additional domains where
    the users are not equal, that is `joe@example.com` and `joe@example.net` should
    lead to different mailboxes, you need to implement virtual alias domains, described
    in the *Virtual alias domains* section.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 本地域的一个重要特性是它们都被视为相等。如果`example.com`和`example.net`都在`mydestination`中列出，那么`joe@example.com`将等同于`joe@example.net`。如果您需要其他用户不相等的域，即`joe@example.com`和`joe@example.net`应该导致不同的邮箱，您需要实现虚拟别名域，该域在*虚拟别名域*部分中有描述。
- en: 'Returning to Example Inc. you will want to have `example.com` listed in `mydestination`
    as it is your primary domain. The old domain, `example.net`, should also work
    for the time being so that one should be included too. Additionally, it is wise
    to list the value of `myhostname` in `mydestination` as well as make sure that
    mail addressed to `localhost` gets delivered properly. This yields the following
    complete list of local domains for Example Inc.:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 回到Example Inc.，您将希望在`mydestination`中列出`example.com`作为您的主要域。旧域`example.net`也应该在一段时间内有效，因此也应该包括在内。此外，明智的做法是在`mydestination`中列出`myhostname`的值，并确保发送到`localhost`的邮件能够正确传递。这就得到了Example
    Inc.的本地域的完整列表：
- en: '[PRE23]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: So why `localhost.$mydomain` instead of just `localhost` if we want messages
    to `root@localhost` to be delivered locally? Remember that `mydomain` is used
    to qualify all hostnames that are not already fully qualified (one may argue that
    `localhost` in fact already is a fully qualified hostname, but Postfix does not
    make a special case for that hostname). The address `root@localhost` will be rewritten
    to `root@localhost.example.com`, so `localhost.example.com` is what we want to
    list in `mydestination.`
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 那么为什么是`localhost.$mydomain`而不只是`localhost`，如果我们希望将`root@localhost`的消息传递到本地？请记住，`mydomain`用于修饰所有未完全合格的主机名（有人可能会争辩说`localhost`实际上已经是一个完全合格的主机名，但Postfix并没有为该主机名做特殊处理）。地址`root@localhost`将被重写为`root@localhost.example.com`，因此`localhost.example.com`是我们想要列在`mydestination`中的内容。
- en: Two very important Postfix parameters, `mynetworks` and `mynetworks_style`,
    control which hosts are allowed to use your server as a relay. Setting these incorrectly
    may allow your server to be abused by spammers and the likes, so it is important
    that you get them right. By default, all hosts on the subnets that your server
    is directly connected to will be allowed access. This should be secure in most
    cases. These parameters and other methods of allowing relay access will be discussed
    in depth in [Chapter 5](ch05.html "Chapter 5. Securing Your Installation").
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 两个非常重要的Postfix参数`mynetworks`和`mynetworks_style`控制着允许哪些主机将您的服务器用作中继。设置这些参数不正确可能会导致您的服务器被垃圾邮件发送者等滥用，因此很重要确保设置正确。默认情况下，将允许直接连接到您的服务器的子网上的所有主机访问。在大多数情况下，这应该是安全的。这些参数和其他允许中继访问的方法将在[第5章](ch05.html
    "第5章。保护您的安装")中深入讨论。
- en: Indirect mail delivery through your ISP
  id: totrans-157
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 通过ISP间接邮件传递
- en: Some **Internet Service Providers** (**ISP**) do not allow their customers to
    directly access remote mail servers via the standard SMTP port (`25`). Instead
    they provide a relay server that all outbound messages must go through. This policy
    is common for residential cable or DSL connections, but some providers have the
    same policy for commercial-grade connections. If such is the case, you need to
    configure Postfix to deliver all outbound messages indirectly via your ISP's relay
    server.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 一些互联网服务提供商（ISP）不允许他们的客户通过标准的SMTP端口（25）直接访问远程邮件服务器。相反，他们提供一个中继服务器，所有出站消息都必须通过该服务器。这种政策在家庭电缆或DSL连接中很常见，但是一些提供商对商业级连接也有相同的政策。如果是这种情况，您需要配置Postfix通过ISP的中继服务器间接地传递所有出站消息。
- en: 'This is done with the `relayhost` parameter that contains the hostname or IP
    address of the relay server to use. The following forms are allowed:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 这是使用包含中继服务器的主机名或IP地址的`relayhost`参数完成的。允许以下形式：
- en: '[PRE24]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: The first form will cause Postfix to perform an MX lookup on the hostname, just
    as it would do for a normal message delivery. Enclosing the hostname in square
    brackets as in the second example suppresses the MX lookup. The square brackets
    are also required in the third case when an IP address is specified.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 第一种形式将导致Postfix对主机名执行MX查找，就像对正常消息传递一样。在第二个示例中将主机名括在方括号中会抑制MX查找。当指定IP地址时，第三种情况也需要使用方括号。
- en: Optionally, the hostname or address can be followed by `:port` to specify an
    alternative TCP port. Note that you cannot specify multiple hostnames or addresses
    to achieve fallback or load balancing behavior. If you need fallback hosts when
    the normal relay server is unreachable, take a look at the `fallback_relay` parameter.
    Refer the *Other useful configuration parameters* section for additional information
    on other parameters.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 可选地，主机名或地址后面可以跟着`:port`来指定替代的TCP端口。请注意，您不能指定多个主机名或地址以实现备用或负载平衡行为。如果在正常中继服务器不可用时需要备用主机，请查看`fallback_relay`参数。有关其他参数的其他信息，请参阅*其他有用的配置参数*部分。
- en: Choosing network interfaces
  id: totrans-163
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 选择网络接口
- en: The `inet_interfaces` parameter decides the network interfaces that Postfix
    will use for both listening to new connections and sending out messages. If you
    have multiple network interfaces and you do not want Postfix to use all of them,
    you can adjust this parameter to list the addresses or hostnames of the interfaces
    you do want Postfix to use.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '`inet_interfaces`参数决定了Postfix将用于监听新连接和发送消息的网络接口。如果您有多个网络接口，并且不希望Postfix使用所有这些接口，您可以调整此参数以列出您希望Postfix使用的接口的地址或主机名。'
- en: Some Linux distributions set `inet_interfaces` to `localhost` by default, which
    means that Postfix will listen only on the loopback interface. This makes at least
    some sense for workstations, but it is obviously completely unusable for servers
    that need to receive messages from foreign hosts. If the Postfix packaging of
    your Linux distribution has this feature, just delete or comment the `inet_interfaces`
    line from `main.cf` to disable it. Postfix will then use the default value of
    `all`, which of course means that all interfaces should be used.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 一些Linux发行版默认将`inet_interfaces`设置为`localhost`，这意味着Postfix只会在环回接口上监听。这对工作站至少有些意义，但显然对需要从外部主机接收消息的服务器来说完全无法使用。如果您的Linux发行版的Postfix打包具有此功能，只需从`main.cf`中删除或注释`inet_interfaces`行以禁用它。然后Postfix将使用`all`的默认值，这当然意味着应该使用所有接口。
- en: Note
  id: totrans-166
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Changing `inet_interfaces` requires Postfix to be restarted. A reload is not
    enough.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 更改`inet_interfaces`需要重新启动Postfix。重新加载是不够的。
- en: Choosing mailbox format for local deliveries
  id: totrans-168
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 选择本地投递的邮箱格式
- en: By default, Postfix delivers local messages (messages to domains listed in `mydestination`)
    into files in `mbox` format. The `mbox` format for mailboxes stores all messages
    of a mailbox in a single text file. These files are named after the user and go
    into the directory specified by `mail_spool_directory` (normally `/var/mail` or
    `/var/spool/mail`). If the user desires additional mailboxes to store messages,
    those files are stored somewhere in the user's home directory (often in `$HOME/mail`
    or `$HOME/Mail`).
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Postfix将本地消息（发送到`mydestination`中列出的域的消息）以`mbox`格式传递到文件中。`mbox`邮箱格式将邮箱中的所有消息存储在单个文本文件中。这些文件以用户命名，并放入`mail_spool_directory`指定的目录中（通常为`/var/mail`或`/var/spool/mail`）。如果用户希望有额外的邮箱来存储消息，这些文件将存储在用户的主目录中的某个位置（通常为`$HOME/mail`或`$HOME/Mail`）。
- en: The `mbox` format has a few flaws that make it rather undesirable. The single-file
    format makes message deletion expensive as the whole file must be rewritten completely
    unless the message deleted is the last one, in which case the file can just be
    truncated. `mbox` also puts up hurdles when multiple processes need to access
    the same mailbox concurrently, which happens when a user uses a POP server to
    retrieve and delete messages while new mail is being delivered. This requires
    that some method of exclusive locking is used to avoid the concurrent access that
    might corrupt the files. Such locking is not a big problem if all software run
    on the same machine, access the same local file system, and agree on which locking
    method to use, but it is a royal pain if mailboxes need to be accessed over the
    network via network file systems such as NFS where reliable file locking can be
    a problem. Finally, `mbox` causes problems if used together with disk quotas.
    While the mailbox is being rewritten, it will use up to twice the original storage.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '`mbox`格式有一些缺陷，使其相当不理想。单文件格式使得删除消息变得昂贵，因为除非删除的消息是最后一条消息，否则整个文件必须完全重写，此时文件可以被截断。当多个进程需要同时访问同一个邮箱时，`mbox`也会出现障碍，当用户使用POP服务器检索和删除消息时，同时新邮件正在投递时会发生这种情况。这要求使用某种排他性锁定方法来避免可能损坏文件的并发访问。如果所有软件在同一台机器上运行，访问相同的本地文件系统，并且就使用哪种锁定方法达成一致，这样的锁定并不是一个大问题，但如果需要通过网络访问邮箱，比如通过NFS这样的网络文件系统，可靠的文件锁定可能会成为一个问题。最后，如果与磁盘配额一起使用，`mbox`会出现问题。当邮箱被重写时，它将使用原始存储的两倍。'
- en: To avoid these problems, D. J. Bernstein, the author of software such as `qmail`
    and `djbdns`, designed the `maildir` format for mailboxes. As the name implies,
    `maildir` uses directories and one file per message. Deletion of messages is always
    very fast, but on the other hand it may take longer to scan a mailbox and produce
    a list of all messages as all message files have to be opened and read. `maildir`
    is safe to use with NFS. In the `maildir` delivery format, the inbox of a user
    is typically found in `$HOME/Maildir`.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 为了避免这些问题，软件作者D.J. Bernstein设计了`maildir`格式的邮箱，例如`qmail`和`djbdns`。顾名思义，`maildir`使用目录和每个消息一个文件。删除消息总是非常快的，但另一方面，扫描邮箱并生成所有消息列表可能需要更长时间，因为所有消息文件都必须被打开和读取。`maildir`在NFS上使用是安全的。在`maildir`投递格式中，用户的收件箱通常位于`$HOME/Maildir`中。
- en: 'To configure Postfix to deliver new messages to local users to `$HOME/Maildir`,
    set the `home_mailbox` parameter like this:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 要配置Postfix将新邮件投递给本地用户的`$HOME/Maildir`，请设置`home_mailbox`参数如下：
- en: '[PRE25]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Note the slash at the end of the line; it is important! Postfix follows the
    convention used by many other programs that a mailbox location ending with a slash
    denotes `maildir`. If you omit the slash, Postfix will try to deliver messages
    to the `mbox` file `$HOME/Maildir`.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意行尾的斜杠；这很重要！Postfix遵循许多其他程序使用的惯例，即以斜杠结尾的邮箱位置表示`maildir`。如果省略斜杠，Postfix将尝试将邮件投递到`mbox`文件`$HOME/Maildir`。
- en: The `home_mailbox` parameter is only effective for local domains when Postfix
    performs the delivery itself. If delivery is made by some other delivery agent
    such as Procmail or Maildrop, you have to configure that software for `maildir`
    delivery.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: '`home_mailbox`参数仅在Postfix自行进行投递时对本地域有效。如果投递由其他投递代理（如Procmail或Maildrop）进行，您必须为`maildir`投递配置该软件。'
- en: The rest of this book assumes that you have chosen `maildir` delivery. The IMAP/POP
    server you will be introduced to later, Courier IMAP, does not support the `mbox`
    format at all. Converting mailboxes between `mbox` and `maildir` is not difficult,
    so if you want to switch formats later that would not be a problem.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的其余部分假定您已选择`maildir`投递。稍后将介绍的IMAP/POP服务器Courier IMAP根本不支持`mbox`格式。在`mbox`和`maildir`之间转换邮箱并不困难，因此如果以后想要切换格式，那也不是问题。
- en: Error reporting
  id: totrans-177
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 错误报告
- en: The final step is to make sure that Postfix and real people around the world
    can notify you as a postmaster about error conditions. Internet standards require
    all domains to have a postmaster address, but you do not need to create an account
    with that name. Instead you can use the aliasing feature of Postfix to redirect
    messages addressed to the postmaster address to yourself and any other people
    that manage the mail system. Also, you should redirect messages to the root account.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一步是确保Postfix和世界各地的真实用户可以通知您作为postmaster的错误情况。互联网标准要求所有域都有一个postmaster地址，但您不需要创建具有该名称的帐户。相反，您可以使用Postfix的别名功能将发送到postmaster地址的消息重定向到您自己和管理邮件系统的其他人。此外，您还应该将消息重定向到root帐户。
- en: 'Aliases will be discussed in more detail in the *Local Aliases* section, but
    this step should be done right now so we will take a quick look anyway. To make
    Postfix redirect root''s messages and accept messages addressed to postmaster
    even though no such user account exists, the local alias table must be modified.
    The configuration parameter `alias_maps` controls the location of the lookup tables
    that define such mappings:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 本地别名将在*本地别名*部分中更详细地讨论，但现在应该立即完成此步骤，因此我们将快速浏览一下。为了使Postfix重定向root的消息并接受发送到postmaster的消息（即使不存在这样的用户帐户），必须修改本地别名表。配置参数`alias_maps`控制定义此类映射的查找表的位置：
- en: '[PRE26]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'On this particular system, the local aliases are stored in the file `/etc/aliases`.
    Edit that file so that it contains two lines similar to these:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个特定的系统上，本地别名存储在文件`/etc/aliases`中。编辑该文件，使其包含类似于以下两行的内容：
- en: '[PRE27]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: This means that messages addressed to the postmaster will be sent to the root
    user, and messages to the root user will be redirected to the users, "jack" and
    "jill". Save the file and run the `newaliases` command so that Postfix will pick
    up the changes to the file.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着发送到postmaster的消息将被发送到root用户，发送到root用户的消息将被重定向到用户"jack"和"jill"。保存文件并运行`newaliases`命令，以便Postfix可以应用对文件的更改。
- en: Note
  id: totrans-184
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Note that alias lookups are recursive—Postfix does not stop when the `postmaster`
    lookup has succeeded, it continues to look up `root`, and finally `jack` and `jill.
    jack` and `jill` may not have alias entries, in which case Postfix stops the lookup
    recursion.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，别名查找是递归的——Postfix在`postmaster`查找成功后不会停止，它会继续查找`root`，最后是`jack`和`jill`。如果`jack`和`jill`没有别名条目，那么Postfix将停止查找递归。
- en: 'The type of problems that Postfix will report to the postmaster is configurable
    with the `notify_classes` parameter. By default, only resource issues such as
    out-of-disk-space problems and software problems will be reported, but you may
    configure Postfix to report more types of problems. For example, you might also
    want to know about SMTP protocol violations:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: Postfix将向邮件管理员报告的问题类型可以通过`notify_classes`参数进行配置。默认情况下，只会报告资源问题，如磁盘空间不足问题和软件问题，但您可以配置Postfix以报告更多类型的问题。例如，您可能还想了解有关SMTP协议违规的信息：
- en: '[PRE28]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: When Postfix reports a problem, a transcript of the SMTP session is included.
    This can be a valuable debugging aid.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 当Postfix报告问题时，会包括SMTP会话的转录。这可以是有价值的调试辅助工具。
- en: Opt for more extensive error reporting rather than terse reporting. If you receive
    too many error reports, see if you can use the filtering features of your delivery
    agent or your mail client to remove the error reports that you are not interested
    in. Protocol violations by incoming spam mail generated by badly written spam
    software can typically be ignored, but if one of your own computers behaves badly
    you will want to know about it.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 选择更详尽的错误报告而不是简洁的报告。如果您收到太多错误报告，请查看是否可以使用投递代理或邮件客户端的过滤功能来删除您不感兴趣的错误报告。由糟糕编写的垃圾邮件软件生成的入站垃圾邮件的协议违规通常可以被忽略，但如果您自己的计算机行为不端，您会想知道这一点。
- en: Other useful configuration parameters
  id: totrans-190
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 其他有用的配置参数
- en: In addition to the configuration parameters covered so far, a few others that
    can be useful to know about will be mentioned. You will most likely do fine using
    their default values. If you want more information about them, please consult
    the documentation that came with your version or Postfix or read the documentation
    online at [http://www.postfix.org/documentation.html](http://www.postfix.org/documentation.html).
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 除了到目前为止涵盖的配置参数外，还将提到一些其他可能有用的参数。您很可能会使用它们的默认值。如果您想了解更多关于它们的信息，请查阅随您版本或Postfix一起提供的文档，或在线阅读文档[http://www.postfix.org/documentation.html](http://www.postfix.org/documentation.html)。
- en: '| Parameter | Description |'
  id: totrans-192
  prefs: []
  type: TYPE_TB
  zh: '| 参数 | 描述 |'
- en: '| --- | --- |'
  id: totrans-193
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `always_bcc` | Sends a copy of each message to a specified recipient. This
    can be used for e-mail archiving. If you need more fine-grained control over which
    messages are copied, take a look at `sender_bcc_maps` and `recipient_bcc_maps`.
    The latter two parameters require Postfix 2.1 or later. |'
  id: totrans-194
  prefs: []
  type: TYPE_TB
  zh: '| `always_bcc` | 将每个消息的副本发送给指定的收件人。这可用于电子邮件归档。如果您需要更精细的控制哪些消息被复制，请查看`sender_bcc_maps`和`recipient_bcc_maps`。后两个参数要求Postfix
    2.1或更高版本。 |'
- en: '| `defer_transports` | Contains names of transports (delivery agents, more
    or less) whose deliveries should be temporarily deferred. This allows you to suspend
    local message deliveries if the file system for the home directories is broken
    or unavailable but the rest of the system works fine. |'
  id: totrans-195
  prefs: []
  type: TYPE_TB
  zh: '| `defer_transports` | 包含传输（投递代理）的名称，其投递应该被暂时推迟。这允许您暂停本地消息投递，如果家目录的文件系统损坏或不可用，但系统的其余部分正常工作。
    |'
- en: '| `delay_warning_time` | By default, Postfix does not send a warning if a message
    cannot be delivered for some time. Setting this parameter to a particular duration,
    say `5h` for five hours, will cause Postfix to send a single warning message for
    each message that has been undeliverable for that period of time.A word of caution,
    though: Your users may not be able to interpret this warning message correctly.
    Even though Postfix clearly states that it is only a warning and that the message
    does not need to be resent, many users do not understand this and resend their
    delayed message anyway. |'
  id: totrans-196
  prefs: []
  type: TYPE_TB
  zh: '| `delay_warning_time` | 默认情况下，Postfix在消息无法投递一段时间后不会发送警告。将此参数设置为特定的持续时间，例如`5h`表示五小时，将导致Postfix为每个已经无法投递的消息发送一条警告消息。但要注意：您的用户可能无法正确解释此警告消息。尽管Postfix明确表示这只是一个警告，消息不需要重新发送，但许多用户不理解这一点，仍然重新发送延迟的消息。
    |'
- en: '| `mailbox_size_limit` | This parameter controls the maximum size of a local
    mailbox or maximum size of a message when using `maildir` mailboxes. Nowadays
    the default of 50 MB may be too low, especially if you are using the default `mbox`
    format for mailboxes. |'
  id: totrans-197
  prefs: []
  type: TYPE_TB
  zh: '| `mailbox_size_limit` | 此参数控制本地邮箱的最大大小或使用`maildir`邮箱时消息的最大大小。如今，默认值50 MB可能太低，特别是如果您正在使用默认的`mbox`格式进行邮箱存储。
    |'
- en: '| `maximal_queue_lifetime` | Specifies how long Postfix will retry failed deliveries
    of messages before they are returned to the sender. The default of five days is
    reasonable and should not be changed without good reasons. From Postfix 2.1 onwards,
    there is also `bounce_queue_lifetime` that is the same thing, but for bounce messages
    with an empty sender address. |'
  id: totrans-198
  prefs: []
  type: TYPE_TB
  zh: '| `maximal_queue_lifetime` | 指定Postfix在将消息的投递失败重试返回给发件人之前的时间。默认值为五天是合理的，不应该没有充分理由而更改。从Postfix
    2.1开始，还有`bounce_queue_lifetime`，它是相同的东西，但用于带有空发件人地址的退信消息。 |'
- en: '| `message_size_limit` | This parameter controls the maximum size of a message.
    The default value of 10 MB is reasonable (mail is not the best transport method
    for large files), but may need to be adjusted. Remember that messages are sent
    using only 7 bits, so if you want to allow 20 MB binary files, you must add about
    35% to compensate for the overhead of the 7 bit encoding of the file. |'
  id: totrans-199
  prefs: []
  type: TYPE_TB
  zh: '| `message_size_limit` | 此参数控制消息的最大大小。默认值为10 MB是合理的（邮件不是大文件的最佳传输方法），但可能需要调整。请记住，消息仅使用7位发送，因此如果您想允许20
    MB的二进制文件，您必须增加约35％以补偿文件的7位编码的开销。 |'
- en: '| `proxy_interfaces` | If your server is connected to the Internet via a proxy
    or NAT device so that Postfix cannot determine all network addresses that can
    be used to reach the server, add those addresses to this parameter. |'
  id: totrans-200
  prefs: []
  type: TYPE_TB
  zh: '| `proxy_interfaces` | 如果您的服务器通过代理或NAT设备连接到互联网，以至于Postfix无法确定可以用于到达服务器的所有网络地址，请将这些地址添加到此参数中。
    |'
- en: Starting Postfix and sending the first message
  id: totrans-201
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 启动Postfix并发送第一条消息
- en: 'With these settings in place, it is time to start Postfix. Use the following
    Postfix command to do this:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这些设置，现在是时候启动Postfix了。使用以下Postfix命令来执行此操作：
- en: '[PRE29]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'To verify that Postfix is running, take a look in the log file. Postfix logs
    via the standard `syslog` interface, and the exact location of the log files depends
    on the `syslog` daemon configuration. The mail logs will typically be named `/var/log/maillog,
    /var/log/mail.info`, or something similar. The configuration of your `syslog`
    daemon, typically found in `/etc/syslog.conf`, contains the details. This is what
    you will find at the end of the mail log after you have started Postfix:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 要验证Postfix是否正在运行，请查看日志文件。Postfix通过标准的`syslog`接口记录日志，日志文件的确切位置取决于`syslog`守护程序的配置。邮件日志通常被命名为`/var/log/maillog`、`/var/log/mail.info`或类似的名称。您的`syslog`守护程序的配置，通常位于`/etc/syslog.conf`中，包含了详细信息。在启动Postfix后，您将在邮件日志的末尾找到以下内容：
- en: '[PRE30]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Postfix is now ready to receive and deliver messages. To try it out, use your
    favorite mail client and send a test mail to yourself. If your mail client uses
    SMTP, remember to reconfigure it to use your server.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: Postfix现在已准备好接收和传递消息。要尝试它，请使用您喜欢的邮件客户端并向自己发送一封测试邮件。如果您的邮件客户端使用SMTP，请记得重新配置它以使用您的服务器。
- en: If you get an error message from your mail client when you try to send the test
    message, read your log again. Does it show any traces of a connection from the
    host on which you run your mail client? If so, is any error message logged? To
    get hints on how to debug Postfix problems, see the *Troubleshooting Postfix problems*
    section.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在尝试发送测试消息时从邮件客户端收到错误消息，请再次阅读您的日志。它是否显示来自运行邮件客户端的主机的连接的任何痕迹？如果是，是否记录了任何错误消息？要获取有关如何调试Postfix问题的提示，请参阅*调试Postfix问题*部分。
- en: Once you have sent the message successfully, you will also want to check that
    it is delivered properly. As you have not yet configured a POP or IMAP server,
    that road is not an option. But if you have installed a mail client on your server
    that reads mail directly from the file system (mail, Pine, Mutt, and many more)
    things should work fine as long as your mail client is configured to look for
    new messages in the same place as Postfix delivers them. If you have chosen `maildir`
    delivery, the default settings of your mail client probably won't do.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您成功发送了消息，您还需要检查它是否被正确传递。由于您尚未配置POP或IMAP服务器，因此这条路不可行。但是，如果您在服务器上安装了直接从文件系统读取邮件的邮件客户端（如mail、Pine、Mutt等），只要您的邮件客户端配置为在与Postfix传递消息相同的位置查找新消息，事情应该会顺利进行。如果您选择了`maildir`交付，那么您的邮件客户端的默认设置可能行不通。
- en: In any case, reading the mailbox directly from the file system is always an
    option. With normal `mbox` delivery, the mailbox file has the same name as the
    user and resides in the directory pointed to by the `mail_spool_directory` configuration
    parameter. With `maildir` delivery, the message will typically be found in a file
    of its own in the `$HOME/Maildir/new` directory.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 无论如何，直接从文件系统读取邮箱始终是一个选择。对于普通的`mbox`交付，邮箱文件与用户名称相同，并位于`mail_spool_directory`配置参数指向的目录中。对于`maildir`交付，消息通常会在`$HOME/Maildir/new`目录中的自己的文件中找到。
- en: If all has gone well, the message was delivered to the expected place. Whatever
    delivery method you choose, make sure you know where delivered messages end up.
    That knowledge will be valuable when you have to debug delivery problems.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切顺利，消息将被传递到预期的位置。无论您选择哪种交付方式，请确保您知道传递的消息最终会到哪里。当您需要调试传递问题时，这种知识将非常有价值。
- en: Stopping spam and other unwanted messages
  id: totrans-211
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 停止垃圾邮件和其他不需要的消息
- en: This section will discuss the various methods Postfix provides to help stop
    unwanted messages. Spam, or unsolicited commercial e-mail, is perhaps the biggest
    problem that e-mail server administrators face, but there may also be other kinds
    of messages that one does not want to receive.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将讨论Postfix提供的各种方法，以帮助阻止不需要的消息。垃圾邮件或未经请求的商业电子邮件可能是电子邮件服务器管理员面临的最大问题，但也可能存在其他类型的不想接收的消息。
- en: Postfix by itself will not stop all spam, but it can catch many spam messages.
    For some people this may be adequate, but if you need to fight large volumes of
    spam you may need a tool such as SpamAssassin, described in [Chapter 8](ch08.html
    "Chapter 8. Busting Spam with SpamAssassin"). Even if you use SpamAssassin, Postfix's
    own lightweight methods can help reduce the load on the server by rejecting the
    messages before they even reach SpamAssassin.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: Postfix本身不能完全阻止所有垃圾邮件，但它可以捕捉到许多垃圾邮件。对于一些人来说，这可能是足够的，但如果您需要对抗大量的垃圾邮件，您可能需要像SpamAssassin这样的工具，该工具在[第8章](ch08.html
    "第8章。使用SpamAssassin消灭垃圾邮件")中有描述。即使您使用SpamAssassin，Postfix自己的轻量级方法也可以帮助减少服务器的负载，拒绝消息甚至在它们到达SpamAssassin之前。
- en: 'Postfix''s anti-spam methods: An overview'
  id: totrans-214
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Postfix的反垃圾邮件方法：概述
- en: 'There is no silver bullet to stop all spam, but Postfix provides a number of
    methods that you can use to help the situation:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 没有万能的方法可以阻止所有垃圾邮件，但Postfix提供了许多方法，可以帮助解决这个问题：
- en: '**SMTP restrictions:** SMTP restrictions let you define rules that control
    whether or not a message is accepted by Postfix. The rules cannot take into account
    the content of the message, just the envelope information. The SMTP restrictions
    are not merely a tool for stopping spam, but a general way of defining policies
    for the usage of the mail system.'
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SMTP限制：** SMTP限制允许您定义控制Postfix是否接受消息的规则。这些规则不能考虑消息的内容，只能考虑信封信息。SMTP限制不仅仅是阻止垃圾邮件的工具，还是定义邮件系统使用政策的一般方法。'
- en: '**DNS blocklists:** DNS blocklists are globally published blocklists containing
    IP addresses of known spammers and other likely sources of junk mail. Postfix
    lets you use this information to reject messages.'
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**DNS阻止列表：**DNS阻止列表是全球发布的包含已知垃圾邮件发送者和其他可能的垃圾邮件来源的IP地址的阻止列表。Postfix允许您使用此信息来拒绝消息。'
- en: '**Matching header expressions:** The header fields and message bodies can be
    matched against regular expressions, allowing you to reject certain types of e-mail.'
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**匹配头表达式：**可以将头字段和消息正文与正则表达式进行匹配，从而拒绝某些类型的电子邮件。'
- en: '**After-queue content filtering:** After Postfix has accepted a message, it
    will not be delivered to the destination right away. Instead, it will be fed to
    a content filter that can do anything with the message—delete it, scan it for
    viruses, strip unwanted attachments, and so on. It is the responsibility of the
    content filter to resubmit messages back into Postfix which will then treat them
    as any other message.'
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**队列之后的内容过滤：**在Postfix接受消息后，不会立即将其传递到目的地。相反，它将被传递到一个内容过滤器，该过滤器可以对消息进行任何操作 -
    删除它，扫描病毒，剥离不需要的附件等。内容过滤器有责任将消息重新提交到Postfix，然后将其视为任何其他消息。'
- en: '**Before-queue content filtering:** The drawback with after-queue content filtering
    is that Postfix always accepts the message before the message is sent to the content
    filter. This means Postfix cannot reject a message based on the verdict of the
    content filter. Before-queue content filters receive the messages during the SMTP
    session and can choose to reject them. Because one before-queue content filter
    connection is required for each open SMTP session, this type of content filter
    is harder to scale for high-traffic sites and requires extra capacity to deal
    with traffic bursts. This feature requires Postfix 2.1 or later.'
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在队列之前的内容过滤：**在队列之后的内容过滤的缺点是，Postfix在将消息发送到内容过滤器之前始终接受消息。这意味着Postfix无法根据内容过滤器的判决拒绝消息。在SMTP会话期间，队列之前的内容过滤器接收消息并可以选择拒绝它们。由于每个打开的SMTP会话都需要一个队列之前的内容过滤器连接，这种类型的内容过滤器对于高流量站点来说更难扩展，并且需要额外的容量来处理流量突发。此功能要求Postfix
    2.1或更高版本。'
- en: '**Milters:** Starting with Postfix 2.3, the Milter plug-in protocol for e-mail
    content-inspection is supported. Milters were introduced in the `sendmail` mail
    transfer agent, and there are many available milters for spam protection, antivirus
    checks, message authenticity and signing in accordance with, for example, the
    DKIM standard. Third-party Milters can be downloaded from [http://www.milter.org/milters.](http://www.milter.org/milters.)'
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Milters：**从Postfix 2.3开始，支持用于电子邮件内容检查的Milter插件协议。Milters是在`sendmail`邮件传输代理中引入的，有许多可用的Milters用于垃圾邮件保护，防病毒检查，消息真实性和签名，例如符合DKIM标准。第三方Milters可以从[http://www.milter.org/milters.](http://www.milter.org/milters.)下载。'
- en: '**Access policy delegation:** If the SMTP restrictions are not sufficiently
    expressive, you can construct your own access policy server that Postfix can contact
    during each SMTP session. Using this tool, you can enforce just about any specialized
    policy you want, as long as the policy can be enforced by looking at the message
    envelope. Access policy servers will not be supplied with any of the message contents.
    Postfix comes with a very simple policy daemon for use to implement greylisting,
    but several other policy daemons have been made by other people. Links to these
    daemons and other Postfix add-on software can be found at [http://www.postfix.org/addon.html](http://www.postfix.org/addon.html).'
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**访问策略委托：**如果SMTP限制不够富有表现力，您可以构建自己的访问策略服务器，Postfix可以在每个SMTP会话期间联系该服务器。使用此工具，您可以强制执行几乎任何您想要的专门策略，只要该策略可以通过查看消息信封来执行。访问策略服务器将不会提供任何消息内容。Postfix附带了一个非常简单的策略守护程序，用于实现灰名单，但其他人制作了几个其他策略守护程序。这些守护程序和其他Postfix附加软件的链接可以在[http://www.postfix.org/addon.html](http://www.postfix.org/addon.html)找到。'
- en: Understanding SMTP restrictions
  id: totrans-223
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解SMTP限制
- en: Postfix has a simple but still expressive notation for defining rules that will
    be applied to messages that arrive via SMTP. For example, you can express a policy
    to reject messages sent from certain networks, clients who say `HELO` with certain
    hostnames, or clients that have no reverse records in DNS unless they are one
    of your own clients.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: Postfix有一个简单但富有表现力的符号来定义将应用于通过SMTP到达的消息的规则。例如，您可以表达一个拒绝从某些网络发送的消息的策略，从声称使用特定主机名的客户端发送的消息，或者没有在DNS中有反向记录的客户端，除非它们是您自己的客户端。
- en: Postfix defines a number of configuration parameters, each of which can contain
    a list of restrictions. Each restriction list may contain zero or more restrictions,
    and each restriction may or may not return something when evaluated. As in a few
    other places in Postfix, the "first match wins" principle reigns here too. This
    means that the restrictions are evaluated in the order they are specified, and
    the first restriction that returns something terminates the evaluation of the
    current restriction list.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: Postfix定义了许多配置参数，每个参数都可以包含一系列限制。每个限制列表可能包含零个或多个限制，每个限制在评估时可能会返回或不返回结果。与Postfix的其他一些地方一样，“第一个匹配获胜”的原则也适用于这里。这意味着限制按照它们指定的顺序进行评估，并且返回结果的第一个限制会终止当前限制列表的评估。
- en: 'The restriction lists get evaluated during the SMTP session. The following
    table contains the restriction lists that Postfix uses and shows at what stage
    in an SMTP session they are evaluated:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 限制列表在SMTP会话期间进行评估。以下表格包含Postfix使用的限制列表，并显示它们在SMTP会话的哪个阶段进行评估：
- en: '| Parameter | Point of evaluation |'
  id: totrans-227
  prefs: []
  type: TYPE_TB
  zh: '| 参数 | 评估点 |'
- en: '| --- | --- |'
  id: totrans-228
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `smtpd_client_restrictions` | Directly upon connection. |'
  id: totrans-229
  prefs: []
  type: TYPE_TB
  zh: '| `smtpd_client_restrictions` | 直接连接时。 |'
- en: '| `smtpd_data_restrictions` | When the client has sent the `DATA` command.
    |'
  id: totrans-230
  prefs: []
  type: TYPE_TB
  zh: '| `smtpd_data_restrictions` | 当客户端发送`DATA`命令时。 |'
- en: '| `smtpd_end_of_data_restrictions` | When the client has sent the complete
    message. This restriction list is available in Postfix 2.2 and later versions.
    |'
  id: totrans-231
  prefs: []
  type: TYPE_TB
  zh: '| `smtpd_end_of_data_restrictions` | 当客户端发送完整消息时。此限制列表适用于Postfix 2.2及更高版本。
    |'
- en: '| `smtpd_etrn_restrictions` | When the client has sent the `ETRN` command.
    This command is not used in a normal SMTP session. |'
  id: totrans-232
  prefs: []
  type: TYPE_TB
  zh: '| `smtpd_etrn_restrictions` | 当客户端发送了`ETRN`命令时。这个命令在正常的SMTP会话中不会被使用。 |'
- en: '| `smtpd_helo_restrictions` | When the client has sent its greeting with `HELO`
    or `EHLO.` |'
  id: totrans-233
  prefs: []
  type: TYPE_TB
  zh: '| `smtpd_helo_restrictions` | 当客户端发送了带有`HELO`或`EHLO`的问候语时。 |'
- en: '| `smtpd_recipient_restrictions` | When the client has sent a recipient address
    with `RCPT TO`. |'
  id: totrans-234
  prefs: []
  type: TYPE_TB
  zh: '| `smtpd_recipient_restrictions` | 当客户端发送了带有`RCPT TO`的收件人地址时。 |'
- en: '| `smtpd_sender_restrictions` | When the client has sent the sender address
    with `MAIL FROM`. |'
  id: totrans-235
  prefs: []
  type: TYPE_TB
  zh: '| `smtpd_sender_restrictions` | 当客户端发送了带有`MAIL FROM`的发件人地址时。 |'
- en: The default value of the `smtpd_delay_reject` parameter is `yes`, which means
    that all rejections will be postponed until after `RCPT TO`. The reason for this
    is that some client software do not like being rejected before `RCPT TO`, so they
    will disconnect and try again. Another good reason is that a postponed rejection
    gives Postfix a chance to log more information. This makes it easier for the administrator
    to determine whether a message was rejected even though it should not have been.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: '`smtpd_delay_reject`参数的默认值是`yes`，这意味着所有拒绝都将推迟到`RCPT TO`之后。这样做的原因是，一些客户端软件不喜欢在`RCPT
    TO`之前被拒绝，因此它们会断开连接并重试。另一个很好的原因是，推迟的拒绝给了Postfix记录更多信息的机会。这使得管理员更容易确定消息是否被拒绝，尽管不应该被拒绝。'
- en: A common misunderstanding is that only restrictions on the recipient address
    can be placed in `smtpd_recipient_restrictions`, only restrictions on the sender
    address can be placed in `smtpd_sender_restrictions,and` so on, but because of
    the default value of `smtpd_delay_reject`, that is not true. The name of the restriction
    list only indicates at what stage in the SMTP session the listed restrictions
    will be applied.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 一个常见的误解是，只有收件人地址的限制可以放在`smtpd_recipient_restrictions`中，只有发件人地址的限制可以放在`smtpd_sender_restrictions`中，等等，但由于`smtpd_delay_reject`的默认值，这并不正确。限制列表的名称只表示在SMTP会话的哪个阶段将应用列出的限制。
- en: Let's explore what restrictions Postfix imposes by default. We can use the `postconf`
    command to inspect the default values of the most commonly used restriction lists.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们探索Postfix默认施加的限制。我们可以使用`postconf`命令来检查最常用的限制列表的默认值。
- en: '[PRE31]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: This tells us that Postfix by default does not have any client, `HELO`, or sender
    restrictions. However, it does have two recipient restrictions. The first one,
    `permit_mynetworks`, permits the current recipient if the connecting client is
    within the networks specified by `mynetworks`. It is this restriction that gives
    your own clients relay access. If the connecting client is not within `mynetworks`,
    the next item in the restriction list will be evaluated. `reject_unauth_destination`
    will reject recipients whose domain is not one of the domains that Postfix will
    accept mail for. In other words, `reject_unauth_destination` rejects relay attempts.
    If no rejection takes place here, the end of the restriction list has been reached.
    If that happens, Postfix accepts the message.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 这告诉我们，默认情况下，Postfix没有任何客户端、`HELO`或发件人限制。但是，它确实有两个收件人限制。第一个`permit_mynetworks`，如果连接的客户端在`mynetworks`指定的网络中，则允许当前收件人。这个限制给了您自己的客户端中继访问权限。如果连接的客户端不在`mynetworks`中，将评估限制列表中的下一项。`reject_unauth_destination`将拒绝那些其域不是Postfix接受邮件的域之一的收件人。换句话说，`reject_unauth_destination`拒绝中继尝试。如果这里没有发生拒绝，那么限制列表的末尾已经到达。如果发生这种情况，Postfix将接受消息。
- en: A `permit` result in one restriction list will not cause the message as a whole
    to be accepted. Only the remaining restrictions in the same list will be bypassed.
    This is not true for restrictions that return `reject`— that result is always
    terminal and stops the evaluation of all restriction lists.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 一个限制列表中的`permit`结果不会导致整个消息被接受。只有同一列表中剩余的限制将被绕过。对于返回`reject`的限制，这一点并不成立——该结果始终是终端的，并停止对所有限制列表的评估。
- en: There are more than 50 standard SMTP restrictions to choose from, and there
    is no room to cover them all here. This table will present a little smorgasbord
    with useful restrictions. Additional restrictions will be covered later in this
    chapter.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 有50多个标准的SMTP限制可供选择，在这里没有足够的空间来涵盖它们。这个表将呈现一些有用的限制。其他限制将在本章后面介绍。
- en: '| Restriction | Description |'
  id: totrans-243
  prefs: []
  type: TYPE_TB
  zh: '| 限制 | 描述 |'
- en: '| --- | --- |'
  id: totrans-244
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `permit_inet_interfaces` | Permit if the connecting client resides in one
    of the networks listed in `inet_interfaces`, which typically covers all network
    that the server running Postfix is connected to. |'
  id: totrans-245
  prefs: []
  type: TYPE_TB
  zh: '| `permit_inet_interfaces` | 如果连接的客户端位于`inet_interfaces`中列出的网络中，则允许。这通常涵盖了运行Postfix的服务器连接到的所有网络。
    |'
- en: '| `permit_mynetworks` | Permit if the connecting client is listed in `mynetworks`.
    |'
  id: totrans-246
  prefs: []
  type: TYPE_TB
  zh: '| `permit_mynetworks` | 如果连接的客户端在`mynetworks`中列出，则允许。 |'
- en: '| `permit_sasl_authenticated` | Permit if connecting client has authenticated
    itself. (SMTP authentication is covered in [Chapter 5](ch05.html "Chapter 5. Securing
    Your Installation").) |'
  id: totrans-247
  prefs: []
  type: TYPE_TB
  zh: '| `permit_sasl_authenticated` | 如果连接的客户端已经进行了身份验证，则允许。（SMTP身份验证在[第5章](ch05.html
    "第5章。保护您的安装")中介绍。） |'
- en: '| `reject` | Reject the request, unconditionally. |'
  id: totrans-248
  prefs: []
  type: TYPE_TB
  zh: '| `reject` | 无条件拒绝请求。 |'
- en: '| `reject_invalid_hostname` | Reject if the syntax of the `HELO/EHLO` hostname
    given by the client is incorrect. |'
  id: totrans-249
  prefs: []
  type: TYPE_TB
  zh: '| `reject_invalid_hostname` | 如果客户端提供的`HELO/EHLO`主机名的语法不正确，则拒绝。 |'
- en: '| `reject_non_fqdn_hostname` | Reject if the `HELO/EHLO` hostname given by
    the client is not a fully qualified domain name. |'
  id: totrans-250
  prefs: []
  type: TYPE_TB
  zh: '| `reject_non_fqdn_hostname` | 如果客户端提供的`HELO/EHLO`主机名不是完全合格的域名，则拒绝。 |'
- en: '| `reject_non_fqdn_recipient` | Reject if the domain part of the recipient
    address is not a fully qualified domain name. |'
  id: totrans-251
  prefs: []
  type: TYPE_TB
  zh: '| `reject_non_fqdn_recipient` | 如果收件人地址的域部分不是完全合格的域名，则拒绝。 |'
- en: '| `reject_non_fqdn_sender` | Reject if the domain part of the sender address
    is not a fully qualified domain name. |'
  id: totrans-252
  prefs: []
  type: TYPE_TB
  zh: '| `reject_non_fqdn_sender` | 如果发件人地址的域部分不是完全合格的域名，则拒绝。 |'
- en: '| `reject_unauth_destination` | Reject the request unless the recipient domain
    is one of the domains that the Postfix server hosts, or for some reason, will
    accept mail for. |'
  id: totrans-253
  prefs: []
  type: TYPE_TB
  zh: '| `reject_unauth_destination` | 拒绝请求，除非收件人域是Postfix服务器托管的域之一，或者出于某种原因，将接受邮件。
    |'
- en: '| `reject_unknown_client_hostname` | Reject if the connecting client''s hostname
    cannot be determined. This happens if either of the following conditions is true:a)
    The client''s IP address cannot be resolved to a hostname, that is the PTR lookup
    fails.b) The A record lookup of the resulting hostname(s) fails.c) None of the
    IP addresses obtained from the A record lookup matches the input IP address.Prior
    to Postfix 2.3, this restriction was named `reject_unknown_client`. |'
  id: totrans-254
  prefs: []
  type: TYPE_TB
  zh: '| `reject_unknown_client_hostname` | 如果无法确定连接的客户端主机名，则拒绝。如果满足以下任一条件，则会发生这种情况：a)
    客户端的IP地址无法解析为主机名，即PTR查找失败。b) 结果主机名的A记录查找失败。c) 从A记录查找中获得的IP地址均不匹配输入IP地址。在Postfix
    2.3之前，此限制被命名为`reject_unknown_client`。 |'
- en: '| `reject_unknown_recipient_domain` | Reject if the domain part of the recipient
    address has no A or MX record in DNS. |'
  id: totrans-255
  prefs: []
  type: TYPE_TB
  zh: '| `reject_unknown_recipient_domain` | 如果收件人地址的域部分在DNS中没有A记录或MX记录，则拒绝。 |'
- en: '| `reject_unknown_reverse_client_hostname` | Reject if the connecting client''s
    IP address cannot be resolved to a hostname, that is the PTR lookup fails to return
    a result. This feature is available in Postfix 2.3 and later. |'
  id: totrans-256
  prefs: []
  type: TYPE_TB
  zh: '| `reject_unknown_reverse_client_hostname` | 如果连接的客户端IP地址无法解析为主机名，即PTR查找未返回结果，则拒绝。此功能在Postfix
    2.3及更高版本中可用。 |'
- en: '| `reject_unknown_sender_domain` | Reject if the domain part of the sender
    address has no A or MX record in DNS. |'
  id: totrans-257
  prefs: []
  type: TYPE_TB
  zh: '| `reject_unknown_sender_domain` | 如果发件人地址的域部分在DNS中没有A记录或MX记录，则拒绝。 |'
- en: '| `reject_unlisted_recipient` | Reject if the domain part of the recipient
    address is a domain hosted by Postfix and the complete address is not a valid
    recipient address. By default, this restriction is implicitly evaluated at the
    end of `smtpd_recipient_restrictions`. This behavior is controlled by the `smtpd_reject_unlisted_recipient`
    parameter. By using `reject_unlisted_recipient`, you can put the restriction into
    effect earlier on. This restriction is available in Postfix 2.1 and later. Previous
    versions of Postfix can use the `check_recipient_maps` parameter. |'
  id: totrans-258
  prefs: []
  type: TYPE_TB
  zh: '| `reject_unlisted_recipient` | 如果收件人地址的域部分是由Postfix托管的域，且完整地址不是有效的收件人地址，则拒绝。默认情况下，此限制隐式地在`smtpd_recipient_restrictions`末尾进行评估。此行为由`smtpd_reject_unlisted_recipient`参数控制。通过使用`reject_unlisted_recipient`，您可以更早地实施限制。此限制在Postfix
    2.1及更高版本中可用。之前的Postfix版本可以使用`check_recipient_maps`参数。 |'
- en: '| `reject_unlisted_sender` | Reject if the domain part of the sender address
    is a domain hosted by Postfix and the complete address would not be acceptable
    as a recipient address. The idea behind this feature is that there is no reason
    to accept messages with sender addresses known to be incorrect. This restriction
    is available in Postfix 2.1 and later. See also the `smtpd_reject_unlisted_sender`
    parameter. |'
  id: totrans-259
  prefs: []
  type: TYPE_TB
  zh: '| `reject_unlisted_sender` | 如果发件人地址的域部分是由Postfix托管的域，并且完整地址不可接受为收件人地址，则拒绝。此功能背后的想法是没有理由接受已知不正确的发件人地址的消息。此限制在Postfix
    2.1及更高版本中可用。另请参阅`smtpd_reject_unlisted_sender`参数。 |'
- en: Access maps
  id: totrans-260
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 访问映射
- en: In addition to the restrictions already discussed, Postfix defines a number
    of restrictions that look up information in access maps. An **access map** is
    a lookup table with contents that affects whether a message will be accepted.
    The name of the restriction controls what information is used as the lookup key.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 除了已经讨论的限制之外，Postfix还定义了许多在访问映射中查找信息的限制。**访问映射**是一个查找表，其内容影响邮件是否会被接受。限制的名称控制了用作查找键的信息。
- en: For example, the `check_client_access` restriction looks up the client IP address
    and hostname in a lookup table, allowing you to, say, ban certain clients that
    are known to send spam. Together with the restriction name you also state the
    type and name of the lookup table.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，`check_client_access`限制在查找表中查找客户端IP地址和主机名，允许您禁止已知发送垃圾邮件的某些客户端。除了限制名称，您还需要说明查找表的类型和名称。
- en: '[PRE32]'
  id: totrans-263
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Although not an exhaustive list, the following are the most important restrictions
    that use access maps:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管不是详尽的列表，但以下是使用访问映射的最重要的限制：
- en: '| Restriction name | Lookup key |'
  id: totrans-265
  prefs: []
  type: TYPE_TB
  zh: '| 限制名称 | 查找键 |'
- en: '| --- | --- |'
  id: totrans-266
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `check_client_access` | Client IP address and hostname. |'
  id: totrans-267
  prefs: []
  type: TYPE_TB
  zh: '| `check_client_access` | 客户端IP地址和主机名。 |'
- en: '| `check_sender_access` | The sender address. |'
  id: totrans-268
  prefs: []
  type: TYPE_TB
  zh: '| `check_sender_access` | 发件人地址。 |'
- en: '| `check_sender_mx_access` | The hostname(s) of the mail exchangers for the
    sender domain, that is the result of an MX lookup. This feature was added in Postfix
    2.1. |'
  id: totrans-269
  prefs: []
  type: TYPE_TB
  zh: '| `check_sender_mx_access` | 发件人域的邮件交换主机名（MX查找的结果）。此功能在Postfix 2.1中添加。 |'
- en: '| `check_sender_ns_access` | The hostname(s) of the name servers for the sender
    domain, that is the result of an NS lookup. This feature was added in Postfix
    2.1. |'
  id: totrans-270
  prefs: []
  type: TYPE_TB
  zh: '| `check_sender_ns_access` | 发件人域的名称服务器主机名（NS查找的结果）。此功能在Postfix 2.1中添加。 |'
- en: '| `check_recipient_access` | The recipient address. |'
  id: totrans-271
  prefs: []
  type: TYPE_TB
  zh: '| `check_recipient_access` | 收件人地址。 |'
- en: '| `check_helo_access` | The `HELO/EHLO` hostname. |'
  id: totrans-272
  prefs: []
  type: TYPE_TB
  zh: '| `check_helo_access` | `HELO/EHLO`主机名。 |'
- en: For all lookup table types except `regexp` and `pcre`, Postfix makes multiple
    lookups for each of these restrictions, slightly dependent on what type of data
    is being looked up (e-mail address or hostname, for example). This makes it possible
    to make inexact wildcard matches, for example matching all e-mail addresses in
    a domain.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 除了`regexp`和`pcre`之外的所有查找表类型，Postfix对于每个限制进行多次查找，略有不同，取决于所查找的数据类型（例如电子邮件地址或主机名）。这样可以进行不精确的通配符匹配，例如匹配域中的所有电子邮件地址。
- en: 'For `check_client_access`, Postfix makes separate lookups for the client IP
    address, the client hostname, and parts of the IP address, the latter making it
    possible to match whole A-, B-, or C-class networks (for better granularity and
    full CIDR notation use the `cidr` lookup table type). For a client with the address
    1.2.3.4 and the hostname `mail.example.com`, the following lookup keys are attempted,
    in the following order:'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 对于`check_client_access`，Postfix会分别查找客户端IP地址、客户端主机名和IP地址的部分，后者使得可以匹配整个A、B或C类网络（为了更好的粒度和完整的CIDR表示法，请使用`cidr`查找表类型）。对于具有地址1.2.3.4和主机名`mail.example.com`的客户端，按以下顺序尝试以下查找键：
- en: mail.example.com
  id: totrans-275
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: mail.example.com
- en: example.com
  id: totrans-276
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: example.com
- en: com
  id: totrans-277
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: com
- en: 1.2.3.4
  id: totrans-278
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1.2.3.4
- en: 1.2.3
  id: totrans-279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1.2.3
- en: '1.2'
  id: totrans-280
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '1.2'
- en: '1'
  id: totrans-281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '1'
- en: Items 2 and 3 assume that the default value of the `parent_domain_matches_subdomains`
    parameter is used. The Postfix author has indicated that this behavior may change
    in the future.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 项目2和3假设使用`parent_domain_matches_subdomains`参数的默认值。Postfix作者已指出这种行为可能会在将来发生变化。
- en: 'For restrictions where the lookup key is an e-mail address, such as `check_sender_access`,
    Postfix looks up the whole e-mail address, the domain part only, followed by the
    localpart and @. The full list of lookups for the e-mail address `user@example.com`
    then becomes:'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 对于查找键为电子邮件地址的限制，例如`check_sender_access`，Postfix首先查找整个电子邮件地址，然后是域部分，然后是本地部分和@。然后，电子邮件地址`user@example.com`的完整查找列表变为：
- en: '`user@example.com`'
  id: totrans-284
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`user@example.com`'
- en: '`example.com`'
  id: totrans-285
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`example.com`'
- en: '`com`'
  id: totrans-286
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`com`'
- en: '`user@`'
  id: totrans-287
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`user@`'
- en: Again, items 2 and 3 assume that default value of `parent_domain_matches_subdomains`.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 再次强调，项目2和3假设`parent_domain_matches_subdomains`的默认值。
- en: Lookups for IPv6 addresses and e-mail addresses containing recipient delimiters
    have been omitted from these lists for brevity reasons.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 出于简洁原因，省略了IPv6地址和包含接收者分隔符的电子邮件地址的查找。
- en: The following results are recognized for a given lookup key (this is again not
    an exhaustive list).
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 对于给定查找键，识别以下结果（这还不是详尽的列表）。
- en: '| Result | Description |'
  id: totrans-291
  prefs: []
  type: TYPE_TB
  zh: '| Result | Description |'
- en: '| --- | --- |'
  id: totrans-292
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `OK` | Permit the request. |'
  id: totrans-293
  prefs: []
  type: TYPE_TB
  zh: '| `OK` | 允许请求。|'
- en: '| `REJECT [optional text]` | Reject the request with a permanent error code
    and either the specified error message or a generic message. |'
  id: totrans-294
  prefs: []
  type: TYPE_TB
  zh: '| `REJECT [optional text]` | 使用永久错误代码拒绝请求，并附带指定的错误消息或通用消息。|'
- en: '| `DUNNO` | Pretend that the lookup key was not found, and do not continue
    with additional lookup keys. For example, if a lookup of `user@example.com` returns
    `DUNNO`, Postfix will not look up `example.com` or `user@` like it normally would.
    |'
  id: totrans-295
  prefs: []
  type: TYPE_TB
  zh: '| `DUNNO` | 假装查找键未找到，并且不继续进行其他查找键。例如，如果查找`user@example.com`返回`DUNNO`，Postfix将不会像通常那样查找`example.com`或`user@`。|'
- en: '| `DISCARD [optional text]` | If the message eventually gets accepted, it will
    be discarded and not delivered. |'
  id: totrans-296
  prefs: []
  type: TYPE_TB
  zh: '| `DISCARD [optional text]` | 如果消息最终被接受，它将被丢弃而不会被传递。|'
- en: '| `HOLD [optional text]` | Place the message in the hold queue. Messages that
    are held will not be delivered and can be inspected with the `postcat` program
    and subsequently released for delivery or deleted. This can be used as a simple
    way of quarantining messages that might be unwanted. |'
  id: totrans-297
  prefs: []
  type: TYPE_TB
  zh: '| `HOLD [optional text]` | 将消息放在暂留队列中。被暂留的消息将不会被传递，并且可以使用`postcat`程序进行检查，随后释放以进行传递或删除。这可以作为隔离可能不需要的消息的简单方法。|'
- en: '| `REDIRECT email address` | Scrap all the current message recipient(s) and
    send the message to the specified address only. This feature was added in Postfix
    2.1. |'
  id: totrans-298
  prefs: []
  type: TYPE_TB
  zh: '| `REDIRECT email address` | 丢弃所有当前消息的收件人，并将消息仅发送到指定的地址。此功能在Postfix 2.1中添加。|'
- en: '| `PREPEND header: text` | Add an additional header to the message. This feature
    was added in Postfix 2.1. |'
  id: totrans-299
  prefs: []
  type: TYPE_TB
  zh: '| `PREPEND header: text` | 向消息添加额外的标题。此功能在Postfix 2.1中添加。|'
- en: '| `WARN [optional text]` | Place a warning message in the log file. This feature
    was added in Postfix 2.1. |'
  id: totrans-300
  prefs: []
  type: TYPE_TB
  zh: '| `WARN [optional text]` | 在日志文件中放置警告消息。此功能在Postfix 2.1中添加。|'
- en: '| `restriction, restriction, …` | Apply one or more restrictions and use their
    result. Only simple restrictions that do not refer to any lookup tables are allowed
    here unless you use restriction classes. Those are not covered in this book, but
    you can read about them in the *RESTRICTION_CLASS_README* document available at
    [http://www.postfix.org/RESTRICTION_CLASS_README.html](http://www.postfix.org/RESTRICTION_CLASS_README.html).
    |'
  id: totrans-301
  prefs: []
  type: TYPE_TB
  zh: '| `restriction, restriction, …` | 应用一个或多个限制并使用它们的结果。除非使用限制类，否则此处只允许不涉及任何查找表的简单限制。这本书没有涵盖这些内容，但您可以在[http://www.postfix.org/RESTRICTION_CLASS_README.html](http://www.postfix.org/RESTRICTION_CLASS_README.html)上阅读有关它们的*RESTRICTION_CLASS_README*文档。|'
- en: Full documentation of the access map lookup keys and possible result values
    can be found in the `access(5)` manual page or at [http://www.postfix.org/access.5.html](http://www.postfix.org/access.5.html).
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 访问映射查找键和可能的结果值的完整文档可以在`access(5)`手册页或[http://www.postfix.org/access.5.html](http://www.postfix.org/access.5.html)上找到。
- en: Access map examples
  id: totrans-303
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 访问映射示例
- en: 'Here are a series of examples with access maps to discuss how they can be used,
    both alone and along with other restrictions in order to form pretty expressive
    policies:'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一系列示例，其中包含访问映射，讨论它们如何可以单独使用以及如何与其他限制一起形成相当表达的策略：
- en: '[PRE33]'
  id: totrans-305
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: In this first example, the lookups will be made against the `hash-type` lookup
    table `/etc/postfix/client_access`. This file is not created by Postfix and you
    may give it any name. From the *Lookup tables* section we recall that `hash-type`
    lookup tables are just text files from which binary files (in this case with the
    file extension `.db`) should be built with the `postmap` command whenever the
    source file changes.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一个示例中，查找将针对`hash-type`查找表`/etc/postfix/client_access`进行。此文件不是由Postfix创建的，您可以给它任何名称。我们回顾了*查找表*部分，`hash-type`查找表只是文本文件，应该使用`postmap`命令构建二进制文件（在本例中文件扩展名为`.db`），每当源文件更改时。
- en: '[PRE34]'
  id: totrans-307
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Here is an example `client_access` file:'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个`client_access`文件的示例：
- en: '[PRE35]'
  id: totrans-309
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: What does all this mean? The first two non-comment lines are used to reject
    clients that appear to connect from the networks `10.0.0.0/8` and `192.168.0.0/16`.
    These are not valid Internet addresses, so no legitimate client will connect from
    any of these addresses. The rejection will be made with the error message `RFC
    1918` **address not allowed here**. If your own clients have such RFC 1918 addresses
    you need to place a `permit_mynetworks` restriction before the `check_client_access`.
    Otherwise you will reject your own clients.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着什么？前两行非注释行用于拒绝似乎是从`10.0.0.0/8`和`192.168.0.0/16`网络连接的客户端。这些都不是有效的互联网地址，因此没有合法的客户端会从这些地址中的任何一个连接。拒绝将使用错误消息`RFC
    1918` **地址不允许在此处**。如果您自己的客户端具有此类RFC 1918地址，则需要在`check_client_access`之前放置`permit_mynetworks`限制。否则，您将拒绝自己的客户端。
- en: '[PRE36]'
  id: totrans-311
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: Indexed access maps support network block matching on octet boundaries, but
    CIDR notation (as in `10.0.0.0/8)` is not supported. If you need to specify network
    blocks with CIDR notation, consider the `CIDR` lookup table type available in
    Postfix 2.1 and later. Earlier releases can use a script such as `cidr2access`
    by Rahul Dhesi ([http://www.rahul.net/dhesi/software/cidr2access](http://www.rahul.net/dhesi/software/cidr2access))
    that expands CIDR blocks to a notation that is acceptable for indexed access maps.
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 索引访问映射支持在八位字节边界上进行网络块匹配，但不支持CIDR表示法（如`10.0.0.0/8`）。如果您需要使用CIDR表示法指定网络块，请考虑在Postfix
    2.1及更高版本中提供的`CIDR`查找表类型。较早的版本可以使用Rahul Dhesi的`cidr2access`脚本（[http://www.rahul.net/dhesi/software/cidr2access](http://www.rahul.net/dhesi/software/cidr2access)）来将CIDR块扩展为适用于索引访问映射的表示法。
- en: Note how comments are used to explain why and when entries were added. This
    can be valuable if more than one person is maintaining the files.
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 注意评论是如何用来解释为什么和何时添加条目的。如果有多个人在维护文件，这可能是有价值的。
- en: The last lines are used to match a couple of notorious spammers (fictional,
    of course) and demonstrate that both complete IP addresses and hostnames are acceptable
    here. These rejections will be made with a generic error message.
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 最后几行用于匹配一对臭名昭著的垃圾邮件发送者（当然是虚构的），并演示这里接受完整的IP地址和主机名。这些拒绝将使用通用错误消息进行。
- en: 'Here is another example:'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是另一个例子：
- en: '[PRE37]'
  id: totrans-316
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Contents of `/etc/postfix/sender_access:`
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: '`/etc/postfix/sender_access`的内容：'
- en: '[PRE38]'
  id: totrans-318
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: If someone attempts to send a message with a `hotmail.com` sender address, the
    client attempting to deliver the message will be subject to the `reject_unknown_client`
    restriction which, as you might recall, rejects client that do not have a valid
    mapping between IP address and hostname.
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 如果有人尝试发送一个带有`hotmail.com`发件人地址的消息，试图传递消息的客户端将受到`reject_unknown_client`限制的约束，您可能还记得，该限制拒绝没有有效的IP地址和主机名之间的映射的客户端。
- en: The second line exemplifies a useful policy that allows clients only from your
    networks to use your domain in the sender address.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 第二行举例说明了一个有用的策略，允许只有来自您的网络的客户端在发件人地址中使用您的域。
- en: 'Finally, if you only use Postfix internally within your network and have no
    need to allow anyone else to connect, the following two restrictions enforce this
    policy:'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，如果您只在您的网络内部使用Postfix，并且不需要允许其他人连接，以下两个限制将执行此策略：
- en: '[PRE39]'
  id: totrans-322
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Implementing new policies
  id: totrans-323
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 实施新策略
- en: Be careful when you implement new policies. Some of Postfix's restrictions are
    far too strict for general use and may reject significant amounts of legitimate
    e-mail. For each new restriction you plan to implement, examine the conditions
    under which messages are rejected and try to come up with cases where legitimate
    messages fulfill these conditions. To help you determine whether a restriction
    is safe to use, the `warn_if_reject` restriction can be used. This restriction
    affects the restriction that immediately follows it in the restriction list and,
    if the following restriction should have resulted in a rejection, it will be converted
    to a rejection warning. A rejection warning places a line in the mail log, but
    does not reject the message.
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 在实施新策略时要小心。Postfix的一些限制对于一般用途来说太严格，可能会拒绝大量合法的电子邮件。对于您计划实施的每个新限制，要检查消息被拒绝的条件，并尝试找出合法消息满足这些条件的情况。为了帮助您确定限制是否安全使用，可以使用`warn_if_reject`限制。此限制会影响限制列表中紧随其后的限制，如果紧随其后的限制应该导致拒绝，则将其转换为拒绝警告。拒绝警告会在邮件日志中放置一行，但不会拒绝消息。
- en: For example, you may want to evaluate the `reject_unknown_client` restriction
    because you have noticed that many spam messages are received from clients that
    do not have a reverse pointer in DNS, that is, there is no mapping from their
    IP address to a name that maps back to the IP address in question.
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，您可能希望评估`reject_unknown_client`限制，因为您已经注意到许多垃圾邮件消息是从没有在DNS中有反向指针的客户端接收的，也就是说，从它们的IP地址到映射回该IP地址的名称之间没有映射。
- en: 'Here is one way of doing it:'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一种方法：
- en: '[PRE40]'
  id: totrans-327
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'This will result in log messages like this one:'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 这将导致类似于这样的日志消息：
- en: '[PRE41]'
  id: totrans-329
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: This log messages contain all known information about the envelope of the message,
    and this should hopefully be enough for you to decide whether a message was legitimate
    or not. After a few days, inspect your mail logs and try to determine whether
    the ratio between would-be rejected unwanted messages and would-be rejected legitimate
    messages is acceptable.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 这些日志消息包含有关邮件信封的所有已知信息，这应该足够让您决定消息是否合法。几天后，检查您的邮件日志，并尝试确定被拒绝的不需要的消息和被拒绝的合法消息之间的比率是否可接受。
- en: There are many spam countermeasures with good accuracy, some of which are covered
    in this book. Others will emerge in the future depending on how the spammers behave.
    Be very careful when inventing your own ways to identify spam—picking characteristics
    from a small number of spam messages and drawing the conclusion that those characteristics
    are good spam indicators is dangerous and is likely to lead to loss of legitimate
    e-mails. Choose wisely and avoid methods with low accuracy. Do not forget to examine
    legitimate e-mails to make sure they do not have the characteristics that you
    associate with spam.
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多具有良好准确性的垃圾邮件对策，其中一些在本书中有所涵盖。其他将根据垃圾邮件发送者的行为而在未来出现。在发明自己的识别垃圾邮件的方法时要非常小心——从少量垃圾邮件中挑选特征并得出这些特征是良好的垃圾邮件指标的结论是危险的，很可能会导致合法电子邮件的丢失。明智地选择并避免准确性低的方法。不要忘记检查合法的电子邮件，确保它们没有您所关联的垃圾邮件特征。
- en: Using DNS blacklists
  id: totrans-332
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用DNS黑名单
- en: Since 1997, the **Domain Name System** (**DNS**) has been used to thwart spam.
    The method, **DNS-based Blackhole List** (**DNSBL**) or **Real-time Blackhole
    List** (**RBL**), also known as **blacklist** or **blocklist**, uses the DNS to
    publish information about certain clients or sender domains. When a mail server
    such as your own is contacted by a client, your server can combine the client's
    IP address or the given sender address with the domain of one or more DNSBLs and
    perform a DNS lookup. If the address is listed by the DNSBL, the lookup succeeds,
    and your server may choose to, for example, reject the client.
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 自1997年以来，**域名系统**（**DNS**）已被用于阻挠垃圾邮件。**基于DNS的黑名单**（**DNSBL**）或**实时黑名单**（**RBL**），也称为**黑名单**或**拦截列表**，使用DNS发布有关某些客户端或发件人域的信息。当您自己的邮件服务器被客户端联系时，您的服务器可以将客户端的IP地址或给定的发件人地址与一个或多个DNSBL的域结合起来，并执行DNS查找。如果DNSBL列出了该地址，查找成功，您的服务器可以选择，例如，拒绝客户端。
- en: For example, let's say that you have configured Postfix to use the widely used
    `zen.spamhaus.org` blacklist. If a client with the address 1.2.3.4 connects, Postfix
    will look in DNS for an A record for the address `4.3.2.1.zen.spamhaus.org`. If
    such a record exists, Postfix will not accept a message from the client.
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，假设您已经配置了Postfix使用广泛使用的`zen.spamhaus.org`黑名单。如果连接的客户端具有地址1.2.3.4，Postfix将在DNS中查找地址`4.3.2.1.zen.spamhaus.org`的A记录。如果存在这样的记录，Postfix将不接受来自客户端的消息。
- en: Postfix supports three types of DNSBL lookups—client host address, client hostname,
    and sender domain. Each lookup type has a restriction of its own, and they all
    require that you specify the name of the DNSBL domain after the restriction name.
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: Postfix支持三种类型的DNSBL查找——客户端主机地址、客户端主机名和发件人域。每种查找类型都有自己的限制，它们都要求您在限制名称之后指定DNSBL域的名称。
- en: '| DNSBL type | Syntax | Description |'
  id: totrans-336
  prefs: []
  type: TYPE_TB
  zh: '| DNSBL类型 | 语法 | 描述 |'
- en: '| --- | --- | --- |'
  id: totrans-337
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| Client host address | `reject_rbl_client rbl_domain` | The IP address of
    the connecting client is looked up. This is the original and by far most common
    DNSBL type. |'
  id: totrans-338
  prefs: []
  type: TYPE_TB
  zh: '| 客户端主机地址 | `reject_rbl_client rbl_domain` | 查找连接客户端的IP地址。这是最原始且最常见的DNSBL类型。
    |'
- en: '| Client hostname | `reject_rhsbl_client rbl_domain` | The hostname of the
    connecting client is looked up. |'
  id: totrans-339
  prefs: []
  type: TYPE_TB
  zh: '| 客户端主机名 | `reject_rhsbl_client rbl_domain` | 查找连接客户端的主机名。 |'
- en: '| Sender address domain | `reject_rhsbl_sender rbl_domain` | The domain of
    the given sender address is looked up. |'
  id: totrans-340
  prefs: []
  type: TYPE_TB
  zh: '| 发件人地址域 | `reject_rhsbl_sender rbl_domain` | 查找给定发件人地址的域。 |'
- en: Feel free to list multiple DNSBL restrictions. Make sure you use the restriction
    that corresponds to the DNSBL type—using `reject_rbl_client` with a sender address
    domain DNSBL does not make sense.
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 请随意列出多个DNSBL限制。确保您使用与DNSBL类型对应的限制——对发件人地址域DNSBL使用`reject_rbl_client`是没有意义的。
- en: 'The following code shows one way of configuring Postfix to use the `zen.spamhaus.org`
    standard-type DNSBL and the `dsn.rfc-ignorant.org` sender domain-DNSBL:'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码显示了配置Postfix使用`zen.spamhaus.org`标准类型DNSBL和`dsn.rfc-ignorant.org`发件人域DNSBL的一种方法：
- en: '[PRE42]'
  id: totrans-343
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Notice how these restrictions are listed after both `permit_mynetworks` and
    `reject_unauth_destination`. This is because DNSBL lookups are comparatively expensive,
    and there is no use in wasting time on such lookups for your own clients or for
    clients that might get rejected anyway. To avoid unnecessary delays, be sure to
    list the DNSBLs that block the most messages, first among your DNSBL restrictions.
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这些限制是在`permit_mynetworks`和`reject_unauth_destination`之后列出的。这是因为DNSBL查找相对昂贵，对于您自己的客户端或可能被拒绝的客户端进行这样的查找是没有意义的。为了避免不必要的延迟，请确保首先列出阻止最多消息的DNSBL限制。
- en: Choosing DNS blacklists
  id: totrans-345
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 选择DNS黑名单
- en: In the beginning, the DNSBLs listed only **open relays**, that is, SMTP servers
    that accept all messages from all clients to all destinations. Open relays once
    were the primary source of spam, but this has changed in recent years. Today,
    a lot of spam is sent from the hijacked home computers of innocent and unknowing
    people.
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 起初，DNSBL仅列出了**开放中继**，即接受来自所有客户端发往所有目的地的所有消息的SMTP服务器。开放中继曾经是垃圾邮件的主要来源，但近年来情况已经改变。如今，许多垃圾邮件是从无辜和无知的人的被劫持的家用计算机发送的。
- en: Different blacklists have different policies for listing hosts and removing
    listed hosts. Naturally, the bigger the blacklist, the more legitimate messages
    you are likely to reject. Before starting to use a particular DNSBL to reject
    messages, you should examine these policies carefully and preferably also try
    them out for a while without actually rejecting any messages. The `warn_if_reject`
    restriction can help you with this.
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 不同的黑名单对于列出主机和删除列出的主机有不同的政策。自然而然，黑名单越大，您可能拒绝的合法消息就越多。在开始使用特定的DNSBL拒绝消息之前，您应该仔细检查这些政策，并最好在实际拒绝任何消息之前尝试一段时间。`warn_if_reject`限制可以帮助您进行此操作。
- en: The blacklists that work great for some people and reject huge amounts of spam
    but no legitimate messages may have little value for other people and may actually
    reject more legitimate messages than spam. Take great care when choosing blacklists
    and avoid blindly copying allegedly good sets of DNSBLs from others. Another good
    reason for being cautious is that DNSBLs sometimes go out of service because they
    have been repeatedly attacked by spammers and forced to shut down. This happened
    to the well-known `relays.ordb.org` DNSBL in 2006\. Blacklists that are shut down
    may, after a while, be reconfigured to always indicate an IP address as listed
    in the blacklist, that is, you will reject all mail if configured to use that
    blacklist.
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 对于一些人效果很好并拒绝大量垃圾邮件但不拒绝合法消息的黑名单，对其他人可能没有多少价值，实际上可能拒绝更多的合法消息而不是垃圾邮件。在选择黑名单时要非常小心，并避免盲目地从其他人那里复制据称很好的DNSBL集。谨慎的另一个很好的理由是，DNSBL有时会因为它们一直受到垃圾邮件发送者的攻击而被迫关闭。这在2006年发生在著名的`relays.ordb.org`
    DNSBL上。被关闭的黑名单可能在一段时间后被重新配置为始终指示IP地址在黑名单中，也就是说，如果配置为使用该黑名单，您将拒绝所有邮件。
- en: The probably best general-purpose DNSBL out there for use with `reject_rbl_client
    is`, at the moment, `zen.spamhaus.org`. The false-positive rate, that is the share
    of incorrectly rejected genuine e-mail, can be expected to be extremely low while
    the accuracy of catching spam stays high. Unless you have special needs, this
    may be the only DNSBL that you need to use.
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，用于`reject_rbl_client`的可能是最好的通用DNSBL是`zen.spamhaus.org`。误报率，即被错误拒绝的真实电子邮件的比例，可以预期非常低，同时捕获垃圾邮件的准确性保持很高。除非您有特殊需求，否则这可能是您唯一需要使用的DNSBL。
- en: Before implementing any DNSBL at all, make sure you know how to exempt certain
    clients or domains from rejections. Sooner or later, and no matter which DNSBL
    you choose to use, you will have cases of legitimate messages being blocked. When
    that happens, it is too late to start digging in the documentation trying to find
    out what you can do about it.
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 在实施任何DNSBL之前，请确保您知道如何豁免某些客户端或域免受拒绝。迟早会有合法消息被阻止，无论您选择使用哪个DNSBL。当这种情况发生时，开始查看文档并试图找出可以采取的措施已经太迟了。
- en: The solution to the problem is to have whitelisting access maps before your
    DNSBL restrictions. Which type of access map you should use depends on the DNSBL
    type, but in most cases `check_client_access` will be suitable, although `check_sender_access`
    is more appropriate if you use `reject_rhsbl_sender`.
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 解决问题的方法是在DNSBL限制之前拥有白名单访问映射。您应该使用哪种类型的访问映射取决于DNSBL类型，但在大多数情况下，`check_client_access`将是合适的，尽管如果您使用`reject_rhsbl_sender`，则更适合使用`check_sender_access`。
- en: 'Continuing the previous example, this is what you can do to exempt certain
    clients and sender addresses from rejection by any following restrictions:'
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 继续上一个例子，这是您可以豁免某些客户端和发件人地址免受后续限制拒绝的操作：
- en: '[PRE43]'
  id: totrans-353
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: In `/etc/postfix/rbl_client_exceptions:`
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 在`/etc/postfix/rbl_client_exceptions:`中：
- en: '[PRE44]'
  id: totrans-355
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: In `/etc/postfix/rhsbl_client_exceptions:`
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 在`/etc/postfix/rhsbl_client_exceptions:`中：
- en: '[PRE45]'
  id: totrans-357
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: Stopping messages based on content
  id: totrans-358
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基于内容停止消息
- en: 'Often, unwanted messages cannot be spotted without looking at their contents.
    Postfix provides some unsophisticated but still very useful tools for this purpose.
    The idea is that the lines in a message are matched against a set of regular expressions
    that you supply and, if there is a match, an action will be carried out. This
    is called **header checks** or **body checks**, depending on what part of the
    message is being inspected. Most often you use header and body checks to reject
    messages, but messages can also be discarded or redirected to another recipient.
    Header and body checks can help you solve the following problems, all of which
    will be discussed in the following sections:'
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，无法在查看其内容之前发现不需要的消息。Postfix为此提供了一些简单但非常有用的工具。其思想是将消息中的行与您提供的一组正则表达式进行匹配，如果匹配成功，则将执行一个操作。这称为**头部检查**或**正文检查**，具体取决于正在检查的消息的哪个部分。通常情况下，您使用头部和正文检查来拒绝消息，但消息也可以被丢弃或重定向到另一个收件人。头部和正文检查可以帮助您解决以下问题，所有这些问题将在以下部分中讨论：
- en: Reacting to messages containing attachments with forbidden filenames
  id: totrans-360
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对包含禁止文件名附件的消息做出反应
- en: Quickly stopping big virus outbreaks
  id: totrans-361
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 快速停止大规模病毒爆发
- en: Custom logging of certain header fields
  id: totrans-362
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自定义记录某些头部字段
- en: Removing certain message headers
  id: totrans-363
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 删除某些消息头
- en: An introduction to regular expressions is beyond the scope of this book. If
    you do not have that knowledge already, there are many regular expression resources
    and tutorials on the net, for example [http://gnosis.cx/publish/programming/regular_expressions.html](http://gnosis.cx/publish/programming/regular_expressions.html)
    and [http://www.codeproject.com/KB/dotnet/regextutorial.aspx](http://www.codeproject.com/KB/dotnet/regextutorial.aspx).
    If you are looking for a book on the topic, Jeffrey E. F. Friedl's *Mastering
    Regular Expressions* (O'Reilly, 2006) is quite comprehensive.
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 介绍正则表达式超出了本书的范围。如果您还没有这方面的知识，互联网上有许多正则表达式资源和教程，例如[http://gnosis.cx/publish/programming/regular_expressions.html](http://gnosis.cx/publish/programming/regular_expressions.html)和[http://www.codeproject.com/KB/dotnet/regextutorial.aspx](http://www.codeproject.com/KB/dotnet/regextutorial.aspx)。如果您正在寻找这方面的书籍，Jeffrey
    E. F. Friedl的*Mastering Regular Expressions*（O'Reilly，2006）非常全面。
- en: Configuring header and body checks
  id: totrans-365
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置头部和正文检查
- en: 'The `main.cf` parameters for header and body checks `body_checks, header_checks,
    mime_header_checks`, and `nested_header_checks`—can contain one or more references
    to regular expression lookup tables (`regexp` or `pcre`), which will be considered
    when a message is being received. Technically you could use any other lookup table
    type for this, but only regular expression tables are really useful. The following
    parameters are used for different parts of the message:'
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: '`main.cf`参数用于头部和正文检查`body_checks, header_checks, mime_header_checks`和`nested_header_checks`，可以包含一个或多个对正则表达式查找表（`regexp`或`pcre`）的引用，在接收消息时将被考虑。从技术上讲，您可以使用任何其他查找表类型，但只有正则表达式表才真正有用。以下参数用于消息的不同部分：'
- en: '| Parameter | Part of message it applies to |'
  id: totrans-367
  prefs: []
  type: TYPE_TB
  zh: '| 参数 | 适用于消息的部分 |'
- en: '| --- | --- |'
  id: totrans-368
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `body_checks` | The body of each message part. |'
  id: totrans-369
  prefs: []
  type: TYPE_TB
  zh: '| `body_checks` | 每个消息部分的正文。 |'
- en: '| `header_checks` | All non-MIME top-level headers. |'
  id: totrans-370
  prefs: []
  type: TYPE_TB
  zh: '| `header_checks` | 所有非MIME顶级标题。 |'
- en: '| `mime_header_checks` | All MIME headers found in any message part. The following
    headers are considered to be MIME headers:'
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: '| `mime_header_checks` | 在任何消息部分中找到的所有MIME头。以下标题被认为是MIME头：'
- en: Content-Description
  id: totrans-372
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内容描述
- en: Content-Disposition
  id: totrans-373
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内容分发
- en: Content-ID
  id: totrans-374
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内容ID
- en: Content-Transfer-Encoding
  id: totrans-375
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内容传输编码
- en: Content-Type
  id: totrans-376
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内容类型
- en: MIME-Version
  id: totrans-377
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MIME版本
- en: '|'
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| `nested_header_checks` | All non-MIME message headers in messages that are
    attached to the received message. |'
  id: totrans-379
  prefs: []
  type: TYPE_TB
  zh: '| `nested_header_checks` | 附加到接收消息的消息中的所有非MIME消息头。 |'
- en: This means for each header line, a lookup will be made against the lookup tables
    specified in `header_checks`, each line in the message body will cause a lookup
    against the lookup tables in `body_checks`, and so on.
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着对于每个标题行，将针对`header_checks`中指定的查找表进行查找，消息正文中的每一行将导致针对`body_checks`中的查找表进行查找，依此类推。
- en: The format of regular expression lookup tables is very similar to ordinary indexed
    ones. One big difference is that they are not indexed and should not be run through
    the `postmap` program. Postfix will read regular expression lookup tables again
    when the daemons are restarted, which is often enough in many cases. If you want
    an immediate update, you must reload Postfix.
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: 正则表达式查找表的格式与普通索引查找表非常相似。一个很大的区别是它们不是索引的，也不应该通过`postmap`程序运行。在许多情况下，当守护程序重新启动时，Postfix将再次读取正则表达式查找表。如果您需要立即更新，您必须重新加载Postfix。
- en: Regular expression lookup tables are not exclusively for header and body checks.
    They can be used wherever Postfix expects a lookup table.
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: 正则表达式查找表不仅适用于标题和正文检查。它们可以在Postfix期望查找表的任何地方使用。
- en: The right-hand side of lookup tables used for header and body checks can contain
    many of the previously described actions allowed in access maps, but one action,
    `IGNORE`, is available only here. The `IGNORE` action simply removes the matched
    line from the message.
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: 用于标题和正文检查的查找表的右侧可以包含先前描述的许多允许在访问映射中使用的操作，但是一个操作`IGNORE`仅在这里可用。`IGNORE`操作只是从消息中删除匹配的行。
- en: Message headers such as the ones in the following example that are wrapped to
    form multiple physical lines, will be joined together before being used as a lookup
    key.
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: '例如以下示例中的消息头被包装成多个物理行，将在使用作为查找键之前连接在一起。 '
- en: '[PRE46]'
  id: totrans-385
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: Header and body checks examples
  id: totrans-386
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 标题和正文检查示例
- en: Now, let's get concrete and take a look at how header and body checks can be
    used. Unless otherwise noted, all these examples work with both the `regexp` and
    the `pcre` lookup table type.
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们具体看看如何使用标题和正文检查。除非另有说明，所有这些示例都适用于`regexp`和`pcre`查找表类型。
- en: Many computer viruses spread by e-mail, and most of them through programs or
    scripts attached to the messages. Although reacting to messages containing attachments
    with forbidden filenames is a blunt and inexact tool, it is a simple way to take
    care of these unwanted messages even before they reach any antivirus scanner.
    By avoiding large overhead scanning, your server can cope with much larger virus
    outbreaks. There is no complete list of the filenames that can be banned, but
    just blocking `.exe, .scr, .pif, .bat`, and a few more will probably suffice for
    most people. If your users have a need to send or receive files with these filename
    extensions, you may need to relax the policy somewhat. To implement this in Postfix,
    you need to recognize that the filename of an attachment is found in Content-Disposition
    or Content-Type headers. These are MIME headers, so the expression needs to go
    in `mime_header_checks`. In this example, the message is rejected with text that
    indicates the offending filename. If a legitimate mail is rejected, the sender
    will hopefully be able to interpret the error message and resend the message.
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 许多计算机病毒通过电子邮件传播，其中大多数通过附加到消息的程序或脚本传播。尽管对包含禁止文件名附件的消息做出反应是一种粗糙和不精确的工具，但这是一种简单的方式，即使在消息到达任何防病毒扫描程序之前，也可以处理这些不需要的消息。通过避免大量的开销扫描，您的服务器可以处理更大的病毒爆发。没有完整的可以被禁止的文件名列表，但是只需阻止`.exe，.scr，.pif，.bat`等几个文件名可能对大多数人来说就足够了。如果您的用户需要发送或接收具有这些文件名扩展名的文件，则可能需要放松政策。要在Postfix中实现这一点，您需要认识到附件的文件名位于Content-Disposition或Content-Type头中。这些是MIME头，因此表达式需要放在`mime_header_checks`中。在这个例子中，消息将被拒绝，并显示指示违规文件名的文本。如果一个合法的邮件被拒绝，发件人希望能够解释错误消息并重新发送邮件。
- en: '[PRE47]'
  id: totrans-389
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: Note the indentation on all but the first line. It is needed to have the lines
    be treated as a single line. Lookup tables work in the same way as the `main.cf`
    and `master.cf` configuration files in this respect. The `/x` modifier will cause
    all whitespace to be ignored. This expression, originally constructed by Russell
    Mosemann and further refined by Noel Jones, requires a `pcre` lookup table, but
    it is possible to rewrite the expression to use `regexp`.
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意除第一行外所有行的缩进。需要将这些行视为单行。查找表在这方面与`main.cf`和`master.cf`配置文件的工作方式相同。`/x`修饰符将导致所有空格被忽略。这个表达式最初由Russell
    Mosemann构建，后来由Noel Jones进一步完善，需要一个`pcre`查找表，但可以重写表达式以使用`regexp`。
- en: '`body_checks` can be a useful tool in quickly stopping big virus outbreaks.
    A number of the previous virus outbreaks have had messages with certain characteristics
    that made them pretty easy to block. If filename blocking is not an option, you
    can try to find lines that are unique to these messages and construct suitable
    expressions.'
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: '`body_checks`可以是一个快速阻止大型病毒爆发的有用工具。以前的许多病毒爆发都有带有某些特征的消息，这使得它们很容易被阻止。如果文件名阻止不是一个选项，您可以尝试找到这些消息中独特的行，并构造合适的表达式。'
- en: '[PRE48]'
  id: totrans-392
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: If you are unsure whether an expression will be too broad and catch legitimate
    messages, you can use `HOLD` or `WARN` instead of `REJECT. HOLD` will put the
    messages on hold, allowing you to examine them and either release the messages
    or delete them. `WARN` will accept the message but log the incident.
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您不确定一个表达式是否过于宽泛并捕获了合法消息，您可以使用`HOLD`或`WARN`而不是`REJECT`。`HOLD`将暂停消息，允许您检查它们并释放消息或删除消息。`WARN`将接受消息但记录该事件。
- en: This method of blocking viruses can also be useful when a new virus is just
    starting to spread and the antivirus software you are using has not yet been updated
    to catch it.
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: 当新病毒刚开始传播且您使用的防病毒软件尚未更新以捕获它时，这种阻止病毒的方法也可能很有用。
- en: The `WARN` action can also be used to get custom logging of certain header fields.
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: '`WARN`操作也可以用于获取某些标题字段的自定义日志记录。'
- en: '[PRE49]'
  id: totrans-396
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Having this expression in `header_checks` will result in all subject headers
    being logged as a warning message similar to this:'
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 在`header_checks`中有这个表达式将导致所有主题头被记录为类似于以下的警告消息：
- en: '[PRE50]'
  id: totrans-398
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'Sometimes it can be useful to remove certain message headers. For example,
    some programming libraries that provide SMTP clients add an X-Library header to
    all messages sent. Apparently, many spammers use these libraries and therefore
    SpamAssassin gives a pretty high score for messages that contain this header.
    If you need to use such a library and you cannot or will not modify the source
    code to avoid having the header added in the first place, Postfix can help you
    remove it. This `header_checks` expression will remove all `X-Library` headers
    in messages passing through Postfix:'
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 有时删除某些消息头可能是有用的。例如，一些提供SMTP客户端的编程库会向所有发送的消息添加一个X-Library头。显然，许多垃圾邮件发送者使用这些库，因此SpamAssassin对包含此头的消息给出了相当高的分数。如果您需要使用这样的库，并且无法或不愿意修改源代码以避免首次添加头，Postfix可以帮助您删除它。这个`header_checks`表达式将删除通过Postfix的所有`X-Library`头：
- en: '[PRE51]'
  id: totrans-400
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: Caveats
  id: totrans-401
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意事项
- en: Header and body checks are simple and blunt tools for inspecting message contents.
    They are useful for a number of things, but do not attempt to overuse use them
    for general-purpose spam fighting. Many people try to use these tools incorrectly,
    and this book will try to dispel some common misconceptions.
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: 标题和正文检查是检查消息内容的简单而直接的工具。它们对许多事情都很有用，但不要试图过度使用它们来进行通用垃圾邮件打击。许多人尝试不正确地使用这些工具，本书将试图消除一些常见的误解。
- en: 'Header and body checks will inspect only one line at a time, and no state is
    kept between different lines. This means you cannot reject messages that contain
    one bad word on one line and another bad word elsewhere in the message. Do not
    be fooled by the `if...endif` construct allowed in regular expression lookup tables!
    You cannot use them in this way:'
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: 标题和正文检查将逐行检查，不会在不同行之间保留任何状态。这意味着您无法拒绝包含一行上的一个不良词语和消息中其他地方的另一个不良词语的消息。不要被正则表达式查找表中允许的`if...endif`结构所迷惑！您不能以这种方式使用它们：
- en: '[PRE52]'
  id: totrans-404
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: Remember, lookups are made one line at a time. Obviously, a line that starts
    with `From` cannot possibly start with `Subject`.
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，查找是逐行进行的。显然，以`From`开头的行不可能以`Subject`开头。
- en: Many spam messages have the mail body in **Base64** encoding. Because of how
    Base64 works, a word has many possible Base64 representations. Postfix does not
    perform any decoding before the message content is fed to the header and body
    checks.
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: 许多垃圾邮件消息的邮件正文采用**Base64**编码。由于Base64的工作原理，一个单词有许多可能的Base64表示。在消息内容被提供给标题和正文检查之前，Postfix不执行任何解码。
- en: This means that using `body_checks` to block messages containing bad words doesn't
    work universally. If `body_checks` is your only tool to fight spam, you will spend
    a couple of hours every day maintaining your regular expressions so they will
    catch the spam of the day, but you will still not have high accuracy.
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着使用`body_checks`来阻止包含不良词语的消息并不是普遍有效的。如果`body_checks`是您打击垃圾邮件的唯一工具，您将每天花费几个小时来维护您的正则表达式，以便捕获当天的垃圾邮件，但您仍然无法获得高准确性。
- en: Header and body checks apply to all messages. You cannot whitelist a certain
    sender or a certain client. If you host multiple domains you have the option of
    using different header and body checks for your hosted domains by running multiple
    `cleanup` daemons and multiple `smtpd` daemons listening on different IP addresses,
    or you can run multiple instances of Postfix. The latter means that you have multiple
    queue directories and multiple copies of Postfix running at the same time. This
    is required for some complex setups, but can actually simplify setups that are
    possible with a single instance.
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: 标题和正文检查适用于所有消息。您无法将某个发件人或某个客户端列入白名单。如果您托管多个域，您可以通过运行多个`cleanup`守护程序和多个监听不同IP地址的`smtpd`守护程序，或者您可以运行多个Postfix实例来为您托管的域使用不同的标题和正文检查。后者意味着您有多个队列目录和多个Postfix副本同时运行。这对于一些复杂的设置是必需的，但实际上可以简化使用单个实例可能实现的设置。
- en: You cannot use header and body checks to check for the nonexistence of something,
    so you cannot reject messages that have an empty body or messages that do not
    contain a secret password.
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: 您无法使用标题和正文检查来检查某些内容的不存在，因此无法拒绝具有空正文或不包含秘密密码的消息。
- en: Having a large number of regular expressions in `body_checks` is not only a
    maintenance nightmare but may also seriously degrades the performance of your
    server. A reasonable configuration should not need more than, say, 10 20 expressions.
    If you have too many expressions, Postfix's `cleanup` processes will use a lot
    of CPU time.
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: 在`body_checks`中有大量正则表达式不仅维护起来很麻烦，而且可能严重降低服务器的性能。一个合理的配置不应该需要超过，比如说，10到20个表达式。如果您有太多的表达式，Postfix的`cleanup`进程将使用大量的CPU时间。
- en: Virtual alias domains and local aliases
  id: totrans-411
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 虚拟别名域和本地别名
- en: In this section, some of Postfix's features for address rewriting to allow hosting
    multiple domains and implementing group addresses (or distribution lists) will
    be discussed.
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，将讨论一些Postfix的特性，用于地址重写以允许托管多个域并实现组地址（或分发列表）。
- en: Additionally, this section will take a look at how to find information in MySQL
    databases using Postfix. The goal of the exercise will be to use MySQL lookups
    for alias lookups, but the knowledge you can gain will be applicable for all other
    situations where you might want to use MySQL together with Postfix. It will be
    assumed that you have basic SQL knowledge and that you are able to set up and
    operate a MySQL server.
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，本节将介绍如何使用Postfix在MySQL数据库中查找信息。练习的目标是使用MySQL查找别名查找，但您可以获得的知识将适用于所有其他可能希望与Postfix一起使用MySQL的情况。假设您具有基本的SQL知识，并且能够设置和操作MySQL服务器。
- en: Virtual alias domains
  id: totrans-414
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 虚拟别名域
- en: As was explained earlier, even though you can have several local domains (several
    domains listed in `mydestination`), they will always be equivalent—they share
    a single localpart namespace. In other words, `joe@localdomain1.com` is `joe@localdomain2.com`
    is `joe@localdomain3.com`. Obviously, this is not good enough. In order to host
    multiple domains with distinct localpart namespaces, you need virtual alias domains.
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: 正如前面所解释的，即使您可以拥有多个本地域（在`mydestination`中列出的多个域），它们始终是等效的-它们共享单个本地部分命名空间。换句话说，`joe@localdomain1.com`就是`joe@localdomain2.com`就是`joe@localdomain3.com`。显然，这是不够好的。为了托管具有不同本地部分命名空间的多个域，您需要虚拟别名域。
- en: Note
  id: totrans-416
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: A **virtual alias domain** is a domain where each valid address maps to one
    or more other e-mail addresses, possibly in other domains. Compare this to local
    domains where an address typically maps directly to a UNIX system account. `joe@virtualdomain1`
    and `joe@virtualdomain2` can lead to completely different mailboxes.
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: '**虚拟别名域**是一个域，其中每个有效地址映射到一个或多个其他电子邮件地址，可能在其他域中。与地址通常直接映射到UNIX系统帐户的本地域相比。`joe@virtualdomain1`和`joe@virtualdomain2`可能导致完全不同的邮箱。'
- en: Virtual alias domains are sometimes just called virtual domains, but to avoid
    confusion with virtual mailbox domains, which are also sometimes called virtual
    domains, the full term will be used.
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟别名域有时被称为虚拟域，但为了避免与虚拟邮箱域混淆，有时也被称为虚拟域，将使用完整术语。
- en: To show how virtual alias domains work in Postfix, let's return to our friends
    at Example Inc. for a couple of examples of how they can enhance their mail system
    by using virtual alias domains.
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: 为了展示虚拟别名域在Postfix中的工作原理，让我们回到Example Inc.的朋友，看看他们如何通过使用虚拟别名域来增强邮件系统的一些示例。
- en: Many virtual alias domains mapping to one local domain
  id: totrans-420
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 多个虚拟别名域映射到一个本地域
- en: The directors of Example Inc. have now expanded their business significantly
    and want to have subdomains for their branch offices to avoid name clashes when
    two people in different offices share the same name. For their offices in London,
    Paris, and Berlin they want the domains `gb.example.com, fr.example.com`, and
    `de.example.com` respectively. They have a single Postfix server that receives
    all messages.
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: Example Inc.的董事们现在已经大幅扩大了业务，并希望为他们的分公司设置子域，以避免当不同办公室的两个人共享相同名称时出现名称冲突。对于他们在伦敦、巴黎和柏林的办公室，他们分别希望使用域`gb.example.com,
    fr.example.com`和`de.example.com`。他们有一个接收所有消息的单个Postfix服务器。
- en: The solution to Example Inc's problem is to let `gb.example.com, fr.example.com`,
    and `de.example.com` all be virtual alias domains. The original `example.com`
    domain should remain a local domain. Postfix looks for virtual alias domains in
    the `virtual_alias_domains` parameter.
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: Example Inc的问题的解决方案是让`gb.example.com, fr.example.com`和`de.example.com`都成为虚拟别名域。原始的`example.com`域应保持为本地域。Postfix在`virtual_alias_domains`参数中查找虚拟别名域。
- en: '[PRE53]'
  id: totrans-423
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: Make sure that you do not list any of these domains in `mydestination`. The
    next step is to tell Postfix which addresses in the virtual alias domains map
    to which addresses in the `example.com` domain. This is done by specifying one
    or more lookup tables in the `virtual_alias_maps` parameter. For starters, Example
    Inc. will just use a simple `hash` type lookup table. When things work as we expect
    them to, they will create an equivalent configuration that looks up data in a
    MySQL database.
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: 确保不要在`mydestination`中列出任何这些域。下一步是告诉Postfix虚拟别名域中的地址映射到`example.com`域中的哪些地址。这是通过在`virtual_alias_maps`参数中指定一个或多个查找表来完成的。首先，Example
    Inc.将只使用一个简单的`hash`类型查找表。当事情按我们的预期进行时，他们将创建一个等效的配置，该配置在MySQL数据库中查找数据。
- en: '[PRE54]'
  id: totrans-425
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: Now, Postfix will use the virtual aliases they put in `/etc/postfix/virtual`.
    The format of a virtual alias lookup table is very simple; the recipient address
    is the lookup key and the address/addresses to which the recipient address should
    be rewritten is the result.
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，Postfix将使用他们放在`/etc/postfix/virtual`中的虚拟别名。虚拟别名查找表的格式非常简单；收件人地址是查找键，应将收件人地址重写为的地址/地址是结果。
- en: '[PRE55]'
  id: totrans-427
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: After editing the `/etc/postfix/virtual` file, `postmap` must be run in order
    to transform the file into `/etc/postfix/virtual.db`.
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑`/etc/postfix/virtual`文件后，必须运行`postmap`以将文件转换为`/etc/postfix/virtual.db`。
- en: '[PRE56]'
  id: totrans-429
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: The format of virtual alias lookup tables is described in the `virtual(5)` manual
    page.
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟别名查找表的格式在`virtual(5)`手册页中有描述。
- en: In the above example, all messages to `joe@gb.example.com` will end up in the
    mailbox of the user "joe1", all messages to `joe@de.example.com` will end up in
    the mailbox of the user "joe2", and all messages to `jane@fr.example.com` will
    end up in the mailbox of the user "jane". Note that introducing virtual alias
    domains does not cause the original local domain to stop accepting messages.
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的示例中，所有发送到`joe@gb.example.com`的消息将最终进入用户"joe1"的邮箱，所有发送到`joe@de.example.com`的消息将最终进入用户"joe2"的邮箱，所有发送到`jane@fr.example.com`的消息将最终进入用户"jane"的邮箱。请注意，引入虚拟别名域不会导致原始本地域停止接受消息。
- en: Jane and our two Joes will also receive messages addressed to their actual usernames
    at `example.com`. (joe1@example.com, `joe2@example.com`, and `jane@example.com`).
    If this is undesirable, you can use `smtpd_recipient_restrictions` and `check_recipient_access`
    to reject attempts to send messages to these recipients. Add the restriction to
    the `smtpd_recipient_restrictions` setting (if any) in `main.cf:`
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: 简和我们的两个Joe也将收到发送到他们在`example.com`的实际用户名的消息。(joe1@example.com, `joe2@example.com`,
    和 `jane@example.com`)。如果这是不希望的，可以使用`smtpd_recipient_restrictions`和`check_recipient_access`来拒绝发送消息给这些收件人的尝试。将限制添加到`main.cf`中的`smtpd_recipient_restrictions`设置（如果有的话）：
- en: '[PRE57]'
  id: totrans-433
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'Then put the following in `/etc/postfix/recipient_access` and run `postmap`
    on the file:'
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
  zh: 然后将以下内容放入`/etc/postfix/recipient_access`并在文件上运行`postmap`：
- en: '[PRE58]'
  id: totrans-435
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: One virtual alias domain mapping to many local domains
  id: totrans-436
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 一个虚拟别名域映射到多个本地域
- en: After running the previous setup for a while, the staff at Example Inc. decide
    that they want to return to the old setup with a single domain for all employees.
    The name clashes can be resolved by including the users' last names in the address.
    They also want to have one mail server per branch office to avoid latency and
    network load when the users are accessing their mailboxes. All London users will
    have their accounts residing on the London server, Paris users on the Paris server,
    and Berlin users on the Berlin server. This problem is an opportunity to look
    at a different way of using virtual alias domains.
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的设置运行一段时间后，Example Inc.的员工决定要回到所有员工都使用单一域的旧设置。名字冲突可以通过在地址中包含用户的姓氏来解决。他们还希望每个分支办公室都有一个邮件服务器，以避免用户访问邮箱时出现延迟和网络负载。伦敦用户的帐户将驻留在伦敦服务器上，巴黎用户在巴黎服务器上，柏林用户在柏林服务器上。这个问题是一个机会，可以看看使用虚拟别名域的不同方式。
- en: The idea in this setup is that `example.com` will be the virtual domain and
    that each Postfix server will have a local domain of its own. The server at the
    London office will have `gb.example.com` listed as a local domain. Virtual aliasing
    will be used to map from the `example.com` addresses to the office-specific subdomains.
    This mapping can either be done exclusively on a master server or on the servers
    for each of the branch offices. Having a single master server introduces the problem
    of synchronizing the data between the servers, but that problem can be solved
    easily by storing the data in a relational database. How to use MySQL for alias
    lookups will be discussed in the *Introducing MySQL lookups* section later in
    the chapter.
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个设置中的想法是，`example.com`将是虚拟域，每个Postfix服务器将有自己的本地域。伦敦办公室的服务器将把`gb.example.com`列为本地域。虚拟别名将用于将`example.com`地址映射到特定办公室的子域。这种映射可以在主服务器上独占地进行，也可以在每个分支办公室的服务器上进行。拥有单个主服务器会引入在服务器之间同步数据的问题，但这个问题可以通过将数据存储在关系数据库中轻松解决。如何在章节后面的*介绍MySQL查找*部分中讨论如何使用MySQL进行别名查找。
- en: 'To implement this, start by removing `example.com` from `mydestination` and
    add it to `virtual_alias_domains` instead. This needs to be done on all servers.
    The branch office servers—one of which could easily be the master server—should
    have their own domain (`gb.example.com`, and so on) listed in `mydestination`.
    Do not forget to set up the DNS server so that messages to the branch office domains
    will be routed to the branch office servers. Finally, the virtual alias table
    should look like this:'
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
  zh: 要实现这一点，首先从`mydestination`中删除`example.com`，然后将其添加到`virtual_alias_domains`中。这需要在所有服务器上完成。分支办公室服务器——其中一个很容易可以是主服务器——应该在`mydestination`中列出自己的域（`gb.example.com`等等）。不要忘记设置DNS服务器，以便将消息路由到分支办公室域的服务器。最后，虚拟别名表应该是这样的：
- en: '[PRE59]'
  id: totrans-440
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: This problem illustrates an important point; the address/addresses in the right-hand
    side of a virtual alias table do not have to be local. Any domain can be put there.
    This is what happens when the master server receives a mail to `joe.smith@example.com:`
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: 这个问题说明了一个重要的观点；虚拟别名表右侧的地址/地址不一定是本地的。任何域都可以放在那里。当主服务器收到发送到`joe.smith@example.com`的邮件时，情况就是这样：
- en: Postfix looks in `virtual_alias_domains` to see if `example.com` is a virtual
    alias domain, and the result is positive.
  id: totrans-442
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Postfix在`virtual_alias_domains`中查找`example.com`是否是虚拟别名域，结果是肯定的。
- en: Next, it looks up `joe.smith@example.com` in `virtual_alias_maps`. The lookup
    returns `joe1@gb.example.com`.
  id: totrans-443
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在`virtual_alias_maps`中查找`joe.smith@example.com`。查找返回`joe1@gb.example.com`。
- en: Postfix on the master server decides that `gb.example.com` is not a domain that
    it hosts, and uses DNS to resolve the destination of the message, and finally
    delivers it to the London branch office server.
  id: totrans-444
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 主服务器上的Postfix决定`gb.example.com`不是它托管的域，并使用DNS解析消息的目的地，最终将其传递给伦敦分支办公室服务器。
- en: Group addresses
  id: totrans-445
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 组地址
- en: This third and final virtual alias example will do little more than state that
    the right-hand side of virtual alias tables may contain several addresses, which
    can be the names of other aliases rather than actual account names.
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: 这个第三个也是最后一个虚拟别名的例子将只是简单地说明虚拟别名表的右侧可能包含多个地址，这些地址可以是其他别名的名称，而不是实际的帐户名称。
- en: '[PRE60]'
  id: totrans-447
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: In this example, a message sent to `all@example.com` will be sent to all in
    management and all in finance, which in turn means Joe Smith, Joe Schmidt, Jane
    Doe, and Jack Black.
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，发送到`all@example.com`的消息将发送给所有管理人员和所有财务人员，这意味着Joe Smith、Joe Schmidt、Jane
    Doe和Jack Black。
- en: It may not be desirable to let anyone send messages to large distribution lists.
    Luckily, you can use Postfix's SMTP restrictions to restrict the access to the
    sensitive addresses. If you only want your own users (clients within `mynetworks`)
    to be allowed to send messages to an address, the solution is very simple. In
    `main.cf`, use the `check_recipient_access` restriction to disallow access to
    the address, but use `permit_mynetworks` to exempt your own clients.
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
  zh: 也许不希望任何人发送消息到大型分发列表。幸运的是，您可以使用Postfix的SMTP限制来限制对敏感地址的访问。如果您只希望您自己的用户（`mynetworks`内的客户）被允许发送消息到一个地址，解决方案非常简单。在`main.cf`中，使用`check_recipient_access`限制来禁止访问该地址，但使用`permit_mynetworks`来豁免您自己的客户。
- en: '[PRE61]'
  id: totrans-450
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: If you already use `smtpd_recipient_restrictions` in your `main.cf`, you will
    have to modify that parameter rather than just adding what is listed in the example
    above. The key feature is to list the `check_recipient_access` restriction after
    the `permit_mynetworks` restriction.
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您已经在`main.cf`中使用`smtpd_recipient_restrictions`，则必须修改该参数，而不仅仅是添加上面示例中列出的内容。关键特性是在`permit_mynetworks`限制之后列出`check_recipient_access`限制。
- en: Contents of `/etc/postfix/restricted_recipients:`
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
  zh: '`/etc/postfix/restricted_recipients`的内容：'
- en: '[PRE62]'
  id: totrans-453
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: In more complex scenarios, like when you want to disallow a recipient address
    for all but a few sender addresses or clients, you may need to use Postfix's restriction
    class feature. It is described in `RESTRICTION_CLASS_README` ([http://www.postfix.org/RESTRICTION_CLASS_README.html](http://www.postfix.org/RESTRICTION_CLASS_README.html))
    along with an example for this particular case.
  id: totrans-454
  prefs: []
  type: TYPE_NORMAL
  zh: 在更复杂的情况下，比如当您想要禁止所有寄件人地址，除了少数寄件人地址或客户端，您可能需要使用Postfix的限制类功能。它在`RESTRICTION_CLASS_README`中有描述（[http://www.postfix.org/RESTRICTION_CLASS_README.html](http://www.postfix.org/RESTRICTION_CLASS_README.html)），以及针对这种特殊情况的示例。
- en: Introducing MySQL lookups
  id: totrans-455
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 引入MySQL查找
- en: If your organization is large, maintaining a flat text file with aliases can
    be tedious. Storing the data in a real database comes with many advantages—many
    users can edit the data simultaneously, the users themselves can be allowed to
    perform some tasks via web interfaces, the data can be easily shared over the
    network, and so on.
  id: totrans-456
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的组织很大，使用别名的平面文本文件可能会很繁琐。将数据存储在真实数据库中有许多优势—许多用户可以同时编辑数据，用户们自己可以通过Web界面执行一些任务，数据可以轻松地在网络上共享等等。
- en: Postfix supports looking up data in a number of *complex* lookup table types.
    These include MySQL, PostgreSQL, and LDAP. It is *complex* not because it is very
    difficult to set up, but because there are inherently more things that can go
    wrong and, yes, simple indexed files (`hash, dbm, btree, cdb`) are easier to get
    right. If you want to solve a problem with a lookup table, always start with an
    indexed file. When you get things working and understand why and how they work,
    try to transform the same idea to the complex lookup table type.
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: Postfix支持在多种*复杂*查找表类型中查找数据。这些包括MySQL、PostgreSQL和LDAP。它之所以*复杂*，不是因为设置起来非常困难，而是因为本质上有更多可能出错的地方，是的，简单的索引文件（`hash,
    dbm, btree, cdb`）更容易正确获取。如果您想用查找表解决问题，始终从索引文件开始。当您让事情运转并理解为什么以及如何运转时，尝试将相同的想法转换为复杂的查找表类型。
- en: 'Postfix does not require you to conform to some specific database schema. For
    each lookup table where you use MySQL, you can use a separate configuration that
    given whatever schema you have chosen to use (more or less—the current version
    of Postfix does not quite allow arbitrary MySQL queries), returns the desired
    result. Each configuration is stored in a separate file that can have restrictive
    permissions as they contain database passwords. To use MySQL for looking up virtual
    aliases, the following setting in `main.cf` will do:'
  id: totrans-458
  prefs: []
  type: TYPE_NORMAL
  zh: Postfix不要求您遵守某种特定的数据库模式。对于每个使用MySQL的查找表，您可以使用单独的配置，给出您选择使用的任何模式（或多或少—当前版本的Postfix并不完全允许任意的MySQL查询），返回所需的结果。每个配置都存储在一个单独的文件中，可以具有限制性权限，因为它们包含数据库密码。要在`main.cf`中使用MySQL查找虚拟别名，可以使用以下设置：
- en: '[PRE63]'
  id: totrans-459
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: The configuration file follows the same format as `main.cf` and contains all
    information required to make a lookup—in this case, a virtual alias lookup. The
    following table describes the parameters that you can put in the configuration
    file. The parameters will be used to construct the `SELECT` query. In Postfix
    2.1 and later, the format of such configuration files can be found in the `mysql_table(5)`
    manual page.
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: 配置文件遵循与`main.cf`相同的格式，并包含进行查找所需的所有信息—在本例中是虚拟别名查找。以下表格描述了您可以放入配置文件中的参数。这些参数将用于构建`SELECT`查询。在Postfix
    2.1及更高版本中，此类配置文件的格式可以在`mysql_table(5)`手册页中找到。
- en: '| Parameter | Description |'
  id: totrans-461
  prefs: []
  type: TYPE_TB
  zh: '| 参数 | 描述 |'
- en: '| --- | --- |'
  id: totrans-462
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `hosts` | A list of the MySQL hosts that Postfix will contact to perform
    the query. Can contain either IP addresses, hostnames or, when prefixed with `unix:`,
    the path to a local UNIX domain socket. If you specify multiple hosts, they will
    be tried in random order. Any UNIX domain socket hosts will be tried first. |'
  id: totrans-463
  prefs: []
  type: TYPE_TB
  zh: '| `hosts` | Postfix将联系以执行查询的MySQL主机列表。可以包含IP地址、主机名或（以`unix:`为前缀时）本地UNIX域套接字的路径。如果指定多个主机，它们将以随机顺序尝试。任何UNIX域套接字主机将首先尝试。
    |'
- en: '| `user` | The username that should be used to log in to the MySQL server.
    |'
  id: totrans-464
  prefs: []
  type: TYPE_TB
  zh: '| `user` | 应用于登录到MySQL服务器的用户名。 |'
- en: '| `password` | The password that should be used to log in to the MySQL server.
    |'
  id: totrans-465
  prefs: []
  type: TYPE_TB
  zh: '| `password` | 应用于登录到MySQL服务器的密码。 |'
- en: '| `dbname` | The name of the database to use. |'
  id: totrans-466
  prefs: []
  type: TYPE_TB
  zh: '| `dbname` | 要使用的数据库的名称。 |'
- en: '| `select_field` | The name of the column from which the lookup result will
    be taken. |'
  id: totrans-467
  prefs: []
  type: TYPE_TB
  zh: '| `select_field` | 将查找结果取自的列名。 |'
- en: '| `table` | The table that will be searched for the data. |'
  id: totrans-468
  prefs: []
  type: TYPE_TB
  zh: '| `table` | 将搜索数据的表。 |'
- en: '| `where_field` | The table column with which the lookup key will be compared.
    |'
  id: totrans-469
  prefs: []
  type: TYPE_TB
  zh: '| `where_field` | 将查找键与之进行比较的表列。 |'
- en: '| `additional_conditions` | If you require some additional conditions to be
    tacked on at the end of the constructed query, you can put them here. |'
  id: totrans-470
  prefs: []
  type: TYPE_TB
  zh: '| `additional_conditions` | 如果您需要在构建的查询末尾附加一些额外条件，可以在这里放置它们。 |'
- en: '| `query` | The SQL query to perform, with `%s` being a placeholder for the
    string being looked up. This parameter is mutually exclusive with `select_field,
    table, where_field`, and `additional_conditions`. This parameter was introduced
    in Postfix 2.2 and is the recommended way of configuring the MySQL query. |'
  id: totrans-471
  prefs: []
  type: TYPE_TB
  zh: '| `query` | 要执行的SQL查询，其中`%s`是要查找的字符串的占位符。此参数与`select_field, table, where_field`和`additional_conditions`是互斥的。此参数在Postfix
    2.2中引入，并且是配置MySQL查询的推荐方式。 |'
- en: Let's start with a simple example. You have a table alias with two columns—
    `alias` and `address`. The `alias` column is the left-hand side of the virtual
    lookup table (the address with the virtual alias domain) and the `address` column
    is the right-hand side (the new address).
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从一个简单的例子开始。您有一个包含两列的别名表——“别名”和“地址”。 “别名”列是虚拟查找表的左侧（带有虚拟别名域的地址），而“地址”列是右侧（新地址）。
- en: '[PRE64]'
  id: totrans-473
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: 'The following simple SQL query is needed to find out whether an address in
    one of the virtual domains exists and should be rewritten to some other address:'
  id: totrans-474
  prefs: []
  type: TYPE_NORMAL
  zh: 需要以下简单的SQL查询来查找虚拟域中的地址是否存在，并且是否应该重写为其他地址：
- en: '[PRE65]'
  id: totrans-475
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: 'Translating this into a Postfix MySQL lookup table configuration yields the
    following:'
  id: totrans-476
  prefs: []
  type: TYPE_NORMAL
  zh: 将其翻译成Postfix MySQL查找表配置将得到以下结果：
- en: '[PRE66]'
  id: totrans-477
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: 'An alternative solution, using the `query` parameter of Postfix 2.2, would
    look like this:'
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Postfix 2.2的“query”参数的另一种解决方案将如下所示：
- en: '[PRE67]'
  id: totrans-479
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: For brevity, the `hosts, user, password`, and `dbname` parameters will hereon
    be omitted from the example configurations.
  id: totrans-480
  prefs: []
  type: TYPE_NORMAL
  zh: 为简洁起见，“主机、用户、密码”和“dbname”参数将在示例配置中被省略。
- en: Sometimes reality is a bit more complicated than this trivial example, so we
    will move on to something a bit more difficult.
  id: totrans-481
  prefs: []
  type: TYPE_NORMAL
  zh: 有时现实情况可能比这个简单的例子更复杂，所以我们将转向一些更困难的内容。
- en: 'The `select_field, table, where_field`, and `additional_conditions` parameters
    are really just inserted directly into the following `SELECT` query template,
    together with the lookup string:'
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
  zh: “select_field，table，where_field”和“additional_conditions”参数实际上只是直接插入到以下“SELECT”查询模板中，与查找字符串一起：
- en: '[PRE68]'
  id: totrans-483
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: 'This means `select_field` does not have to be a single column; it could specify
    multiple columns combined into one value, and `table` could be multiple tables
    with the join conditions in `additional_conditions`. For example, consider this
    slightly more complex query:'
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着“select_field”不一定是一个单独的列；它可以指定多个列组合成一个值，“table”可以是多个表，其中包括“additional_conditions”中的连接条件。例如，考虑这个稍微复杂的查询：
- en: '[PRE69]'
  id: totrans-485
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: 'The following lookup table configuration would be required to execute it:'
  id: totrans-486
  prefs: []
  type: TYPE_NORMAL
  zh: 需要以下查找表配置来执行它：
- en: '[PRE70]'
  id: totrans-487
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: 'Or, using the `query` parameter:'
  id: totrans-488
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，使用“query”参数：
- en: '[PRE71]'
  id: totrans-489
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: Before putting a new MySQL lookup table configuration to work, you should make
    sure that it returns the desired result for all lookup keys. This can be done
    with the `postmap` program, the procedure for which is described in the *Troubleshooting
    lookup tables with postmap* section.
  id: totrans-490
  prefs: []
  type: TYPE_NORMAL
  zh: 在将新的MySQL查找表配置投入使用之前，您应该确保它对所有查找键返回所需的结果。这可以通过“postmap”程序完成，其过程在*使用postmap调试查找表*部分中有描述。
- en: Local aliases
  id: totrans-491
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 本地别名
- en: Local aliases are an alternative to virtual aliases. Local aliases pretty much
    work in the same way, but they apply only to local domains. Local alias tables
    also provide a couple of extra features. We took a brief look at local aliases
    even before we started Postfix the first time in the *Error reporting* section.
  id: totrans-492
  prefs: []
  type: TYPE_NORMAL
  zh: 本地别名是虚拟别名的一种替代方案。本地别名基本上以相同的方式工作，但它们只适用于本地域。本地别名表还提供了一些额外的功能。我们甚至在第一次启动Postfix之前的*错误报告*部分简要介绍了本地别名。
- en: Lookup tables for local aliases are specified in the `alias_maps` parameter.
    These lookup tables have a slightly different format than virtual aliases, and
    the reason is to stay compatible with the file format of the `sendmail` mail transfer
    agent. Because of this, you should not use the `postmap` command to rebuild the
    alias file but `postalias` instead. You may also find the `newaliases` command
    to be convenient.
  id: totrans-493
  prefs: []
  type: TYPE_NORMAL
  zh: 本地别名的查找表在“alias_maps”参数中指定。这些查找表的格式与虚拟别名略有不同，原因是为了与“sendmail”邮件传输代理的文件格式保持兼容。因此，您不应该使用“postmap”命令重建别名文件，而应该使用“postalias”。您也可以发现“newaliases”命令很方便。
- en: Many people are confused by the two similar parameters, `alias_maps` and `alias_database`.
    The difference between the two of them is that `alias_maps` contains the lookup
    tables that Postfix will use to do local alias rewriting, and `alias_database`
    contains the lookup tables that the `newaliases` command will rebuild when invoked.
    Only indexed lookup tables (`hash, btree, dbm, cdb`) need to be rebuilt, so it
    does not make sense to list MySQL lookup tables there.
  id: totrans-494
  prefs: []
  type: TYPE_NORMAL
  zh: 许多人对两个类似的参数“alias_maps”和“alias_database”感到困惑。它们之间的区别在于，“alias_maps”包含Postfix将用于执行本地别名重写的查找表，“alias_database”包含在调用时“newaliases”命令将重建的查找表。只有索引查找表（“hash,
    btree, dbm, cdb”）需要重建，因此在那里列出MySQL查找表是没有意义的。
- en: 'Often, you will want `alias_maps` and `alias_database` to refer to the same
    lookup table(s):'
  id: totrans-495
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，您希望“alias_maps”和“alias_database”指向相同的查找表：
- en: '[PRE72]'
  id: totrans-496
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: 'Compared to virtual alias tables, the lookup key in local alias tables does
    not include the domain part. That information would be useless as all local domains
    have the same localpart namespaces. When indexed files are used for local aliases,
    the lookup key must end with a colon, for example see the follwoing:'
  id: totrans-497
  prefs: []
  type: TYPE_NORMAL
  zh: 与虚拟别名表相比，本地别名表中的查找键不包括域部分。该信息将是无用的，因为所有本地域都具有相同的本地部分命名空间。当使用索引文件进行本地别名时，查找键必须以冒号结尾，例如见下文：
- en: '[PRE73]'
  id: totrans-498
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: This will send messages addressed to the postmaster address in any local domain
    to the two users, `jack` and `jill`, assuming that the domain in `myorigin` is
    local. The next section explains why this assumption is important.
  id: totrans-499
  prefs: []
  type: TYPE_NORMAL
  zh: 这将把发送到任何本地域中的postmaster地址的消息发送给两个用户“jack”和“jill”，假设“myorigin”中的域是本地的。下一节将解释为什么这个假设很重要。
- en: The right-hand side of alias tables does not necessarily have to point to local
    users. In fact they may point to any valid address in any domain. The format of
    local alias tables is described in the `aliases(5)` manual page.
  id: totrans-500
  prefs: []
  type: TYPE_NORMAL
  zh: 别名表的右侧不一定要指向本地用户。实际上，它们可以指向任何域中的任何有效地址。本地别名表的格式在“aliases(5)”手册页中有描述。
- en: Command deliveries
  id: totrans-501
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 命令传递
- en: Up until now, everything that could have been done with a local alias could
    just as well have been done with a virtual alias. So, what is the point of local
    aliases? One big difference is that local aliases support delivering messages
    to commands. This is typically required by mailing list manager software. Postfix
    delivers messages to commands by passing the contents of the messages on the standard
    input stream.
  id: totrans-502
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，所有可以使用本地别名完成的工作都可以使用虚拟别名完成。那么，本地别名的意义何在？一个重要的区别是本地别名支持将消息传递给命令。这通常是邮件列表管理软件所需的。Postfix通过将消息内容传递到标准输入流来将消息传递给命令。
- en: 'To run a command when a message is delivered, the following syntax is used:'
  id: totrans-503
  prefs: []
  type: TYPE_NORMAL
  zh: 在传递消息时运行命令，使用以下语法：
- en: '[PRE74]'
  id: totrans-504
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: The double quotes are necessary only if the command, as in this case, contains
    spaces.
  id: totrans-505
  prefs: []
  type: TYPE_NORMAL
  zh: 双引号仅在命令包含空格时才是必需的。
- en: 'But what if you want to run a mailing list on a virtual domain? You will have
    to use virtual aliases to rewrite the addresses in the virtual domain to local
    aliases. Say you want messages sent to the address `mylist@virtual.example.com`
    to be posted to the `mylist` mailing list, which accepts messages via command
    delivery. To enable this you will need a virtual alias such as the following:'
  id: totrans-506
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，如果您想在虚拟域上运行邮件列表怎么办？您将需要使用虚拟别名将虚拟域中的地址重写为本地别名。比如，您希望发送到地址`mylist@virtual.example.com`的消息被发布到`mylist`邮件列表，该列表通过命令传递接受消息。为了实现这一点，您将需要一个虚拟别名，如下所示：
- en: '[PRE75]'
  id: totrans-507
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: Pay attention to what user the programs will run as. Postfix normally uses the
    owner of the alias file, but not if the owner is the root user. In that case,
    the user in the `default_privs` parameter (typically "nobody") will be used to
    run the program.
  id: totrans-508
  prefs: []
  type: TYPE_NORMAL
  zh: 注意程序将以哪个用户身份运行。Postfix通常使用别名文件的所有者，但如果所有者是root用户，则不会使用。在这种情况下，将使用`default_privs`参数中的用户（通常为“nobody”）来运行程序。
- en: If you write your own program that you want Postfix to deliver messages to,
    make sure you return an appropriate exit status when errors occur. Postfix uses
    the error status constants in `sysexits.h` to determine what to do if the program
    exits with a non-zero exit status. Depending on the exit status, Postfix will
    either return the message to the sender or let it remain in the queue and retry
    delivery later.
  id: totrans-509
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您编写自己的程序，希望Postfix将消息传递给该程序，请确保在发生错误时返回适当的退出状态。Postfix使用`sysexits.h`中的错误状态常量来确定如果程序以非零退出状态退出时该做什么。根据退出状态，Postfix将消息返回给发件人或让其保留在队列中并稍后重试传递。
- en: Common pitfalls
  id: totrans-510
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 常见陷阱
- en: Virtual aliases not only apply to virtual alias domains but also to all messages
    that pass through Postfix. Not recognizing this may lead to surprises. For example,
    if you host many virtual alias domains that all should have some aliases in common—say,
    `root, postmaster`, and `abuse`—you might be tempted to use a regular expression
    lookup table (`regexp` or `PCRE`) to alias these addresses for all of your virtual
    alias domains to yourself.
  id: totrans-511
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟别名不仅适用于虚拟别名域，还适用于通过Postfix传递的所有消息。不认识这一点可能会导致意外。例如，如果您托管许多虚拟别名域，所有这些域都应该有一些共同的别名，比如`root,
    postmaster`和`abuse`，您可能会倾向于使用正则表达式查找表（`regexp`或`PCRE`）将这些地址的别名用于所有虚拟别名域。到您自己。
- en: '[PRE76]'
  id: totrans-512
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: Do not do this! As virtual aliases apply to all messages, any messages that
    you or your users send to, for instance, `abuse@aol.com` or `abuse@mindspring.com`
    will be sent to you instead of the intended recipient.
  id: totrans-513
  prefs: []
  type: TYPE_NORMAL
  zh: 不要这样做！由于虚拟别名适用于所有消息，您或您的用户发送的任何消息，例如`abuse@aol.com`或`abuse@mindspring.com`都将发送到您而不是预期的收件人。
- en: A very common pitfall is believing that a non-qualified address on the right-hand
    side implicitly refers to a local user. For example, `joe` would always mean the
    local user joe. This is equally untrue for both virtual aliases and local aliases.
    Recall from the beginning of this chapter when the `myorigin` parameter was discussed.
    Just as in all other places, Postfix will qualify bare usernames with `myorigin`.
    If your value of `myorigin` happens to be a local domain listed in `mydestination`,
    which it probably would be, `joe` will indeed refer to the local user joe. To
    avoid surprises, if you at some time set `myorigin` to a non-local domain, it
    is a good idea to always qualify the right-hand side addresses with a local domain.
    As `localhost.$mydomain` almost always is listed in `mydestination`, a good candidate
    might be `localhost`.
  id: totrans-514
  prefs: []
  type: TYPE_NORMAL
  zh: 一个非常常见的陷阱是认为右侧的非限定地址隐含地指向本地用户。例如，`joe`总是指本地用户joe。这对虚拟别名和本地别名同样不正确。回想一下本章开头讨论`myorigin`参数时。就像在所有其他地方一样，Postfix将使用`myorigin`来限定裸用户名。如果您的`myorigin`值恰好是列在`mydestination`中的本地域，那么`joe`确实将指本地用户joe。为了避免意外，如果您有时将`myorigin`设置为非本地域，最好始终使用本地域限定右侧地址。由于`localhost.$mydomain`几乎总是列在`mydestination`中，一个很好的选择可能是`localhost`。
- en: '[PRE77]'
  id: totrans-515
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: Other address rewriting mechanisms
  id: totrans-516
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 其他地址重写机制
- en: Virtual and local aliases are not the only mechanisms for address rewriting
    that Postfix provides. Most notably, canonical rewriting can be used to rewrite
    sender and/or recipient addresses in both the envelope and the headers. This type
    of rewriting is provided by the parameters `canonical_maps, sender_canonical_maps`,
    and `recipient_canonical_maps` and can among other things be useful to rewrite
    sender addresses such as `joe@example.com` to `Joe.User@example.com` if you do
    not want to expose the actual usernames of the users.
  id: totrans-517
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟和本地别名并不是Postfix提供的地址重写的唯一机制。最值得注意的是，规范重写可用于重写信封和标题中的发件人和/或收件人地址。这种类型的重写由参数`canonical_maps，sender_canonical_maps`和`recipient_canonical_maps`提供，除其他事项外，还可以用于将发件人地址重写为`joe@example.com`到`Joe.User@example.com`，如果您不想公开用户的实际用户名。
- en: How Postfix rewrites addresses and in what order rewriting happens is described
    in *ADDRESS_REWRITING_README* available at [http://www.postfix.org/ADDRESS_REWRITING_README.html](http://www.postfix.org/ADDRESS_REWRITING_README.html).
  id: totrans-518
  prefs: []
  type: TYPE_NORMAL
  zh: Postfix如何重写地址以及重写发生的顺序在*ADDRESS_REWRITING_README*中有描述，可在[http://www.postfix.org/ADDRESS_REWRITING_README.html](http://www.postfix.org/ADDRESS_REWRITING_README.html)上找到。
- en: Troubleshooting Postfix problems
  id: totrans-519
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 故障排除Postfix问题
- en: Postfix provides many tools to simplify problem solving. While implementing
    new features in your Postfix mail system, do it step by step. The more unsure
    you are in what you are doing, the smaller should be the steps that you take.
    If you run into problems, you will discover them early and it will be easier to
    figure out what went wrong. This is especially true when implementing complex
    lookup tables using MySQL databases.
  id: totrans-520
  prefs: []
  type: TYPE_NORMAL
  zh: Postfix提供了许多工具来简化问题解决。在Postfix邮件系统中实施新功能时，一定要一步步来。你对自己所做的事情越不确定，你所采取的步骤就应该越小。如果遇到问题，你会很早就发现它们，更容易找出问题出在哪里。特别是在使用MySQL数据库实现复杂查找表时，这一点尤为重要。
- en: Note
  id: totrans-521
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you are even slightly uncomfortable with complex lookup tables, never introduce
    a new feature and a complex lookup table configuration at the same time. If something
    breaks, you will have much more trouble figuring out where to start.
  id: totrans-522
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对复杂查找表感到稍微不舒服，永远不要同时引入新功能和复杂查找表配置。如果出现问题，你将更难找出从哪里开始。
- en: 'When trying out new configurations, it does not hurt to be on the cautious
    side until the configuration is fully tested. By setting the following feature
    all permanent errors will be turned into temporary errors:'
  id: totrans-523
  prefs: []
  type: TYPE_NORMAL
  zh: 在尝试新配置时，保持谨慎不会有坏处，直到配置完全测试通过。通过设置以下功能，所有永久错误将被转换为临时错误：
- en: '[PRE78]'
  id: totrans-524
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: This means the transmission of any messages rejected by your server will be
    retried, and that Postfix will retry sending any messages that get rejected by
    a remote server. With this setting in effect, closely monitor the logs and look
    for rejections that do not seem normal. Do not forget to turn this feature off
    when you have finished testing!
  id: totrans-525
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着您的服务器拒绝的任何消息的传输都将被重试，并且Postfix将重试发送任何被远程服务器拒绝的消息。在这种设置下，密切监视日志，并寻找看起来不正常的拒绝。在测试完成后不要忘记关闭此功能！
- en: Reading and interpreting the log files
  id: totrans-526
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 阅读和解释日志文件
- en: 'One key element in troubleshooting Postfix problems is being able to read and
    interpret the log messages that Postfix produces. Because they are plain text
    files with one log message per line, they do not require any special programs
    for inspection. Logs have been looked at a few times before, but this section
    will explain the messages and give examples of both successful mail deliveries
    and failures. When reading the examples, refer to the figure in the *Postfix architecture:
    An overview* section and note how the order of the log entries closely follows
    the path of the mail through Postfix.'
  id: totrans-527
  prefs: []
  type: TYPE_NORMAL
  zh: 解决Postfix问题的一个关键元素是能够阅读和解释Postfix生成的日志消息。因为它们是纯文本文件，每行一个日志消息，所以不需要任何特殊的程序进行检查。日志已经被查看了几次，但本节将解释这些消息，并举例说明成功的邮件投递和失败的情况。阅读示例时，请参考“Postfix架构：概述”部分中的图表，并注意日志条目的顺序如何紧随邮件通过Postfix的路径。
- en: Understanding Postfix's logging is also discussed in Kyle Dent's article *Troubleshooting
    with Postfix Logs* at [http://www.onlamp.com/pub/a/onlamp/2004/01/22/postfix.html](http://www.onlamp.com/pub/a/onlamp/2004/01/22/postfix.html).
  id: totrans-528
  prefs: []
  type: TYPE_NORMAL
  zh: Kyle Dent的文章*使用Postfix日志进行故障排除*中也讨论了理解Postfix的日志记录，网址为[http://www.onlamp.com/pub/a/onlamp/2004/01/22/postfix.html](http://www.onlamp.com/pub/a/onlamp/2004/01/22/postfix.html)。
- en: Message queue ID
  id: totrans-529
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 消息队列ID
- en: An important property of each message, received and processed, is the queue
    ID. The **queue ID** is a hexadecimal number of varying lengths that identifies
    a message. Log messages that have a message context will also log the queue ID.
    This makes it easy for you to find all log messages that pertain to a message
    if you have the queue ID (the path to the log file needs to be adjusted for your
    system).
  id: totrans-530
  prefs: []
  type: TYPE_NORMAL
  zh: 每条接收和处理的消息的一个重要属性是队列ID。队列ID是一个长度不等的十六进制数，用于标识消息。具有消息上下文的日志消息也将记录队列ID。如果您有队列ID（需要调整日志文件路径以适应您的系统），这将使您很容易找到与消息相关的所有日志消息。
- en: '[PRE79]'
  id: totrans-531
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: The queue ID is assigned when the `cleanup` daemon creates a queue file in one
    of the Postfix queue directories. The queue file remains in the system until all
    recipients have been delivered to or the message expires, after which the `qmgr`
    daemon removes the queue file. In recent releases of Postfix, this removal event
    is logged, as we will see in the examples.
  id: totrans-532
  prefs: []
  type: TYPE_NORMAL
  zh: 当“cleanup”守护程序在Postfix队列目录之一中创建队列文件时，将分配队列ID。队列文件将保留在系统中，直到所有收件人已交付或消息过期，之后“qmgr”守护程序将删除队列文件。在Postfix的最新版本中，这个删除事件会被记录，我们将在示例中看到。
- en: 'Sometimes you will find that there is no queue ID but instead the word `NOQUEUE`
    in the log, as in this example that we have seen before:'
  id: totrans-533
  prefs: []
  type: TYPE_NORMAL
  zh: 有时你会发现日志中没有队列ID，而是出现“NOQUEUE”这个词，就像我们之前看到的例子一样：
- en: '[PRE80]'
  id: totrans-534
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: The reason is that this message has not yet been given a queue file and thus
    has not been assigned a queue ID. The queue file is created by the `cleanup` daemon
    when the first recipient has been accepted. This helps in performance optimization.
  id: totrans-535
  prefs: []
  type: TYPE_NORMAL
  zh: 原因是这条消息尚未被分配队列文件，因此尚未被分配队列ID。当第一个收件人被接受时，“cleanup”守护程序会创建队列文件。这有助于性能优化。
- en: Do not confuse the queue ID with the message ID. The latter is contained in
    the Message-ID header of each message and is normally added by the mail client
    before the message is handed over to Postfix. If no such header field is present,
    the `cleanup` daemon of Postfix will add one for you. The `cleanup` daemon will
    always log the message ID of received messages.
  id: totrans-536
  prefs: []
  type: TYPE_NORMAL
  zh: 不要将队列ID与消息ID混淆。后者包含在每个消息的Message-ID标头中，并且通常在消息交给Postfix之前由邮件客户端添加。如果没有这样的标头字段，则Postfix的“cleanup”守护程序会为您添加一个。接收到的消息的“cleanup”守护程序将始终记录消息ID。
- en: '[PRE81]'
  id: totrans-537
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: The Message-ID header contains the hostname of the computer and typically the
    current date and time, and it will be unique for each message. Do not fall in
    the trap of thinking that the queue IDs also are unique. Queue IDs can and will
    be reused for different messages, theoretically as often as every second (but
    that would have to be on an incredibly busy system).
  id: totrans-538
  prefs: []
  type: TYPE_NORMAL
  zh: Message-ID标头包含计算机的主机名和当前日期和时间，对于每个消息都是唯一的。不要误以为队列ID也是唯一的。队列ID可以并且将被不同的消息重复使用，理论上每秒钟都可能发生（但这必须是在一个非常繁忙的系统上）。
- en: SMTP submission and local delivery
  id: totrans-539
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: SMTP提交和本地交付
- en: Let's start by looking at two examples of successful mail transactions. The
    first one shows a message being received by SMTP and delivered to a local mailbox,
    and the second example will show a locally submitted message that is delivered
    to a foreign mailbox via SMTP.
  id: totrans-540
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们首先看两个成功的邮件交易示例。第一个示例显示通过SMTP接收消息并将其交付到本地邮箱，第二个示例将显示通过SMTP交付到外部邮箱的本地提交消息。
- en: The first example shows what the logs contain after a message has been received
    via SMTP and delivered to a local user.
  id: totrans-541
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个示例显示了在通过SMTP接收消息并将其交付给本地用户后日志中包含的内容。
- en: '[PRE82]'
  id: totrans-542
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: The `smtpd` daemon has received a connection from a client.
  id: totrans-543
  prefs: []
  type: TYPE_NORMAL
  zh: '`smtpd`守护程序已从客户端接收到连接。'
- en: '[PRE83]'
  id: totrans-544
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: Postfix has now accepted the first recipient of this message and requested a
    queue file from the `cleanup` daemon. This is the first log entry for this message
    that contains the queue ID.
  id: totrans-545
  prefs: []
  type: TYPE_NORMAL
  zh: Postfix现在已接受此消息的第一个收件人，并从“cleanup”守护程序请求队列文件。这是包含队列ID的此消息的第一个日志条目。
- en: '[PRE84]'
  id: totrans-546
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: The `cleanup` daemon has received the whole message from the `smtpd` daemon
    and logs the message ID.
  id: totrans-547
  prefs: []
  type: TYPE_NORMAL
  zh: '`cleanup`守护程序已从`smtpd`守护程序接收到整个消息，并记录了消息ID。'
- en: '[PRE85]'
  id: totrans-548
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: The client disconnected from the SMTP server.
  id: totrans-549
  prefs: []
  type: TYPE_NORMAL
  zh: 客户端从SMTP服务器断开连接。
- en: '[PRE86]'
  id: totrans-550
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: The message has entered the active queue and is thus eligible for delivery (unless
    the queue is congested, delivery will start more or less immediately). The queue
    manager logs the sender address, the message size in bytes, and the total number
    of recipients. The reported size will be slightly larger than the actual number
    of bytes in the message and the size of the message when stored on disk. This
    is because the reported size is the total size of the message content records
    in the queue file, and this gives a little overhead.
  id: totrans-551
  prefs: []
  type: TYPE_NORMAL
  zh: 消息已进入活动队列，因此有资格进行交付（除非队列拥挤，否则交付将立即开始）。队列管理器记录了发件人地址、消息大小（以字节为单位）和总收件人数。报告的大小将略大于消息中的实际字节数以及存储在磁盘上的消息大小。这是因为报告的大小是队列文件中消息内容记录的总大小，这会产生一些额外开销。
- en: '[PRE87]'
  id: totrans-552
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: The local delivery agent successfully delivered the message to the `maildir`
    of the local user "jack". The message was originally addressed to `postmaster@example.net`,
    but some address rewriting mechanism (typically a local or virtual alias) rewrote
    the recipient address. Finally, the message was delivered about one tenth of a
    second after it was received (the `delay` keyword).
  id: totrans-553
  prefs: []
  type: TYPE_NORMAL
  zh: 本地交付代理成功将消息交付给本地用户“jack”的“maildir”。消息最初是寄给`postmaster@example.net`的，但是某些地址重写机制（通常是本地或虚拟别名）重写了收件人地址。最后，消息在接收后约一秒钟后被交付（`delay`关键字）。
- en: Note that this message is logged when the delivery is completed. If the delivery
    agent invokes another program during the delivery and that program logs messages
    of its own, these will end up in the log before this delivery completion message.
  id: totrans-554
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，此消息在交付完成时记录。如果交付代理在交付过程中调用另一个程序，并且该程序记录了自己的消息，则这些消息将在此交付完成消息之前记录在日志中。
- en: 'Each recipient delivered to will emit a log message:'
  id: totrans-555
  prefs: []
  type: TYPE_NORMAL
  zh: 每个交付的收件人都会发出一条日志消息：
- en: '[PRE88]'
  id: totrans-556
  prefs: []
  type: TYPE_PRE
  zh: '[PRE88]'
- en: This final message signals that all recipients have been delivered to so that
    the queue file is removed.
  id: totrans-557
  prefs: []
  type: TYPE_NORMAL
  zh: 这条最终消息表示所有收件人都已交付，因此队列文件被删除。
- en: Local submission and SMTP delivery
  id: totrans-558
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 本地提交和SMTP交付
- en: 'Our next example is somewhat the opposite of the previous example. Here, a
    message submitted via the `sendmail` command is delivered to another host via
    SMTP:'
  id: totrans-559
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的下一个示例与上一个示例有些相反。在这里，通过`sendmail`命令提交的消息通过SMTP交付到另一台主机：
- en: '[PRE89]'
  id: totrans-560
  prefs: []
  type: TYPE_PRE
  zh: '[PRE89]'
- en: The submitted message has been taken care of by the `pickup` daemon. The message
    was submitted by the user having user ID `100`, and the sender was the unqualified
    address `jack:`
  id: totrans-561
  prefs: []
  type: TYPE_NORMAL
  zh: 提交的消息已由“pickup”守护程序处理。消息由用户ID为“100”的用户提交，发件人是未经修饰的地址“jack:”
- en: '[PRE90]'
  id: totrans-562
  prefs: []
  type: TYPE_PRE
  zh: '[PRE90]'
- en: 'Again, the message has been read by the `cleanup` daemon and the message ID
    is logged:'
  id: totrans-563
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，消息已被“cleanup”守护程序读取，并记录了消息ID：
- en: '[PRE91]'
  id: totrans-564
  prefs: []
  type: TYPE_PRE
  zh: '[PRE91]'
- en: Note how the previously unqualified sender address has now been rewritten to
    a fully qualified address, probably because the `myorigin` parameter is equal
    to `example.net`.
  id: totrans-565
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，先前未经修饰的发件人地址现在已被重写为完全合格的地址，可能是因为`myorigin`参数等于`example.net`。
- en: '[PRE92]'
  id: totrans-566
  prefs: []
  type: TYPE_PRE
  zh: '[PRE92]'
- en: 'The message was successfully delivered to the recipient `joe@example.com` via
    the `mail.example.com` SMTP relay. When accepting the message, the remote server
    said:'
  id: totrans-567
  prefs: []
  type: TYPE_NORMAL
  zh: 该消息已通过`mail.example.com` SMTP中继成功交付给收件人`joe@example.com`。在接受消息时，远程服务器说：
- en: '**250 Ok: queued as DD8F02787**'
  id: totrans-568
  prefs: []
  type: TYPE_NORMAL
  zh: '**250 Ok: queued as DD8F02787**'
- en: 'So now we know the queue ID that our message got at the other end. This information
    may be useful if we need to contact the postmaster at `example.com` regarding
    this message:'
  id: totrans-569
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道我们的消息在另一端的队列ID。如果我们需要联系`example.com`的邮件管理员有关此消息，这些信息可能会有用：
- en: '[PRE93]'
  id: totrans-570
  prefs: []
  type: TYPE_PRE
  zh: '[PRE93]'
- en: Delivery completed, queue file removed.
  id: totrans-571
  prefs: []
  type: TYPE_NORMAL
  zh: 交付完成，队列文件已删除。
- en: Hopefully you are starting to get a grip on the general format of the log entries
    emitted for a message, so the next example will show only log fragments.
  id: totrans-572
  prefs: []
  type: TYPE_NORMAL
  zh: 希望您开始对消息发出的日志条目的一般格式有所了解，因此下一个示例将仅显示日志片段。
- en: Connection problems upon SMTP delivery
  id: totrans-573
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: SMTP交付时的连接问题
- en: 'The following example shows what happens when multiple hosts are set up in
    DNS to receive messages for a domain but some of the hosts are temporarily unreachable
    causing Postfix to try a few of them before the delivery can be made. We will
    only look at the logs of the delivery agent:'
  id: totrans-574
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例显示了当多个主机在DNS中设置为接收某个域的消息，但其中一些主机暂时无法访问时会发生什么，导致Postfix在交付之前尝试其中一些主机。我们只会查看交付代理的日志：
- en: '[PRE94]'
  id: totrans-575
  prefs: []
  type: TYPE_PRE
  zh: '[PRE94]'
- en: Clearly, three of the receiving mail hosts for `hotmail.com` were unreachable
    when Postfix attempted the delivery. Notice how the connection attempts are evenly
    spread out at 30-second intervals. This is not a coincidence; the default value
    of the `smtp_connect_timeout` parameter that controls how long Postfix will wait
    for a connection is indeed 30 seconds. These three 30-second timeouts also explain
    why the delivery delay logged by the last message is 92 seconds. Also do notice
    that the acceptance message that Hotmail gives us does not contain any queue ID
    but instead the message ID—the format of the text message following the 250 status
    code has not been standardized.
  id: totrans-576
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，当Postfix尝试传递时，`hotmail.com`的三个接收邮件主机都无法访问。请注意连接尝试是如何均匀分布在30秒间隔的。这不是巧合；控制Postfix等待连接的`smtp_connect_timeout`参数的默认值确实是30秒。这三个30秒的超时也解释了最后一条消息记录的传递延迟为92秒。还要注意，Hotmail给我们的接受消息不包含任何队列ID，而是消息ID——250状态代码后的文本消息格式尚未标准化。
- en: Getting more detailed log messages
  id: totrans-577
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 获取更详细的日志消息
- en: 'In most cases, Postfix''s default logging is enough to resolve a problem but
    sometimes more details are needed. For those rare cases, you can ask Postfix''s
    daemon processes to log more detailed messages by making sure they are given at
    least one `-v` startup option. This is done by editing `master.cf`, and adding
    `-v` to the end of the line for the daemon from which you want to get more detailed
    logging. For example, to get verbose logging from the SMTP server, `smtpd`, change
    the line:'
  id: totrans-578
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数情况下，Postfix的默认日志记录足以解决问题，但有时需要更多的细节。对于这些罕见的情况，您可以通过确保Postfix的守护进程至少给出一个`-v`启动选项来要求守护进程记录更详细的消息。这是通过编辑`master.cf`并在您想要获得更详细日志记录的守护进程的行末尾添加`-v`来完成的。例如，要从SMTP服务器`smtpd`获取详细的日志记录，更改该行：
- en: '[PRE95]'
  id: totrans-579
  prefs: []
  type: TYPE_PRE
  zh: '[PRE95]'
- en: 'To this:'
  id: totrans-580
  prefs: []
  type: TYPE_NORMAL
  zh: 对此：
- en: '[PRE96]'
  id: totrans-581
  prefs: []
  type: TYPE_PRE
  zh: '[PRE96]'
- en: Depending on your configuration, the first line may look slightly different,
    but the important part is what is in the last column, the name of the daemon.
    In the case of the SMTP server, busy servers may produce insane amounts of logging
    with this setting. If such is the case, the `debug_peer_list` parameter can come
    in handy.
  id: totrans-582
  prefs: []
  type: TYPE_NORMAL
  zh: 根据您的配置，第一行可能略有不同，但重要的部分是最后一列中的内容，即守护程序的名称。在SMTP服务器的情况下，繁忙的服务器可能会产生大量的日志记录。如果是这种情况，`debug_peer_list`参数会很有用。
- en: This parameter accepts one or more hostnames or network addresses for which
    the level of logging will be increased. This makes sense only in contexts where
    there is a network peer such as in the SMTP server and SMTP client.
  id: totrans-583
  prefs: []
  type: TYPE_NORMAL
  zh: 此参数接受一个或多个主机名或网络地址，其日志记录级别将增加。这只在存在网络对等体的情况下才有意义，比如在SMTP服务器和SMTP客户端中。
- en: 'If you are having problems sending messages to a particular remote server,
    say `mail.example.com`, you can set the following rule:'
  id: totrans-584
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在向特定的远程服务器发送消息时遇到问题，比如`mail.example.com`，可以设置以下规则：
- en: '[PRE97]'
  id: totrans-585
  prefs: []
  type: TYPE_PRE
  zh: '[PRE97]'
- en: You can then watch the increased logging when Postfix connects to that particular
    host. When using `debug_peer_list`, there is no reason to touch `master.cf`.
  id: totrans-586
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，您可以在Postfix连接到特定主机时观察增加的日志记录。使用`debug_peer_list`时，无需修改`master.cf`。
- en: Troubleshooting lookup tables with Postmap
  id: totrans-587
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Postmap进行查找表故障排除
- en: 'The `postmap` command is not only useful for rebuilding indexed lookup tables,you
    can also use it to query lookup tables in order to check if the lookups work as
    you expect them to. This is especially useful for regular expression lookup tables
    and complex lookup table types such as MySQL, LDAP, and PostgreSQL. Before taking
    new lookup tables into use in Postfix, you should test them with `postmap` first.
    To perform lookups with `postmap`, use the `-q` option:'
  id: totrans-588
  prefs: []
  type: TYPE_NORMAL
  zh: '`postmap`命令不仅用于重建索引查找表，还可以用于查询查找表，以检查查找是否按预期工作。这对于正则表达式查找表和复杂的查找表类型（如MySQL、LDAP和PostgreSQL）尤其有用。在Postfix中使用新的查找表之前，应该先用`postmap`进行测试。要使用`postmap`执行查找，使用`-q`选项：'
- en: '[PRE98]'
  id: totrans-589
  prefs: []
  type: TYPE_PRE
  zh: '[PRE98]'
- en: This will query the MySQL lookup table described by the configuration in `/etc/postfix/mysql-aliases.cf`
    for the string `postmaster@example.com`, simulating a virtual alias lookup by
    Postfix.
  id: totrans-590
  prefs: []
  type: TYPE_NORMAL
  zh: 这将查询`/etc/postfix/mysql-aliases.cf`中描述的MySQL查找表，查找字符串`postmaster@example.com`，模拟Postfix的虚拟别名查找。
- en: You can also examine the exit status of the command to determine whether the
    lookup succeeded. As always, a zero exit status indicates success. The UNIX shell
    stores the exit status of the last process in the `$?` environment variable. You
    can use the echo shell command to view the contents of the `$?` variable after
    you have run `postmap:`
  id: totrans-591
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以检查命令的退出状态，以确定查找是否成功。与往常一样，零退出状态表示成功。UNIX shell将最后一个进程的退出状态存储在`$?`环境变量中。运行`postmap`后，您可以使用echo
    shell命令查看`$?`变量的内容：
- en: '[PRE99]'
  id: totrans-592
  prefs: []
  type: TYPE_PRE
  zh: '[PRE99]'
- en: If a lookup does not work as you expect, you can (just as with the Postfix daemons)
    use one or more `-v` startup options to increase the verbosity of the messages.
  id: totrans-593
  prefs: []
  type: TYPE_NORMAL
  zh: 如果查找不按预期工作，您可以（就像Postfix守护进程一样）使用一个或多个`-v`启动选项来增加消息的详细程度。
- en: 'Note that postmap performs *raw* queries. For example, if you want to know
    whether the IP address `1.2.3.4` is matched by the following access map line:'
  id: totrans-594
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，postmap执行*原始*查询。例如，如果您想知道IP地址`1.2.3.4`是否与以下访问映射行匹配：
- en: '[PRE100]'
  id: totrans-595
  prefs: []
  type: TYPE_PRE
  zh: '[PRE100]'
- en: 'You cannot test it with the following command:'
  id: totrans-596
  prefs: []
  type: TYPE_NORMAL
  zh: 您不能使用以下命令进行测试：
- en: '[PRE101]'
  id: totrans-597
  prefs: []
  type: TYPE_PRE
  zh: '[PRE101]'
- en: The `postmap` command does not know about Postfix's rules for how IP addresses
    are matched in access map context, and even if it did, it has no way of knowing
    that `1.2.3.4` is an IP address.
  id: totrans-598
  prefs: []
  type: TYPE_NORMAL
  zh: '`postmap`命令不知道Postfix在访问映射上下文中如何匹配IP地址的规则，即使知道，也无法知道`1.2.3.4`是一个IP地址。'
- en: Getting help from the Postfix mailing list
  id: totrans-599
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从Postfix邮件列表获取帮助
- en: The mailing list for Postfix, called Postfix-users, is a very valuable resource
    when one is stuck with a Postfix problem. Links to the archives of the list as
    well as instructions for how to subscribe can found at [http://www.postfix.org/lists.html](http://www.postfix.org/lists.html).
  id: totrans-600
  prefs: []
  type: TYPE_NORMAL
  zh: Postfix的邮件列表称为Postfix-users，是解决Postfix问题时非常有价值的资源。可以在[http://www.postfix.org/lists.html](http://www.postfix.org/lists.html)找到列表的存档链接以及订阅说明。
- en: Although the people on the list are very helpful, they do expect you to do your
    homework before requesting help. This means that you should search the list archives
    to see if your question has been asked before, and most importantly, you should
    read the documentation first.
  id: totrans-601
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管列表上的人们非常乐于助人，但他们希望在请求帮助之前你能做好功课。这意味着你应该搜索列表存档，看看你的问题是否以前被问过，最重要的是，你应该先阅读文档。
- en: When asking a question, do not forget to state the bigger goal you are trying
    to achieve. This is often forgotten, and the question is just too specific. Not
    only will an understanding of the bigger picture make it easier to help you, but
    it will also reveal if the solution method you have chosen is completely wrong.
    However, do not be too verbose in your description! After all, the people reading
    the Postfix-users list are humans too, and they do get bored with over-long posts.
  id: totrans-602
  prefs: []
  type: TYPE_NORMAL
  zh: 在提问时，不要忘记说明你试图实现的更大目标。这经常被忽视，问题太具体了。了解更大的情况不仅会让帮助你变得更容易，而且还会揭示你选择的解决方法是否完全错误。然而，在描述时不要太啰嗦！毕竟，阅读Postfix用户列表的人也是人类，他们会厌倦过长的帖子。
- en: Because they are humans, they are also not psychic. Therefore, be sure to provide
    complete configuration and any log messages that may be relevant to your question.
    Obtain your configuration by running `postconf -n`. That command will print the
    values of all parameters that your have set in your `main.cf`. Do not post the
    complete contents of your `main.cf`, or the output of `postconf` (without the
    `-n`). The content of `master.cf` is rarely needed.
  id: totrans-603
  prefs: []
  type: TYPE_NORMAL
  zh: 因为他们是人类，他们也不是通灵者。因此，请确保提供完整的配置和可能与你的问题相关的任何日志消息。通过运行`postconf -n`来获取你的配置。该命令将打印出你在`main.cf`中设置的所有参数的值。不要发布`main.cf`的完整内容，也不要发布`postconf`的输出（不带`-n`）。`master.cf`的内容很少需要。
- en: Summary
  id: totrans-604
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: The time has come to summarize what has been learned in this chapter. We began
    with a quick look at how the Postfix mail transfer agent works and then looked
    at how to install the software and prepare the basic configuration.
  id: totrans-605
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候总结本章学到的东西了。我们首先快速了解了Postfix邮件传输代理的工作原理，然后看了如何安装软件并准备基本配置。
- en: We then examined various methods to stop spam and other unwanted messages. We
    introduced virtual alias domains to fully enable your mail server to host many
    domains. Finally, we took a look at a few structured techniques to help you analyze
    and solve Postfix problems.
  id: totrans-606
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们研究了各种方法来阻止垃圾邮件和其他不需要的消息。我们引入了虚拟别名域，以完全使你的邮件服务器能够托管许多域。最后，我们看了一些结构化的技术，帮助你分析和解决Postfix的问题。
