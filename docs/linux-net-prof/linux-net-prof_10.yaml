- en: '*Chapter 7*: DHCP Services on Linux'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第7章*：Linux上的DHCP服务'
- en: In this chapter, we'll cover several topics that involve **Dynamic Host Control
    Protocol (DHCP**). As the name implies, DHCP is used to provide the basic information
    that a host needs to connect to the network and, in some cases, on where to find
    additional configuration, which makes it a key part of most infrastructures.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖几个涉及**动态主机控制协议（DHCP**）的主题。顾名思义，DHCP用于提供主机连接到网络所需的基本信息，并在某些情况下提供其他配置的位置，这使其成为大多数基础设施的关键部分。
- en: 'In this chapter, we''ll cover the basics of how this protocol works and then
    progress to building and finally troubleshooting DHCP services, specifically:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍这种协议的基本工作原理，然后逐步构建和最终解决DHCP服务的问题，具体包括：
- en: How does DHCP work?
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DHCP是如何工作的？
- en: Securing your DHCP services
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保护您的DHCP服务
- en: Installing and configuring a DHCP server
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装和配置DHCP服务器
- en: Let's get started!
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧！
- en: How does DHCP work?
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: DHCP是如何工作的？
- en: Let's start by describing how DHCP actually works. We'll begin by looking at
    how the packets work in DHCP requests and responses – what information is requested
    by the client, what the server supplies, and how that works. We'll then move on
    to start a discussion on how DHCP options can help in many implementations.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们首先描述DHCP实际是如何工作的。我们将首先看一下DHCP请求和响应中的数据包是如何工作的 - 客户端请求了什么信息，服务器提供了什么信息，以及它是如何工作的。然后我们将开始讨论DHCP选项如何在许多实现中发挥作用。
- en: Basic DHCP operation
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基本的DHCP操作
- en: '**DHCP** allows system administrators to centrally define device configurations
    on a server, so that when those devices start up, they can request those configuration
    parameters. This *central configuration* almost always includes the basic network
    parameters of IP address, subnet mask, default gateway, DNS server, and DNS domain
    name. What this means in most organizations is that in most cases, almost no devices
    get static IP addresses or other network definitions; all workstation network
    configurations are set by the DHCP server. As we explore the protocol more deeply,
    you''ll see other uses for DHCP that are often *bolted on* to these basic settings.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**DHCP**允许系统管理员在服务器上集中定义设备配置，以便当这些设备启动时，它们可以请求这些配置参数。这种*中央配置*几乎总是包括IP地址、子网掩码、默认网关、DNS服务器和DNS域名的基本网络参数。在大多数组织中，这意味着在大多数情况下，几乎没有设备获得静态IP地址或其他网络定义；所有工作站网络配置都是由DHCP服务器设置的。当我们更深入地探讨协议时，您将看到DHCP的其他用途通常是*附加*到这些基本设置上。'
- en: The DHCP process starts when the client sends a broadcast **DISCOVER** packet
    out, essentially saying "Are there any DHCP servers out there? This is the kind
    of information that I am looking for." The DHCP server then replies with an **OFFER**
    packet, with all of the information. The client replies with a **REQUEST** packet,
    which seems oddly named – essentially, the client is sending the information it
    just got back from the server, just by way of confirmation. The server then sends
    the final **ACKNOWLEDGEMENT** packet back, again with the same information, confirming
    it once more.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: DHCP过程是从客户端发送广播**DISCOVER**数据包开始的，基本上是在说“有没有DHCP服务器？这是我正在寻找的信息。” DHCP服务器然后回复一个**OFFER**数据包，其中包含所有信息。客户端回复一个**REQUEST**数据包，这个名字似乎有点奇怪
    - 基本上，客户端是通过确认的方式将刚刚从服务器得到的信息发送回去。然后服务器再次发送最终的**ACKNOWLEDGEMENT**数据包，再次包含相同的信息，再次确认。
- en: 'This is often called the **DORA** sequence (**Discover, Offer, Request, Acknowledgement**),
    and is usually depicted like this:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这通常被称为**DORA**序列（**Discover, Offer, Request, Acknowledgement**），通常是这样描述的：
- en: '![Figure 7.1 – The DHCP DORA sequence'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.1 - DHCP DORA序列'
- en: '](img/B16336_07_001.jpg)'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16336_07_001.jpg)'
- en: Figure 7.1 – The DHCP DORA sequence
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.1 - DHCP DORA序列
- en: 'Since these are all UDP packets, remember that UDP doesn''t have any session
    information built into the protocol, so what''s tying these four packets together
    into one "session"? For that, the initial Discover packet has a transaction ID
    that is matched in the three subsequent packets – a Wireshark trace shown below
    illustrates this:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这些都是UDP数据包，请记住UDP协议中没有内置的会话信息，那么是什么将这四个数据包绑定成一个“会话”？为此，初始的Discover数据包具有一个事务ID，在三个后续数据包中匹配
    - 下面显示的Wireshark跟踪说明了这一点：
- en: '![Figure 7.2 – DHCP DORA sequence shown in Wireshark'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.2 - 在Wireshark中显示的DHCP DORA序列'
- en: '](img/B16336_07_002.jpg)'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16336_07_002.jpg)'
- en: Figure 7.2 – DHCP DORA sequence shown in Wireshark
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.2 - 在Wireshark中显示的DHCP DORA序列
- en: Important note
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: The client doesn't actually have an address until the fourth packet, so the
    Discover and Request packets are from the MAC address of the client, with an IP
    of `0.0.0.0`, to the broadcast address of `255.255.255.255` (i.e., to the entire
    local network).
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 客户端实际上直到第四个数据包才有地址，因此Discover和Request数据包来自客户端的MAC地址，IP地址为`0.0.0.0`，发送到广播地址`255.255.255.255`（即整个本地网络）。
- en: Now that we understand the basics of how DHCP works, we see that it is heavily
    dependent on broadcast addresses, which are limited to the local subnet. How can
    we use DHCP in a more practical setting, where the DHCP server is in a different
    subnet, or maybe even in a different city or country?
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们了解了DHCP工作的基础知识，我们看到它严重依赖于广播地址，这些地址限制在本地子网。在更实际的设置中，我们如何在不同的子网中使用DHCP，甚至可能在不同的城市或国家中使用DHCP服务器？
- en: DHCP requests from other subnets (forwarders, relays, or helpers)
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 来自其他子网的DHCP请求（转发器、中继或辅助程序）
- en: But wait, you may say – in many corporate networks, the servers are on their
    own subnet – separating servers and workstations is a pretty common practice.
    How does this DHCP sequence work in that case? The first three packets of the
    DORA sequence are sent to the broadcast address, so they can only reach other
    hosts on that same VLAN.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，您可能会说 - 在许多公司网络中，服务器位于它们自己的子网上 - 将服务器和工作站分开是一种非常常见的做法。在这种情况下，DHCP序列是如何工作的？DORA序列的前三个数据包发送到广播地址，因此它们只能到达同一VLAN上的其他主机。
- en: 'We get the job done by putting a DHCP "Forwarder" or "Relay" process on a host
    in the client subnet. This process receives the local broadcasts, and then forwards
    them to the DHCP server as a unicast. When the server replies back (as a unicast
    to the forwarder host), the forwarder "converts" the packet back to the broadcast
    reply that the client is expecting. Almost always, this forwarder function is
    done on the router or switch IP address that''s on the client subnet – in other
    words, the interface that will end up being the client''s default gateway. This
    function doesn''t technically need to be on that interface, but it''s an interface
    that we know will be there, and the function is almost always available for us
    to use. Plus, if we use that as an unwritten convention, it makes it easier to
    find that command if we need to change it later! On a Cisco router or switch,
    this command looks like this:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过在客户端子网上的主机上放置DHCP“转发器”或“中继”进程来完成工作。该进程接收本地广播，然后将其转发到DHCP服务器作为单播。当服务器回复（作为单播到转发器主机）时，转发器将数据包转换回客户端期望的广播回复。几乎总是在客户端子网上的路由器或交换机IP地址上执行此转发器功能
    - 换句话说，最终将成为客户端默认网关的接口。这个功能在技术上不需要在该接口上，但我们知道该接口将存在，并且该功能几乎总是可供我们使用。此外，如果我们将其作为一种不成文的惯例使用，那么如果以后需要更改它，就更容易找到该命令！在思科路由器或交换机上，此命令如下：
- en: '[PRE0]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Here, `10.10.10.10` is the IP of our DHCP server.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，`10.10.10.10`是我们的DHCP服务器的IP。
- en: 'In operation, this changes the simple broadcast operation that we have on most
    home networks to include a unicast "leg" to extend the protocol to the DHCP server,
    located on another subnet:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在操作中，这将改变大多数家庭网络上的简单广播操作，以包括到位于另一个子网上的DHCP服务器的单播“腿”：
- en: '![Figure 7.3 – DHCP relay or forwarder operation'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.3 - DHCP中继或转发器操作'
- en: '](img/B16336_07_003.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16336_07_003.jpg)'
- en: Figure 7.3 – DHCP relay or forwarder operation
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.3 - DHCP中继或转发器操作
- en: How does this modify our DORA sequence? The short answer is that it doesn't
    really modify the DHCP content of any of the packets. What it does do is modify
    the upper layer "IP address" fields in the packets – the modified packets between
    the router and the server have "real" source and destination IP addresses. The
    packet contents that the client sees remain the same, however. If you delve into
    the DHCP packets, you'll see that with or without a relay in play, the DHCP client
    MAC address and the DHCP server IP address are actually included in the data fields
    of the Layer 7 DHCP protocol.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 这如何修改我们的DORA序列？简短的答案是它实际上并没有修改任何数据包的DHCP内容。它所做的是修改数据包中的上层“IP地址”字段 - 在路由器和服务器之间修改的数据包具有“真实”的源和目的地IP地址。然而，客户端看到的数据包内容保持不变。如果您深入研究DHCP数据包，您会发现无论是否使用中继，DHCP客户端MAC地址和DHCP服务器IP地址实际上都包含在第7层DHCP协议的数据字段中。
- en: We're now equipped to start configuring a DHCP server for basic workstation
    operation, but before we get to that, we'll want to consider what we need for
    special purpose devices such as iPhones, **Wireless Access Points** (**WAP**),
    or even **Pre eXecution Enviroment (PXE**) devices that can load their entire
    operating system from DHCP information.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经具备了为基本工作站操作配置DHCP服务器的条件，但在开始之前，我们需要考虑一下我们需要为iPhone、**无线接入点（WAP）**或甚至**预执行环境（PXE）**设备等特殊用途设备提供什么信息。
- en: DHCP options
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DHCP选项
- en: 'The options that were sent in the DHCP Discover packet are essentially a list
    of the DHCP networking parameters that the client knows how to deal with. The
    server''s Offer packet will try to fill as much of this list as possible. The
    most commonly seen options requested (and configured at the server) are as follows:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在DHCP Discover数据包中发送的选项基本上是客户端知道如何处理的DHCP网络参数列表。服务器的Offer数据包将尽可能填充此列表。最常见的请求的选项（并在服务器上配置）如下：
- en: Subnet mask
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 子网掩码
- en: Router (default gateway)
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 路由器（默认网关）
- en: DNS server list
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DNS服务器列表
- en: DNS domain name
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DNS域名
- en: 'A more complete reference to DHCP options can be found on the IANA website,
    [https://www.iana.org/assignments/bootp-dhcp-parameters/bootp-dhcp-parameters.xhtml](https://www.iana.org/assignments/bootp-dhcp-parameters/bootp-dhcp-parameters.xhtml),
    or in the relevant RFC: [https://tools.ietf.org/html/rfc2132](https://tools.ietf.org/html/rfc2132).'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 有关DHCP选项的更完整参考可以在IANA网站上找到，[https://www.iana.org/assignments/bootp-dhcp-parameters/bootp-dhcp-parameters.xhtml](https://www.iana.org/assignments/bootp-dhcp-parameters/bootp-dhcp-parameters.xhtml)，或者在相关的RFC中找到：[https://tools.ietf.org/html/rfc2132](https://tools.ietf.org/html/rfc2132)。
- en: 'However, in many corporate networks, you may see other information being requested
    and supplied – often this is to support the bootup of **Voice over IP (VOIP**)
    phones. These options are usually vendor-specific, but for the most part, the
    list of information that the client device will request is as follows:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在许多公司网络中，您可能会看到其他请求和提供的信息 - 这通常是为了支持**Voice over IP（VOIP）**电话的启动。这些选项通常是特定于供应商的，但在大多数情况下，客户端设备将请求的信息列表如下：
- en: '**What VLAN do I need to be on?**: This option is used less frequently on modern
    networks, in favor of just identifying the VOICE VLAN on the switches using **Link
    Layer Discovery Protocol (LLDP**). On a Cisco switch, this is as simple as adding
    the voice keyword to the VLAN definition.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**我需要在哪个VLAN上？**：这个选项在现代网络中使用得较少，而是更倾向于使用**链路层发现协议（LLDP）**在交换机上识别VOICE VLAN。在思科交换机上，只需在VLAN定义中添加voice关键字即可。'
- en: '**What is the IP of the PBX that I''ll be connecting to?**'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**我将连接到的PBX的IP是多少？**'
- en: '**What TFTP or HTTP server should I connect to in order to collect my hardware
    configuration?**'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**我应该连接到哪个TFTP或HTTP服务器以收集我的硬件配置？**'
- en: If the server has the information that's requested, it will then be supplied
    in the DHCP offer in the server's response packet.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 如果服务器有所请求的信息，它将在DHCP提供中作为服务器的响应数据包提供。
- en: 'Most often, you''ll see these as the following DHCP options, but if you are
    using a different phone handset vendor, of course, your mileage may vary:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，您会看到以下DHCP选项，但如果您使用不同的电话手柄供应商，当然，您的情况可能会有所不同：
- en: '![](img/Table_012.jpg)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Table_012.jpg)'
- en: Note that Mitel and Shortel phones use the same DHCP option, but have slightly
    different syntax.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，Mitel和Shortel电话使用相同的DHCP选项，但语法略有不同。
- en: DHCP options are also sometimes used to tell WAP which IP to use to find their
    controller, to control the boot sequence of PXE stations, or any number of custom
    uses. In most cases, DHCP options are there to ensure that a remote device gets
    the information it needs to boot up from one central location without having to
    configure each device. If you need these options for your specific device, the
    details will be in the vendor's documentation (look for **DHCP Options**).
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: DHCP选项有时也用于告诉WAP使用哪个IP地址来找到它们的控制器，控制PXE站的引导顺序，或者任何其他自定义用途。在大多数情况下，DHCP选项的作用是确保远程设备获取它需要的信息，以便从一个中心位置引导启动，而无需为每个设备进行配置。如果您需要这些选项用于您的特定设备，详细信息将在供应商的文档中（查找**DHCP选项**）。
- en: If you are troubleshooting a DHCP sequence, in particular, why the DHCP options
    aren't working the way you might expect, the DHCP options needed by any particular
    device will always be in that initial Discover packet, the first packet in the
    DORA sequence. Always start your investigation there, and you'll often find that
    the DHCP options being requested aren't the ones that are configured.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您正在解决DHCP序列的问题，特别是为什么DHCP选项的工作方式不如您所期望的那样，任何特定设备所需的DHCP选项将始终包含在初始的Discover数据包中，即DORA序列中的第一个数据包。始终从那里开始调查，您通常会发现所请求的DHCP选项并非配置的选项。
- en: Now that we have the basics of how DHCP works, how can we secure it against
    common attacks or operational problems?
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了DHCP的基本原理，我们如何才能使其免受常见攻击或操作问题的影响呢？
- en: Securing your DHCP services
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保护您的DHCP服务
- en: The interesting thing about DHCP is that in almost all cases, securing the service
    is done on the network switches rather than on the DHCP server itself. For the
    most part, the DHCP server receives anonymous requests and then replies appropriately
    – there aren't a lot of opportunities to secure our service without adding a lot
    of complexity (using signatures and PKI, which we'll get to), or by maintaining
    a list of authorized MAC addresses (which adds a whole lot of complexity). Both
    of these approaches very much run counter to the whole point of having a DHCP
    service, which is to "automagically" do the network configuration of workstations,
    phones, and other network-attached devices without adding too much complexity
    or administrative overhead.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 关于DHCP的有趣之处在于，在几乎所有情况下，保护服务是在网络交换机上进行的，而不是在DHCP服务器本身上进行的。在大多数情况下，DHCP服务器接收匿名请求，然后适当地回复
    - 没有太多机会在不增加太多复杂性（使用签名和PKI，我们将介绍），或者通过维护授权的MAC地址列表（这将增加很多复杂性）的情况下保护我们的服务。这两种方法都与拥有DHCP服务的初衷背道而驰，即“自动”对工作站、电话和其他网络连接设备进行网络配置，而不增加太多复杂性或管理开销。
- en: So how can we secure our service? Let's look at a few attack scenarios, and
    then add the most common defenses against them.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 那么我们如何保护我们的服务呢？让我们看一些攻击场景，然后添加最常见的防御措施。
- en: Rogue DHCP server
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 恶意DHCP服务器
- en: First, let's look at the `192.168.1.0/24` or `192.168.0.0/24`, which almost
    always is *not* what we have configured at work. So as soon as this is connected
    to the network, workstations will start getting addresses on this subnet and will
    lose connectivity to the real corporate network.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们看看`192.168.1.0/24`或`192.168.0.0/24`，这几乎总是*不*是我们在工作中配置的。因此，一旦连接到网络，工作站将开始在此子网上获取地址，并且将失去与真正的企业网络的连接。
- en: How can we defend against this? The answer is on the network switches. What
    we do is, on each switch, we assess the topology and decide which ports we can
    trust to send us DHCP Offer packets – in other words, "which ports lead us to
    the DHCP server?" This is almost always the switch uplink, which is our link that
    leads to the servers.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 我们如何防御？答案在网络交换机上。我们在每个交换机上评估拓扑结构，并决定哪些端口可以信任发送DHCP Offer数据包 - 换句话说，“哪些端口引导我们到DHCP服务器？”这几乎总是交换机上行链路，这是我们连接服务器的链路。
- en: 'Once that is identified on the switch, we enable what''s called **DHCP Snooping**,
    which instructs the switch to inspect DHCP packets. This is done VLAN-by-VLAN,
    and in most environments, we simply list all VLANS. Then we configure our uplink
    ports to be "trusted" to source DHCP packets. This is normally a very simple configuration
    change, which will look similar to this (Cisco configuration shown):'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦在交换机上识别出来，我们启用所谓的**DHCP监听**，指示交换机检查DHCP数据包。这是按VLAN逐个进行的，在大多数环境中，我们通常列出所有VLAN。然后我们配置我们的上行端口为“受信任”以发送DHCP数据包。这通常是一个非常简单的配置更改，看起来类似于这样（显示了Cisco配置）：
- en: '[PRE1]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: If a DHCP Offer packet is received on any port or IP address other than the
    ones we've configured as "trusted," by default, that port is shut down and an
    alert is sent (though you can configure them to just send the alert). The port
    is then in what's called an *error disable* state and will usually need a network
    administrator to chase down the root cause and fix it. This makes the logging
    and alerting process very important. You can skip ahead to [*Chapter 13*](B16336_13_Final_NM_ePub.xhtml#_idTextAnchor236),
    *Intrusion Prevention Systems on Linux*, if this is immediately important for
    your organization.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在任何端口或IP地址上接收到DHCP Offer数据包，而不是我们配置为“受信任”的端口，默认情况下，该端口将被关闭，并发送警报（尽管您可以配置它们只发送警报）。然后，该端口处于所谓的*错误禁用*状态，通常需要网络管理员追踪根本原因并进行修复。这使得日志记录和警报过程非常重要。如果这对您的组织立即很重要，您可以直接跳到[*第13章*](B16336_13_Final_NM_ePub.xhtml#_idTextAnchor236)，*Linux上的入侵防护系统*。
- en: 'For some switch vendors, we can trust the DHCP server IP rather than the uplink
    port. For instance, on an HP switch, we can still use the approach outlined above,
    but we''re also able to add a simpler configuration based on the IP address:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 对于一些交换机供应商，我们可以信任DHCP服务器IP而不是上行端口。例如，在HP交换机上，我们仍然可以使用上面概述的方法，但我们还可以根据IP地址添加一个更简单的配置：
- en: '[PRE2]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: In a larger network, this approach makes our configuration much simpler – there's
    no need to identify uplink ports that may be different from switch to switch;
    these two lines can simply be replicated to all workstation switches.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在较大的网络中，这种方法使我们的配置变得更加简单 – 无需识别可能与交换机不同的上行端口；这两行可以简单地复制到所有工作站交换机上。
- en: When we reach the server VLANs and data center switches, we are faced with the
    fact that our DHCP server is very likely a VM. This leaves us with two choices
    – either we configure DHCP trust on all uplinks that connect to our hypervisor
    servers, or on the server switches, we don't configure DHCP snooping or trust
    at all. Both are valid choices, and honestly, the second choice is what we see
    most often – in many cases, the network administrators can trust that the server
    switch is in a locked room or cabinet, and that becomes our security layer for
    DHCP services. This also means that the server and hypervisor administrators don't
    need to consider the physical network as much (or involve the network administrators
    at all in many cases) as they make changes on the server side.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们到达服务器VLAN和数据中心交换机时，我们面临的事实是我们的DHCP服务器很可能是一个虚拟机。这给我们留下了两种选择 – 要么我们在连接到我们的虚拟化服务器的所有上行端口上配置DHCP信任，要么在服务器交换机上，我们根本不配置DHCP监听或信任。这两种选择都是有效的选择，老实说，第二种选择是我们经常看到的
    – 在许多情况下，网络管理员可以相信服务器交换机在一个封闭的房间或机柜中，这成为我们的DHCP服务的安全层。这也意味着服务器和虚拟化管理员在进行服务器端的更改时不需要太多考虑物理网络（或在许多情况下根本不需要涉及网络管理员）。
- en: 'We did mention that the "accidental DHCP server" is by far the most common
    rogue DHCP server attack. But what about intentional DHCP server attacks; what
    do those attacks look like? The first situation is a DHCP server that adds a malicious
    host as the default gateway (usually itself). As packets are received, the malicious
    host will inspect that traffic for information that it wants to steal, eavesdrop
    on, or modify, and then forward it on to the legitimate router (the default gateway
    for that subnet):'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 我们确实提到“意外的DHCP服务器”是迄今为止最常见的恶意DHCP服务器攻击。但是有关有意的DHCP服务器攻击呢？这些攻击是什么样的？第一种情况是DHCP服务器将恶意主机添加为默认网关（通常是它自己）。当接收到数据包时，恶意主机将检查要窃取、窥视或修改的流量信息，然后将其转发到合法路由器（该子网的默认网关）：
- en: '![Figure 7.4 – Layer 3 MiTM attack using DHCP'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.4 – 使用DHCP的第3层MiTM攻击'
- en: '](img/B16336_07_004.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16336_07_004.jpg)'
- en: Figure 7.4 – Layer 3 MiTM attack using DHCP
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.4 – 使用DHCP的第3层MiTM攻击
- en: 'The other situation is that the malicious DHCP server gives the client all
    the correct information but adds an "extra" DHCP bit of information to the DHCP
    leases – DHCP option `252`. Option `252` is a text string, which points to a `http://<malicious
    server>/link/<filename.pac>`. The PAC file is specially formatted. The attacker
    will have built it to use their malicious proxy server for target websites, and
    to simply route web traffic normally for other sites. The intent of both of these
    **Machine in The Middle** (commonly shortened to **MiTM**) situations is to steal
    credentials – when you browse to a target website such as PayPal, Amazon, or your
    bank, the attacker will have a fake website ready to collect your user ID and
    password. This is commonly called a **WPAD Attack** (**Windows Proxy Auto Discovery**)
    because of its great success against windows clients who are, by default, configured
    to trust the DHCP server for their proxy settings. In most cases, the WPAD attack
    is preferred, since the attacker does not have to worry about decrypting HTTPS,
    SSH, or any other encrypted traffic:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种情况是，恶意DHCP服务器向客户端提供了所有正确的信息，但在DHCP租约中添加了一个“额外”的DHCP信息 – DHCP选项`252`。选项`252`是一个文本字符串，指向一个`http://<恶意服务器>/link/<filename.pac>`。PAC文件是特殊格式的。攻击者将其构建为使用他们的恶意代理服务器来针对目标网站，并对其他网站的Web流量进行正常路由。这两种**中间人**（通常缩写为**MiTM**）的意图是窃取凭据
    – 当您浏览到目标网站，如PayPal、Amazon或您的银行时，攻击者将准备好一个假网站来收集您的用户ID和密码。这通常被称为**WPAD攻击**（**Windows代理自动发现**），因为它对默认情况下配置为信任DHCP服务器获取代理设置的Windows客户端非常成功。在大多数情况下，WPAD攻击是首选，因为攻击者不必担心解密HTTPS、SSH或任何其他加密流量：
- en: '![Figure 7.5 – WPAD attack – malicious DHCP server sets proxy server'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.5 – WPAD攻击 – 恶意DHCP服务器设置代理服务器'
- en: '](img/B16336_07_005.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16336_07_005.jpg)'
- en: Figure 7.5 – WPAD attack – malicious DHCP server sets proxy server
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.5 – WPAD攻击 – 恶意DHCP服务器设置代理服务器
- en: In both of these malicious DHCP server situations, our "DHCP trust" defense
    works very nicely.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在这两种恶意DHCP服务器的情况下，我们的“DHCP信任”防御效果非常好。
- en: Another defense against the WPAD attack specifically is to add a DNS entry to
    your DNS server for WPAD – `yourinternaldomain.com`. This can be helpful in that
    the WPAD attack can be combined with other attacks (specifically against any multicast
    DNS protocol such as LLMNR), but if there's a DNS entry for that hostname, then
    these attacks are nicely circumvented. In addition, logging all DNS requests for
    suspicious hostnames such as WPAD is an excellent practice for helping you to
    identify and help locate attacks as they occur.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: WPAD攻击的另一个防御措施是在DNS服务器上为WPAD添加DNS条目– `yourinternaldomain.com`。这对于WPAD攻击可以结合其他攻击（特别是针对任何多播DNS协议，如LLMNR）是有帮助的，但如果该主机名有DNS条目，那么这些攻击就会被很好地规避。此外，记录所有对WPAD等可疑主机名的DNS请求是帮助您在攻击发生时识别和定位攻击的绝佳实践。
- en: But what about adding protection from attacks in the other direction – what
    about unauthorized clients?
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，如何防范来自其他方向的攻击呢？未经授权的客户端呢？
- en: Rogue DHCP client
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Rogue DHCP客户端
- en: The less common attack vector is a rogue DHCP client – a person who brings their
    server from home and plugs into an unused Ethernet port at work, or the attacker
    who plugs a tiny, purpose-built attack PC (often called a **pwnplug**) into an
    unused Ethernet port in the lobby or in any accessible location. Behind plants,
    printers, or other obstructions is a favorite location for these.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 较少见的攻击向量是恶意的DHCP客户端-一个人将他们的服务器从家里带到工作中的未使用的以太网端口，或者将一个微型的、专门设计的攻击PC（通常称为**pwnplug**）插入大堂或任何可访问的位置的未使用的以太网端口。这些地方的后面，植物、打印机或其他障碍物是这些攻击的最爱位置。
- en: The old-school defense against this attack is to keep a database of all authorized
    MAC addresses in your company, and either set them up as authorized clients in
    DHCP, or set each of them up with a static DHCP reservation. Both of these are
    not ideal in a modern enterprise. First of all, this is a pretty significant administrative
    process. We're adding a manual inventory component to the server team's process.
    Since the DHCP server is normally a low-overhead server component, nobody is going
    to be thrilled with this. Secondly, if you take the "static reservations" approach,
    you'll need to add reservations for every VLAN, wireless SSID, or possible location
    that the client may need to connect to. Needless to say, most organizations are
    not fans of either of these approaches.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 对抗这种攻击的老派方法是在公司中保留所有授权的MAC地址的数据库，并将它们设置为DHCP中的授权客户端，或者为每个客户端设置一个静态的DHCP保留。在现代企业中，这两种方法都不是理想的。首先，这是一个相当重要的管理过程。我们正在为服务器团队的流程添加手动库存组件。由于DHCP服务器通常是一个低开销的服务器组件，没有人会对此感到高兴。其次，如果采用“静态保留”方法，您将需要为客户端可能需要连接的每个VLAN、无线SSID或可能的位置添加保留。不用说，大多数组织都不喜欢这两种方法。
- en: The newer method of keeping unauthorized clients is to use 802.1x authentication,
    where the client has to authenticate to the network before being allowed on. This
    involves the use of a *RADIUS Services for Linux* ([*Chapter 9*](B16336_09_Final_NM_ePub.xhtml#_idTextAnchor153))
    and *Certificate Services on Linux* ([*Chapter 8*](B16336_08_Final_NM_ePub.xhtml#_idTextAnchor133)).
    The certificates are used to enforce trust – the clients need to trust the RADIUS
    server and, more importantly, the RADIUS server needs to trust the connecting
    clients in order for the authentication to work securely. As you might expect,
    we'll cover this solution later in this book (in [*Chapter 8*](B16336_08_Final_NM_ePub.xhtml#_idTextAnchor133),
    *Certificate Services on Linux* and [*Chapter 9*](B16336_09_Final_NM_ePub.xhtml#_idTextAnchor153),
    *RADIUS Services for Linux*)
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 防止未经授权的客户端的较新方法是使用802.1x认证，其中客户端必须在被允许连接到网络之前进行身份验证。这涉及使用*Linux的RADIUS服务*（[*第9章*](B16336_09_Final_NM_ePub.xhtml#_idTextAnchor153)）和*Linux上的证书服务*（[*第8章*](B16336_08_Final_NM_ePub.xhtml#_idTextAnchor133)）。证书用于强制执行信任-客户端需要信任RADIUS服务器，更重要的是，RADIUS服务器需要信任连接的客户端，以便进行安全的认证。正如您所期望的那样，我们将在本书的后面部分介绍这个解决方案（在[*第8章*](B16336_08_Final_NM_ePub.xhtml#_idTextAnchor133)中，*Linux上的证书服务*和[*第9章*](B16336_09_Final_NM_ePub.xhtml#_idTextAnchor153)中，*Linux的RADIUS服务*）。
- en: With all this theory done and internalized, let's get on with configuring our
    DHCP server.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 完成所有这些理论的学习和内化后，让我们开始配置DHCP服务器。
- en: Installing and configuring a DHCP server
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装和配置DHCP服务器
- en: 'We''ll break the configuration tasks up into three sections:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将把配置任务分成三个部分：
- en: The basic configuration of the DHCP server and scopes
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DHCP服务器和范围的基本配置
- en: Static reservations for DHCP leases – for instance, for servers or printers.
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DHCP租约的静态保留-例如，用于服务器或打印机。
- en: Using DHCP logs for network intelligence and inventory checks or population
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用DHCP日志进行网络智能和库存检查或人口统计。
- en: Let's get started.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧。
- en: Basic configuration
  id: totrans-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基本配置
- en: 'As you would expect, we''ll start our journey with the `apt` command, installing
    the ISC DHCP server on our lab host:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所期望的，我们将从`apt`命令开始我们的旅程，在我们的实验室主机上安装ISC DHCP服务器：
- en: '[PRE3]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Once installed, we can configure the basic server options. Set the lease times
    and anything that isn't scope-dependent – we'll configure central DNS servers
    for instance. Also, note that we're adding a ping check – before a lease is assigned,
    this host pings the candidate address to be sure that someone else doesn't have
    it statically assigned, for instance. This is a great check for avoiding duplicate
    IP addresses, which are not on by default. In our example the timeout on the ping
    is set to 2 seconds (the default is 1 second). Note that for some dhcpd servers,
    the `ping-check` parameter might be shortened to just `ping`.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，我们可以配置基本的服务器选项。设置租约时间和任何不依赖于范围的内容-例如，我们将配置中央DNS服务器。另外，请注意我们正在添加一个ping检查-在分配租约之前，主机会ping候选地址，以确保没有其他人静态分配了它。这是一个很好的检查，可以避免重复的IP地址，默认情况下是关闭的。在我们的示例中，ping的超时设置为2秒（默认值为1秒）。请注意，对于某些dhcpd服务器，`ping-check`参数可能会缩短为`ping`。
- en: 'Note also the lease-time variables. These govern how long the DHCP "lease"
    is valid for, and when the client will start requesting a lease renewal. These
    are important for several reasons:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 还要注意租约时间变量。这些变量决定DHCP“租约”有效的时间以及客户端何时开始请求租约续订。这些对几个原因很重要：
- en: For all that we strive to decouple IP addresses from various diagnostic tools,
    it's very helpful in incident response to more-or-less be able to depend on addresses
    not changing too much. For instance, if you are troubleshooting an issue, and
    identify a person's station IP address at the beginning of the issue, it's extremely
    helpful if you can depend on that not changing over the 3-4 subsequent days. This
    means you can do all address-based searches just once against all relevant logs,
    which is of huge help. For this reason, internal workstation DHCP leases are often
    set to account for up to 4-day long weekends or even up to 2-3 week vacation intervals,
    keeping DHCP leases active for those time periods.
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尽管我们努力将IP地址与各种诊断工具分离，但在事件响应中，能够相对依赖地址不会发生太大变化是非常有帮助的。例如，如果您正在解决一个问题，并且在问题发生之初确定了某人的工作站IP地址，如果您能够依赖在接下来的3-4天内不会发生变化，那将非常有帮助。这意味着您可以只针对所有相关日志进行一次基于地址的搜索，这非常有帮助。因此，内部工作站DHCP租约通常设置为长达4天的周末或长达2-3周的假期，保持DHCP租约在这段时间内有效。
- en: The exception, of course, is guest networks, and in particular, guest wireless
    networks. If you don't link guest addresses to their identity or their sponsor's
    identity, then a short lease time here can be helpful. Also, guest networks often
    see more "transient" users that come and go, so a short lease time protects you
    somewhat from exhausting the address pool. If you ever do incident response on
    an "anonymous guest" network with a short lease time, you'll most likely base
    your "pseudo identity" on MAC addresses rather than IP addresses (and block suspect
    hosts the same way).
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当然，例外情况是访客网络，特别是访客无线网络。如果您不将访客地址与其身份或其赞助者的身份关联起来，那么在这里设置较短的租约时间会有所帮助。此外，访客网络通常会看到更多“瞬时”用户的出现和离开，因此较短的租约时间可以在一定程度上保护您免受地址池枯竭的影响。如果您曾经在具有较短租约时间的“匿名访客”网络上进行事件响应，您很可能会基于MAC地址而不是IP地址来建立“伪身份”（并以相同的方式阻止可疑主机）。
- en: 'The three lease-time variables available are as follows:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 可用的三个租约时间变量如下：
- en: '`default-lease-time`: The duration of the lease if the client does not request
    a lease time'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`default-lease-time`：如果客户端没有请求租约时间，则租约的持续时间'
- en: '`max-lease-time`: The longest lease the server is able to offer'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最长租约时间：服务器能够提供的最长租约时间
- en: '`min-lease-time`: Used to force a client to take a longer lease if they''ve
    requested one shorter than this interval'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`min-lease-time`：如果客户端请求的租约时间短于此间隔，则用于强制客户端使用更长的租约'
- en: In all cases, the client can start requesting lease renewals at the 50% point
    of the lease interval that is negotiated.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有情况下，客户端可以在协商的租约间隔的50%点开始请求租约续订。
- en: 'Let''s edit the main configuration for the DHCP server – `/etc/dhcp/dhcpd.conf`.
    Be sure to use `sudo` so that you have appropriate rights when you edit this file:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们编辑DHCP服务器的主配置-`/etc/dhcp/dhcpd.conf`。确保使用`sudo`以便在编辑此文件时具有适当的权限：
- en: '[PRE4]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Uncomment the `authoritative` parameter a bit further down in this file:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 在文件中稍后取消注释`authoritative`参数：
- en: '[PRE5]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'At the end of that file, add the details for your scope. Note that if you are
    deploying new subnets, try to avoid using `192168.0.0/24` or `192.168.1.0/24`
    – since these are used so often on home networks, using them at work can really
    mess up those remote folks. If they ever VPN in, they''ll have two different `192.168.1.0`
    networks to contend with – one or the other will likely not be reachable:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在文件的末尾，添加范围的详细信息。请注意，如果您正在部署新的子网，请尽量避免使用`192168.0.0/24`或`192.168.1.0/24`-因为这些在家庭网络中经常使用，在工作中使用它们可能会给远程人员造成很大的麻烦。如果他们使用VPN，他们将不得不处理两个不同的`192.168.1.0`网络-其中一个可能无法访问：
- en: '[PRE6]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: This is also where you'd put any other DHCP options, which we talked about earlier
    in this chapter – options in support of VOIP phones, PXE hosts, or wireless access
    points, for instance.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 这也是您可以放置任何其他DHCP选项的地方，我们在本章前面讨论过这些选项-例如，支持VOIP电话、PXE主机或无线接入点的选项。
- en: 'Finally, restart your DHCP server:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，重新启动DHCP服务器：
- en: '[PRE7]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Just for fun, if you want the clients to try to update the DNS server with
    their information, you can add the following:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 仅供娱乐，如果您希望客户端尝试使用他们的信息更新DNS服务器，可以添加以下内容：
- en: '[PRE8]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Let's now take our basic configuration and expand it to include static reservations
    – using DHCP to assign fixed IP addresses to printers or other network devices
    such as time clocks, IP cameras, door locks, or even servers.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们将我们的基本配置扩展到包括静态预留-使用DHCP为打印机或其他网络设备（如时间钟、IP摄像头、门锁甚至服务器）分配固定IP地址。
- en: Static reservations
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 静态预留
- en: 'To add a static definition to a host, we add a `host` section to our `dhcpd.conf`.
    In its most basic configuration, we assign a fixed IP address when we see a specific
    MAC address:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 要为主机添加静态定义，我们在`dhcpd.conf`中添加一个`host`部分。在其最基本的配置中，我们在看到特定MAC地址时分配一个固定的IP地址：
- en: '[PRE9]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'In some cases where the workstation might roam – for instance, if a device
    is wireless and may appear in different networks at different times, we''ll want
    to assign other options but leave the IP address dynamic. In this case, we tell
    the device what DNS suffix to use, and how to register itself using dynamic DNS:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，工作站可能会漫游-例如，如果设备是无线的，并且可能在不同时间出现在不同的网络中，我们将希望分配其他选项，但保留IP地址动态。在这种情况下，我们告诉设备使用什么DNS后缀，并如何使用动态DNS进行注册：
- en: '[PRE10]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Or, to add static definitions for a group of hosts, execute the following commands:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，要为一组主机添加静态定义，请执行以下命令：
- en: '[PRE11]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Now that we've got DHCP configured and running, what tools do we have to help
    in troubleshooting if things go wrong? Let's start by looking at DHCP lease information
    and then dig into the logs for the `dhcpd` daemon.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经配置并运行了DHCP，如果出现故障，我们有哪些工具可以帮助进行故障排除？让我们首先查看DHCP租约信息，然后深入分析`dhcpd`守护程序的日志。
- en: Simple DHCP logging and troubleshooting in everyday use
  id: totrans-119
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 日常使用中的简单DHCP日志记录和故障排除
- en: 'To view the list of current DHCP leases, use the `dhcp-lease-list` command,
    which should give you a list as follows (note that the text is wrapped; this output
    is one line per device lease):'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看当前DHCP租约列表，请使用`dhcp-lease-list`命令，该命令应该给出以下列表（请注意，文本已换行；此输出每个设备租约一行）：
- en: '[PRE12]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Note that this output already extracts the OUI from each MAC, so, for instance,
    you can use this command and its output to look for "oddball" NIC types. These
    should stand out immediately in your VOIP subnets or in subnets that are mostly
    mobile devices. Even in a standard data VLAN, odd device types based on the OUI
    can often be easily spotted. I see this all the time when a client has a standard
    phone type and spots an off-brand phone the first time they see the OUI extracts,
    or if they are a Windows shop and see an Apple computer they weren't expecting.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，此输出已从每个MAC地址中提取了OUI，因此，例如，您可以使用此命令及其输出来寻找“奇怪”的NIC类型。这些在您的VOIP子网或大多数移动设备的子网中应立即显眼。即使在标准数据VLAN中，基于OUI的奇怪设备类型通常也很容易被发现。当客户端有一个标准的电话类型并且在第一次看到OUI提取时发现了一个非品牌电话，或者如果他们是Windows商店并且看到了他们没有预期的苹果电脑时，我经常看到这种情况。
- en: 'You can easily "harvest" the lease information into the spreadsheet of your
    choice, so that you can then modify that listing to suit your needs, or what your
    inventory application needs for input. Or, if you just wanted to extract a MAC
    address to a hostname table, for instance, execute the following command:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以轻松地将租约信息“收集”到您选择的电子表格中，以便您可以修改该列表以满足您的需求，或者满足您的库存应用程序对输入的需求。或者，如果您只想将MAC地址提取到主机名表中，例如，执行以下命令：
- en: '[PRE13]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: In plain language, this translates to run the `dhcp-lease-list` command. Print
    the entire listing starting on line 3, remove repeating spaces, and then take
    columns 1 and 3, using a single space as a column delimiter.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 用通俗的语言来说，这意味着运行`dhcp-lease-list`命令。从第3行开始打印整个列表，删除重复的空格，然后使用单个空格作为列分隔符取列1和3。
- en: 'If you need more detailed information, or if you are investigating an incident
    in the past, you might need more or different data – for this, you need the logs.
    DHCP logs to `/var/log/dhcpd.log`, and the output is quite detailed. For instance,
    you can collect the entire DORA sequence for any particular MAC address:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您需要更详细的信息，或者如果您正在调查过去发生的事件，您可能需要更多或不同的数据 - 为此，您需要日志。 DHCP日志到`/var/log/dhcpd.log`，输出非常详细。例如，您可以收集任何特定MAC地址的整个DORA序列：
- en: '[PRE14]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Or you can take the next step and ask "Who had this IP address on this date?"
    We''ll collect the entire days'' worth of data, just in case multiple hosts might
    have used that address. To get the final address assignments, we only want the
    Acknowledgement (`DHCPACK`) packets:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 或者您可以迈出下一步，问“谁在这个日期使用了这个IP地址？”我们将收集整天的数据，以防多台主机可能使用了该地址。为了获得最终的地址分配，我们只需要确认（`DHCPACK`）数据包：
- en: '[PRE15]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Or, narrowing things down further to collect the MAC addresses in play for
    that IP address on that day, execute the following command:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，更进一步地缩小范围，收集当天使用该IP地址的MAC地址，执行以下命令：
- en: '[PRE16]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Now that we have the tools to extract MAC addresses from both the lease table
    and the logs, you can use these methods in troubleshooting, updating your inventory,
    or looking for out-of-inventory or "unexpected" hosts on your network. We'll explore
    troubleshooting sequences further in this chapter's Q&A section.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了从租约表和日志中提取MAC地址的工具，您可以在故障排除、更新库存或查找网络中的超出库存或“意外”主机时使用这些方法。我们将在本章的问答部分进一步探讨故障排除序列。
- en: Summary
  id: totrans-133
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: With the discussion of DHCP wrapped up, you should now have the tools available
    to build a basic DHCP server for your organization, both for local subnets and
    remotes. You should also be able to implement basic security to prevent rogue
    DHCP servers from operating on your network. Basic data extraction from the active
    lease table and DHCP logging should be part of your organization's toolkit.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 通过讨论DHCP的内容，您现在应该有工具来为您的组织构建基本的DHCP服务器，无论是用于本地子网还是远程子网。您还应该能够实施基本的安全措施，以防止流氓DHCP服务器在您的网络上运行。从活动租约表和DHCP日志中提取基本数据应该是您组织工具包的一部分。
- en: In combination, this should cover the needs of most organizations in terms of
    installation, configuration, and troubleshooting, as well as using DHCP for both
    an inventory input and in incident response.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 综合起来，这应该涵盖大多数组织在安装、配置和故障排除方面的需求，以及在库存输入和事件响应方面使用DHCP。
- en: In the next chapter, we'll continue to add core network services to our Linux
    host. The next step in our journey will be using **Public Key Infrastructure**
    (**PKI**) – using private and public certificate authorities and certificates
    to help secure our infrastructure.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将继续向我们的Linux主机添加核心网络服务。我们旅程的下一步将是使用**公钥基础设施**（**PKI**）-使用私人和公共证书颁发机构和证书来帮助保护我们的基础设施。
- en: Questions
  id: totrans-137
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: 'As we conclude, here is a list of questions for you to test your knowledge
    regarding this chapter''s material. You will find the answers in the *Assessments*
    section of the *Appendix*:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，这里是一些问题列表，供您测试对本章材料的了解。您将在*附录*的*评估*部分找到答案：
- en: It's Monday, and a remote sales office has just called the Helpdesk saying they
    aren't getting DHCP addresses. How would you troubleshoot this?
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在是星期一，一个远程销售办事处刚刚打电话给Helpdesk说他们没有获得DHCP地址。您将如何排除故障？
- en: Your engineering department has no network access, but you can still reach the
    subnet. How would you determine whether this is related to a rogue DHCP server,
    and if so, how would you find that rogue device?
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您的工程部门没有网络访问权限，但您仍然可以访问子网。您将如何确定这是否与流氓DHCP服务器有关，如果是，您将如何找到该流氓设备？
- en: Further reading
  id: totrans-141
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'To learn more on the subject:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于这个主题的内容：
- en: 'DHCP snooping and trust configuration:'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DHCP监听和信任配置：
- en: '[https://isc.sans.edu/forums/diary/Layer+2+Network+Protections+against+Man+in+the+Middle+Attacks/7567/](https://isc.sans.edu/forums/diary/Layer+2+Network+Protections+against+Man+in+the+Middle+Attacks/7567/%20)'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://isc.sans.edu/forums/diary/Layer+2+Network+Protections+against+Man+in+the+Middle+Attacks/7567/](https://isc.sans.edu/forums/diary/Layer+2+Network+Protections+against+Man+in+the+Middle+Attacks/7567/%20)'
- en: 'WPAD attacks:'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: WPAD攻击：
- en: https://nakedsecurity.sophos.com/2016/05/25/when-domain-names-attack-the-wpad-name-collision-vulnerability/
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: https://nakedsecurity.sophos.com/2016/05/25/when-domain-names-attack-the-wpad-name-collision-vulnerability/
- en: https://us-cert.cisa.gov/ncas/alerts/TA16-144A
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: https://us-cert.cisa.gov/ncas/alerts/TA16-144A
- en: https://blogs.msdn.microsoft.com/ieinternals/2012/06/05/the-intranet-zone/
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: https://blogs.msdn.microsoft.com/ieinternals/2012/06/05/the-intranet-zone/
- en: 'DHCP and DHCP option RFCs; also, the IANA reference on DHCP options:'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DHCP和DHCP选项RFC；还有关于DHCP选项的IANA参考：
- en: 'Dynamic Host Configuration Protocol: https://tools.ietf.org/html/rfc2131'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 动态主机配置协议：https://tools.ietf.org/html/rfc2131
- en: 'DHCP Options and **Bootstrap Protocol** (**BOOTP**) Vendor Extensions: https://tools.ietf.org/html/rfc2132'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: DHCP选项和**引导协议**（**BOOTP**）供应商扩展：https://tools.ietf.org/html/rfc2132
- en: 'Vendor-Identifying Vendor Options for Dynamic Host Configuration Protocol version
    4 (DHCPv4): https://tools.ietf.org/html/rfc3925'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 用于动态主机配置协议版本4（DHCPv4）的供应商标识供应商选项：https://tools.ietf.org/html/rfc3925
- en: 'DHCP and BOOTP Parameters: https://www.iana.org/assignments/bootp-dhcp-parameters/bootp-dhcp-parameters.xhtml'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: DHCP和BOOTP参数：https://www.iana.org/assignments/bootp-dhcp-parameters/bootp-dhcp-parameters.xhtml
