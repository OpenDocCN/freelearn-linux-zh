["```\n    pip install ansible[azure]\n    ```", "```\nsudo yum install epel-release\nsudo yum install python-pip\n```", "```\nansible --version\n```", "```\nssh-keygen\n```", "```\ncat ~/.ssh/id_rsa.pub\n```", "```\nANSIBLE_CONFIG (environment variable if set)\nansible.cfg (in the current directory)\n~/.ansible.cfg (in the home directory)\n/etc/ansible/ansible.cfg\n```", "```\n[defaults]\ninventory = /etc/ansible/hosts\n```", "```\nansible all -a \"systemctl status sshd\"\n```", "```\n<ip address>\u00a0\u00a0\u00a0ansible_ssh_user='<ansible user>'\n```", "```\n[nodepool] \n10.0.0.5 \n10.0.0.6\n10.0.0.7\n```", "```\n[all:vars]\nansible_ssh_user='student'\n[nodepool]\n<ip address> ansible_ssh_user='other user'\n```", "```\nansible nodepool-a \"systemctl restart sshd\"\n```", "```\nFailed to restart sshd.service: Interactive authentication required.\nSee system logs and 'systemctl status sshd.service' for details.non-zero return code.\n```", "```\nansible-playbook <filename>\n```", "```\nansible-doc -l\n```", "```\nansible-doc user\n```", "```\n---\n- hosts: all\n\u00a0\u00a0tasks:\n\u00a0\u00a0- name: Add user Jane Roe\n\u00a0\u00a0\u00a0\u00a0become: yes\n\u00a0\u00a0\u00a0\u00a0become_method: sudo\n\u00a0\u00a0\u00a0\u00a0user:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0state: present\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name: jane\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0create_home: yes\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0comment: Jane Roe\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0generate_ssh_key: yes\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0group: users\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0groups:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- sudo\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- adm\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0shell: /bin/bash\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0skeleton: /etc/skel\n```", "```\nansible-playbook --syntax-check Ansible/example1.yaml\n```", "```\naz login\n```", "```\naz account list\n```", "```\naz ad sp create-for-rbac --name <principal> --password <password>\n```", "```\n[default]\nsubscription_id=xxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx \nclient_id=xxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx \nsecret=xxxxxxxxxxxxxxxxx \ntenant=xxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx \n```", "```\n---\n- hosts: localhost\n\u00a0\u00a0tasks:\n\u00a0\u00a0- name: Create a resource group\n\u00a0\u00a0\u00a0\u00a0azure_rm_resourcegroup:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name: Ansible-Group\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0location: westus\n```", "```\naz group show --name Ansible-Group\n```", "```\n{\n \"id\": \"/subscriptions/xxxx/resourceGroups/Ansible-Group\",\n \"location\": \"westus\",\n \"managedBy\": null,\n \"name\": \"Ansible-Group\",\n \"properties\": {\n \"provisioningState\": \"Succeeded\"\n },\n \"tags\": null\n }\n```", "```\n- hosts: localhost\n\u00a0\u00a0tasks:\n\u00a0\u00a0- name: Create Storage Account\n\u00a0\u00a0\u00a0\u00a0azure_rm_storageaccount:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0resource_group: Ansible-Group\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name: ansiblegroupsa\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0account_type: Standard_LRS\n\t .\n\t .\n\t .\t\u00a0\u00a0- name: Create a CentOS VM\n\u00a0\u00a0\u00a0\u00a0azure_rm_virtualmachine:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0resource_group: Ansible-Group\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name: ansible-vm\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0vm_size: Standard_DS1_v2\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0admin_username: student\n\u00a0\u00a0admin_password:welk0mITG!\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0offer: CentOS\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0publisher: OpenLogic\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0sku: '7.5'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0version: latest\n```", "```\ncd /etc/ansible\nwget https://raw.githubusercontent.com/ansible/ansible/devel/contrib/inventory/azure_rm.py\nchmod +x /etc/ansible/azure_rm.py\n```", "```\nansible -i /etc/ansible/azure_rm.py azure -m ping\n```", "```\nansible -i azure_rm.py ansible-vm -m ping \\\n--extra-vars \"ansible_user=<username> ansible_password=<password>\"\n```", "```\n[azure]\ninclude_powerstate=yes\ngroup_by_resource_group=yes\ngroup_by_location=yes\ngroup_by_security_group=yes\ngroup_by_tag=yes\n```", "```\naz vm list --output tsv\n```", "```\naz resource tag --resource-group <resource group> \\\n\u00a0\u00a0--tags webserver --id </subscriptions/...>\n```", "```\nansible -i /etc/ansible/azure_rm.py webserver -m ping\n```", "```\n---\n- hosts: webserver\n\u00a0\u00a0tasks:\n\u00a0\u00a0- name: Install Apache Web Server\n\u00a0\u00a0\u00a0\u00a0become: yes\n\u00a0\u00a0\u00a0\u00a0become_method: sudo\n\u00a0\u00a0\u00a0\u00a0apt:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name: apache2\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0install_recommends: yes\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0state: present\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0update-cache: yes\n\u00a0\u00a0\u00a0\u00a0when:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- ansible_distribution == \"Ubuntu\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- ansible_distribution_version == \"18.04\"\n```", "```\nansible-playbook -i /etc/ansible/azure_rm.py /etc/ansible/example9.yaml\n```", "```\nwget https://releases.hashicorp.com/terraform/0.12.17/terraform_0.12.17_linux_amd64.zip\n```", "```\nunzip terraform_0.12.16_linux_amd64.zip\n```", "```\nterraform --version\n```", "```\naz ad sp create-for-rbac -n terraform\n```", "```\nexport ARM_CLIENT_ID=\"<appID>\"\nexport ARM_CLIENT_SECRET=\"<password>\"\nexport ARM_SUBSCRIPTION_ID=\"<subscription ID>\"\nexport ARM_TENANT_ID=\"<tenant ID>\"\n```", "```\nmkdir terraform\ncd terraform && mkdir resource-group\ncd resource-group\n```", "```\nprovider \"azurerm\" {\n\u00a0\u00a0\u00a0\u00a0version = \"~>1.33\"\n}\nresource \"azurerm_resource_group\" \"rg\" {\n\u00a0\u00a0\u00a0\u00a0name\u00a0\u00a0\u00a0\u00a0\u00a0= \"TerraformOnAzure\"\n\u00a0\u00a0\u00a0\u00a0location = \"eastus\"\n}\n```", "```\nterraform init\n```", "```\nterraform apply\n```", "```\nmkdir ../vm\ncd ../vm\n```", "```\nprovider\u00a0\"azurerm\"\u00a0{\n\u00a0\u00a0\u00a0\u00a0version\u00a0=\u00a0\"~>1.33\"\n}\n#Create resource group\nresource\u00a0\"azurerm_resource_group\"\u00a0\"rg\"\u00a0{\n\u00a0\u00a0\u00a0\u00a0name\u00a0\u00a0\u00a0\u00a0\u00a0=\u00a0\"TFonAzure\"\n\u00a0\u00a0\u00a0\u00a0location\u00a0=\u00a0\"eastus\"\n}\n.\n.\n.\n#Create virtual machine, combining all the components we created so far\nresource\u00a0\"azurerm_virtual_machine\"\u00a0\"myterraformvm\"\u00a0{\n\u00a0\u00a0\u00a0\u00a0name\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0=\u00a0\"tf-VM\"\n\u00a0\u00a0\u00a0\u00a0location\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0=\u00a0\"eastus\"\n\u00a0\u00a0\u00a0\u00a0resource_group_name\u00a0\u00a0\u00a0=\u00a0azurerm_resource_group.rg.name\n\u00a0\u00a0\u00a0\u00a0network_interface_ids\u00a0=\u00a0[azurerm_network_interface.nic.id]\n\u00a0\u00a0\u00a0\u00a0vm_size\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0=\u00a0\"Standard_DS1_v2\"\n\u00a0\u00a0\u00a0\u00a0storage_os_disk\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0=\u00a0\"tfOsDisk\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0caching\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0=\u00a0\"ReadWrite\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0create_option\u00a0\u00a0\u00a0\u00a0\u00a0=\u00a0\"FromImage\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0managed_disk_type\u00a0=\u00a0\"Standard_LRS\"\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0storage_image_reference\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0publisher\u00a0=\u00a0\"Canonical\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0offer\u00a0\u00a0\u00a0\u00a0\u00a0=\u00a0\"UbuntuServer\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0sku\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0=\u00a0\"16.04.0-LTS\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0version\u00a0\u00a0\u00a0=\u00a0\"latest\"\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0os_profile\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0computer_name\u00a0\u00a0=\u00a0\"tfvm\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0admin_username\u00a0=\u00a0\"adminuser\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0admin_password\u00a0=\u00a0\"Pa55w0rD!@1234\"\n\u00a0\u00a0\u00a0\u00a0}\n\n\u00a0\u00a0\u00a0\u00a0os_profile_linux_config\u00a0{\n\u00a0\u00a0\u00a0\u00a0disable_password_authentication\u00a0=\u00a0false\n\u00a0\u00a0}\n}\n```", "```\nterraform init\n```", "```\nterraform plan -out vm-plan.plan\n```", "```\nterraform apply \"vm-plan.plan\"\n```", "```\nterraform destroy\n```", "```\nGet-AzAutomationRegistrationInfo ' \n\u00a0\u00a0-ResourceGroup <resource group> '\n\u00a0\u00a0-AutomationAccountName <automation account name>\n```", "```\nsudo yum install \\\n\u00a0\u00a0https://github.com/Microsoft/omi/releases/download/\\\n\u00a0\u00a0v1.4.2-3/omi-1.4.2-3.ssl_100.ulinux.x64.rpm\n```", "```\ndpkg \u2013i ./omi-1.6.0-0.ssl_110.ulinux.x64.deb \n```", "```\nsudo systemctl status omid.service\n```", "```\n/opt/omi/bin/omicli id\n```", "```\nConfiguration webserver {\nImport-DscResource -ModuleName PSDesiredStateConfiguration,nx\nNode \"ubuntu01\"{\n\u00a0\u00a0\u00a0\u00a0nxPackage apache2\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Name = \"apache2\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Ensure = \"Present\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0PackageManager = \"apt\"\n\u00a0\u00a0\u00a0\u00a0}\n }\n}\nwebserver\n```", "```\npwsh -file example1.ps\n```", "```\nsudo /opt/microsoft/dsc/Scripts/Register.py \\\n\u00a0\u00a0--RegistrationKey <automation account key> \\\n\u00a0\u00a0--ConfigurationMode ApplyOnly \\\n\u00a0\u00a0--RefreshMode Push --ServerURL <automation account url>\n```", "```\nsudo /opt/microsoft/dsc/Scripts/GetDscLocalConfigurationManager.py\n```", "```\naz vm extension set --resource-group <resource-group> \\\n--vm-name <vm-name> \\\n--name ConfigurationForLinux \\\n--publisher Microsoft.GuestConfiguration \\\n--version 1.9.0\n```"]