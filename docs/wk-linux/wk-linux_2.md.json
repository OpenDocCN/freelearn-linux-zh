["```\nsh -c \"$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"\n\n```", "```\nsh -c \"$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)\"\n\n```", "```\nsudo apt install git\n\n```", "```\nls ~/.oh-my-zsh/themes\n\n```", "```\ngit branch test\ngit checkout test\n```", "```\n    .. - go up one folder\n    \u2026 - go up two folders\n    - - cd o the last directory\n    ll - ls with -lh\n    ```", "```\ngrep -i \"joe\" file.txt\n```", "```\n    grep \"^[A-Za-z0-9\\s]*$\" file.txt\n\n    ```", "```\ngrep \"^[^0-9]*$\" file.txt\n\n```", "```\ngrep \"\\[.*\\]\" file.txt\n\n```", "```\ngrep \"\\!\" file.txt\n\n```", "```\nsed \"s/Joe/All/g\" file.txt\n\n```", "```\npwd | wc -c\n\n```", "```\ndf -h | grep /home | tr -s \" \" | cut -f 2 -d \" \"\n\n```", "```\nls -p | grep / | wc -l\n\n```", "```\nps aux | grep nautilus | grep -v grep | awk '{print $2}' | xargs kill\n\n```", "```\npgrep nautilus\n\n```", "```\npkill nautilus\n\n```", "```\nifconfig wlp3s0 | grep \"inet addr:\" | awk '{print $2}' | cut -f 2 -d \":\"\n\n```", "```\ncat lorem.txt | tr \" \" \"\\n\" | grep -v \"^\\s*$\" | sed \"s/[,.]//g\" | sort | uniq -c | sort -n\n\n```", "```\nls $(ls)\n\n```", "```\n#!/bin/bash\n\n```", "```\nARG=${1}\necho ${ARG}\n```", "```\n./script.sh test\n\n```", "```\nARG=${1:-\"default value\"}\n\n```", "```\nAUX=\"123\"\nARG=${1:-${AUX:-\"default value\"}}\n\n```", "```\nLINE=\"some long line of text\"echo \"${LINE:5:4}\" \n\n```", "```\nwhile [[ ! -z ${1} ]]; do\necho ${1}\nshift  # shift cli arguments\ndone\n\n```", "```\nwhile [[ ! -z ${1} ]]; do\n    case \"$1\" in\n        --help|-h)\n            echo \"This is a help message\"\n            shift\n            ;;\n        *)\n            echo \"invalid option\"\n            exit 1\n            ;;\n    esac\ndone\n```", "```\nfunction print_ip() {\n    IP=$(\n        ifconfig ${1} | \\\n        grep \"inet addr:\" | \\\n        awk '{print $2}' | \\\n        cut -f 2 -d \":\"\n    )   \n    echo ${IP}\n}\n```", "```\n--ip|-i)\n    print_ip ${2}\n    shift\n    shift\n    ;;\n```", "```\n./script.sh --ip wlp3s0\n```", "```\nfunction long_running_task_1() {\n    sleep 1\n}\n\nfunction long_running_task_2() {\n    sleep 2\n}\n```", "```\n--parallel|-p)\n    long_running_task_1 \n    long_running_task_2\n```", "```\n./script.sh -p\n```", "```\n--parallel|-p)\n    long_running_task_1 &\n    long_running_task_2 &\n    PID=$!\n    wait ${PID}\n```", "```\nnotify-send script.sh \"execution finished\"\n```", "```\nFunction to read cli argument:\nfunction getarg() {\n    NAME=${1}\n    while [[ ! -z ${2} ]]; do\n        if [[ \"--${NAME}\" == \"${2}\" ]]; then\n            echo \"${3}\"\n            break\n        fi\n        shift\n    done\n}   \n```", "```\nfunction get_public_ip() {\n    dig +short myip.opendns.com @resolver1.opendns.com\n}\n```", "```\nCWD=$( cd \"$(dirname \"${BASH_SOURCE[0]}\" )/\" && pwd )\ncd ${CWD}\n\n```", "```\nsource ${CWD}/lib/util.sh\n\n```", "```\nCMD=$(getarg cmd $@)\necho ${CMD}\n\n```", "```\niputil --cmd ip\n\n```", "```\ncase ${CMD} in\n    ip)\n        IFACE=$(getarg iface $@)\n        print_ip ${IFACE}\n        ;;\n    publicip)\n        get_public_ip\n        ;;\n    *)\n        echo \"Invalid argument\"\nesac\n```", "```\niputil --cmd ip --iface wlp3s0\n\n```", "```\niputil --cmd publicip\n\n```", "```\n#!/bin/bash \n\nCWD=$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )/\" && pwd )\ncd ${CWD}\n\nsource ${CWD}/lib.sh\n\nCMD=$(getarg cmd $@)\n\ncase ${CMD} in\n    publicip)\n        print_public_ip\n        ;;\n    ip)\n        IFACE=$(getarg iface $@)\n        print_ip $IFACE\n        ;;\n    *)\n        echo \"invalid command\"\nesac\n```"]