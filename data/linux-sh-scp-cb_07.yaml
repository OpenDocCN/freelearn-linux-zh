- en: Chapter 7. The Old-boy Network
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第7章。老男孩网络
- en: 'In this chapter, we will cover:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖：
- en: Basic networking primer
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基本网络入门
- en: Let's ping!
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 让我们ping一下！
- en: Listing all the machines alive on a network
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列出网络上所有活动的机器
- en: Transferring files through network
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过网络传输文件
- en: Setting up an Ethernet and wireless LAN with script
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用脚本设置以太网和无线局域网
- en: Password-less auto-login with SSH
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用SSH进行无密码自动登录
- en: Running commands on remote host with SSH
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用SSH在远程主机上运行命令
- en: Mounting remote drive at local mount point
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在本地挂载点挂载远程驱动器
- en: Multi-casting window messages on a network
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在网络上多播窗口消息
- en: Network traffic and port analysis
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络流量和端口分析
- en: Introduction
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: Networking is the act of interconnecting machines through a network and configuring
    the nodes in the network with different specifications. We use TCP/IP as our networking
    stack and all operations are based on it. Networks are an important part of every
    computer system. Each node connected in the network is assigned a unique IP address
    for identification. There are many parameters in networking, such as subnet mask,
    route, ports, DNS, and so on, which require a basic understanding to follow.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 网络是通过网络互连机器并配置网络中的节点具有不同规格的行为。我们使用TCP/IP作为我们的网络堆栈，并且所有操作都基于它。网络是每个计算机系统的重要组成部分。网络中连接的每个节点都被分配一个唯一的IP地址以进行标识。网络中有许多参数，如子网掩码、路由、端口、DNS等，需要基本的理解才能跟进。
- en: Several applications that make use of a network operate by opening and connecting
    to firewall ports. Every application may offer services such as data transfer,
    remote shell login, and so on. Several interesting management tasks can be performed
    on a network consisting of many machines. Shell scripts can be used to configure
    the nodes in a network, test the availability of machines, automate execution
    of commands at remote hosts, and so on. This chapter focuses on different recipes
    that introduce interesting tools or commands related to networking and also how
    they can be used for solving different problems.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 许多使用网络的应用程序通过打开和连接到防火墙端口来运行。每个应用程序可能提供诸如数据传输、远程shell登录等服务。在由许多机器组成的网络上可以执行许多有趣的管理任务。Shell脚本可用于配置网络中的节点、测试机器的可用性、自动执行远程主机上的命令等。本章重点介绍了介绍有趣的与网络相关的工具或命令的不同配方，以及它们如何用于解决不同的问题。
- en: Basic networking primer
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基本网络入门
- en: Before digging through recipes based on networking, it is essential for you
    to have a basic understanding of setting up a network, the terminology and commands
    for assigning an IP address, adding routes, and so on. This recipe will give an
    overview of different commands used in GNU/Linux for networking and their usages
    from the basics.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在基于网络的配方之前，您有必要对设置网络、术语和命令进行基本了解，例如分配IP地址、添加路由等。本配方将概述GNU/Linux中用于网络的不同命令及其用法。
- en: Getting ready
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Every node in a network requires many parameters to be assigned to work successfully
    and interconnect with other machines. Some of the different parameters are the
    IP address, subnet mask, gateway, route, DNS, and so on.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 网络中的每个节点都需要分配许多参数才能成功工作并与其他机器互连。一些不同的参数包括IP地址、子网掩码、网关、路由、DNS等。
- en: This recipe will introduce commands `ifconfig`, `route`, `nslookup`, and `host`.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 本配方将介绍`ifconfig`、`route`、`nslookup`和`host`命令。
- en: How to do it...
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: Network interfaces are used to connect to a network. Usually, in the context
    of UNIX-like Operating Systems, network interfaces follow the eth0, eth1 naming
    convention. Also, other interfaces, such as usb0, wlan0, and so on, are available
    for USB network interfaces, wireless LAN, and other such networks.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 网络接口用于连接到网络。通常，在类UNIX操作系统的上下文中，网络接口遵循eth0、eth1的命名约定。此外，还有其他接口，如usb0、wlan0等，可用于USB网络接口、无线局域网等网络。
- en: '`ifconfig` is the command that is used to display details about network interfaces,
    subnet mask, and so on.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '`ifconfig`是用于显示网络接口、子网掩码等详细信息的命令。'
- en: '`ifconfig` is available at `/sbin/ifconfig`. Some GNU/Linux distributions will
    display an error "command not found" when `ifconfig` is typed. This is because
    `/sbin` in not included in the user''s PATH environment variable. When a command
    is typed, the Bash looks in the directories specified in PATH variable.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '`ifconfig`位于`/sbin/ifconfig`。当键入`ifconfig`时，一些GNU/Linux发行版会显示错误“找不到命令”。这是因为用户的PATH环境变量中没有包含`/sbin`。当键入命令时，Bash会在PATH变量中指定的目录中查找。'
- en: By default, in Debian, `ifconfig` is not available since `/sbin` is not in PATH.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，在Debian中，`ifconfig`不可用，因为`/sbin`不在PATH中。
- en: '`/sbin/ifconfig` is the absolute path, so try `run ifconfig` with the absolute
    path (that is, `/sbin/ifconfig`). For every system, there will be a by default
    interface ''lo'' called loopback that points to the current machine. For example:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '`/sbin/ifconfig`是绝对路径，因此尝试使用绝对路径（即`/sbin/ifconfig`）运行ifconfig。对于每个系统，默认情况下都会有一个名为''lo''的接口，称为环回，指向当前机器。例如：'
- en: '[PRE0]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The left-most column in the `ifconfig` output lists the name of network interfaces
    and the right-hand columns show the details related to the corresponding network
    interface.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '`ifconfig`输出中最左边的列显示了网络接口的名称，右侧列显示了与相应网络接口相关的详细信息。'
- en: There's more...
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: There are several additional commands that frequently come under usage for querying
    and configuring the network. Let's go through the essential commands and usage.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 有几个附加命令经常用于查询和配置网络。让我们一起了解基本命令和用法。
- en: Printing the list of network interfaces
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 打印网络接口列表
- en: Here is a one-liner command sequence to print the list of network interface
    available on a system.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个一行命令序列，用于打印系统上可用的网络接口列表。
- en: '[PRE1]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The first 10 characters of each line in the `ifconfig` output is reserved for
    writing the name of the network interface. Hence we use `cut` to extract the first
    10 characters of each line. `tr -d ' '` deletes every space character in each
    line. Now the `\n` newline character is squeezed using `tr -s '\n'` to produce
    a list of interface names.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '`ifconfig`输出的每行的前10个字符用于写入网络接口的名称。因此，我们使用`cut`提取每行的前10个字符。`tr -d '' ''`删除每行中的每个空格字符。现在使用`tr
    -s ''\n''`来压缩`\n`换行符，以产生一个接口名称列表。'
- en: Assigning and displaying IP addresses
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 分配和显示IP地址
- en: 'The `ifconfig` command displays details of every network interface available
    on the system. However, we can restrict it to a specific interface by using:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '`ifconfig`命令显示系统上可用的每个网络接口的详细信息。但是，我们可以通过使用以下命令将其限制为特定接口：'
- en: '[PRE2]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'For example:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 例如：
- en: '[PRE3]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'From the outputs of the previously mentioned command, our interests lie in
    the IP address, broadcast address, hardware address, and subnet mask. They are
    as follows:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面提到的命令的输出中，我们感兴趣的是IP地址、广播地址、硬件地址和子网掩码。它们如下：
- en: '`HWaddr 00:1c:bf:87:25:d2` is the hardware address (MAC address)'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`HWaddr 00:1c:bf:87:25:d2`是硬件地址（MAC地址）'
- en: '`inet addr:192.168.0.82` is the IP address'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`inet addr:192.168.0.82`是IP地址'
- en: '`Bcast:192.168.3.255` is the broadcast address'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Bcast:192.168.3.255`是广播地址'
- en: '`Mask:255.255.252.0` is the subnet mask'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 子网掩码：255.255.252.0
- en: In several scripting contexts, we may need to extract any of these addresses
    from the script for further manipulations.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在几种脚本上下文中，我们可能需要从脚本中提取这些地址中的任何一个以进行进一步操作。
- en: 'Extracting the IP address is a common task. In order to extract the IP address
    from the `ifconfig` output use:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 提取IP地址是一个常见的任务。为了从`ifconfig`输出中提取IP地址，请使用：
- en: '[PRE4]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Here the first command `egrep -o "inet addr:[^ ]*"` will print `inet addr:192.168.0.82`.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个命令`egrep -o "inet addr:[^ ]*"`将打印`inet addr:192.168.0.82`。
- en: The pattern starts with `inet addr:` and ends with some non-space character
    sequence (specified by `[^ ]*`). Now in the next pipe, it prints the character
    combination of digits and '.'.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 模式以`inet addr:`开头，以一些非空格字符序列（由`[^ ]*`指定）结尾。现在在下一个管道中，它打印数字和'.'的字符组合。
- en: 'In order to set the IP address for a network interface, use:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 为了设置网络接口的IP地址，请使用：
- en: '[PRE5]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: You will need to run the above command as root. `192.168.0.80` is the address
    to be set.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要以root身份运行上述命令。`192.168.0.80`是要设置的地址。
- en: 'Set the subnet mask along with IP address as follows:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 设置子网掩码以及IP地址如下：
- en: '[PRE6]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Spoofing Hardware Address (MAC Address)
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 欺骗硬件地址（MAC地址）
- en: In certain circumstances where authentication or filtering of computers on a
    network is provided by using the hardware address, we can use hardware address
    spoofing. The hardware address appears in `ifconfig` output as `HWaddr 00:1c:bf:87:25:d2`.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，通过使用硬件地址提供对网络上计算机的身份验证或过滤，我们可以使用硬件地址欺骗。硬件地址显示为`ifconfig`输出中的`HWaddr 00:1c:bf:87:25:d2`。
- en: 'We can spoof the hardware address at the software level as follows:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在软件级别欺骗硬件地址，如下所示：
- en: '[PRE7]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: In the above command, `00:1c:bf:87:25:d5` is the new MAC address to be assigned.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述命令中，`00:1c:bf:87:25:d5`是要分配的新MAC地址。
- en: This can be useful when we need to access the Internet through MAC authenticated
    service providers that provide access to the Internet for a single machine.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们需要通过MAC认证的服务提供商访问互联网以为单个机器提供互联网访问时，这可能是有用的。
- en: Name server and DNS (Domain Name Service)
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 名称服务器和DNS（域名服务）
- en: The elementary addressing scheme for the Internet is IP addresses (dotted decimal
    form, for example, `202.11.32.75`). However, the resources on the Internet (for
    example, websites) are accessed through a combination of ASCII characters called
    URLs or domain names. For example, [google.com](http://google.com) is a domain
    name. It actually corresponds to an IP address. Typing the IP address in the browser
    can also access the URL `www.google.com`.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 互联网的基本寻址方案是IP地址（点分十进制形式，例如`202.11.32.75`）。但是，互联网上的资源（例如网站）是通过称为URL或域名的ASCII字符组合访问的。例如，[google.com](http://google.com)是一个域名。它实际上对应一个IP地址。在浏览器中输入IP地址也可以访问URL`www.google.com`。
- en: This technique of abstracting IP addresses with symbolic names is called **Domain**
    **Name** **Service** (**DNS**). When we enter `google.com`, the DNS servers configured
    with our network resolve the domain name into the corresponding IP address. While
    on a local network, we setup the local DNS for naming local machines on the network
    symbolically using their hostnames.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 将IP地址与符号名称抽象化的技术称为**域名服务**（**DNS**）。当我们输入`google.com`时，配置了我们网络的DNS服务器将域名解析为相应的IP地址。而在本地网络上，我们可以使用本地DNS通过主机名对网络上的本地机器进行符号命名。
- en: 'Name servers assigned to the current system can be viewed by reading `/etc/resolv.conf`.
    For example:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 分配给当前系统的名称服务器可以通过读取`/etc/resolv.conf`来查看。例如：
- en: '[PRE8]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'We can add name servers manually as follows:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以手动添加名称服务器，如下所示：
- en: '[PRE9]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: How can we obtain the IP address for a corresponding domain name?
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我们如何获取相应域名的IP地址？
- en: 'The easiest method to obtain an IP address is by trying to ping the given domain
    name and looking at the echo reply. For example:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 获取IP地址的最简单方法是尝试ping给定的域名，并查看回显回复。例如：
- en: '[PRE10]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: A domain name can have multiple IP addresses assigned. In that case, the DNS
    server will return one address among the list of IP addresses. To obtain all the
    addresses assigned to the domain name, we should use a DNS lookup utility.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 一个域名可以分配多个IP地址。在这种情况下，DNS服务器将从IP地址列表中返回一个地址。要获取分配给域名的所有地址，我们应该使用DNS查找实用程序。
- en: DNS lookup
  id: totrans-71
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: DNS查找
- en: There are different DNS lookup utilities available from the command line. These
    will request a DNS server for an IP address resolution. `host` and `nslookup`
    are two DNS lookup utilities.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 命令行中有不同的DNS查找实用程序可用。这些将请求DNS服务器进行IP地址解析。`host`和`nslookup`是两个DNS查找实用程序。
- en: 'When `host` is executed it will list out all of the IP addressed attached to
    the domain name. `nslookup` is another command that is similar to `host`, which
    can be used to query details related to DNS and resolving of names. For example:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 当执行`host`时，它将列出附加到域名的所有IP地址。`nslookup`是另一个类似于`host`的命令，它可以用于查询与DNS和名称解析相关的详细信息。例如：
- en: '[PRE11]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'It may also list out DNS resource records like MX (Mail Exchanger) as follows:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 它还可以列出DNS资源记录，如MX（邮件交换器）如下：
- en: '[PRE12]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: The last line above corresponds to the default nameserver used for DNS resolution.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 上面的最后一行对应于用于DNS解析的默认名称服务器。
- en: Without using the DNS server, it is possible to add a symbolic name to IP address
    resolution just by adding entries into file `/etc/hosts`.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在不使用DNS服务器的情况下，可以通过向文件`/etc/hosts`添加条目来将符号名称添加到IP地址解析中。
- en: 'In order to add an entry, use the following syntax:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 要添加一个条目，请使用以下语法：
- en: '[PRE13]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'For example:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 例如：
- en: '[PRE14]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: After adding this entry, whenever a resolution to `backupserver.com` occurs,
    it will resolve to `192.168.0.9`.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 添加了这个条目后，每当解析到`backupserver.com`时，它将解析为`192.168.0.9`。
- en: Setting default gateway, showing routing table information
  id: totrans-84
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设置默认网关，显示路由表信息
- en: When a local network is connected to another network, it needs to assign some
    machine or network node through which an interconnection takes place. Hence the
    IP packets with a destination exterior to the local network should be forwarded
    to the node machine, which is interconnected to the external network. This special
    node machine, which is capable of forwarding packets to the external network,
    is called a gateway. We set the gateway for every node to make it possible to
    connect to an external network.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 当本地网络连接到另一个网络时，需要分配一些机器或网络节点，通过这些节点进行互连。因此，目的地在本地网络之外的IP数据包应该被转发到与外部网络相连的节点机器。这个特殊的节点机器，能够将数据包转发到外部网络，被称为网关。我们为每个节点设置网关，以便连接到外部网络。
- en: 'The operating system maintains a table called the routing table, which contains
    information on how packets are to be forwarded and through which machine node
    in the network. The routing table can be displayed as follows:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 操作系统维护一个称为路由表的表，其中包含有关数据包如何转发以及通过网络中的哪个机器节点的信息。路由表可以显示如下：
- en: '[PRE15]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Or, you can also use:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，您也可以使用：
- en: '[PRE16]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Using `-n` specifies to display the numerical addresses. When `-n` is used it
    will display every entry with a numerical IP addresses, else it will show symbolic
    host names instead of IP addresses under the DNS entries for IP addresses that
    are available.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`-n`指定显示数字地址。当使用`-n`时，它将显示每个带有数字IP地址的条目，否则它将显示DNS条目下的符号主机名而不是IP地址。
- en: 'A default gateway is set as follows:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 默认网关设置如下：
- en: '[PRE17]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'For example:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 例如：
- en: '[PRE18]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Traceroute
  id: totrans-95
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Traceroute
- en: 'When an application requests a service through the Internet, the server may
    be at a distant location and connected through any number of gateways or device
    nodes. The packets travel through several gateways and reach the destination.
    There is an interesting command `traceroute` that displays the address of all
    intermediate gateways through which the packet travelled to reach the destination.
    `traceroute` information helps us to understand how many hops each packet should
    take in order reach the destination. The number of intermediate gateways or routers
    gives a metric to measure the distance between two nodes connected in a large
    network. An example of the output from `traceroute` is as follows:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 当应用程序通过Internet请求服务时，服务器可能位于遥远的位置，并通过任意数量的网关或设备节点连接。数据包通过多个网关传输并到达目的地。有一个有趣的命令`traceroute`，它显示了数据包到达目的地所经过的所有中间网关的地址。`traceroute`信息帮助我们了解每个数据包需要经过多少跳才能到达目的地。中间网关或路由器的数量为连接在大型网络中的两个节点之间的距离提供了一个度量标准。`traceroute`的输出示例如下：
- en: '[PRE19]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: See also
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '*Playing with variables and environment variables* of[Chapter 1](ch01.html
    "Chapter 1. Shell Something Out"), explains the PATH variable'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用变量和环境变量玩耍* [第1章](ch01.html "第1章。外壳的一些东西") ，解释了PATH变量'
- en: '*Searching and mining "text" inside a file with grep* of[Chapter 4](ch04.html
    "Chapter 4. Texting and Driving"), explains the grep command'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用grep在文件中搜索和挖掘“文本”* [第4章](ch04.html "第4章。发短信和开车") ，解释了grep命令'
- en: Let's ping!
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 让我们ping！
- en: '`ping` is the most basic network command, and one that every user should first
    know. It is a universal command that is available on major Operating Systems.
    It is also a diagnostic tool used for verifying the connectivity between two hosts
    on a network. It can be used to find out which machines are alive on a network.
    Let us see how to use ping.'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '`ping`是最基本的网络命令，每个用户都应该首先了解。它是一个通用命令，在主要操作系统上都可以使用。它也是一个用于验证网络上两个主机之间连接性的诊断工具。它可以用来查找网络上哪些机器是活动的。让我们看看如何使用ping。'
- en: How to do it...
  id: totrans-103
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: In order to check the connectivity of two hosts on a network, the `ping` command
    uses **Internet** **Control** **Message** **Protocol** (**ICMP**) echo packets.
    When these echo packets are sent towards a host, the host responds back with a
    reply if it is reachable or alive.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 为了检查网络上两个主机的连接性，`ping`命令使用**Internet** **Control** **Message** **Protocol**
    (**ICMP**)回显数据包。当这些回显数据包发送到主机时，如果主机是可达或活动的，主机将以回复的方式响应。
- en: 'Check whether a host is reachable as follows:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 检查主机是否可达如下：
- en: '[PRE20]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: The `ADDRESS` can be a hostname, domain name, or an IP address itself.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '`ADDRESS`可以是主机名、域名或IP地址本身。'
- en: '`ping` will continuously send packets and the reply information is printed
    on the terminal. Stop the pinging by pressing *Ctrl* + *C*.'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '`ping`将持续发送数据包，并且回复信息将打印在终端上。通过按下*Ctrl* + *C*来停止ping。'
- en: 'For example:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 例如：
- en: 'When the host is reachable the output will be similar to the following:'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当主机是可达时，输出将类似于以下内容：
- en: '[PRE21]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'When a host is unreachable the output will be similar to:'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当主机不可达时，输出将类似于：
- en: '[PRE22]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Once the host is not reachable, the ping returns a `Destination Host Unreachable`
    error message.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦主机不可达，ping将返回`Destination Host Unreachable`错误消息。
- en: There's more
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 有更多
- en: In addition to checking the connectivity between two points in a network, the
    `ping` command can be used with additional options to get useful information.
    Let's go through the additional options of `ping`.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 除了检查网络中两点之间的连接性外，`ping`命令还可以与其他选项一起使用以获得有用的信息。让我们看看`ping`的其他选项。
- en: Round trip time
  id: totrans-117
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 往返时间
- en: 'The `ping` command can be used to find out the **Round** **Trip** **Time**
    (**RTT**) between two hosts on a network. RTT is the time required for the packet
    to reach the destination host and come back to the source host. The RTT in milliseconds
    can be obtained from ping. An example is as follows:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '`ping`命令可用于查找网络上两个主机之间的**往返时间**（**RTT**）。 RTT是数据包到达目标主机并返回到源主机所需的时间。 RTT以毫秒为单位可以从ping中获得。示例如下：'
- en: '[PRE23]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Here the minimum RTT is 118.012ms, the average RTT is 206.630ms, and the maximum
    RTT is 347.186ms. The `mdev` (77.713ms) parameter in the `ping` output stands
    for mean deviation.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 这里最小的RTT为118.012ms，平均RTT为206.630ms，最大RTT为347.186ms。 `ping`输出中的`mdev`（77.713ms）参数代表平均偏差。
- en: Limiting number of packets to be sent
  id: totrans-121
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 限制要发送的数据包数量
- en: The `ping` command sends echo packets and waits for the reply of `echo` indefinitely
    until it is stopped by pressing *Ctrl* + *C*. However, we can limit the count
    of echo packets to be sent by using the `-c` flag.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '`ping`命令发送回显数据包，并无限期等待`echo`的回复，直到通过按下*Ctrl* + *C*停止。但是，我们可以使用`-c`标志来限制要发送的回显数据包的数量。'
- en: 'The usage is as follows:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 用法如下：
- en: '[PRE24]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'For example:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 例如：
- en: '[PRE25]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: In the previous example, the `ping` command sends two echo packets and stops.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一个示例中，`ping`命令发送两个回显数据包并停止。
- en: This is useful when we need to ping multiple machines from a list of IP addresses
    through a script and checks its statuses.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们需要通过脚本ping多台机器并检查其状态时，这是非常有用的。
- en: Return status of ping command
  id: totrans-129
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ping命令的返回状态
- en: The `ping` command returns exit status 0 when it succeeds and returns non-zero
    when it fails. Successful means, destination host is reachable, where failure
    is when destination host is unreachable.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '`ping`命令在成功时返回退出状态0，并在失败时返回非零。成功意味着目标主机是可达的，而失败意味着目标主机是不可达的。'
- en: 'The return status can be easily obtained as follows:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 返回状态可以轻松获得如下：
- en: '[PRE26]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Listing all the machines alive on a network
  id: totrans-133
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 列出网络上所有活动的机器
- en: 'When we deal with a large local area network, we may need to check the availability
    of other machines in the network, whether alive or not. A machine may not be alive
    in two conditions: either it is not powered on or due to a problem in the network.
    By using shell scripting, we can easily find out and report which machines are
    alive on the network. Let''s see how to do it.'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们处理大型局域网时，我们可能需要检查网络中其他机器的可用性，无论是存活还是不存活。机器可能不存活有两种情况：要么它没有通电，要么由于网络中的问题。通过使用shell脚本，我们可以轻松地找出并报告网络上哪些机器是活动的。让我们看看如何做到这一点。
- en: Getting ready
  id: totrans-135
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: In this recipe, we use two methods. The first method uses `ping` and the second
    method uses `fping`. `fping` doesn't come with a Linux distribution by default.
    You may have to manually install `fping` using a package manager.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个配方中，我们使用了两种方法。第一种方法使用`ping`，第二种方法使用`fping`。`fping`不会默认随Linux发行版一起提供。您可能需要使用软件包管理器手动安装`fping`。
- en: How to do it...
  id: totrans-137
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到...
- en: Let's go through the script to find out all the live machines on the network
    and alternate methods to find out the same.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过脚本找出网络上所有活动的机器以及查找相同的替代方法。
- en: '**Method 1:**'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**方法1：**'
- en: 'We can write our own script using the `ping` command to query list of IP addresses
    and check whether they are alive or not as follows:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`ping`命令编写自己的脚本来查询IP地址列表，并检查它们是否存活，如下所示：
- en: '[PRE27]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'The output is as follows:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE28]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '**Method 2:**'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**方法2：**'
- en: 'We can use an existing command-line utility to query the status of machines
    on a network as follows:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用现有的命令行实用程序来查询网络上计算机的状态，如下所示：
- en: '[PRE29]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Or, use:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，使用：
- en: '[PRE30]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: How it works...
  id: totrans-149
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: In Method 1, we used the `ping` command to find out the alive machines on the
    network. We used a `for` loop for iterating through the list of IP addresses.
    The list is generated as `192.168.0.{1..255}`. The `{start..end}` notation will
    expand and will generate a list of IP addresses, such as `192.168.0.1`, `192.168.0.2`,
    `192.168.0.3` till `192.168.0.255`.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 在方法1中，我们使用`ping`命令来查找网络上存活的计算机。我们使用`for`循环来遍历IP地址列表。列表生成为`192.168.0.{1..255}`。`{start..end}`符号将扩展并生成IP地址列表，例如`192.168.0.1`，`192.168.0.2`，`192.168.0.3`直到`192.168.0.255`。
- en: '`ping $ip -c 2 &> /dev/null` will run a `ping` to the corresponding IP address
    in each execution of loop. `-c 2` is used to restrict the number of echo packets
    to be sent to two packets. `&> /dev/null` is used to redirect both `stderr` and
    `stdout` to `/dev/null` so that it won''t be printed on the terminal. Using `$?`
    we evaluate the exit status. If it is successful, the exit status is 0 else non-zero.
    Hence the successful IP addresses are printed. We can also print the list of unsuccessful
    IP addresses to give the list of unreachable IP addresses.'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '`ping $ip -c 2 &> /dev/null`将在每次循环执行时对相应的IP地址运行`ping`。`-c 2`用于限制要发送的回显数据包的数量为两个数据包。`&>
    /dev/null`用于将`stderr`和`stdout`重定向到`/dev/null`，以便它不会打印在终端上。使用`$?`我们评估退出状态。如果成功，退出状态为0，否则为非零。因此，成功的IP地址将被打印。我们还可以打印不成功的IP地址列表，以提供不可达的IP地址列表。'
- en: Note
  id: totrans-152
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Here is an exercise for you. Instead of using a range of IP addresses hard-coded
    in the script, modify the script to read a list of IP addresses from a file or
    `stdin`.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一个练习给你。不要在脚本中使用硬编码的IP地址范围，而是修改脚本以从文件或`stdin`中读取IP地址列表。
- en: In this script, each ping is executed one after the other. Even though all the
    IP addresses are independent each other, the `ping` command is executed due to
    a sequential program, it takes a delay of sending two echo packets and receiving
    them or the timeout for a reply for executing the next `ping` command.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个脚本中，每个ping都是依次执行的。尽管所有IP地址彼此独立，但由于是顺序程序，`ping`命令会由于发送两个回显数据包和接收它们的延迟或执行下一个`ping`命令的超时而执行。
- en: 'When it comes to 255 addresses, the delay is large. Let''s run all the `ping`
    commands in parallel to make it much faster. The core part of the script is the
    loop body. To make the `ping` commands in parallel, enclose the loop body in `(
    )&`. `( )` encloses a block of commands to run as the sub-shell and `&` sends
    it to the background by leaving the current thread. For example:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 当涉及到255个地址时，延迟很大。让我们并行运行所有`ping`命令，使其更快。脚本的核心部分是循环体。为了使`ping`命令并行运行，将循环体括在`(
    )&`中。`( )`括起一组命令以作为子shell运行，`&`通过离开当前线程将其发送到后台。例如：
- en: '[PRE31]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: The `for` loop body executes many background process and it comes out of the
    loop and it terminates the script. In order to present the script to terminate
    until all its child process end, we have a command called `wait`. Place a `wait`
    at the end of the script so that it waits for the time until all the child `(
    )` subshell processes complete.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '`for`循环体执行许多后台进程，退出循环并终止脚本。为了使脚本在所有子进程结束之前终止，我们有一个称为`wait`的命令。在脚本的末尾放置一个`wait`，以便它等待直到所有子`(
    )`子shell进程完成。'
- en: Note
  id: totrans-158
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The `wait` command enables a script to be terminated only after all its child
    process or background processes terminate or complete.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '`wait`命令使脚本只有在所有子进程或后台进程终止或完成后才能终止。'
- en: Have a look at `fast_ping.sh` from the code provided with the book.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 查看书中提供的代码中的`fast_ping.sh`。
- en: 'Method 2 uses a different command called `fping`. It can ping a list of IP
    addresses simultaneously and respond very quickly. The options available with
    `fping` are as follows:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 方法2使用了一个名为`fping`的不同命令。它可以同时ping一系列IP地址并非常快速地响应。`fping`可用的选项如下：
- en: The `-a` option with `fping` specifies to print all alive machine's IP addresses
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`fping`的`-a`选项指定打印所有活动机器的IP地址'
- en: The `-u` option with `fping` specifies to print all unreachable machines
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-u`选项与`fping`一起指定打印所有不可达的机器'
- en: 'The `-g` option specifies to generate a range of IP addresses from slash-subnet
    mask notation specified as IP/mask or start and end IP addresses as:'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-g`选项指定从斜杠子网掩码表示法指定的IP/mask或起始和结束IP地址生成IP地址范围：'
- en: '[PRE32]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Or
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 或
- en: '[PRE33]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '`2>/dev/null` is used to dump error messages printed due to unreachable host
    to a null device'
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`2>/dev/null`用于将由于不可达主机而打印的错误消息转储到空设备'
- en: 'It is also possible to manually specify a list of IP addresses as command-line
    arguments or as a list through `stdin`. For example:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 还可以手动指定IP地址列表作为命令行参数或通过`stdin`列表。例如：
- en: '[PRE34]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: There's more...
  id: totrans-171
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: The `fping` command can be used for querying DNS data from a network. Let's
    see how to do it.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '`fping`命令可用于从网络查询DNS数据。让我们看看如何做到这一点。'
- en: DNS lookup with fping
  id: totrans-173
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用fping进行DNS查找
- en: '`fping` has an option `-d` that returns host names by using DNS lookup for
    each echo reply. It will print out host names rather than IP addresses on ping
    replies.'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '`fping`有一个`-d`选项，通过使用DNS查找返回主机名。它将在ping回复中打印主机名而不是IP地址。'
- en: '[PRE35]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: See also
  id: totrans-176
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '*Playing with file descriptors and redirection* of[Chapter 1](ch01.html "Chapter 1. Shell
    Something Out"), explains the data redirection'
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*玩转文件描述符和重定向*[第1章](ch01.html "第1章。外壳某事")，解释了数据重定向'
- en: '*Comparisons and tests* of[Chapter 1](ch01.html "Chapter 1. Shell Something
    Out"), explains numeric comparisons'
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*比较和测试*[第1章](ch01.html "第1章。外壳某事")，解释数字比较'
- en: Transferring files
  id: totrans-179
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 文件传输
- en: The major purpose of the networking of computers is for resource sharing. Among
    resource sharing, the most prominent use is in file sharing. There are different
    methods by which we can transfer files between different nodes on a network. This
    recipe discusses how to transfer files using commonly used protocols FTP, SFTP,
    RSYNC, and SCP.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 计算机网络的主要目的是资源共享。在资源共享中，最突出的用途是文件共享。有多种方法可以在网络上的不同节点之间传输文件。本教程讨论了如何使用常用协议FTP、SFTP、RSYNC和SCP进行文件传输。
- en: Getting ready
  id: totrans-181
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: The commands for performing file transfer over the network are mostly available
    by default with Linux installations. Files via FTP can be transferred by using
    the `lftp` command. Files via a SSH connection can be transferred by using `sftp`,
    RSYNC using SSH with `rsync` command and transfer through SSH using `scp`.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 执行网络文件传输的命令在Linux安装中通常是默认可用的。可以使用`lftp`命令通过FTP传输文件。可以使用`sftp`通过SSH连接传输文件，使用`rsync`命令和使用`scp`通过SSH进行传输。
- en: How to do it...
  id: totrans-183
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: '**File Transfer Protocol** (**FTP**) is an old file transfer protocol for transferring
    files between machines on a network. We can use the command `lftp` for accessing
    FTP enabled servers for file transfer. It uses Port 21\. FTP can only be used
    if an FTP server is installed on the remote machine. FTP is used by many public
    websites to share files.'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: '**文件传输协议**（**FTP**）是一种用于在网络上的机器之间传输文件的旧文件传输协议。我们可以使用`lftp`命令来访问启用FTP的服务器进行文件传输。它使用端口21。只有在远程机器上安装了FTP服务器才能使用FTP。许多公共网站使用FTP共享文件。'
- en: 'To connect to an FTP server and transfer files in between, use:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 要连接到FTP服务器并在其间传输文件，请使用：
- en: '[PRE36]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Now it will prompt for a password and then display a logged in prompt as follows:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 现在它将提示输入密码，然后显示如下的登录提示：
- en: '[PRE37]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'You can type commands in this prompt. For example:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在此提示中键入命令。例如：
- en: To change to a directory, use `cd directory`
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要更改目录，请使用`cd directory`
- en: To change directory of local machine, use `lcd`
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要更改本地机器的目录，请使用`lcd`
- en: To create a directory use `mkdir`
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要创建目录，请使用`mkdir`
- en: 'To download a file, use `get filename` as follows:'
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要下载文件，请使用`get filename`如下：
- en: '[PRE38]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'To upload a file from the current directory, use `put filename` as follows:'
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要从当前目录上传文件，请使用`put filename`如下：
- en: '[PRE39]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: An `lftp` session can be exited by using the `quit` command
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以使用`quit`命令退出`lftp`会话
- en: Auto completion is supported in the `lftp` prompt.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: '`lftp`提示中支持自动完成。'
- en: There's more...
  id: totrans-199
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Let's go through some additional techniques and commands used for file transfer
    through a network.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一些用于通过网络传输文件的其他技术和命令。
- en: Automated FTP transfer
  id: totrans-201
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 自动FTP传输
- en: '`ftp` is another command used for FTP-based file transfer. `lftp` is more flexible
    for usage. `lftp` and the `ftp` command open an interactive session with user
    (it prompts for user input by displaying messages). What if we want to automate
    a file transfer instead of using the interactive mode? We can automate FTP file
    transfers by writing a shell script as follows:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: '`ftp`是另一个用于基于FTP的文件传输的命令。`lftp`更灵活。`lftp`和`ftp`命令打开一个与用户的交互会话（它通过显示消息提示用户输入）。如果我们想要自动化文件传输而不是使用交互模式怎么办？我们可以通过编写一个shell脚本来自动化FTP文件传输，如下所示：'
- en: '[PRE40]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'The above script has the following structure:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 上述脚本具有以下结构：
- en: '[PRE41]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: This is used to send data through `stdin` to the FTP command. The recipe, *Playing
    with file descriptors and redirection* in[Chapter 1](ch01.html "Chapter 1. Shell
    Something Out"), explains various methods for redirection into `stdin`.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 这用于通过`stdin`发送数据到FTP命令。[第1章](ch01.html "第1章。Shell Something Out")中的*Playing
    with file descriptors and redirection*一节解释了各种重定向到`stdin`的方法。
- en: The `-i` option of `ftp` turns off the interactive session with user. `user
    ${USER} ${PASSWD}` sets the username and password. `binary` sets the file mode
    to binary.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: '`ftp`的`-i`选项关闭与用户的交互会话。`user ${USER} ${PASSWD}`设置用户名和密码。`binary`将文件模式设置为二进制。'
- en: SFTP (Secure FTP)
  id: totrans-208
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: SFTP（安全FTP）
- en: SFTP is an FTP-like file transfer system that runs on top of an SSH connection.
    It makes use of an SSH connection to emulate an FTP interface. It doesn't require
    an FTP server at the remote end to perform file transfer but it requires an OpenSSH
    server to be installed and running. It is an interactive command, which offers
    an `sftp` prompt.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: SFTP是一种类似FTP的文件传输系统，运行在SSH连接的顶部。它利用SSH连接来模拟FTP接口。它不需要远程端安装FTP服务器来执行文件传输，但需要安装和运行OpenSSH服务器。它是一个交互式命令，提供`sftp`提示符。
- en: 'The following commands are used to perform the file transfer. All other commands
    remain same for every automated FTP session with specific HOST, USER, and PASSWD:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令用于执行文件传输。对于具有特定HOST、USER和PASSWD的每个自动化FTP会话，所有其他命令保持不变：
- en: '[PRE42]'
  id: totrans-211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'In order to run `sftp`, use:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 要运行`sftp`，请使用：
- en: '[PRE43]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: Similar to `lftp`, an `sftp` session can be exited by typing the `quit` command.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于`lftp`，`sftp`会话可以通过输入`quit`命令退出。
- en: The SSH server sometimes will not be running at the default Port 22\. If it
    is running at a different port, we can specify the port along with `sftp` as `-oPort=PORTNO`.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: SSH服务器有时不会在默认端口22上运行。如果它在不同的端口上运行，我们可以在`sftp`后面指定端口，如`-oPort=PORTNO`。
- en: 'For example:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 例如：
- en: '[PRE44]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: Note
  id: totrans-218
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '`-oPort` should be the first argument of the `sftp` command.'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: '`-oPort`应该是`sftp`命令的第一个参数。'
- en: RSYNC
  id: totrans-220
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: RSYNC
- en: rsync is an important command-line utility that is widely used for copying files
    over networks and for taking backup snapshots. This is better explained in separate
    recipe, *Backup snapshots with rsync*, that explains the usage of `rsync`.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: rsync是一个重要的命令行实用程序，广泛用于在网络上复制文件和进行备份快照。这在单独的*使用rsync进行备份快照*一节中有更好的解释，解释了`rsync`的用法。
- en: SCP (Secure Copy)
  id: totrans-222
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: SCP（安全复制）
- en: 'SCP is a file copy technique which is more secure than the traditional remote
    copy tool called `rcp`. The files are transferred through an encrypted channel.
    SSH is used as an encryption channel. We can easily transfer files to a remote
    machine as follows:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: SCP是一种比传统的名为`rcp`的远程复制工具更安全的文件复制技术。文件通过加密通道传输。SSH用作加密通道。我们可以通过以下方式轻松地将文件传输到远程计算机：
- en: '[PRE45]'
  id: totrans-224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: This will prompt for a password. It can be made password less by using autologin
    SSH technique. The recipe, *Password-less auto-login with SSH*, explains SSH autologin.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 这将提示输入密码。可以通过使用自动登录SSH技术使其无需密码。*使用SSH进行无密码自动登录*一节解释了SSH自动登录。
- en: Therefore, file transfer using `scp` doesn't require specific scripting. Once
    SSH login is automated, the `scp` command can be executed without an interactive
    prompt for the password.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，使用`scp`进行文件传输不需要特定的脚本。一旦SSH登录被自动化，`scp`命令可以在不需要交互式提示输入密码的情况下执行。
- en: 'Here `remotehost` can be IP address or domain name. The format of the `scp`
    command is:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 这里的`remotehost`可以是IP地址或域名。`scp`命令的格式是：
- en: '[PRE46]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: '`SOURCE` or `DESTINATION` can be in the format `username@localhost:/path` for
    example:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: '`SOURCE`或`DESTINATION`可以采用`username@localhost:/path`的格式，例如：'
- en: '[PRE47]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: The above command copies a file from the remote host to the current directory
    with the given filename.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令将文件从远程主机复制到当前目录，并给出文件名。
- en: If SSH is running at a different port than 22, use `-oPort` with the same syntax
    as `sftp`.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 如果SSH运行的端口与22不同，请使用与`sftp`相同语法的`-oPort`。
- en: Recursive copying with SCP
  id: totrans-233
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用SCP进行递归复制
- en: 'By using `scp` we can recursively copy a directory between two machines on
    a network as follows with the `-r` parameter:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用`scp`，我们可以通过以下方式在网络上的两台计算机之间递归复制目录，使用`-r`参数：
- en: '[PRE48]'
  id: totrans-235
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: '`scp` can also copy files by preserving permissions and mode by using the `-p`
    parameter.'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: '`scp`也可以通过使用`-p`参数保留权限和模式来复制文件。'
- en: See also
  id: totrans-237
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '*Playing with file descriptors and redirection* of[Chapter 1](ch01.html "Chapter 1. Shell
    Something Out"), explains the standard input using EOF'
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第1章](ch01.html "第1章。Shell Something Out")的*Playing with file descriptors and
    redirection*一节解释了使用EOF的标准输入'
- en: Setting up an Ethernet and wireless LAN with script
  id: totrans-239
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用脚本设置以太网和无线局域网
- en: An Ethernet is simple to configure. Since it uses physical cables, there are
    no special requirements such as authentication. However, a wireless LAN requires
    authentication—for example, a WEP key as well as the ESSID of the wireless network
    to connect. Let's see how to connect to a wireless as well as a wired network
    by writing a shell script.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 以太网配置简单。由于它使用物理电缆，因此没有特殊要求，如身份验证。然而，无线局域网需要身份验证，例如WEP密钥以及要连接的无线网络的ESSID。让我们看看如何通过编写一个shell脚本连接到无线网络和有线网络。
- en: Getting ready
  id: totrans-241
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: To connect to a wired network, we need to assign an IP address and subnet mask
    by using the `ifconfig` utility. But for a wireless network connection, it will
    require additional utilities, such as `iwconfig` and `iwlist` , to configure more
    parameters.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 连接有线网络时，我们需要使用`ifconfig`实用程序分配IP地址和子网掩码。但是对于无线网络连接，将需要额外的实用程序，如`iwconfig`和`iwlist`，以配置更多参数。
- en: How to do it...
  id: totrans-243
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'In order to connect to a network from a wired interface, execute the following
    script:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 为了从有线接口连接到网络，执行以下脚本：
- en: '[PRE49]'
  id: totrans-245
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'The script for connecting to a wireless LAN with WEP is as follows:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 连接到带有WEP的无线局域网的脚本如下：
- en: '[PRE50]'
  id: totrans-247
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: How it works...
  id: totrans-248
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The commands `ifconfig`, `iwconfig`, and `route` are to be run as root. Hence
    a check for the root user is performed at the beginning of the scripts.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 命令`ifconfig`、`iwconfig`和`route`需要以root用户身份运行。因此，在脚本开始时会检查root用户。
- en: The Ethernet connection script is pretty straightforward and it uses the concepts
    explained in the recipe, *Basic networking primer*. Let's go through the commands
    used for connecting to the wireless LAN.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 以太网连接脚本非常简单，并且使用了食谱中解释的概念，*基本网络入门*。让我们来看看用于连接到无线局域网的命令。
- en: A wireless LAN requires some parameters such as the `essid`, `key`, and frequency
    to connect to the network. The `essid` is the name of the wireless network to
    which we need to connect. Some **Wired** **Equivalent** **Protocol** (**WEP**)
    networks use a WEP key for authentication, whereas some networks don't. The WEP
    key is usually a 10-letter hex passphrase. Next comes the frequency assigned to
    the network. `iwconfig` is the command used to attach the wireless card with the
    proper wireless network, WEP key, and frequency.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 无线局域网需要一些参数，如`essid`、`key`和频率才能连接到网络。`essid`是我们需要连接的无线网络的名称。一些**有线** **等效**
    **协议**（**WEP**）网络使用WEP密钥进行身份验证，而有些网络则不使用。WEP密钥通常是一个10位十六进制密码。接下来是分配给网络的频率。`iwconfig`是用于将无线网卡连接到适当的无线网络、WEP密钥和频率的命令。
- en: 'We can scan and list the available wireless network by using the utility `iwlist`.
    To scan, use the following command:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用实用程序`iwlist`扫描和列出可用的无线网络。要进行扫描，请使用以下命令：
- en: '[PRE51]'
  id: totrans-253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: The `Frequency` parameter can be extracted from the scan result, from the line
    `Frequency:2.462 GHz (Channel 11)`.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: '`频率`参数可以从扫描结果中提取，从`Frequency:2.462 GHz (Channel 11)`这一行中。'
- en: See also
  id: totrans-255
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '*Comparisons and tests* of[Chapter 1](ch01.html "Chapter 1. Shell Something
    Out"), explains string comparisons.'
  id: totrans-256
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*比较和测试*[第1章](ch01.html "第1章。Shell Something Out")中，解释了字符串比较。'
- en: Password-less auto-login with SSH
  id: totrans-257
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用SSH进行无密码自动登录
- en: SSH is widely used with automation scripting. By using SSH, it is possible to
    remotely execute commands at remote hosts and read their output. SSH is authenticated
    by using username and password. Passwords are prompted during the execution of
    SSH commands. But in automation scripts, SSH commands may be executed hundreds
    of times in a loop and hence providing passwords each time is impractical. Hence
    we need to automate logins. SSH has a built-in feature by which SSH can auto-login
    using SSH keys. This recipe describes how to create SSH keys and facilitate auto-login.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: SSH在自动化脚本中被广泛使用。通过使用SSH，可以在远程主机上远程执行命令并读取它们的输出。SSH通过使用用户名和密码进行身份验证。在执行SSH命令时会提示输入密码。但是在自动化脚本中，SSH命令可能会在循环中执行数百次，因此每次提供密码是不切实际的。因此我们需要自动化登录。SSH具有一个内置功能，可以使用SSH密钥进行自动登录。本食谱描述了如何创建SSH密钥并实现自动登录。
- en: How to do it...
  id: totrans-259
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'The SSH uses public key-based and private key-based encryption techniques for
    automatic authentication. An authentication key has two elements: a public key
    and a private key pair. We can create an authentication key using the `ssh-keygen`
    command. For automating the authentication, the public key must be placed at the
    server (by appending the public key to the `~/.ssh/authorized_keys` file) and
    its private key file of the pair should be present at the `~/.ssh` directory of
    the user at client machine, which is the computer you are logging in from. Several
    configurations (for example, path and name of the `authorized_keys` file) regarding
    the SSH can be configured by altering the configuration file `/etc/ssh/sshd_config`.'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: SSH使用基于公钥和私钥的加密技术进行自动身份验证。身份验证密钥有两个元素：公钥和私钥对。我们可以使用`ssh-keygen`命令创建一个身份验证密钥。为了自动化身份验证，公钥必须放置在服务器上（通过将公钥附加到`~/.ssh/authorized_keys`文件），并且其配对的私钥文件应该存在于客户端机器的`~/.ssh`目录中，即您要从中登录的计算机。关于SSH的几个配置（例如`authorized_keys`文件的路径和名称）可以通过修改配置文件`/etc/ssh/sshd_config`来配置。
- en: 'There are two steps towards the setup of automatic authentication with SSH.
    They are:'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 设置使用SSH进行自动身份验证有两个步骤。它们是：
- en: Creating the SSH key from the machine, which requires a login to a remote machine.
  id: totrans-262
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从需要登录到远程机器的机器上创建SSH密钥。
- en: Transferring the public key generated to the remote host and appending it to
    `~/.ssh/authorized_keys` file.
  id: totrans-263
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将生成的公钥传输到远程主机，并将其附加到`~/.ssh/authorized_keys`文件中。
- en: 'In order to create an SSH key, enter the `ssh-keygen` command with the encryption
    algorithm type specified as RSA as follows:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 为了创建一个SSH密钥，输入以下指定RSA加密算法类型的`ssh-keygen`命令：
- en: '[PRE52]'
  id: totrans-265
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: You need to enter a passphrase for generating the public-private key pair. It
    is also possible to generate the key pair without entering a passphrase, but it
    is insecure. We can write monitoring scripts that use automated login from the
    script to several machines. In such cases, you should leave the passphrase empty
    while running the `ssh-keygen` command to prevent the script from asking for a
    passphrase while running.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 生成公私钥对需要输入一个密码。也可以在不输入密码的情况下生成密钥对，但这是不安全的。我们可以编写使用脚本从脚本到多台机器进行自动登录的监控脚本。在这种情况下，应该在运行`ssh-keygen`命令时将密码留空，以防止脚本在运行时要求输入密码。
- en: Now `~/.ssh/id_rsa.pub` and `~/.ssh/id_rsa` has been generated. `id_dsa.pub`
    is the generated public key and `id_dsa` is the private key. The public key has
    to be appended to the `~/.ssh/authorized_keys` file on remote servers where we
    need to auto-login from the current host.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 现在`~/.ssh/id_rsa.pub`和`~/.ssh/id_rsa`已经生成。`id_dsa.pub`是生成的公钥，`id_dsa`是私钥。公钥必须附加到远程服务器上的`~/.ssh/authorized_keys`文件，我们需要从当前主机自动登录。
- en: 'In order to append a key file, use:'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 为了附加一个密钥文件，使用：
- en: '[PRE53]'
  id: totrans-269
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: Provide the login password in the previous command.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一个命令中提供登录密码。
- en: 'The auto-login has been set up. From now on, SSH will not prompt for passwords
    during execution. You can test this with the following command:'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 自动登录已设置。从现在开始，在执行过程中SSH不会提示输入密码。您可以使用以下命令进行测试：
- en: '[PRE54]'
  id: totrans-272
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: You will not be prompted for a password.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 您将不会被提示输入密码。
- en: Running commands on remote host with SSH
  id: totrans-274
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用SSH在远程主机上运行命令
- en: SSH is an interesting system administration tool that enables to control remote
    hosts by login with a shell. SSH stands for Secure Shell. Commands can be executed
    on the shell received by login to remote host as if we run commands on localhost.
    It runs the network data transfer over an encrypted tunnel. This recipe will introduce
    different ways in which commands can be executed on the remote host.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: SSH是一个有趣的系统管理工具，可以通过登录shell来控制远程主机。SSH代表安全外壳。可以在通过登录到远程主机收到的shell上执行命令，就好像我们在本地主机上运行命令一样。它通过加密隧道运行网络数据传输。本教程将介绍在远程主机上执行命令的不同方法。
- en: Getting ready
  id: totrans-276
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: SSH doesn't come by default with all GNU/Linux distributions. Therefore, you
    may have to install the `openssh-server` and `openssh-client` packages using a
    package manager. SSH service runs by default on port number 22.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: SSH不会默认随所有GNU/Linux发行版一起提供。因此，您可能需要使用软件包管理器安装`openssh-server`和`openssh-client`软件包。SSH服务默认在端口号22上运行。
- en: How to do it...
  id: totrans-278
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'To connect to a remote host with the SSH server running, use:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 要连接到运行SSH服务器的远程主机，请使用：
- en: '[PRE55]'
  id: totrans-280
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'In this command:'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个命令中：
- en: '`username` is the user that exist at the remote host.'
  id: totrans-282
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`username`是存在于远程主机上的用户。'
- en: '`remote_host` can be domain name or IP address.'
  id: totrans-283
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`remote_host`可以是域名或IP地址。'
- en: 'For example:'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 例如：
- en: '[PRE56]'
  id: totrans-285
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: It will interactively ask for a user password and upon successful authentication
    it will return the shell for the user.
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 它将交互式地要求用户密码，并在成功验证后将返回用户的shell。
- en: By default, the SSH server runs at Port 22\. But certain servers run the SSH
    service at different ports. In that case use `-p port_no` with the `ssh` command
    to specify the port.
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，SSH服务器在端口22上运行。但是某些服务器在不同端口上运行SSH服务。在这种情况下，使用`ssh`命令的`-p port_no`来指定端口。
- en: 'In order to connect to an SSH server running at port 422, use:'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 为了连接到运行在端口422上的SSH服务器，请使用：
- en: '[PRE57]'
  id: totrans-289
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: You can execute commands in the shell that corresponds to the remote host. Shell
    is an interactive tool in which a user types and runs commands. However, in shell
    scripting contexts, we do not need an interactive shell. We need to automate several
    tasks. We require to execute several commands at the remote shell and display
    or store its output at localhost. Issuing a password every time is not practical
    for an automated script, hence autologin for SSH should be configured.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在对应于远程主机的shell中执行命令。Shell是一个交互式工具，用户可以在其中输入和运行命令。但是，在shell脚本上下文中，我们不需要交互式shell。我们需要自动化多个任务。我们需要在远程shell上执行多个命令，并在本地主机上显示或存储其输出。在自动化脚本中每次输入密码都不切实际，因此应配置SSH的自动登录。
- en: The recipe, *Password-less auto-login with SSH*, explains the SSH commands.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: '*使用SSH实现无密码自动登录*中解释了SSH命令。'
- en: Make sure that auto-login is configured before running automated scripts that
    use SSH.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行使用SSH的自动化脚本之前，请确保已配置自动登录。
- en: 'To run a command on the remote host and display its output on the localhost
    shell, use the following syntax:'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 要在远程主机上运行命令并在本地主机shell上显示其输出，请使用以下语法：
- en: '[PRE58]'
  id: totrans-294
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'For example:'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 例如：
- en: '[PRE59]'
  id: totrans-296
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'Multiple commands can be given by using semicolon delimiter in between the
    commands as:'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过在命令之间使用分号分隔符来给出多个命令，如下所示：
- en: '[PRE60]'
  id: totrans-298
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: Commands can be sent through `stdin` and the output of the commands will be
    available to `stdout`.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 命令可以通过`stdin`发送，并且命令的输出将可用于`stdout`。
- en: 'The syntax will be as follows:'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 语法如下：
- en: '[PRE61]'
  id: totrans-301
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'The `COMMANDS` string should be quoted in order to prevent a semicolon character
    to act as delimiter in the localhost shell. We can also pass any command sequence
    that involves piped statements to the SSH command through `stdin` as follows:'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: '`COMMANDS`字符串应该用引号引起来，以防止分号字符在本地主机shell中充当分隔符。我们还可以通过`stdin`传递任何涉及管道语句的命令序列到SSH命令，如下所示：'
- en: '[PRE62]'
  id: totrans-303
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: 'For example:'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 例如：
- en: '[PRE63]'
  id: totrans-305
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'In this example, the commands executed on the remote host are:'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，在远程主机上执行的命令是：
- en: '[PRE64]'
  id: totrans-307
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: 'It can be generalized as:'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 它可以概括为：
- en: '[PRE65]'
  id: totrans-309
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: We can also pass a more complex subshell in the command sequence by using the
    `( )` subshell operator.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以通过使用`( )`子shell运算符在命令序列中传递更复杂的子shell。
- en: Let's write an SSH based shell script that collects the uptime of a list of
    remote hosts. Uptime is the time for which the system is powered on. The `uptime`
    command is used to display how long the system has been powered on.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们编写一个基于SSH的shell脚本，用于收集一组远程主机的正常运行时间。正常运行时间是系统已经运行的时间。`uptime`命令用于显示系统已经运行多长时间。
- en: It is assumed that all systems in the `IP_LIST` have a common user `test`.
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 假设`IP_LIST`中的所有系统都有一个共同的用户`test`。
- en: '[PRE66]'
  id: totrans-313
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: 'The expected output is:'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 预期输出是：
- en: '[PRE67]'
  id: totrans-315
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: There's more...
  id: totrans-316
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: The `ssh` command can be executed with several additional options. Let's go
    through them.
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: '`ssh`命令可以使用多个附加选项执行。让我们逐一介绍它们。'
- en: SSH with compression
  id: totrans-318
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用压缩的SSH
- en: 'The SSH protocol also supports data transfer with compression, which comes
    in handy when bandwidth is an issue. Use the `-C` option with the `ssh` command
    to enable compression as follows:'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: SSH协议还支持使用压缩进行数据传输，当带宽成为问题时非常有用。使用`ssh`命令的`-C`选项启用压缩，如下所示：
- en: '[PRE68]'
  id: totrans-320
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: Redirecting data into stdin of remote host shell commands
  id: totrans-321
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 将数据重定向到远程主机shell命令的stdin
- en: 'Sometimes we need to redirect some data into `stdin` of remote shell commands.
    Let''s see how to do it. An example is as follows:'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 有时我们需要将一些数据重定向到远程shell命令的`stdin`中。让我们看看如何做到这一点。一个例子如下：
- en: '[PRE69]'
  id: totrans-323
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: 'Or:'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 或：
- en: '[PRE70]'
  id: totrans-325
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: '`cat >> list` appends the data received through `stdin` to the file list. Here
    this command is executed at the remote host. But the data is passed to `stdin`
    from localhost.'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: '`cat >> list`将通过`stdin`接收的数据附加到文件列表中。此命令在远程主机上执行。但是数据是从本地主机传递到`stdin`。'
- en: See also
  id: totrans-327
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '*Password-less auto-login with SSH*, explains how to configure auto-login to
    execute commands without prompting for password.'
  id: totrans-328
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用SSH实现无密码自动登录*，解释了如何配置自动登录以执行命令而无需提示输入密码。'
- en: Mounting a remote drive at a local mount point
  id: totrans-329
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在本地挂载点挂载远程驱动器
- en: Having a local mount point to access remote host file-system would be really
    helpful while carrying out both read and write data transfer operations. SSH is
    the most common transfer protocol available in a network and hence we can make
    use of it with `sshfs`. `sshfs` enables you to mount a remote filesystem to a
    local mount point. Let's see how to do it.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 在进行读写数据传输操作时，拥有一个本地挂载点以访问远程主机文件系统将非常有帮助。SSH是网络中最常见的传输协议，因此我们可以利用它与`sshfs`一起使用。`sshfs`使您能够将远程文件系统挂载到本地挂载点。让我们看看如何做到这一点。
- en: Getting ready
  id: totrans-331
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: '`sshfs` doesn''t come by default with GNU/Linux distributions. Install `sshfs`
    by using a package manager. `sshfs` is an extension to the fuse file system package
    that allows supported OSes to mount a wide variety of data as if it were a local
    file system.'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: '`sshfs`在GNU/Linux发行版中默认未安装。使用软件包管理器安装`sshfs`。`sshfs`是fuse文件系统包的扩展，允许支持的操作系统将各种数据挂载为本地文件系统。'
- en: How to do it...
  id: totrans-333
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'In order to mount a filesytem location at a remote host to a local mount point,
    use:'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 为了将远程主机上的文件系统位置挂载到本地挂载点，使用：
- en: '[PRE71]'
  id: totrans-335
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: Issue the user password when prompted.
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 在提示时输入用户密码。
- en: Now data at `/home/path` on the remote host can be accessed via a local mount
    point `/mnt/mountpoint`.
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，远程主机上`/home/path`的数据可以通过本地挂载点`/mnt/mountpoint`访问。
- en: 'In order to unmount after completing the work, use:'
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 在完成工作后卸载，使用：
- en: '[PRE72]'
  id: totrans-339
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: See also
  id: totrans-340
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: '*Running commands on remote host with SSH*, explains the ssh command.'
  id: totrans-341
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用SSH在远程主机上运行命令*，解释了ssh命令。'
- en: Multi-casting window messages on a network
  id: totrans-342
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在网络上多播窗口消息
- en: The administrator of a network may often require to send messages to the nodes
    on the network. Displaying pop-up windows on the user's desktop would be helpful
    to alert the user with a piece of information. Using a GUI toolkit with shell
    scripting can achieve this task. This recipe discusses how to send a popup window
    with custom messages to remote hosts.
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 网络管理员经常需要向网络上的节点发送消息。在用户的桌面上显示弹出窗口将有助于提醒用户获得信息。使用shell脚本和GUI工具包可以实现此任务。本教程讨论了如何向远程主机发送自定义消息的弹出窗口。
- en: Getting ready
  id: totrans-344
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: For implementing a GUI pop window, zenity can be used. Zenity is a scriptable
    GUI toolkit for creating windows consisting of textbox, input box, and so on.
    SSH can be used for connecting to the remote shell on a remote host. Zenity doesn't
    come installed by default with GNU/Linux distributions. Use a package manager
    to install zenity.
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 要实现GUI弹出窗口，可以使用zenity。Zenity是一个可脚本化的GUI工具包，用于创建包含文本框、输入框等的窗口。SSH可用于连接到远程主机上的远程shell。Zenity在GNU/Linux发行版中默认未安装。使用软件包管理器安装zenity。
- en: How to do it...
  id: totrans-346
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: Zenity is one of the scriptable dialog creation toolkit. There are other toolkits,
    such as gdialog, kdialog, xdialog, and so on. Zenity seems to be one flexible
    toolkit that is adherent to the GNOME Desktop Environment.
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: Zenity是可脚本化的对话框创建工具包之一。还有其他工具包，如gdialog、kdialog、xdialog等。Zenity似乎是一个灵活的工具包，符合GNOME桌面环境。
- en: 'In order to create an info box with zenity, use:'
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使用zenity创建信息框，使用：
- en: '[PRE73]'
  id: totrans-349
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: Zenity can be used to create windows with input box, combo input, radio button,
    pushbutton, and more. They are not in the scope of this recipe. Check the man
    page of zenity for more.
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: Zenity可以用来创建带有输入框、组合输入、单选按钮、按钮等的窗口。这些不在本教程的范围内。查看zenity的man页面以获取更多信息。
- en: 'Now, we can use SSH to run these zenity statements on a remote machine. In
    order to run this statement on the remote host through SSH, run:'
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以使用SSH在远程机器上运行这些zenity语句。为了在远程主机上通过SSH运行此语句，运行：
- en: '[PRE74]'
  id: totrans-352
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: 'But this will return an error like:'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 但是这将返回一个错误，如下：
- en: '[PRE75]'
  id: totrans-354
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: This is because zenity depends on Xserver. Xsever is a daemon which is responsible
    for plotting graphical elements on the screen which consists of the GUI. A bare
    GNU/Linux system consists of only a text terminal or shell prompts.
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 这是因为zenity依赖于Xserver。Xsever是一个负责在屏幕上绘制图形元素的守护进程，包括GUI。裸的GNU/Linux系统只包含文本终端或shell提示符。
- en: Xserver uses a special environment variable, `DISPLAY`, to track the Xserver
    instance that is running on the system.
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: Xserver使用一个特殊的环境变量`DISPLAY`来跟踪正在系统上运行的Xserver实例。
- en: We can manually set `DISPLAY=:0` to instruct Xserver about the Xserver instance.
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以手动设置`DISPLAY=:0`来指示Xserver关于Xserver实例。
- en: 'The previous SSH command can be rewritten as:'
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 上一个SSH命令可以重写为：
- en: '[PRE76]'
  id: totrans-359
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: This statement will display a pop up at `remotehost` if the user with username
    has been logged in any of the window managers.
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 如果具有用户名的用户已登录到任何窗口管理器中，此语句将在`remotehost`上显示一个弹出窗口。
- en: 'In order to multicast the popup window to multiple remote hosts, write a shell
    script as follows:'
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 为了将弹出窗口多播到多个远程主机，编写一个shell脚本如下：
- en: '[PRE77]'
  id: totrans-362
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: How it works...
  id: totrans-363
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: In the above script, we have a list of IP addresses to which the window should
    be popped up. A loop is used to iterate through IP addresses and execute the SSH
    command.
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的脚本中，我们有一个IP地址列表，应该在这些IP地址上弹出窗口。使用循环来遍历IP地址并执行SSH命令。
- en: In the SSH statement, at the end we have post fixed `&`. `&` will send an SSH
    statement to the background. It is done to facilitate parallelization in the execution
    of several SSH statements. If `&` was not used, it will start the SSH session,
    execute the zenity dialog, and wait for the user to close that pop up window.
    Unless the user at the remote host closes the window, the next SSH statement in
    the loop will not be executed. In order to move away from this blocking of the
    loop from further execution by waiting for the SSH session to terminate, the `&`
    trick is used.
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 在SSH语句中，最后我们使用了后缀`&`。`&`将SSH语句发送到后台。这样做是为了方便执行多个SSH语句的并行化。如果不使用`&`，它将启动SSH会话，执行zenity对话框，并等待用户关闭弹出窗口。除非远程主机上的用户关闭窗口，否则循环中的下一个SSH语句将不会被执行。为了避免循环被阻塞，等待SSH会话终止，使用了`&`技巧。
- en: See also
  id: totrans-366
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: '*Running commands on remote host with SSH*, explains the ssh command.'
  id: totrans-367
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用SSH在远程主机上运行命令*，解释了ssh命令。'
- en: Network traffic and port analysis
  id: totrans-368
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网络流量和端口分析
- en: Network ports are essential parameters of network-based applications. Applications
    open ports on the host and communicate to a remote host through opened ports at
    the remote host. Having awareness of opened and closed ports is essential for
    security context. Malwares and root kits may be running on the system with custom
    ports and custom services that allow attackers to capture unauthorized access
    to data and resources. By getting the list of opened ports and services running
    on the ports, we can analyze and defend the system from being controlled by root
    kits and the list helps to remove them efficiently. The list of opened ports is
    not only helpful for malware detection, but also for collecting information about
    opened ports on the system enables to debug network based applications. It helps
    to analyse whether certain port connections and port listening functionalities
    are working fine. This recipe discusses various utilities for port analysis.
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 网络端口是网络应用程序的基本参数。应用程序在主机上打开端口，并通过远程主机上打开的端口与远程主机通信。了解打开和关闭的端口对于安全上下文至关重要。恶意软件和root工具包可能在具有自定义端口和自定义服务的系统上运行，这允许攻击者捕获对数据和资源的未经授权访问。通过获取打开的端口和运行在端口上的服务列表，我们可以分析和保护系统免受root工具包的控制，并且该列表有助于有效地将它们移除。打开端口的列表不仅有助于恶意软件检测，还有助于收集有关系统上打开端口的信息，从而能够调试基于网络的应用程序。它有助于分析特定端口连接和端口监听功能是否正常工作。本教程讨论了用于端口分析的各种实用程序。
- en: Getting ready
  id: totrans-370
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: Various commands are available for listening to ports and services running on
    each port (for example, `lsof` and `netstat`). These commands are, by default,
    available on all GNU/Linux distributions.
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 有多种命令可用于监听每个端口上运行的端口和服务（例如，`lsof`和`netstat`）。这些命令默认情况下在所有GNU/Linux发行版上都可用。
- en: How to do it...
  id: totrans-372
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'In order to list all opened ports on the system along with the details on each
    service attached to it, use:'
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 要列出系统上所有打开的端口以及每个附加到它的服务的详细信息，请使用：
- en: '[PRE78]'
  id: totrans-374
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: 'Each entry in the output of `lsof` corresponds to each service that opens a
    port for communication. The last column of the output consists of lines similar
    to:'
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: '`lsof`的输出中的每个条目对应于打开端口进行通信的每个服务。输出的最后一列包含类似于以下行：'
- en: '[PRE79]'
  id: totrans-376
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: In this output `slynux-laptop.local:34395` corresponds to localhost part and
    `192.168.0.2:3128` corresponds to remote host.
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: 在此输出中，`slynux-laptop.local:34395`对应于本地主机部分，`192.168.0.2:3128`对应于远程主机。
- en: '`34395` is the port opened from current machine, and `3128` is the port to
    which the service connects at remote host.'
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: '`34395`是从当前机器打开的端口，`3128`是服务连接到远程主机的端口。'
- en: 'In order to list out the opened ports from current machine, use:'
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 要列出当前机器上打开的端口，请使用：
- en: '[PRE80]'
  id: totrans-380
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: The `:[0-9]\+->` regex for `grep` is used to extract the host port portion (`:34395->`)
    from the `lsof` output. The next `grep` is used to extract the port number (which
    is numeric). Multiple connections may occur through the same port and hence multiple
    entries of the same port may occur. In order to display each port once, they are
    sorted and the unique ones are printed.
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: '`:[0-9]\+->`正则表达式用于从`lsof`输出中提取主机端口部分（`:34395->`）。接下来的`grep`用于提取端口号（即数字）。通过同一端口可能发生多个连接，因此同一端口的多个条目可能会发生。为了仅显示每个端口一次，它们被排序并打印唯一的端口。'
- en: There's more...
  id: totrans-382
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Let's go through additional utilities that can be used for viewing the opened
    port and network traffic related information.
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过其他实用程序来查看打开的端口和与网络流量相关的信息。
- en: Opened port and services using netstat
  id: totrans-384
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用netstat列出打开的端口和服务
- en: '`netstat` is another command for network service analysis. Explaining all the
    features of `netstat` is not in the scope of this recipe. We will now look at
    how to list services and port numbers.'
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: '`netstat` 是用于网络服务分析的另一个命令。解释`netstat`的所有功能不在本教程的范围内。我们现在将看看如何列出服务和端口号。'
- en: 'Use `netstat -tnp` to list opened ports and services as follows:'
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`netstat -tnp`列出打开的端口和服务如下：
- en: '[PRE81]'
  id: totrans-387
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
