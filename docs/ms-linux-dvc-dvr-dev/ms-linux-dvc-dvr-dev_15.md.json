["```\nstruct nvmem_device {\n\u00a0\u00a0\u00a0\u00a0const char\u00a0\u00a0*name;\n\u00a0\u00a0\u00a0\u00a0struct module *owner;\n\u00a0\u00a0\u00a0\u00a0struct device dev;\n\u00a0\u00a0\u00a0\u00a0int stride;\n\u00a0\u00a0\u00a0\u00a0int word_size;\n\u00a0\u00a0\u00a0\u00a0int id;\n\u00a0\u00a0\u00a0\u00a0int users;\n\u00a0\u00a0\u00a0\u00a0size_t size;\n\u00a0\u00a0\u00a0\u00a0bool read_only;\n\u00a0\u00a0\u00a0\u00a0int flags;\n\u00a0\u00a0\u00a0\u00a0nvmem_reg_read_t reg_read;\n\u00a0\u00a0\u00a0\u00a0nvmem_reg_write_t reg_write; void *priv;\n\u00a0\u00a0\u00a0\u00a0[...]\n};\n```", "```\nstruct nvmem_config {\n\u00a0\u00a0\u00a0\u00a0struct device *dev;\n\u00a0\u00a0\u00a0\u00a0const char *name;\n\u00a0\u00a0\u00a0\u00a0int id;\n\u00a0\u00a0\u00a0\u00a0struct module *owner;\n\u00a0\u00a0\u00a0\u00a0const struct nvmem_cell_info *cells;\n\u00a0\u00a0\u00a0\u00a0int ncells;\n\u00a0\u00a0\u00a0\u00a0bool read_only;\n\u00a0\u00a0\u00a0\u00a0bool root_only;\n\u00a0\u00a0\u00a0\u00a0nvmem_reg_read_t reg_read; \u00a0\u00a0\u00a0\u00a0nvmem_reg_write_t reg_write;\n\u00a0\u00a0\u00a0\u00a0int size;\n\u00a0\u00a0\u00a0\u00a0int word_size;\n\u00a0\u00a0\u00a0\u00a0int stride;\n\u00a0\u00a0\u00a0\u00a0void *priv;\n\u00a0\u00a0\u00a0\u00a0[...]\n};\n```", "```\n    typedef int (*nvmem_reg_read_t)(void *priv, \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0unsigned int offset,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0void *val, size_t bytes);\n    typedef int (*nvmem_reg_write_t)(void *priv, \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0unsigned int offset,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0void *val, \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0size_t bytes);\n    ```", "```\nstruct nvmem_cell {\n\u00a0\u00a0\u00a0\u00a0const char *name;\n\u00a0\u00a0\u00a0\u00a0int offset;\n\u00a0\u00a0\u00a0\u00a0int bytes;\n\u00a0\u00a0\u00a0\u00a0int bit_offset;\n\u00a0\u00a0\u00a0\u00a0int nbits;\n\u00a0\u00a0\u00a0\u00a0struct nvmem_device *nvmem;\n\u00a0\u00a0\u00a0\u00a0struct list_head node;\n};\n```", "```\nstruct nvmem_cell_info {\n\u00a0\u00a0\u00a0\u00a0const char *name;\n\u00a0\u00a0\u00a0\u00a0unsigned int offset;\n\u00a0\u00a0\u00a0\u00a0unsigned int bytes;\n\u00a0\u00a0\u00a0\u00a0unsigned int bit_offset;\n\u00a0\u00a0\u00a0\u00a0unsigned int nbits;\n};\n```", "```\nstatic struct nvmem_cellinfo mycell = {\n\u00a0\u00a0\u00a0\u00a0.offset = 0xc,\n\u00a0\u00a0\u00a0\u00a0.bytes = 0x1,\n\u00a0\u00a0\u00a0\u00a0[...],\n}\n```", "```\nstaic struct nvmem_cellinfo mycell = {\n\u00a0\u00a0\u00a0\u00a0.offset = 0xc,\n\u00a0\u00a0\u00a0\u00a0.bytes = 0x1,\n\u00a0\u00a0\u00a0\u00a0.bit_offset = 2,\n\u00a0\u00a0\u00a0\u00a0.nbits = 2 [...]\n}\n```", "```\nstruct nvmem_device *nvmem_register(const \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0struct nvmem_config *config)\nstruct nvmem_device *devm_nvmem_register(struct device *dev,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0const struct nvmem_config *config)\nint nvmem_unregister(struct nvmem_device *nvmem)\nint devm_nvmem_unregister(struct device *dev,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0struct nvmem_device *nvmem)\n```", "```\nstruct rtc_device {\n\u00a0\u00a0\u00a0\u00a0[...]\n\u00a0\u00a0\u00a0\u00a0struct nvmem_device *nvmem;\n\u00a0\u00a0\u00a0\u00a0/* Old ABI support */\n\u00a0\u00a0\u00a0\u00a0bool nvram_old_abi;\n\u00a0\u00a0\u00a0\u00a0struct bin_attribute *nvram;\n\u00a0\u00a0\u00a0\u00a0[...]\n}\n```", "```\nint rtc_nvmem_register(struct rtc_device *rtc,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0struct nvmem_config *nvmem_config)\nvoid rtc_nvmem_unregister(struct rtc_device *rtc)\n```", "```\nstatic int ds1307_probe(struct i2c_client *client,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0const struct i2c_device_id *id)\n{\n\u00a0\u00a0\u00a0\u00a0struct ds1307 *ds1307;\n\u00a0\u00a0\u00a0\u00a0int err = -ENODEV;\n\u00a0\u00a0\u00a0\u00a0int tmp;\n\u00a0\u00a0\u00a0\u00a0const struct chip_desc *chip;\n\u00a0\u00a0\u00a0\u00a0[...]\n\u00a0\u00a0\u00a0\u00a0ds1307->rtc->ops = chip->rtc_ops ?: &ds13xx_rtc_ops;\n\u00a0\u00a0\u00a0\u00a0err = rtc_register_device(ds1307->rtc);\n\u00a0\u00a0\u00a0\u00a0if (err)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return err;\n\u00a0\u00a0\u00a0\u00a0if (chip->nvram_size) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0struct nvmem_config nvmem_cfg = {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.name = \"ds1307_nvram\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.word_size = 1,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.stride = 1,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.size = chip->nvram_size,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.reg_read = ds1307_nvram_read,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.reg_write = ds1307_nvram_write,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.priv = ds1307,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0};\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ds1307->rtc->nvram_old_abi = true;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0rtc_nvmem_register(ds1307->rtc, &nvmem_cfg);\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0[...]\n}\n```", "```\ntypedef int (*nvmem_reg_read_t)(void *priv, \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0unsigned int offset,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0void *val, size_t bytes);\ntypedef int (*nvmem_reg_write_t)(void *priv, \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0unsigned int offset,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0void *val, size_t bytes);\n```", "```\nocotp: ocotp@21bc000 {\n\u00a0\u00a0\u00a0\u00a0#address-cells = <1>;\n\u00a0\u00a0\u00a0\u00a0#size-cells = <1>;\n\u00a0\u00a0\u00a0\u00a0compatible = \"fsl,imx6sx-ocotp\", \"syscon\";\n\u00a0\u00a0\u00a0\u00a0reg = <0x021bc000 0x4000>;\n\u00a0\u00a0\u00a0\u00a0[...]\n\u00a0\u00a0\u00a0\u00a0tempmon_calib: calib@38 {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0reg = <0x38 4>;\n\u00a0\u00a0\u00a0\u00a0};\n\u00a0\u00a0\u00a0\u00a0tempmon_temp_grade: temp-grade@20 {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0reg = <0x20 4>;\n\u00a0\u00a0\u00a0\u00a0};\n\u00a0\u00a0\u00a0\u00a0foo: foo@6 {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0reg = <0x6 0x2> bits = <7 2>\n\u00a0\u00a0\u00a0\u00a0};\n\u00a0\u00a0\u00a0\u00a0[...]\n};\n```", "```\ntempmon: tempmon {\n\u00a0\u00a0\u00a0\u00a0compatible = \"fsl,imx6sx-tempmon\", \"fsl,imx6q-tempmon\";\n\u00a0\u00a0\u00a0\u00a0interrupt-parent = <&gpc>;\n\u00a0\u00a0\u00a0\u00a0interrupts = <GIC_SPI 49 IRQ_TYPE_LEVEL_HIGH>;\n\u00a0\u00a0\u00a0\u00a0fsl,tempmon = <&anatop>;\n\u00a0\u00a0\u00a0\u00a0clocks = <&clks IMX6SX_CLK_PLL3_USB_OTG>;\n\u00a0\u00a0\u00a0\u00a0nvmem-cells = <&tempmon_calib>, <&tempmon_temp_grade>;\n\u00a0\u00a0\u00a0\u00a0nvmem-cell-names = \"calib\", \"temp_grade\";\n};\n```", "```\nstruct nvmem_cell *nvmem_cell_get(struct device *dev,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0const char *name);\nstruct nvmem_cell *devm_nvmem_cell_get(struct device *dev,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0const char *name);\nvoid nvmem_cell_put(struct nvmem_cell *cell);\nvoid devm_nvmem_cell_put(struct device *dev,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0struct nvmem_cell *cell);\nvoid *nvmem_cell_read(struct nvmem_cell *cell, size_t *len);\nint nvmem_cell_write(struct nvmem_cell *cell, \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0void *buf, size_t len); \nint nvmem_cell_read_u32(struct device *dev, \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0const char *cell_id,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0u32 *val);\n```", "```\nstatic int imx_init_from_nvmem_cells(struct \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0platform_device *pdev)\n{\n\u00a0\u00a0\u00a0\u00a0int ret; u32 val;\n\u00a0\u00a0\u00a0\u00a0ret = nvmem_cell_read_u32(&pdev->dev, \"calib\", &val);\n\u00a0\u00a0\u00a0\u00a0if (ret)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return ret;\n\u00a0\u00a0\u00a0\u00a0ret = imx_init_calib(pdev, val);\n\u00a0\u00a0\u00a0\u00a0if (ret)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return ret;\n\u00a0\u00a0\u00a0\u00a0ret = nvmem_cell_read_u32(&pdev->dev, \"temp_grade\", &val);\n\u00a0\u00a0\u00a0\u00a0if (ret)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return ret;\n\u00a0\u00a0\u00a0\u00a0imx_init_temp_grade(pdev, val);\n\u00a0\u00a0\u00a0\u00a0return 0;\n}\n```", "```\nint rval;\nrval\t= ida_simple_get(&nvmem_ida, 0, 0, GFP_KERNEL);\nnvmem->id = rval;\nif (config->id == -1 && config->name) {\n\u00a0\u00a0\u00a0\u00a0dev_set_name(&nvmem->dev, \"%s\", config->name);\n} else {\n\u00a0\u00a0\u00a0\u00a0dev_set_name(&nvmem->dev, \"%s%d\", config->name ? : \"nvmem\",\n\u00a0\u00a0\u00a0\u00a0config->name ? config->id : nvmem->id);\n}\n```", "```\ncat /sys/bus/nvmem/devices/2-00550/nvmem\necho \"foo\" > /sys/bus/nvmem/devices/2-00550/nvmem\ncat /sys/bus/nvmem/devices/2-00550/nvmem\n```"]