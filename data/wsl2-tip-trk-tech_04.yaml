- en: '*Chapter 3*: Getting Started with Windows Terminal'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第3章*：开始使用Windows终端'
- en: Microsoft has announced support for GUI applications in an upcoming release
    of Windows Subsystem for Linux, but at the time of writing this is not available
    even in early preview form. In this book, we opted to focus on the stable, released
    features of WSL so it covers the current, command line centric view of WSL. As
    a result, it makes sense to equip yourself with a good terminal experience. The
    default Console experience in Windows (used by `cmd.exe`) is lacking in many areas
    and the new Windows Terminal offers lots of benefits. In this chapter, we'll take
    a look at some of these benefits, as well as how to install and get started with
    Windows Terminal.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 微软已经宣布在即将发布的Windows子系统中支持GUI应用程序，但在撰写本书时，即使是早期预览形式也不可用。在本书中，我们选择关注WSL的稳定发布功能，因此它涵盖了WSL的当前以命令行为中心的视图。因此，装备一个良好的终端体验是有意义的。Windows中的默认控制台体验（由`cmd.exe`使用）在许多方面都有所欠缺，而新的Windows终端提供了许多好处。在本章中，我们将介绍其中一些好处，以及如何安装和开始使用Windows终端。
- en: 'In this chapter, we''re going to cover the following main topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主要主题：
- en: Introducing Windows Terminal
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍Windows终端
- en: Installing Windows Terminal
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装Windows终端
- en: Using Windows Terminal
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Windows终端
- en: Configuring Windows Terminal
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置Windows终端
- en: Introducing Windows Terminal
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍Windows终端
- en: 'Windows Terminal is a replacement terminal experience for Windows. If you''re
    used to running command-line applications on Windows, you are likely to be familiar
    with the previous Windows Console experience that you see when you run PowerShell
    or `cmd.exe` (shown in the following figure):'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Windows终端是Windows的替代终端体验。如果您习惯在Windows上运行命令行应用程序，您可能熟悉在运行PowerShell或`cmd.exe`时看到的以前的Windows控制台体验（如下图所示）：
- en: '![Figure 3.1 – A screenshot showing the cmd.exe user experience'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.1 - 显示cmd.exe用户体验的屏幕截图'
- en: '](img/Figure_3.1_B16412.jpg)'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_3.1_B16412.jpg)'
- en: Figure 3.1 – A screenshot showing the cmd.exe user experience
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.1 - 显示cmd.exe用户体验的屏幕截图
- en: Windows Console has a long history spanning back through the Windows NT and
    Windows 2000 era, and back to Windows 3.x and 95/98! During this period, many,
    many Windows users have created scripts and tools that depend on the behavior
    of the Windows Console. The Windows Console team managed to make some good improvements
    to the experience (for example, *Ctrl* + mouse wheel scrolling to zoom the text,
    and improved handling of ANSI/VT control sequences emitted by many Linux and UNIX
    command-line apps and shells) but were ultimately limited in what they could achieve
    without breaking backward compatibility.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: Windows控制台有着悠久的历史，可以追溯到Windows NT和Windows 2000时代，甚至可以追溯到Windows 3.x和95/98时代！在此期间，许多Windows用户创建了依赖于Windows控制台行为的脚本和工具。Windows控制台团队设法改进了体验（例如，*Ctrl*
    +鼠标滚轮滚动以缩放文本，并改进了许多Linux和UNIX命令行应用程序和shell发出的ANSI/VT控制序列的处理），但在不破坏向后兼容性的情况下，他们最终受到了一些限制。
- en: The Windows Console team have spent time refactoring the Console's code to enable
    other terminal experiences (such as the new Windows Terminal) to be built on top
    of it.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Windows控制台团队花费了时间重构控制台的代码，以使其他终端体验（如新的Windows终端）能够在其之上构建。
- en: 'The new Windows Terminal offers numerous improvements that make it a great
    terminal experience for both Windows console-based applications and Linux shell
    applications. With Windows Terminal, you get richer support for customizing the
    look and feel of the terminal and control over how key bindings are configured.
    You also get the ability to have multiple tabs in the terminal just as you would
    have multiple tabs in your web browser, as shown in the following figure:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 新的Windows终端提供了许多改进，使其成为Windows控制台应用程序和Linux shell应用程序的终端体验更好。通过Windows终端，您可以更丰富地支持自定义终端的外观和感觉，并控制键绑定的配置。您还可以在终端中拥有多个选项卡，就像在Web浏览器中拥有多个选项卡一样，如下图所示：
- en: '![Figure 3.2 – A screenshot showing multiple tabs in Windows Terminal'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.2 - 显示Windows终端中多个选项卡的屏幕截图'
- en: '](img/Figure_3.2_B16412.jpg)'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_3.2_B16412.jpg)'
- en: Figure 3.2 – A screenshot showing multiple tabs in Windows Terminal
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.2 - 显示Windows终端中多个选项卡的屏幕截图
- en: 'As well as multiple tabs per window, Windows Terminal also supports splitting
    a tab into multiple panes. Unlike tabs, where only a single tab is visible at
    a time, with panes you can subdivide a tab into multiple parts. *Figure 3.3* shows
    Windows Terminal with multiple panes, mixing Bash running in WSL2 and PowerShell
    running in Windows:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 除了每个窗口有多个选项卡外，Windows终端还支持将选项卡分割为多个窗格。与选项卡不同，只有一个选项卡可见，而窗格可以将选项卡细分为多个部分。*图3.3*显示了Windows终端中具有多个窗格的情况，其中混合了在WSL2中运行的Bash和在Windows中运行的PowerShell：
- en: '![Figure 3.3 – A screenshot showing multiple panes in Windows Terminal'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.3 - 显示Windows终端中多个窗格的屏幕截图'
- en: '](img/Figure_3.3_B16412.jpg)'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_3.3_B16412.jpg)'
- en: Figure 3.3 – A screenshot showing multiple panes in Windows Terminal
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.3 - 显示Windows终端中多个窗格的屏幕截图
- en: As you can see from the preceding screenshot, the Windows Terminal experience
    has improved considerably compared to the default console experience.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 从上述屏幕截图中可以看出，与默认控制台体验相比，Windows终端体验有了很大的改进。
- en: You'll learn how to take advantage of its richer features such as panes in [*Chapter
    6*](B16412_06_Final_JC_ePub.xhtml#_idTextAnchor069), *Getting More from Windows
    Terminal*, but now that you've got a flavor of what Windows Terminal is, let's
    get it installed!
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 您将学习如何利用其更丰富的功能，例如[*第6章*](B16412_06_Final_JC_ePub.xhtml#_idTextAnchor069)中的窗格，*从Windows终端获取更多信息*，但现在您已经了解了Windows终端的特点，让我们开始安装吧！
- en: Installing Windows Terminal
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Windows终端
- en: Windows Terminal is (at the time of writing) still being actively worked on,
    and it lives on GitHub at [https://github.com/microsoft/terminal](https://github.com/microsoft/terminal).
    If you want to run the absolute latest code (or are interested in contributing
    features), then the docs on GitHub will take you through the steps needed to build
    the code. (The GitHub repo is also a great place to raise issues and feature requests.)
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: Windows终端（截至撰写本文时）仍在积极开发中，它位于GitHub上的[https://github.com/microsoft/terminal](https://github.com/microsoft/terminal)。如果您想运行最新的代码（或有兴趣贡献功能），那么GitHub上的文档将引导您完成构建代码所需的步骤。（GitHub存储库也是提出问题和功能请求的好地方。）
- en: 'The more common way to install Windows Terminal is via the Windows Store, which
    will install the application and give you an easy way to keep it updated. You
    can either search for `Windows Terminal` in the Store app (as shown in the following
    figure) or use the quick link at [https://aka.ms/terminal](https://aka.ms/terminal):'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 安装Windows终端的更常见的方法是通过Windows Store，它将安装应用程序并为您提供一种轻松的方式来保持更新。您可以在商店应用程序中搜索“Windows终端”（如下图所示），或使用快速链接[https://aka.ms/terminal](https://aka.ms/terminal)：
- en: '![Figure 3.4 – A screenshot of the Windows Store app showing Windows Terminal'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.4-显示Windows Store应用程序的屏幕截图，显示Windows终端'
- en: '](img/Figure_3.4_B16412.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_3.4_B16412.jpg)'
- en: Figure 3.4 – A screenshot of the Windows Store app showing Windows Terminal
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.4-显示Windows Store应用程序的屏幕截图，显示Windows终端
- en: If you are interested in testing out features early (and don't mind the potential
    occasional instability), then you might be interested in Windows Terminal Preview.
    This is also available in the Store app (you may have noticed it was shown in
    the previous figure) or via the quick link [https://aka.ms/terminal-preview](https://aka.ms/terminal-preview).
    The preview version and the main version can be installed and run side by side.
    If you are interested in the roadmap for Windows Terminal, that can be found in
    the docs on GitHub at [https://github.com/microsoft/terminal/blob/master/doc/terminal-v2-roadmap.md](https://github.com/microsoft/terminal/blob/master/doc/terminal-v2-roadmap.md).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您有兴趣提前测试功能（并且不介意潜在的偶尔不稳定），那么您可能会对Windows终端预览感兴趣。这也可以在商店应用程序中找到（您可能已经注意到它在前面的图中显示），或通过快速链接[https://aka.ms/terminal-preview](https://aka.ms/terminal-preview)获得。预览版本和主版本可以并行安装和运行。如果您对Windows终端的路线图感兴趣，可以在GitHub上的文档中找到[https://github.com/microsoft/terminal/blob/master/doc/terminal-v2-roadmap.md](https://github.com/microsoft/terminal/blob/master/doc/terminal-v2-roadmap.md)。
- en: Now that you have Windows Terminal installed, let's take a tour through some
    of the features.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经安装了Windows终端，让我们来了解一些功能。
- en: Using Windows Terminal
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Windows终端
- en: 'When you run Windows Terminal, it will launch your default profile. Profiles
    are a way of specifying what shell should be run in an instance of the terminal,
    for example, PowerShell or Bash. Click on the **+** in the title bar to create
    a new tab with another instance of your default profile, or you can click the
    down arrow to choose which profile you want to run, as shown in the following
    figure:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 当您运行Windows终端时，它将启动您的默认配置文件。配置文件是指定在终端实例中运行哪个shell的一种方式，例如PowerShell或Bash。单击标题栏中的**+**以使用默认配置文件创建一个新选项卡的另一个实例，或者您可以单击向下箭头选择要运行的配置文件，如下图所示：
- en: '![Figure 3.5 – A screenshot showing the profile dropdown for creating a new
    tab'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.5-显示用于创建新选项卡的配置文件下拉菜单的屏幕截图'
- en: '](img/Figure_3.5_B16412.jpg)'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_3.5_B16412.jpg)'
- en: Figure 3.5 – A screenshot showing the profile dropdown for creating a new tab
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.5-显示用于创建新选项卡的配置文件下拉菜单的屏幕截图
- en: The previous figure shows a range of options for launching a new terminal tab,
    and each of these options is referred to as a profile. The profiles shown were
    automatically generated by Windows Terminal – it detected what was installed on
    my machine and created the list of dynamic profiles. Better still, if I install
    a new WSL distro after Windows Terminal is installed, it will be automatically
    added to your list of available profiles! We'll take a quick look at configuring
    your profiles later in this chapter, but first, let's look at some handy keyboard
    shortcuts for Windows Terminal.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的图显示了启动新终端选项卡的一系列选项，每个选项都被称为一个配置文件。显示的配置文件是由Windows终端自动生成的-它检测到我机器上安装了什么，并创建了动态配置文件列表。更好的是，如果我在安装Windows终端之后安装了新的WSL发行版，它将自动添加到可用配置文件列表中！我们稍后将快速查看如何配置您的配置文件，但首先，让我们看一些Windows终端的方便键盘快捷键。
- en: Learning handy keyboard shortcuts
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 学习方便的键盘快捷键
- en: Whether you are a keyboard shortcut fan or primarily a mouse user, it doesn't
    hurt to know a couple of keyboard shortcuts, especially for common scenarios in
    Windows Terminal, so this section lists the most common keyboard shortcuts.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 无论您是键盘快捷键的粉丝还是主要使用鼠标的用户，了解一些键盘快捷键都是有益的，尤其是对于Windows终端中的常见场景，因此本节列出了最常见的键盘快捷键。
- en: 'You just saw how you can use the **+** and the down arrow in the Windows Terminal
    title bar to start a new tab with the default profile or to pick the profile to
    launch. With the keyboard, *Ctrl* + *Shift* + *T* can be used to start a new instance
    of the default profile. To show the profile picker, you can use *Ctrl* + *Shift*
    + spacebar, but if you look at the screenshot in *Figure 3.5*, you can see that
    the first nine profiles actually get their own shortcut keys: *Ctrl* + *Shift*
    + *1* launches the first profile, *Ctrl* + *Shift* + *2* launches the second,
    and so on.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 您刚刚看到了如何使用Windows终端标题栏中的**+**和向下箭头启动具有默认配置文件的新选项卡或选择要启动的配置文件。使用键盘，可以使用*Ctrl*
    + *Shift* + *T*启动默认配置文件的新实例。要显示配置文件选择器，可以使用*Ctrl* + *Shift* +空格键，但是如果您查看*图3.5*中的屏幕截图，您会看到前九个配置文件实际上有自己的快捷键：*Ctrl*
    + *Shift* + *1*启动第一个配置文件，*Ctrl* + *Shift* + *2*启动第二个配置文件，依此类推。
- en: When you have multiple tabs open in Windows Terminal, you can use *Ctrl* + *Tab*
    to navigate forward through the tabs and *Ctrl* + *Shift* + *Tab* to navigate
    backward (this is the same as most tabbed browsers). If you want to navigate to
    a specific tab, you can use *Ctrl* + *Alt* + *<n>*, where *<n>* is the position
    of the tab you want to navigate to, for example, *Ctrl* + *Alt* + *3* to navigate
    to the third tab. Finally, you can use *Ctrl* + *Shift* + *W* to close a tab.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 当您在Windows终端中打开多个标签页时，您可以使用*Ctrl* + *Tab*向前导航标签页，使用*Ctrl* + *Shift* + *Tab*向后导航（这与大多数带有标签的浏览器相同）。如果您想导航到特定的标签页，可以使用*Ctrl*
    + *Alt* + *<n>*，其中*<n>*是您要导航到的标签页的位置，例如，*Ctrl* + *Alt* + *3*导航到第三个标签页。最后，您可以使用*Ctrl*
    + *Shift* + *W*关闭标签页。
- en: Using the keyboard can be a quick way to manage tabs in Windows Terminal. If
    Windows Terminal detects a lot of profiles, you might want to control their order
    to put the ones you use most frequently at the top for easy access (and to make
    sure they grab the shortcut keys). We'll look at this, and some other configuration
    options, in the next section.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 使用键盘可以快速管理Windows终端中的标签页。如果Windows终端检测到很多配置文件，您可能希望控制它们的顺序，以便将您最常使用的配置文件放在顶部以便轻松访问（并确保它们获取快捷键）。我们将在下一节中看看这个以及其他一些配置选项。
- en: Configuring Windows Terminal
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置Windows终端
- en: The settings for Windows Terminal are all stored in a `JSON` file tucked away
    in your Windows profile. To access the settings, you can click on the down arrow
    to select a profile to launch and then choose `settings.json` in the default editor
    for `JSON` files for your system.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: Windows终端的所有设置都存储在您的Windows配置文件中的一个`JSON`文件中。要访问设置，您可以单击向下箭头选择要启动的配置文件，然后选择系统中`JSON`文件的默认编辑器中的`settings.json`。
- en: 'The `settings` file is broken down into a few sections:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '`settings`文件分为几个部分：'
- en: '`JSON` file'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`JSON`文件'
- en: '**Per-profile settings** that define and configure each profile independently'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**每个配置文件的设置**，独立定义和配置每个配置文件'
- en: '**Schemes** that specify color schemes that profiles can use'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 指定配置文件可以使用的颜色方案的**方案**
- en: '**Key bindings** that let you customize the keyboard shortcuts for performing
    tasks in Windows Terminal'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**键绑定**，允许您自定义在Windows终端中执行任务的键盘快捷键'
- en: There are a lot of options that can be tweaked in the settings for Windows Terminal
    and as it is continually being updated, new options appear over time! A full description
    of all of the settings is left to the documentation ([https://docs.microsoft.com/en-us/windows/terminal/customize-settings/global-settings](https://docs.microsoft.com/en-us/windows/terminal/customize-settings/global-settings))
    and we will instead focus on some of the customizations you might want to make
    and how to achieve them using the `settings` file.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在Windows终端的设置中，有很多可以调整的选项，并且随着不断更新，会出现新的选项！所有设置的完整描述留给文档（[https://docs.microsoft.com/en-us/windows/terminal/customize-settings/global-settings](https://docs.microsoft.com/en-us/windows/terminal/customize-settings/global-settings)），我们将重点关注一些可能要进行的自定义以及如何使用`settings`文件实现它们。
- en: Let's get started by looking at some customizations you might want to make to
    your profiles in Windows Terminal.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始看一些您可能想要对Windows终端中的配置文件进行的自定义。
- en: Customizing profiles
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自定义配置文件
- en: The `profiles` section of the `settings` file controls what profiles Windows
    Terminal will display when you click the new tab dropdown as well as allowing
    you to configure various display options for the profile. You can also choose
    which profile is launched by default, as you will see next.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '`settings`文件的`profiles`部分控制Windows终端在单击新标签下拉菜单时显示的配置文件，并允许您配置配置文件的各种显示选项。您还可以选择默认启动的配置文件，如下所示。'
- en: Changing the default profile
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更改默认配置文件
- en: One of the first changes you might wish to make is to control which profile
    is launched by default when you start Windows Terminal so that the profile you
    use most frequently is the one launched automatically.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能希望首先进行的更改之一是控制在启动Windows终端时默认启动哪个配置文件，以便自动启动您最常使用的配置文件。
- en: 'The setting for this is the `defaultProfile` value in the global settings as
    shown in the following example (the global settings are the values at the top
    level of the `settings` file):'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 此设置在全局设置中的`defaultProfile`值中设置，如下例所示（全局设置是`settings`文件顶层的值）：
- en: '[PRE0]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The value for the `defaultProfile` setting allows you to use the `name` (or
    the associated `guid`) property for the profile you wish to set as the default
    profile. Be sure to enter the name exactly as specified in the `profiles` section.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '`defaultProfile`设置的值允许您使用要设置为默认配置文件的配置文件的`name`（或关联的`guid`）属性。请确保输入与`profiles`部分中指定的名称完全相同。'
- en: Next, you will look at changing the order of the Windows Terminal profiles.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，您将查看如何更改Windows终端配置文件的顺序。
- en: Changing the order of the profiles
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更改配置文件的顺序
- en: 'Another productivity change you may wish you make is to order the profiles
    so that the most commonly used ones are at the top for easy access. If you use
    the keyboard shortcuts to launch new tabs, then the order determines what the
    shortcut key is, so order has an extra importance here. The following figure shows
    the initial order on my machine as shown in the settings in the previous section:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能希望进行的另一个提高生产力的更改是按照最常用的配置文件顺序排列，以便轻松访问顶部。如果您使用键盘快捷键启动新标签页，则顺序决定了快捷键是什么，因此在这里顺序具有额外的重要性。以下图显示了在我的机器上的初始顺序，如前一节中的设置所示：
- en: '![Figure 3.6 – A screenshot showing the initial profile order'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.6 - 显示初始配置文件顺序的屏幕截图'
- en: '](img/Figure_3.6_B16412.jpg)'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_3.6_B16412.jpg)'
- en: Figure 3.6 – A screenshot showing the initial profile order
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.6 - 显示初始配置文件顺序的屏幕截图
- en: In the screenshot, you can see that PowerShell is the first listed profile (you
    may also notice that PowerShell is in bold, indicating that it is the default
    profile).
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在屏幕截图中，您可以看到PowerShell是第一个列出的配置文件（您还可以注意到PowerShell以粗体显示，表示它是默认配置文件）。
- en: 'To change the order of the profiles in the UI, we can change the order of the
    entries in the `list` under `profiles` in the `settings` file. The following snippet
    shows the update to the settings from the last section updated to make **Ubuntu-20.04**
    the first item in the list:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 要更改UI中配置文件的顺序，我们可以更改`settings`文件中`profiles`下的`list`中的条目顺序。以下代码片段显示了上一节中的设置更新，使**Ubuntu-20.04**成为列表中的第一项：
- en: '[PRE1]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Once you save the `settings` file, you can return to the dropdown in Windows
    Terminal to see the change in order:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 保存`settings`文件后，您可以返回到Windows终端的下拉菜单中查看顺序的更改：
- en: '![Figure 3.7 – A screenshot showing the updated profile order'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.7 - 显示更新后的配置文件顺序的屏幕截图'
- en: '](img/Figure_3.7_B16412.jpg)'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_3.7_B16412.jpg)'
- en: Figure 3.7 – A screenshot showing the updated profile order
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.7 - 显示更新后的配置文件顺序的屏幕截图
- en: In the preceding screenshot, notice that **Ubuntu-20.04** is at the top of the
    list and now has the **Ctrl+Shift+1** shortcut key. It's also worth noting that
    **PowerShell** is still in bold, indicating that it is still the default profile
    even though it is no longer first in the list.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述屏幕截图中，请注意**Ubuntu-20.04**位于列表顶部，现在具有**Ctrl+Shift+1**的快捷键。值得注意的是，**PowerShell**仍然以粗体显示，表示它仍然是默认配置文件，即使它不再是列表中的第一个。
- en: 'One important thing to note is that each item in the list needs to be separated
    with a comma and there must not be a comma after the last list item. If you are
    changing the item at the end of the list, this can easily trip you up. Windows
    Terminal might display a warning, however (as shown in the following figure):'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的一点是，列表中的每个项目都需要用逗号分隔，并且最后一个列表项后面不能有逗号。如果您更改列表末尾的项目，这可能会让您感到困惑。然而，Windows终端可能会显示警告，如下图所示：
- en: '![Figure 3.8 – A screenshot showing an example error loading the settings'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.8 - 显示加载设置时出现错误的示例屏幕截图'
- en: '](img/Figure_3.8_B16412.jpg)'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_3.8_B16412.jpg)'
- en: Figure 3.8 – A screenshot showing an example error loading the settings
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.8 - 显示加载设置时出现错误的示例屏幕截图
- en: If you see the error in the preceding screenshot, don't worry. When Windows
    Terminal is running, it reloads the settings whenever the file is changed. The
    error points out which part has the error in the `settings` file. Windows Terminal
    will still reload your settings when you dismiss the error.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在上述屏幕截图中看到错误，请不要担心。当Windows终端运行时，它会在文件更改时重新加载设置。错误指出了`settings`文件中有错误的部分。当您关闭错误时，Windows终端仍会重新加载您的设置。
- en: As well as controlling the order in which profiles appear in the list, you can
    change how they appear in the list, as you will see now.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 除了控制配置文件在列表中显示的顺序，您还可以更改它们在列表中的显示方式，如下所示。
- en: Renaming profiles and changing icons
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 重命名配置文件和更改图标
- en: 'Windows Terminal does a good job of pre-populating profiles, but you may wish
    to rename the profiles. To do this, change the value of the `name` property for
    the relevant profile as shown in the following snippet. As before, once the file
    is saved, Windows Terminal will reload it and apply the changes:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: Windows终端在预填充配置文件方面做得很好，但您可能希望重命名配置文件。要做到这一点，请根据以下代码片段所示，更改相关配置文件的`name`属性的值。与之前一样，一旦保存文件，Windows终端将重新加载它并应用更改：
- en: '[PRE2]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'You can even take this a step further with the Windows emoji support. When
    you are changing the name for a profile, press *Win* + *.* to bring up the emoji
    picker and then continue typing to filter the emoji list. For example, the following
    figure shows filtering to cats:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 您甚至可以通过Windows表情符号支持进一步操作。当您更改配置文件的名称时，按下*Win* + *.*以打开表情符号选择器，然后继续输入以过滤表情符号列表。例如，下图显示了筛选到猫的情况：
- en: '![Figure 3.9 – A screenshot showing the use of the emoji picker'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.9 - 显示使用表情选择器的屏幕截图'
- en: '](img/Figure_3.9_B16412.jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_3.9_B16412.jpg)'
- en: Figure 3.9 – A screenshot showing the use of the emoji picker
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.9 - 显示使用表情选择器的屏幕截图
- en: 'Selecting an emoji from the list will insert it into the editor as shown in
    the following screenshot:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 从列表中选择一个表情符号将其插入到编辑器中，如下图所示：
- en: '![Figure 3.10 – A screenshot showing the completed PowerShell profile'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.10 - 显示已完成的PowerShell配置文件的屏幕截图'
- en: '](img/Figure_3.10_B16412.jpg)'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_3.10_B16412.jpg)'
- en: Figure 3.10 – A screenshot showing the completed PowerShell profile
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.10 - 显示已完成的PowerShell配置文件的屏幕截图
- en: In this screenshot, you can see the use of an emoji in the `name` property.
    As well as changing the name, the settings allow you to customize the icon shown
    next to a profile in the list. This is done by adding an icon property to a profile
    that gives the path to the icon you wish to use, as shown in the previous screenshot.
    This icon can be a `PNG`, `JPG`, `ICO`, or other file type – I tend to prefer
    `PNG` as it is easy to work with in a range of editors and allows transparent
    sections of the image.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在此屏幕截图中，您可以看到在`name`属性中使用了一个表情符号。除了更改名称外，设置还允许您自定义列表中配置文件旁边显示的图标。通过向配置文件添加一个图标属性来实现，该属性给出了您希望使用的图标的路径，如上一个屏幕截图所示。该图标可以是`PNG`，`JPG`，`ICO`或其他文件类型
    - 我倾向于使用`PNG`，因为它在各种编辑器中易于使用，并允许图像的透明部分。
- en: It is worth noting that the path needs to have backslashes (`\`) escaped as
    double-backslashes (`\\`). Conveniently, you can also use environment variables
    in the path. This allows you to put your icons in OneDrive (or other file syncing
    platforms) and share them across multiple machines (or simply back them up for
    the future). To use environment variables, enclose them in percent signs as shown
    with `%OneDrive%` in the preceding snippet.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，路径需要将反斜杠（`\`）转义为双反斜杠（`\\`）。方便的是，您还可以在路径中使用环境变量。这使您可以将图标放在OneDrive（或其他文件同步平台）中，并在多台机器上共享它们（或仅备份以供将来使用）。要使用环境变量，请将其用百分号括起来，如上面的代码片段中所示的`%OneDrive%`。
- en: 'The result of these customizations (icons and text) is shown in the following
    figure:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 这些自定义（图标和文本）的结果如下图所示：
- en: '![Figure 3.11 – A screenshot showing customized icons and text (including emoji!)'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.11 - 显示自定义图标和文本（包括表情符号！）'
- en: '](img/Figure_3.11_B16412.jpg)'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_3.11_B16412.jpg)'
- en: Figure 3.11 – A screenshot showing customized icons and text (including emoji!)
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.11 - 显示自定义图标和文本（包括表情符号！）的屏幕截图
- en: At this point, you've seen how to control the items in the profile list and
    how they are displayed. The final thing to look at is how to remove items from
    the list.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，您已经了解了如何控制配置文件列表中的项目以及它们的显示方式。最后要看的是如何从列表中删除项目。
- en: Removing profiles
  id: totrans-97
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 删除配置文件
- en: 'If you''ve read the preceding sections, you might think that removing a profile
    is a simple matter of deleting the entry from the list. However, if the profile
    is one that is dynamically generated, then Windows Terminal will add the profile
    back in (at the bottom of the list) when it next loads the settings! Whilst this
    may seem a little odd, it is a side-effect of having Windows Terminal automatically
    detect new profiles such as new WSL Distros even if you install them after installing
    Windows Terminal. Instead, to prevent a profile showing in the list, you can set
    the hidden property as shown in the following snippet:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您已经阅读了前面的部分，您可能会认为删除配置文件只需从列表中删除条目即可。然而，如果配置文件是动态生成的，则在下次加载设置时，Windows Terminal将重新添加该配置文件（在列表底部）！虽然这可能看起来有点奇怪，但这是Windows
    Terminal自动检测新配置文件（例如新的WSL Distros）的副作用，即使您在安装Windows Terminal之后安装它们。相反，要防止配置文件显示在列表中，您可以设置隐藏属性，如下面的代码片段所示：
- en: '[PRE3]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Now that we've explored how to control the profiles in Windows Terminal, let's
    take a look at how to customize its appearance.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经探索了如何控制Windows Terminal中的配置文件，让我们来看看如何自定义其外观。
- en: Changing the appearance of Windows Terminal
  id: totrans-101
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更改Windows Terminal的外观
- en: Windows Terminal gives you a number of ways to customize its appearance and
    your motivation for applying these may be purely aesthetic or may be to make the
    terminal easier to use by increasing the font size, increasing the contrast, or
    using a specific font to make the content easier to read (for example, with the
    **OpenDyslexic** font available at [https://www.opendyslexic.org/](https://www.opendyslexic.org/)).
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: Windows Terminal提供了多种方式来自定义其外观，您进行这些操作的动机可能纯粹是为了美观，也可能是为了通过增大字体大小、增加对比度或使用特定字体使内容更易读（例如，在[https://www.opendyslexic.org/](https://www.opendyslexic.org/)上提供的**OpenDyslexic**字体）来使终端更易于使用。
- en: Changing fonts
  id: totrans-103
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更改字体
- en: The default font for Windows Terminal is a new font face called `!=` are combined
    when rendered as `≠`. If you prefer not to have ligatures, **Cascadia Mono** is
    the same font but with ligatures removed.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: Windows Terminal的默认字体是一种名为`!=`的新字体，当呈现为`≠`时，这两个字符会合并在一起。如果您不想使用连字，则**Cascadia
    Mono**是相同的字体，但不包含连字。
- en: 'The font for each profile can be changed independently by setting the `fontFace`
    and `fontSize` properties in the profile as shown in the following example:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过在配置文件中设置`fontFace`和`fontSize`属性来独立更改每个配置文件的字体，如下面的示例所示：
- en: '[PRE4]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'If you want to customize the font settings for all profiles, you can add the
    `fontFace` and `fontSize` properties in the `defaults` section, as shown in the
    following snippet:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想为所有配置文件自定义字体设置，可以在`defaults`部分中添加`fontFace`和`fontSize`属性，如下面的代码片段所示：
- en: '[PRE5]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Settings specified in the `defaults` section apply to all profiles, unless the
    profile overrides it. Now that we've seen how to change the fonts, let's look
    at how to control the color schemes.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 在`defaults`部分指定的设置适用于所有配置文件，除非配置文件覆盖它。现在我们已经了解了如何更改字体，让我们来看看如何控制颜色方案。
- en: Changing colors
  id: totrans-110
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更改颜色
- en: Windows Terminal allows you to customize the color scheme for profiles in a
    couple of ways.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: Windows Terminal允许您以几种方式自定义配置文件的颜色方案。
- en: 'The simplest customization is using the `foreground`, `background`, and `cursorColor`
    properties in a profile. These values are specified as RGB values in the form
    of `#rgb` or `##rrggbb` (for example, `#FF0000` for bright red). An example of
    this is shown in the following snippet:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 最简单的自定义是在配置文件中使用`foreground`、`background`和`cursorColor`属性。这些值以`#rgb`或`#rrggbb`的形式指定为RGB值（例如，`#FF0000`表示亮红色）。以下是示例代码片段：
- en: '[PRE6]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'For more fine-grained control over colors, you can create a color scheme under
    the `schemes` section in the `settings` file. Details on this can be found at
    [https://docs.microsoft.com/en-us/windows/terminal/customize-settings/color-schemes](https://docs.microsoft.com/en-us/windows/terminal/customize-settings/color-schemes),
    including a list of the built-in color schemes. As you can see in the following
    example, a scheme has a name and a set of color specifications in `#rgb` or `#rrggbb`
    form:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 要更精细地控制颜色，您可以在`settings`文件的`schemes`部分下创建一个颜色方案。有关详细信息，请参阅[https://docs.microsoft.com/en-us/windows/terminal/customize-settings/color-schemes](https://docs.microsoft.com/en-us/windows/terminal/customize-settings/color-schemes)，其中包括内置颜色方案的列表。如下面的示例所示，方案具有名称和一组以`#rgb`或`#rrggbb`形式的颜色规范：
- en: '[PRE7]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Once you have defined your color scheme, you need to update the profile settings
    to use it. You can specify this using the `colorScheme` property and either apply
    this at the individual profile level or apply it to all profiles using the `default`
    section as you saw earlier in the chapter. An example of applying this to an individual
    profile is shown here:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 定义颜色方案后，您需要更新配置文件设置以使用它。您可以使用`colorScheme`属性指定这一点，并将其应用于单个配置文件级别，或者使用前面在本章中看到的`default`部分将其应用于所有配置文件。以下是将其应用于单个配置文件的示例：
- en: '[PRE8]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Once you save these changes, Windows Terminal will apply the color scheme you
    have defined to any tabs using that profile.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 保存这些更改后，Windows Terminal将将您定义的颜色方案应用于使用该配置文件的任何选项卡。
- en: With the options you have seen here, you can customize which profile is launched
    by default as well as in what order (and how) the profiles are displayed in the
    profile list. You've seen various options that allow you to customize how a profile
    displays when it is running, and this understanding will make it easy for you
    to apply other settings such as setting a background image or changing the transparency
    for a terminal profile. Full details can be found in the Windows Terminal documentation
    at [https://docs.microsoft.com/en-us/windows/terminal/customize-settings/profile-settings](https://docs.microsoft.com/en-us/windows/terminal/customize-settings/profile-settings).
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这里展示的选项，您可以自定义默认启动的配置文件以及配置文件在配置文件列表中的显示顺序和方式。您已经看到了各种选项，可以让您自定义配置文件在运行时的显示方式，这将使您能够轻松应用其他设置，如设置背景图像或更改终端配置文件的透明度。完整的详细信息可以在Windows终端文档中找到：[https://docs.microsoft.com/en-us/windows/terminal/customize-settings/profile-settings](https://docs.microsoft.com/en-us/windows/terminal/customize-settings/profile-settings)。
- en: Summary
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, you have learned about Windows Terminal and how it improves
    the previous terminal experience with greater control over the display and features
    such as support for multiple tabs. When working with WSL, having a terminal that
    automatically detects new Linux distros that you install is a nice benefit, too!
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您已经了解了Windows终端以及它如何通过更好地控制显示和支持多个选项卡等功能来改进以前的终端体验。在使用WSL时，自动检测您安装的新Linux发行版的终端也是一个不错的好处！
- en: You've seen how to install and use Windows Terminal, as well as how to customize
    it to fit your preferences so that you can easily read the text, and define color
    schemes to easily know which terminal profiles are running. By customizing the
    default profile and the profile orders, you can ensure that you have easy access
    to the profiles you use most, helping you stay productive. In the next chapter,
    we will start using Windows Terminal as we explore how to interact with a Linux
    distro from Windows.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 您已经了解了如何安装和使用Windows终端，以及如何根据自己的喜好进行自定义，以便您可以轻松阅读文本，并定义颜色方案以便轻松知道哪些终端配置文件正在运行。通过自定义默认配置文件和配置文件顺序，您可以确保轻松访问您最常使用的配置文件，帮助您保持高效。在下一章中，我们将开始使用Windows终端，探索如何在Windows上与Linux发行版进行交互。
