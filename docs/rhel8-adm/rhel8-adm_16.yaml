- en: '*Chapter 13*: Flexible Storage Management with LVM'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第13章*：使用LVM进行灵活的存储管理'
- en: Managing local storage can be done in a more flexible manner than in [*Chapter
    12*](B16799_12_Final_SK_ePub.xhtml#_idTextAnchor160), *Managing Local Storage
    and Filesystems*, by using the **Logical Volume Manager** (**LVM**). LVM allows
    you to assign more than one disk to the same logical volume (the equivalent in
    LVM to a partition), have data replicated across different disks, and make snapshots
    of a volume.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用**逻辑卷管理器**（**LVM**），可以以比[*第12章*](B16799_12_Final_SK_ePub.xhtml#_idTextAnchor160)中更灵活的方式来管理本地存储和文件系统。LVM允许您将多个磁盘分配给同一个逻辑卷（在LVM中相当于分区），在不同磁盘之间复制数据，并对卷进行快照。
- en: 'In this chapter, we will review the basic usage of LVM and the main objects
    that are used to manage storage. We will learn how to prepare disks to be used
    with LVM, and then aggregate them into a pool, thereby not only increasing the
    available space, but also enabling you to use it consistently. We will also learn
    how to distribute that aggregated disk space into partition-like chunks that can
    easily be extended if necessary. To do so, we will go through the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将回顾LVM的基本用法和用于管理存储的主要对象。我们将学习如何准备磁盘以便与LVM一起使用，然后将它们聚合到一个池中，从而不仅增加了可用空间，还使您能够一致地使用它。我们还将学习如何将聚合的磁盘空间分配到类似分区的块中，如果需要的话可以很容易地扩展。为此，我们将学习以下主题：
- en: Understanding LVM
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解LVM
- en: Creating, moving, and removing physical volumes
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建、移动和删除物理卷
- en: Combining physical volumes into volume groups
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将物理卷合并到卷组中
- en: Creating and extending logical volumes
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建和扩展逻辑卷
- en: Adding new disks to a volume group and extending a logical volume
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向卷组添加新磁盘并扩展逻辑卷
- en: Removing logical volumes, volume groups, and physical volumes
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 删除逻辑卷、卷组和物理卷
- en: Reviewing LVM commands
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 审查LVM命令
- en: Technical requirements
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'For this chapter, we will add two more disks to the machine we are working
    with to be able to follow the examples mentioned in this chapter. These are your
    options:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们将向我们正在使用的机器添加两个磁盘，以便能够按照本章中提到的示例进行操作。以下是您的选择：
- en: If you are using a physical machine, you may add a couple of USB drives.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您正在使用物理机，您可以添加一对USB驱动器。
- en: If you are using a local virtual machine, you will need to add two new virtual
    drives.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您正在使用本地虚拟机，您需要添加两个新的虚拟驱动器。
- en: If you are using a cloud instance, you can add two new block devices to it.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您正在使用云实例，可以向其添加两个新的块设备。
- en: 'As an example, let''s see how these disks are added to our virtual machine
    in Linux. First, we power off the virtual machine we installed in [*Chapter 1*](B16799_01_Final_SK_ePub.xhtml#_idTextAnchor014),
    *Installing RHEL8*, called `rhel8`. Then we open the characteristics page of the
    virtual machine. There we find the **Add Hardware** button:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，让我们看看如何在Linux中将这些磁盘添加到我们的虚拟机中。首先，我们关闭了在[*第1章*](B16799_01_Final_SK_ePub.xhtml#_idTextAnchor014)中安装的虚拟机，*安装RHEL8*，名为`rhel8`。然后我们打开虚拟机的特性页面。在那里我们找到了**添加硬件**按钮：
- en: '![Figure 13.1 – Editing virtual machine properties'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.1-编辑虚拟机属性'
- en: '](img/B16799_13_001.jpg)'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_13_001.jpg)'
- en: Figure 13.1 – Editing virtual machine properties
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.1-编辑虚拟机属性
- en: Tip
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: Depending on the virtualization platform you are using, there are different
    paths to reach the virtual machine characteristics. However, it's very common
    that there is an option directly accessible from the virtual machine menu.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 根据您使用的虚拟化平台，到达虚拟机特性的路径可能不同。但是，很常见的是从虚拟机菜单直接访问选项。
- en: 'Clicking on **Add Hardware** will open the dialog in the following screenshot.
    In it, we will select the **Storage** option and specify the size of the virtual
    disk to be created and attached to the virtual machine, in this case, 1 GiB, and
    then click **Finish**:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 单击**添加硬件**将打开以下截图中的对话框。在其中，我们将选择**存储**选项，并指定要创建并附加到虚拟机的虚拟磁盘的大小，本例中为1 GiB，然后单击**完成**：
- en: '![Figure 13.2 – Adding a disk to a virtual machine'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.2-向虚拟机添加磁盘'
- en: '](img/B16799_13_002.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_13_002.jpg)'
- en: Figure 13.2 – Adding a disk to a virtual machine
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.2-向虚拟机添加磁盘
- en: 'We will repeat this procedure twice to add two disks. The end result will look
    like this:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将重复此过程两次以添加两个磁盘。最终结果将如下所示：
- en: '![Figure 13.3 – Two new disks added to a virtual machine, making a total of
    three'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.3-向虚拟机添加两个新磁盘，总共三个'
- en: '](img/B16799_13_003.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_13_003.jpg)'
- en: Figure 13.3 – Two new disks added to a virtual machine, making a total of three
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.3-向虚拟机添加两个新磁盘，总共三个
- en: 'We will now power on the virtual machine and log in to it to check the availability
    of new devices:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将打开虚拟机并登录以检查新设备的可用性：
- en: '[PRE0]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: We can see that the new 1 GiB disks, `vdb` and `vdc`, are available. Now that
    we have a system disk, where we installed the RHEL 8 operating system and two
    more disks to work with, we are ready to continue with this chapter.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到新的1 GiB磁盘`vdb`和`vdc`是可用的。现在我们有一个系统磁盘，我们在其中安装了RHEL 8操作系统，还有两个可以使用的磁盘，我们准备继续进行本章的操作。
- en: Tip
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: The naming of the disk devices in Linux depends on the driver they use. Devices
    attached as SATA or SCSI show as `sd` and a letter, such as `sda` or `sdb`. Devices
    connected with IDE buses use `hd` and a letter, such as `hda` or `hdb`. Devices
    as in the example, which use the VirtIO paravirtualized drivers, use `vd` and
    a letter, for example, `vda` or `vdb`.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在Linux中，磁盘设备的命名取决于它们使用的驱动程序。连接为SATA或SCSI的设备显示为`sd`和一个字母，例如`sda`或`sdb`。连接为IDE总线的设备使用`hd`和一个字母，例如`hda`或`hdb`。例如使用VirtIO虚拟化驱动程序的设备使用`vd`和一个字母，例如`vda`或`vdb`。
- en: Understanding LVM
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解LVM
- en: 'LVM uses three layers to manage the storage devices in our systems. These layers
    are as follows:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: LVM使用三层来管理系统中的存储设备。这些层如下：
- en: '**Physical Volumes** (**PV**): The first layer of LVM . Assigned to the block
    devices directly. A physical volume can be either a partition on a disk, or a
    full raw disk itself.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**物理卷**（**PV**）：LVM的第一层。直接分配给块设备。物理卷可以是磁盘上的分区，也可以是完整的原始磁盘本身。'
- en: '**Volume Groups** (**VG**): The second layer of LVM. It groups the physical
    volumes to aggregate space. This is an intermediate layer and not very visible,
    but its role is very important.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**卷组**（**VG**）：LVM的第二层。它将物理卷组合起来以聚合空间。这是一个中间层，不太显眼，但它的作用非常重要。'
- en: '**Logical Volumes** (**LV**): The third layer of LVM. It distributes the space
    that the volume groups aggregate.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**逻辑卷**（**LV**）：LVM的第三层。它分配了卷组聚合的空间。'
- en: 'Let''s see the example that we want to implement using the two newly added
    disks:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看我们想要使用这两个新添加的磁盘来实现的示例：
- en: '![Figure 13.4 – LVM example using two disks'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.4 – 使用两个磁盘的LVM示例'
- en: '](img/B16799_13_004.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_13_004.jpg)'
- en: Figure 13.4 – LVM example using two disks
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.4 – 使用两个磁盘的LVM示例
- en: 'Let''s explain this example diagram to understand all the layers:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们解释这个例子图表，以理解所有的层：
- en: We have two disks, which, in the diagram, are **Disk1** and **Disk2**.
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们有两个磁盘，在图中分别是**Disk1**和**Disk2**。
- en: '**Disk1** is partitioned into two partitions, **Part1** and **Part2**.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Disk1**被分成了两个分区，**Part1**和**Part2**。'
- en: '**Disk2** is not partitioned.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Disk2**没有分区。'
- en: 'There are three physical volumes. The mission of these is to prepare the disk
    space to be used in LVM. The physical volumes are as follows:'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有三个物理卷。它们的任务是准备磁盘空间以供LVM使用。物理卷如下：
- en: – **PV1**, created on the **Part1** partition of **Disk1**
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '- **PV1**，创建在**Disk1**的**Part1**分区上'
- en: – **PV2**, created on the **Part2** partition of **Disk1**
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '- **PV2**，创建在**Disk1**的**Part2**分区上'
- en: – **PV3**, created directly on **Disk2**
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '- **PV3**，直接创建在**Disk2**上'
- en: One single volume group, **VG1**, aggregates all three physical volumes, **PV1**,
    **PV2**, and **PV3**. Now, all that disk space is consolidated and can be easily
    redistributed.
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个卷组**VG1**，聚合了所有三个物理卷**PV1**、**PV2**和**PV3**。现在，所有的磁盘空间都被整合起来，可以很容易地重新分配。
- en: To distribute the space, there are four logical volumes – **LV1**, **LV2**,
    **LV3**, and **LV4**. Please note that the logical volumes do not use the whole
    disk. This way, if we need to extend a volume or create a snapshot, it will be
    possible.
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为了分配空间，有四个逻辑卷 – **LV1**、**LV2**、**LV3**和**LV4**。请注意，逻辑卷并不使用整个磁盘。这样，如果我们需要扩展一个卷或创建一个快照，都是可能的。
- en: This is a basic description of how the layers are distributed, without diving
    into complex cases such as mirroring, thin provisioning, or snapshot.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这是对层是如何分布的基本描述，而不涉及复杂的情况，比如镜像、薄置备或快照。
- en: As a rule of thumb, we need to understand that PVs are designed to prepare devices
    to be used by LVM, VGs to aggregate PVs, and LVs to distribute the aggregated
    space.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一个经验法则，我们需要理解PVs的设计是为了准备设备供LVM使用，VGs用于聚合PVs，LVs用于分配聚合空间。
- en: It is interesting to see that if we create a VG, we can add an extra disk to
    it, thereby increasing its size without having to stop or reboot the machine.
    Likewise, we can distribute the added space along the LVs that require it without
    having to stop or reboot the machine. This is one of the main reasons why LVM
    is so powerful and recommended for every server, with very few exceptions.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的是，如果我们创建了一个VG，我们可以向其添加额外的磁盘，从而增加其大小，而无需停止或重新启动机器。同样，我们可以将添加的空间分配给需要它的LV，而无需停止或重新启动机器。这是LVM如此强大并且被推荐用于每台服务器的主要原因之一，几乎没有例外。
- en: Now that we know the layers into which LVM is divided, let's begin using them
    to start understanding how they work.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道LVM被分成了几层，让我们开始使用它们来开始理解它们是如何工作的。
- en: Creating, moving, and removing physical volumes
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建、移动和删除物理卷
- en: Having our machine ready with the two new disks, `vdb` and `vdc`, as the *Technical
    requirements* section explains, we can get started on implementing the example
    diagram, as shown in *Figure 13.4*, in our machine.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 根据*技术要求*部分的说明，我们的机器已准备好了两个新磁盘`vdb`和`vdc`，我们可以开始在我们的机器上实现示例图表，就像*图13.4*中所示的那样。
- en: 'The first step is not directly related to LVM, but it is still important to
    continue with the example. This first step involves partitioning the `vdb` disk.
    Let''s take a look at this with the tool to manage partitions, `parted`:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步与LVM没有直接关联，但继续示例仍然很重要。这一步涉及对`vdb`磁盘进行分区。让我们用分区管理工具`parted`来看一下：
- en: '[PRE1]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Important note
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: Your disk device, if you are using a physical machine or a different disk driver,
    may be different. For example, if we were using SATA disks, it would be `/dev/sdb`
    instead of `/dev/vdb`.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 您的磁盘设备，如果您使用的是物理机器或不同的磁盘驱动程序，可能会有所不同。例如，如果我们使用SATA磁盘，它将是`/dev/sdb`而不是`/dev/vdb`。
- en: 'The disk is completely unpartitioned, as we can see in the `unrecognised disk
    label` message. As is explained in [*Chapter 12*](B16799_12_Final_SK_ePub.xhtml#_idTextAnchor160),
    *Managing Local Storage and Filesystems*, there are two types of disk labels that
    we can use; `msdos` (also referred to as `gpt`, the new type that machines with
    a `gpt`, as we will do in this example. The option to be used with `parted` to
    create a new label is `mklabel`:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 磁盘完全未分区，正如我们在`unrecognised disk label`消息中所看到的。正如在[*第12章*](B16799_12_Final_SK_ePub.xhtml#_idTextAnchor160)中所解释的，*管理本地存储和文件系统*，我们可以使用两种类型的磁盘标签；`msdos`（也称为`gpt`，这是一种新类型，适用于带有`gpt`的机器，就像我们在这个例子中所做的那样。用于使用`parted`创建新标签的选项是`mklabel`：
- en: '[PRE2]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Tip
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: To create an `msdos` label, the command would be `parted /dev/vdb mklabel msdos`.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建一个`msdos`标签，命令将是`parted /dev/vdb mklabel msdos`。
- en: 'Now we have a disk with a `gpt` label, but without partitions. Let''s create
    a partition using the `mkpart` option in interactive mode:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有一个带有`gpt`标签的磁盘，但没有分区。让我们使用交互模式中的`mkpart`选项来创建一个分区：
- en: '[PRE3]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Now we can enter the partition name, `mypart0`:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以输入分区名称`mypart0`：
- en: '[PRE4]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'For the next step, specifying the filesystem, we will use `ext2`:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 对于下一步，指定文件系统，我们将使用`ext2`：
- en: '[PRE5]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Now it is time to set the start point. We will use the first sector available,
    which is `2048s`:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是设置起始点的时候了。我们将使用第一个可用的扇区，即`2048s`：
- en: '[PRE6]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Tip
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: The first sector in modern disks is, by definition, `2048s`. This is not provided
    by the tool. We could review other existing disks, when in doubt, by running `parted
    /dev/vda unit s print`.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 现代磁盘中的第一个扇区，根据定义是`2048s`。这不是由工具提供的。当有疑问时，我们可以通过运行`parted /dev/vda unit s print`来查看其他现有磁盘。
- en: 'And then we come to the final step, setting the endpoint, which can be described
    as the size of the partition we want to make:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们来到最后一步，设置终点，也就是我们想要创建的分区的大小：
- en: '[PRE7]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The command is complete with the following warning:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令附带以下警告：
- en: '[PRE8]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'To ensure that the partition table is refreshed in the system, and to allow
    the devices to be generated under `/dev`, we can run the following command:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保分区表在系统中得到刷新，并且允许设备在`/dev`下生成，我们可以运行以下命令：
- en: '[PRE9]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Tip
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: The full command to run in non-interactive mode is `parted /dev/vdb mkpart mypart0
    xfs 2048s 200MB`.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在非交互模式下运行的完整命令是`parted /dev/vdb mkpart mypart0 xfs 2048s 200MB`。
- en: 'We can see the new partition available:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到新的分区可用：
- en: '[PRE10]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'We need to change the partition to be able to host `LVM` physical volumes.
    The `parted` command uses the `set` option to change the partition type. We need
    to specify the number of the partition, which is `1`, and then type `lvm` and
    `on` to activate:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要更改分区以能够托管`LVM`物理卷。`parted`命令使用`set`选项来更改分区类型。我们需要指定分区的编号，即`1`，然后输入`lvm`和`on`来激活：
- en: '[PRE11]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: We see the flag of the partition now set as `lvm`.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到分区的标志现在设置为`lvm`。
- en: 'Let''s add the second partition, `mypart1`:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们添加第二个分区，`mypart1`：
- en: '[PRE12]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Now that we have created two partitions, `/dev/vdb1` (with the name `mypart0`)
    and `/dev/vdb2` (with the name `mypart1`), this is what our storage looks like:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经创建了两个分区，`/dev/vdb1`（名称为`mypart0`）和`/dev/vdb2`（名称为`mypart1`），这就是我们的存储的样子：
- en: '![Figure 13.5 – Partitions created in our two new disks'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.5 - 在我们的两个新磁盘上创建的分区'
- en: '](img/B16799_13_005.jpg)'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_13_005.jpg)'
- en: Figure 13.5 – Partitions created in our two new disks
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.5 - 在我们的两个新磁盘上创建的分区
- en: Tip
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: There is another tool that comes by default in RHEL8 to manage partitions, which
    is `fdisk`. You may want to give it a try to see whether you find it easier to
    use.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: RHEL8中默认提供了另一个用于管理分区的工具，即`fdisk`。您可能想尝试一下，看看是否更容易使用。
- en: 'Now it is time to create persistent volumes. We will do it only on the newly
    created partitions. First, we check the available persistent volumes with the
    `pvs` command:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是创建持久卷的时候了。我们只会在新创建的分区上执行。首先，我们使用`pvs`命令检查可用的持久卷：
- en: '[PRE13]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Now, we proceed to create the persistent volumes with `pvcreate`:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们继续使用`pvcreate`创建持久卷：
- en: '[PRE14]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'And we check they have been created correctly with `pvs` again:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们再次使用`pvs`检查它们是否已正确创建：
- en: '[PRE15]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Notice that persistent volumes do not have their own name, but the name of the
    partition (or device) they are created on. We can refer to them as `PV1` and `PV2`
    to draw the diagram.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，持久卷没有自己的名称，而是使用它们所创建的分区（或设备）的名称。我们可以将它们称为`PV1`和`PV2`来绘制图表。
- en: 'This is now the status:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 现在的状态是：
- en: '![Figure 13.6 – Persistent volumes created in the two new partitions'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.6 - 在两个新分区中创建的持久卷'
- en: '](img/B16799_13_006.jpg)'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_13_006.jpg)'
- en: Figure 13.6 – Persistent volumes created in the two new partitions
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.6 - 在两个新分区中创建的持久卷
- en: 'We can also create a persistent volume directly on the disk device, `vdc`.
    Let''s do it:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 我们也可以直接在磁盘设备`vdc`上创建一个持久卷。让我们来做一下：
- en: '[PRE16]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'As in the previous example, there is no name for the physical volume, which
    we will refer to as `PV3`. The result looks like the following:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 与之前的示例一样，物理卷没有名称，我们将其称为`PV3`。结果如下：
- en: '![Figure 13.7 – Persistent volumes created in the two new partitions and the
    new disk device'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.7 - 在两个新分区和新磁盘设备中创建的持久卷'
- en: '](img/B16799_13_007.jpg)'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_13_007.jpg)'
- en: Figure 13.7 – Persistent volumes created in the two new partitions and the new
    disk device
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.7 - 在两个新分区和新磁盘设备中创建的持久卷
- en: Now that we have the persistent volumes, let's group them using virtual groups
    in the next section.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了持久卷，让我们在下一节中使用虚拟卷组对它们进行分组。
- en: Combining physical volumes into volume groups
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将物理卷合并为卷组
- en: 'It''s time to create a new volume group with the physical volumes added previously.
    Before doing that, we can check the volume groups available with the `vgs` command:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是创建一个新的卷组，使用之前添加的物理卷。在这之前，我们可以使用`vgs`命令检查可用的卷组：
- en: '[PRE17]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'We can see that only the volume group created during installation for the operating
    system is available. Let''s create our `storage` volume group with the `/dev/vdb1`
    and `/dev/vdb2` partitions using the `vgcreate` command:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到只有在安装过程中为操作系统创建的卷组可用。让我们使用`vgcreate`命令创建我们的`storage`卷组，使用`/dev/vdb1`和`/dev/vdb2`分区：
- en: '[PRE18]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'As you can see, the new `storage` volume group has been created. The diagram
    of the current status would now look like this:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，新的`storage`卷组已经创建。当前状态的图表现在看起来是这样的：
- en: '![Figure 13.8 – First volume group created with two physical volumes'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.8 - 使用两个物理卷创建的第一个卷组'
- en: '](img/B16799_13_008.jpg)'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_13_008.jpg)'
- en: Figure 13.8 – First volume group created with two physical volumes
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.8 - 使用两个物理卷创建的第一个卷组
- en: Important note
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: '**Volume groups** are a very thin layer in LVM whose only goal is to aggregate
    disks or partitions into a pool of storage. The advanced management of that storage,
    such as, for example, having data mirrored in two different disks, is done with
    logical volumes.'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '**卷组**是LVM中的一个非常薄的层，其唯一目标是将磁盘或分区聚合成一个存储池。对该存储的高级管理，例如在两个不同的磁盘上镜像数据，是通过逻辑卷完成的。'
- en: We have already prepared the partitions and disks as physical volumes and aggregated
    them into volume groups, so we have a pool of disk space. Let's move on to the
    next section to learn how the distribution of that disk space can be done using
    logical volumes.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经准备好了将分区和磁盘作为物理卷，并将它们聚合到卷组中，因此我们有了一个磁盘空间池。让我们继续学习如何使用逻辑卷来分配该磁盘空间的分布。
- en: Creating and extending logical volumes
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建和扩展逻辑卷
- en: 'We currently have several physical volumes created and two of them grouped
    into a volume group. Let''s move to the next layers and check the logical volumes
    with the `lvs` command:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 我们目前已经创建了几个物理卷，并且其中两个被分组到一个卷组中。让我们移动到下一层，并使用`lvs`命令检查逻辑卷：
- en: '[PRE19]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: We see the `root` and `swap` volumes on the `rhel` volume group, which hosts
    the operating system.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在`rhel`卷组上看到了`root`和`swap`卷，它们承载着操作系统。
- en: 'Now, we can create a simple logical volume called `data`, 200 MB in size, on
    the `storage` volume group:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以在`storage`卷组上创建一个名为`data`的简单逻辑卷，大小为200 MB：
- en: '[PRE20]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Our configuration now looks like this:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的配置现在如下：
- en: '![Figure 13.9 – First logical created using space from a volume group'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.9 - 使用卷组空间创建的第一个逻辑卷'
- en: '](img/B16799_13_009.jpg)'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_13_009.jpg)'
- en: Figure 13.9 – First logical created using space from a volume group
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.9 - 使用卷组空间创建的第一个逻辑卷
- en: 'The logical volume created is a block device, and behaves similarly to a disk
    partition. Therefore, in order to be used, we need to format it with a filesystem.
    Let''s do this by formatting it with the `xfs` format:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 创建的逻辑卷是一个块设备，并且类似于磁盘分区。因此，为了使用它，我们需要用文件系统格式化它。让我们通过使用`xfs`格式对其进行格式化：
- en: '[PRE21]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Now it''s ready to be mounted. We can create the `/srv/data` directory and
    mount it there:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 现在可以挂载了。我们可以创建`/srv/data`目录并在那里挂载它：
- en: '[PRE22]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'We have set up our LVM-enabled space available in our system. Mounting a filesystem
    manually, as in the previous example, works while the system is not powered down
    or rebooted. To make it persistent, we need to add the following line to `/etc/fstab`:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经设置了LVM启用的可用空间。手动挂载文件系统，就像前面的例子一样，在系统关闭或重新启动时有效。为了使其持久化，我们需要将以下行添加到`/etc/fstab`中：
- en: '[PRE23]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'To test that the line is correctly written, we can run the following commands.
    First, dismount the filesystem:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 为了测试该行是否正确编写，我们可以运行以下命令。首先，卸载文件系统：
- en: '[PRE24]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Check the available space in the mount point:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 检查挂载点中的可用空间：
- en: '[PRE25]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'The output of the `df` (for *disk free*) command shows that the space in the
    `/srv/data/` directory is related to the `root` partition, meaning that the folder
    does not have any filesystem associated with it. Let''s now run the `mount` command
    when the system is starting:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '`df`（*磁盘空闲*）命令的输出显示`/srv/data/`目录中的空间与`root`分区相关联，这意味着该文件夹没有任何关联的文件系统。现在让我们在系统启动时运行`mount`命令：'
- en: '[PRE26]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'All filesystems in `/etc/fstab` that are not mounted will be mounted, or an
    error will be shown if there is any issue with them (such as a typo in `/etc/fstab`).
    Let''s check that it is mounted:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '`/etc/fstab`中的所有未挂载的文件系统将被挂载，如果存在任何问题（例如`/etc/fstab`中的拼写错误），则会显示错误。让我们检查它是否已挂载：'
- en: '[PRE27]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Important note
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: The `/dev/storage/data` and `/dev/mapper/storage-data` devices are aliases (or
    symbolic links, to be more precise) of the same device generated by a component
    called **device mapper**. They are fully interchangeable.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '`/dev/storage/data`和`/dev/mapper/storage-data`设备是由一个名为**设备映射器**的组件生成的同一设备的别名（或者更准确地说是符号链接）。它们是完全可互换的。'
- en: As we can see, the filesystem is properly mounted. Now that we know how to create
    a logical volume and assign a filesystem and mount point to it, we can move on
    to more advanced tasks, such as extending disk space in our LVM layers and beyond.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所看到的，文件系统已正确挂载。现在我们知道如何创建逻辑卷并为其分配文件系统和挂载点，我们可以继续进行更高级的任务，例如在我们的LVM层和更高级别中扩展磁盘空间。
- en: Adding new disks to a volume group and extending a logical volume
  id: totrans-155
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加新磁盘到卷组并扩展逻辑卷
- en: 'One of the great things about LVM, and more specifically, volume groups, is
    that we can add a new disk to it and start using that newly extended space. Let''s
    try it by adding the physical volume in `/dev/vdc` to the `storage` volume group:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: LVM的一个很棒的功能，更具体地说是卷组，是我们可以向其中添加新的磁盘并开始使用新扩展的空间。让我们尝试通过将`/dev/vdc`中的物理卷添加到`storage`卷组来实现：
- en: '[PRE28]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Now, our disk distribution looks like this:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们的磁盘分布如下：
- en: '![Figure 13.10 – Extended volume group with three physical volumes'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.10 - 扩展的卷组，包含三个物理卷'
- en: '](img/B16799_13_010.jpg)'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_13_010.jpg)'
- en: Figure 13.10 – Extended volume group with three physical volumes
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.10 - 扩展的卷组，包含三个物理卷
- en: 'Let''s now extend the `data` logical volume by adding 200 MB to it:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们通过向`data`逻辑卷添加200 MB来扩展它：
- en: '[PRE29]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'The logical volume has been extended. However, the filesystem on top of it
    hasn''t:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 逻辑卷已经扩展。但是上面的文件系统还没有：
- en: '[PRE30]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'We need to extend the filesystem. The tool to do so depends on the type of
    filesystem. In our case, as it is `xfs`, the tool to extend it is `xfs_growfs`.
    Let''s do it:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要扩展文件系统。要执行此操作的工具取决于文件系统的类型。在我们的情况下，由于它是`xfs`，扩展它的工具是`xfs_growfs`。让我们来做：
- en: '[PRE31]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: And now, the filesystem has some extra space added and available.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，文件系统已经添加了一些额外的空间并可用。
- en: Important note
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: When doing this task, the logical volume can be mounted and be used by the system.
    LVM is ready to do volume extensions on production systems while running.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 在执行此任务时，逻辑卷可以被挂载并被系统使用。LVM已准备好在运行时对生产系统进行卷扩展。
- en: 'It''s very easy to redistribute the space and add another logical volume:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 重新分配空间并添加另一个逻辑卷非常容易：
- en: '[PRE32]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'The `--size` and `--extents` options for the `lvcreate` command have several
    options that can be used to define the space to be consumed:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: '`lvcreate`命令的`--size`和`--extents`选项有几个选项可用于定义要使用的空间：'
- en: '`GB`, or megabytes, using `MB` (in other words, `--size 3GB`).'
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`GB`，或者兆字节，使用`MB`（换句话说，`--size 3GB`）。'
- en: '`--extents`, the command will use its internal measure, `extents`, which is
    similar to block size for disk partitions (that is, `--extents 125`).'
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--extents`，该命令将使用其内部度量单位`extents`，它类似于磁盘分区的块大小（即`--extents 125`）。'
- en: 'The `--size` and `--extents` options also apply to the `lvextend` command.
    In this case, we can use the options shown previously for `lvcreate` to define
    the new size of a logical volume. We also have other options to define increments
    of space to be assigned to them:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '`--size`和`--extents`选项也适用于`lvextend`命令。在这种情况下，我们可以使用先前显示的选项来定义逻辑卷的新大小。我们还有其他选项来定义分配给它们的空间的增量：'
- en: '`+` symbol before the number to `lvextend`, this will increase the size in
    the measurement provided (that is, `--size +1GB` adds one extra gigabyte to the
    current logical volume).'
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`lvextend`命令的数字之前加上`+`符号，这将以提供的度量单位增加大小（即`--size +1GB`会向当前逻辑卷添加1GB的额外空间）。
- en: '`--extents`, and the percentage of free space to be used followed by `%FREE`
    (that is, `--extents 10%FREE`).'
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--extents`，以及要使用的剩余空间的百分比，后面跟着`%FREE`（即`--extents 10%FREE`）。'
- en: Tip
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: As we have seen previously in other tools, we can use the manual pages to remind
    ourselves of the options available. Please run `man lvcreate` and `man lvextend`
    to get familiar with the pages for these tools.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前在其他工具中看到的那样，我们可以使用手册页来了解可用的选项。请运行`man lvcreate`和`man lvextend`来熟悉这些工具的手册页。
- en: We are going to create a logical volume to be used as **swap**, which is a part
    of the disk that the system uses as a parking space for memory. The system puts
    processes that consume memory and that are not active there so that the physical
    memory (which is much faster than disk) is freed. It is also used when there is
    no more free physical memory in the system.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将创建一个逻辑卷用作**交换空间**，这是系统用作内存停车位的磁盘的一部分。系统将消耗内存但不活动的进程放在那里，以便释放物理内存（比磁盘快得多）。当系统中没有更多的空闲物理内存时，也会使用它。
- en: 'Let''s create a swap device on LVM:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在LVM上创建一个交换设备：
- en: '[PRE33]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'We can check the memory and swap status with the `free` command:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`free`命令检查内存和交换状态：
- en: '[PRE34]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Important note
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: The two new changes would require adding a line for each to `/etc/fstab` to
    make use of them persistently across reboots.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个新的更改需要为每个添加一行到`/etc/fstab`，以便在重新启动时持久地使用它们。
- en: 'Our disk space distribution would now look like this:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的磁盘空间分布现在看起来是这样的：
- en: '![Figure 13.11 – Extended volume group with three physical volumes'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.11 - 扩展的卷组，有三个物理卷'
- en: '](img/B16799_13_011.jpg)'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_13_011.jpg)'
- en: Figure 13.11 – Extended volume group with three physical volumes
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.11 - 扩展的卷组，有三个物理卷
- en: This distribution looks a lot like the initial example we used to describe the
    layers of LVM. We now have practiced with all the layers to create the pieces
    required in each one of them. We know how to create, so now it's time to learn
    how to remove them in the next section.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 这个分布看起来很像我们用来描述LVM层的初始示例。我们现在已经练习了所有层，创建了每一层所需的部分。我们知道如何创建，现在是时候学习如何在下一节中删除它们了。
- en: Removing logical volumes, volume groups, and physical volumes
  id: totrans-193
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 删除逻辑卷、卷组和物理卷
- en: 'To start with the commands used to remove, let''s do the simple step of removing
    the `img` logical volume. First, we need to check whether it''s mounted:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们从用于移除的命令开始，先做一个简单的步骤，移除`img`逻辑卷。首先，我们需要检查它是否已挂载：
- en: '[PRE35]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'As it is mounted, we need to dismount it:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 因为它已经挂载，我们需要卸载它：
- en: '[PRE36]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'The last command shows an empty output, which means that it isn''t mounted.
    Let''s proceed to remove it:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一个命令显示了空输出，这意味着它没有被挂载。让我们继续移除它：
- en: '[PRE37]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Now, we can also remove the mount point:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们也可以移除挂载点：
- en: '[PRE38]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'And the removal of the logical volume is done. This process is not reversible,
    so run it carefully. Our disk distributions now look like this:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 逻辑卷的移除也完成了。这个过程是不可逆的，所以要小心运行。我们的磁盘分布现在看起来是这样的：
- en: '![Figure 13.12 – Volume group with logical volume removed'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.12 - 移除逻辑卷的卷组'
- en: '](img/B16799_13_012.jpg)'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_13_012.jpg)'
- en: Figure 13.12 – Volume group with logical volume removed
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.12 - 移除逻辑卷的卷组
- en: 'Now it''s time for a more complex task, removing a physical volume from a virtual
    group. The reason for doing so is that sometimes you want to transfer the data
    stored on a physical disk to a different disk, and then detach it and remove it
    from the system. This can be done, but first, let''s add some files to the `data`
    logical volume:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候进行一个更复杂的任务了，从虚拟组中移除物理卷。这样做的原因是有时您想要将存储在物理磁盘上的数据转移到另一个磁盘，然后将其分离并从系统中移除。这是可以做到的，但首先让我们向`data`逻辑卷添加一些文件：
- en: '[PRE39]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'Now let''s evacuate the data from `/dev/vdb1` using the `pvmove` command:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们使用`pvmove`命令从`/dev/vdb1`中疏散数据：
- en: '[PRE40]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Important note
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: Depending on the allocation of the extents, you may receive a message stating
    `no data to move for storage`. This means that the saved data was already allocated
    to the other disk. You can use `pvmove` with other devices to try it.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 根据分配的extent，您可能会收到一条消息，指出“没有要移动的数据”。这意味着保存的数据已经分配给了其他磁盘。您可以使用`pvmove`与其他设备来尝试。
- en: 'Now there is no data stored in `/dev/vdb1` and it can be removed from the volume
    group. We can do so by using the `vgreduce` command:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 现在`/dev/vdb1`中没有存储数据，可以从卷组中移除。我们可以使用`vgreduce`命令来做到这一点：
- en: '[PRE41]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'We can see that there is now less space in the storage volume group:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到存储卷组中现在有更少的空间：
- en: '[PRE42]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'We can also see that the physical volume, `/dev/vdb1`, is not attached to any
    volume group:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以看到物理卷`/dev/vdb1`没有连接到任何卷组：
- en: '[PRE43]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: Tip
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: The `vgdisplay`, `pvdisplay`, and `lvdisplay` commands show detailed information
    on any of the parts of LVM.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: '`vgdisplay`、`pvdisplay`和`lvdisplay`命令显示了LVM的任何部分的详细信息。'
- en: 'The most important part is that we can do these operations while the system
    is running production workloads with confidence. Our disk distribution now looks
    like this:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 最重要的部分是，我们可以在系统运行生产工作负载的同时执行这些操作。我们的磁盘分布现在看起来是这样的：
- en: '![Figure 13.13 – Volume group with physical volumes removed'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.13 - 移除物理卷的卷组'
- en: '](img/B16799_13_013.jpg)'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_13_013.jpg)'
- en: Figure 13.13 – Volume group with physical volumes removed
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.13 - 带有移除物理卷的卷组
- en: 'Now it''s time to remove the volume group, but we need to remove the logical
    volumes first, just like we did before (feel free to run `lvs` and `vgs` before
    and after each command to check progress):'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候移除卷组了，但我们需要先移除逻辑卷，就像之前做的一样（随时运行`lvs`和`vgs`来检查进度）：
- en: '[PRE44]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'With this, we have removed `/dev/storage/swap`. Let''s now remove `/dev/storage/data`,
    using the `--yes` option so that we do not get asked for confirmation (important
    when using this command in a script):'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们已经移除了`/dev/storage/swap`。现在让我们使用`--yes`选项移除`/dev/storage/data`，这样我们就不会被要求确认（在脚本中使用此命令时很重要）：
- en: '[PRE45]'
  id: totrans-227
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'Now it''s time to remove the `storage` volume group:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候移除`storage`卷组了：
- en: '[PRE46]'
  id: totrans-229
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: The `storage` volume group has been removed successfully.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: '`storage`卷组已成功移除。'
- en: 'And finally, clean the physical volumes:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，清理物理卷：
- en: '[PRE47]'
  id: totrans-232
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: And with this, we know how to work with each part of the LVM in our RHEL8 systems.
    Let's review the commands used in the next section.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这样，我们知道如何在我们的RHEL8系统中处理LVM的每个部分。让我们回顾下一节中使用的命令。
- en: Reviewing LVM commands
  id: totrans-234
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 回顾LVM命令
- en: 'As a summary of the commands used to manage physical volumes, let''s take a
    look at the following table:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 作为管理物理卷使用的命令的总结，让我们看一下下表：
- en: '![](img/B16799_Table_13.1.jpg)'
  id: totrans-236
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16799_Table_13.1.jpg)'
- en: 'Now, let''s review the commands used to manage volume groups:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们回顾一下用于管理卷组的命令：
- en: '![](img/B16799_Table_13.2.jpg)'
  id: totrans-238
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16799_Table_13.2.jpg)'
- en: 'And finally, let''s review the commands used to manage logical volumes:'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，让我们回顾一下用于管理逻辑卷的命令：
- en: '![](img/B16799_Table_13.3.jpg)'
  id: totrans-240
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16799_Table_13.3.jpg)'
- en: Remember that you can always use the manual pages available for each command
    to get more information on the options you want to use and learn new ones, just
    by running `man <command>`.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，您可以随时使用每个命令的手册页面获取有关要使用的选项的更多信息，并通过运行`man <command>`来学习新的选项。
- en: Important note
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: The web administration interface Cockpit, has an extension for managing storage
    components. It can be installed as `root` (or with `sudo`) with the following
    command, `dnf install cockpit-storaged`. A good exercise for you would be to repeat
    the process done in this chapter using the storage interface in Cockpit.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: Web管理界面Cockpit具有用于管理存储组件的扩展。可以使用以下命令以`root`（或使用`sudo`）安装它：`dnf install cockpit-storaged`。您可以尝试在Cockpit的存储界面中重复本章中所做的过程，这对您来说是一个很好的练习。
- en: Summary
  id: totrans-244
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: The LVM is an incredibly useful part of Red Hat Enterprise Linux and provides
    the capabilities to manage, reallocate, distribute, and assign disk space without
    having to stop anything in the system. Battle-tested over the years, it is a key
    component for system administrators, as well as facilitating the incorporation
    of other extended capabilities in our systems (a flexible way to provide storage
    to be shared via iSCSI).
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: LVM是Red Hat Enterprise Linux中非常有用的一部分，它提供了管理、重新分配、分发和分配磁盘空间的能力，而无需停止系统中的任何内容。经过多年的考验，它是系统管理员的关键组件，同时也有助于在我们的系统中引入其他扩展功能（一种通过iSCSI共享存储的灵活方式）。
- en: Practicing LVM on test machines is extremely important, so we can be sure that
    the command we will run on a production system will not mean the service being
    stopped or data being lost.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 在测试机上练习LVM非常重要，这样我们就可以确保在生产系统上运行的命令不会导致服务停止或数据丢失。
- en: 'In this chapter, we have seen the most basic, yet important, tasks that can
    be done with LVM. We have learned how the different layers of LVM work: physical
    volumes, volume groups, and logical volumes. Also, we''ve seen how they interact
    with each other and how they can be managed. We have practiced creating, extending,
    and removing logical volumes, volume groups, and physical volumes. It will be
    important to practice them to consolidate the knowledge acquired and be able to
    use them in production systems. However, the basis for doing so is now already
    in place.'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们已经看到了可以使用LVM完成的最基本但也最重要的任务。我们已经了解了LVM的不同层如何工作：物理卷、卷组和逻辑卷。此外，我们还看到了它们如何相互作用以及如何进行管理。我们已经练习了创建、扩展和删除逻辑卷、卷组和物理卷。重要的是要练习它们以巩固所学知识，并能够在生产系统中使用它们。然而，现在已经奠定了这样做的基础。
- en: Now, let's move on to the next chapter to discover a new feature in RHEL8 to
    improve the storage layer further by adding deduplication capabilities to it –
    **Virtual Data Optimizer** (**VDO**).
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们继续下一章，发现RHEL8中的一个新功能，通过添加去重功能来进一步改进存储层 - **虚拟数据优化器**（**VDO**）。
