["```\n    sudo rpm --import \\ https://packages.microsoft.com/keys/microsoft.asc\n    ```", "```\n    sudo yum-config-manager --add-repo= \\\u00a0\u00a0\u00a0\u00a0\n    \u00a0\u00a0https://packages.microsoft.com/yumrepos/azure-cli\n    ```", "```\n    sudo yum install azure-cli\n    ```", "```\n    curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash \n    ```", "```\n    ruby -e \"$(curl -fsSL \\\n     https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    ```", "```\n    brew update && brew install azure-cli\n    ```", "```\n    az -v\n    ```", "```\naz login\n```", "```\n[\n\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\"cloudName\": \"AzureCloud\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"id\": \"....\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"isDefault\": true,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"name\": \"Pay-As-You-Go\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"state\": \"Enabled\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"tenantId\": \"....\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"user\": {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"name\": \"....\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"type\": \"user\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0}\n ]\n```", "```\naz account list \n```", "```\naz account list -o table\n```", "```\naz account list -o table --query '[].[user.name]'\n```", "```\naz ad sp create-for-rbac --name <APP_NAME>\n```", "```\n{\n\u00a0\u00a0\u00a0\u00a0\"appID\": \"....\",\n\u00a0\u00a0\u00a0\u00a0\"displayName\": \"APP_NAME\",\n\u00a0\u00a0\u00a0\u00a0\"name\": \"http://APP_NAME\",\n\u00a0\u00a0\u00a0\u00a0\"password\": \"....\",\n\u00a0\u00a0\u00a0\u00a0\"tenant\": \"....\"\n }\n```", "```\naz role assignment list --assignee <appID> --o table\n```", "```\naz logout\n```", "```\naz login --service-principal --username <appID> --tenant <tenant id>\n```", "```\naz login --service-principal --username <appID> --tenant <tenant id> --password <app_password> \n```", "```\naz interactive\n```", "```\n    sudo rpm \u2013import \\\u00a0\u00a0https://packages.microsoft.com/keys/microsoft.asc\n    ```", "```\n    sudo yum-config-manager --add-repo= \\https://packages.microsoft.com/rhel/7/prod/\n    ```", "```\n    sudo yum install -y powershell\n    ```", "```\n    pwsh\n    ```", "```\n    brew tap caskroom/cask\n    ```", "```\n    brew cask install powershell\n    ```", "```\n    pwsh\n    ```", "```\nInstall-Module -Name Az -AllowClobber -Scope CurrentUser -Force\n```", "```\nUntrusted repository\nYou are installing the modules from an untrusted repository. If you trust this \nrepository, change its InstallationPolicy value by running the Set-PSRepository\n cmdlet. Are you sure you want to install the modules from 'PSGallery'?\n[Y] Yes\u00a0\u00a0[A] Yes to All\u00a0\u00a0[N] No\u00a0\u00a0[L] No to All\u00a0\u00a0[S] Suspend\u00a0\u00a0[?] Help \n(default is \"N\"): A\n```", "```\nGet-InstalledModule -Name Az -AllVersions | '\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0select Name,Version \n```", "```\nImport-Module -name Az\n```", "```\n$profile\n```", "```\nImport-Module -name Az\n```", "```\nConnect-AzAccount\n```", "```\nGet-AzContext -ListAvailable | select Tenant\n```", "```\nConnect-AzAccount -Tenant <tenantID>\n```", "```\n$newsp = New-AzADServicePrincipal ' -DisplayName \"APP_NAME\" -Role Contributor\n```", "```\n$newsp.ApplicationId\n```", "```\n$BSTR = [System.Runtime.InteropServices.Marshal]::SecureStringToBSTR($newsp.Secret)\n$UnsecureSecret = [System.Runtime.InteropServices.Marshal]::PtrToStringAuto($BSTR)\n```", "```\n$creds = Get-Credential \n```", "```\nConnect-AzAccount -Credential $creds '\n\u00a0\u00a0-Tenant <tentant id> '\n\u00a0\u00a0-ServicePrincipal\n```", "```\nSave-AzContext -Path $HOME/.Azure/AzureContext.json\n```", "```\nGet-AzContext\n```", "```\nGet-AzLocation | Select-Object Location\n```", "```\naz account list-locations --query '[].name'\n```", "```\nNew-AzResourceGroup -Location westus2 -Name 'MyResource1'\n```", "```\nGet-AzResourceGroup | Format-Table\n```", "```\naz group create --location westus2 --name MyResource2\n```", "```\naz group list -o table\n```", "```\nNew-AzStorageAccount -Location westus '\n\u00a0\u00a0-ResourceGroupName MyResource1'\n\u00a0\u00a0-Name \"<NAME>\" -SkuName Standard_LRS\n```", "```\naz storage account create --resource-group MyResource2 \n\u00a0\u00a0--sku Standard_LRS --name <NAME>\n```", "```\n New-AzVM -Name \"UbuntuVM\" -Location westus2 '\n\u00a0\u00a0-ResourceGroupName MyResource1 '\n\u00a0\u00a0-ImageName UbuntuLTS -Size Standard_B1S\n```", "```\naz vm create --name UbuntuVM --resource-group MyResource2 \\\n\u00a0\u00a0--image UbuntuLTS --authentication-type password \\\n\u00a0\u00a0--admin-username student --size Standard_B1S\n```", "```\nGet-AzVMImagePublisher -Location <REGION>\n```", "```\naz vm image list-publishers --location <REGION> --output table\n```", "```\nGet-AzVMImageOffer -Location <REGION> '\n\u00a0\u00a0-PublisherName <PUBLISHER> | select offer\n```", "```\naz vm image list-offers --location <REGION> '\n\u00a0\u00a0--publisher <PUBLISHER> --output table\n```", "```\nGet-AzVMImageSku -PublisherName <publisher> -Offer <offer>'\n -Location <location>\n```", "```\naz vm image list-skus --location <LOCATION> \\\n\u00a0\u00a0--publisher <PUBLISHER> --offer <OFFER> -o table\n```", "```\nGet-AzureVMImage -Location <REGION>'\n -PublisherName <PUBLISHER> -Offer <OFFER> '\n -Skus <SKU> | select Version -last 1 \n```", "```\naz vm image list --location <REGION> --publisher <PUBLISHER> \\\n\u00a0\u00a0--offer <OFFER> --sku <SKU> --all --query '[].version' \\\n\u00a0\u00a0--output tsv | tail -1\n```", "```\n$vm = New-AzVmConfig -VMName <name> -VMSize \"Standard_A1\"\nSet-AzVMSourceImage -PublisherName <PUBLISHER>'\n\u00a0\u00a0-Offer <OFFER> -Skus <SKU> -Version <VERSION>\n```", "```\naz vm create --name UbuntuVM2 --resource-group Packt-Testing-2\u00a0\u00a0\u00a0--image canonical:UbuntuServer:19_10-daily-gen2:19.10.201912170 --authentication-type password\u00a0\u00a0\u00a0--admin-username pacman --size Standard_B1S \n```", "```\nGet-AzVMSize -Location <REGION> | Format-Table\naz vm list-sizes --location <REGION> -o table\n```", "```\nNew-AzVMConfig -VMName \"<VM NAME>\" -VMSize <SIZE>\n```", "```\nGet-AzPublicIpAddress -ResourceGroupName <RESOURCE GROUP>'\n | select Name,IpAddress\n```", "```\nGet-AzNetworkInterface -ResourceGroupName <resource group name> | ForEach { $interface = $_.Name; $ip = $_ | Get-AzNetworkInterfaceIpConfig | Select PrivateIPAddress; Write-Host $interface $ip.PrivateIPAddress }\n```", "```\nGet-AzNetworkInterface -ResourceGroup <resource group name>\n```", "```\naz vm list-ip-addresses --resource <RESOURCE GROUP> --output table\n```", "```\nGet-AzVM -Name <VM NAME> -Status -ResourceGroupName <RESOURCE GROUP>\n```", "```\naz vm list --output table\n```", "```\nStop-AzVM -ResourceGroupName <RESOURCE GROUP> -Name <VM NAME>\n```", "```\naz vm deallocate --name <VM NAME> --resource-group <RESOURCE GROUP>\n```", "```\n$MYVM=Get-AzVM -Name <VM NAME> -ResourceGroupName <RESOURCE GROUP>\n```", "```\n$MYVM | Get-Members \n```", "```\n$MYVM.HardwareProfile\n```", "```\n$MYVM.HardwareProfile | Select-Object -ExpandProperty VmSize\n```", "```\naz vm list \u2013-resource-group <RESOURCE GROUP>\n```", "```\naz vm show --name <VM NAME> --resource-group <RESOURCE GROUP>\n```", "```\naz vm show --name <VM NAME> --resource-group <RESOURCE GROUP>\\\n\u00a0\u00a0--query 'storageProfile'\n```", "```\nssh <username>@<public ip>\n```", "```\nssh-keygen\n```", "```\naz vm create --name UbuntuVM3 --resource-group MyResource2 \\\n\u00a0\u00a0--admin-username student --generate-ssh-keys --image UbuntuLTS\n```", "```\nssh student@<IP ADDRESS>\n```", "```\n    Code=StorageAccountAlreadyTaken\n    Message=The storage account named mystorage is already taken.\n    ```"]