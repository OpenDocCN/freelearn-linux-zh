["```\noptions { \n\u00a0\u00a0\u00a0\u00a0rrset-order { \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0class IN type A name \"mytargetserver.example.com\" order cyclic; \n\u00a0\u00a0\u00a0\u00a0}; \n}; \n```", "```\n    arp 192.168.124.21 000c.2933.2d05 arpa\n    arp 192.168.124.22 000c.29ca.fbea arpa\n    ```", "```\nnetsh interface ipv4 set interface \"Local Area Connection\" weakhostreceive=enabled\nnetsh interface ipv4 set interface \"Loopback\" weakhostreceive=enabled\nnetsh interface ipv4 set interface \"Loopback\" weakhostsend=enabled \n```", "```\n! this ACL matches reply traffic from the host to the client stations\nip access-list ACL-LB-PATH\n\u00a0\u00a0\u00a0permit tcp any eq 443 any\n\u00a0\u00a0\u00a0permit tcp any eq 90 any\n! regular default gateway, does not use the load balancer, set a default gateway for that\nip route 0.0.0.0 0.0.0.0 10.10.x.1\n! this sets the policy for the load balanced reply traffic\nroute-map RM-LB-PATH permit 10\n\u00a0\u00a0\u00a0match ip address ACL-LB-BYPASS\n\u00a0\u00a0\u00a0set next-hop 10.10.10.5\n! this applies the policy to the L3 interface.\n! note that we have a \"is that thing even up\" check before we forward the traffic\nint vlan x\nip policy route-map RM-LB-PATH\n set ip next-hop verify-availability 10.10.10.5 1 track 1\n set ip next-hop 10.10.10.5\n! track 1 is defined here\ntrack 1 rtr 1 reachability\nrtr 1\ntype echo protocol ipIcmpEcho 10.10.10.5\nrtr schedule 1 life forever start-time now\n```", "```\n    ip route add table 5 0.0.0.0/0 via 10.10.10.5\n    ```", "```\n    iptables -t mangle -A PREROUTING -i eth0 -p tcp -m tcp --sport 443 -s 10.10.10.0/24 -j MARK --set-mark 2\n    iptables -t mangle -A PREROUTING -i eth0 -p tcp -m tcp --sport 80 -s 10.10.10.0/24 -j MARK --set-mark 2\n    ```", "```\n    ip rule add fwmark 2 lookup 5\n    ```", "```\n$ sudo apt-get install haproxy\n```", "```\n$ haproxy \u2013v\nHA-Proxy version 2.0.13-2ubuntu0.1 2020/09/08 - https://haproxy.org/\n```", "```\n\u00a0\u00a0\u00a0\u00a0# net.ipv4.tcp_rmem\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0= 4096 16060 262144\n\u00a0\u00a0\u00a0\u00a0# net.ipv4.tcp_wmem\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0= 4096 16384 262144\n```", "```\n\u00a0\u00a0\u00a0\u00a0# net.ipv4.tcp_tw_reuse\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0= 1\n```", "```\n\u00a0\u00a0\u00a0\u00a0# net.ipv4.ip_local_port_range = 1024 65023\n```", "```\n\u00a0\u00a0\u00a0\u00a0# net.ipv4.tcp_max_syn_backlog = 60000\n```", "```\n\u00a0\u00a0\u00a0\u00a0# net.ipv4.tcp_fin_timeout\u00a0\u00a0\u00a0\u00a0\u00a0= 30\n```", "```\n\u00a0\u00a0\u00a0\u00a0# net.ipv4.tcp_synack_retries\u00a0\u00a0= 3\n```", "```\n\u00a0\u00a0\u00a0\u00a0# net.ipv4.ip_nonlocal_bind\u00a0\u00a0\u00a0\u00a0= 1\n```", "```\n\u00a0\u00a0\u00a0\u00a0\u00a0# net.core.somaxconn\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0= 60000\n```", "```\nfrontend http_front\n\u00a0\u00a0\u00a0bind *:80\n\u00a0\u00a0\u00a0stats uri /haproxy?stats\n\u00a0\u00a0\u00a0default_backend http_back\nbackend\u00a0\u00a0http_back\n\u00a0\u00a0\u00a0balance roundrobin\n\u00a0\u00a0\u00a0server WEBSRV01 192.168.124.20:80 check fall 3 rise 2\n\u00a0\u00a0\u00a0server WEBSRV02 192.168.124.21:80 check fall 3 rise 2\n```", "```\nglobal\n\u00a0\u00a0\u00a0\u00a0maxconn 20000\n\u00a0\u00a0\u00a0\u00a0log /dev/log local0\n\u00a0\u00a0\u00a0\u00a0user haproxy\n\u00a0\u00a0\u00a0\u00a0group haproxy\n\u00a0\u00a0\u00a0\u00a0stats socket /run/haproxy/admin.sock user haproxy group haproxy mode 660 level admin\n\u00a0\u00a0\u00a0\u00a0nbproc 2\n\u00a0\u00a0\u00a0\u00a0nbthread 4\n\u00a0\u00a0\u00a0\u00a0timeout http-request <timeout>\n\u00a0\u00a0\u00a0\u00a0timeout http-keep-alive <timeout>\n\u00a0\u00a0\u00a0\u00a0timeout queue <timeout>\n\u00a0\u00a0\u00a0\u00a0timeout client-fin <timeout>\n\u00a0\u00a0\u00a0\u00a0timeout server-fin <timeout>\n\u00a0\u00a0\u00a0\u00a0ssl-default-bind-ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256\n\u00a0\u00a0\u00a0\u00a0ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets\n```", "```\nfrontend http_front-80\n\u00a0\u00a0\u00a0bind 192.168.122.21:80\n\u00a0\u00a0\u00a0stats uri /haproxy?stats\n\u00a0\u00a0\u00a0default_backend http_back-80\nfrontend http_front-443\n\u00a0\u00a0\u00a0bind 192.168.122.21:443\n\u00a0\u00a0\u00a0stats uri /haproxy?stats\n\u00a0\u00a0\u00a0default_backend http_back-443\nbackend\u00a0\u00a0http_back-80\n\u00a0\u00a0\u00a0balance leastconn\n\u00a0\u00a0\u00a0server WEBSRV01 192.168.124.20:80 check fall 3 rise 2\n\u00a0\u00a0\u00a0server WEBSRV02 192.168.124.21:80 check fall 3 rise 2\nbackend\u00a0\u00a0http_back-443\n\u00a0\u00a0\u00a0balance leastconn\n\u00a0\u00a0\u00a0server WEBSRV01 192.168.124.20:443 check fall 3 rise 2\n\u00a0\u00a0\u00a0server WEBSRV02 192.168.124.21:443 check fall 3 rise 2\n```", "```\nlisten webserver 192.168.122.21:80\n\u00a0\u00a0\u00a0\u00a0mode http\n\u00a0\u00a0\u00a0\u00a0option httpchk HEAD / HTTP/1.0\n\u00a0\u00a0\u00a0\u00a0server websrv01 192.168.124.20:443 check fall 3 rise 2\n\u00a0\u00a0\u00a0\u00a0server websrv02 192.168.124.21:443 check fall 3 rise 2\n```", "```\nbackend\u00a0\u00a0http_back-80\n\u00a0\u00a0\u00a0mode http\n\u00a0\u00a0\u00a0balance leastconn\n\u00a0\u00a0\u00a0cookie SERVERUSED insert indirect nocache\n\u00a0\u00a0\u00a0option httpchk HEAD /\n\u00a0\u00a0\u00a0server WEBSRV01 192.168.124.20:80 cookie WS01 check fall 3 rise 2\n\u00a0\u00a0\u00a0server WEBSRV02 192.168.124.21:80 cookie WS02 check fall 3 rise 2\n```", "```\ncat sitename.com.crt sitename.com.key | sudo tee /etc/ssl/sitename.com/sitename.com.pem\n```", "```\nfrontend http front-443\n\u00a0\u00a0\u00a0\u00a0bind 192.168.122.21:443 ssl crt /etc/ssl/sitename.com/sitename.com.pem\n\u00a0\u00a0\u00a0\u00a0redirect scheme https if !{ ssl_fc }\n\u00a0\u00a0\u00a0\u00a0mode http\n\u00a0\u00a0\u00a0\u00a0default_backend back-443\nbackend back-443\n\u00a0\u00a0\u00a0\u00a0mode http\n\u00a0\u00a0\u00a0\u00a0balance leastconn\n\u00a0\u00a0\u00a0\u00a0option forwardfor\n\u00a0\u00a0\u00a0\u00a0option httpchk HEAD / HTTP/1.1\\r\\nHost:localhost\n\u00a0\u00a0\u00a0\u00a0server web01 192.168.124.20:443 cookie WS01 check fall 3 rise 2\n\u00a0\u00a0\u00a0\u00a0server web02 192.168.124.21:443 cookie WS02 check fall 3 rise 2\n\u00a0\u00a0\u00a0\u00a0http-request add-header X-Forwarded-Proto https \n```", "```\nhttp-request set-header X-Client-IP %[req.hdr_ip(X-Forwarded-For)]\n```", "```\nintitle:\"Statistics Report for HAProxy\" + \"statistics report for pid\" site:www.targetdomain.com \ninurl:haproxy-status site:target.domain.com\n```"]