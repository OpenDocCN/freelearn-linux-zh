["```\nreader@ubuntu:~$ cd /dev/fd/\nreader@ubuntu:/dev/fd$ ls -l\ntotal 0\nlrwx------ 1 reader reader 64 Nov  5 18:54 0 -> /dev/pts/0\nlrwx------ 1 reader reader 64 Nov  5 18:54 1 -> /dev/pts/0\nlrwx------ 1 reader reader 64 Nov  5 18:54 2 -> /dev/pts/0\nlrwx------ 1 reader reader 64 Nov  5 18:54 255 -> /dev/pts/0\n```", "```\n# SSH connection 1\nreader@ubuntu:~/scripts/chapter_12$ ls -l /dev/fd/\ntotal 0\nlrwx------ 1 reader reader 64 Nov  5 19:06 0 -> /dev/pts/0\nlrwx------ 1 reader reader 64 Nov  5 19:06 1 -> /dev/pts/0\nlrwx------ 1 reader reader 64 Nov  5 19:06 2 -> /dev/pts/0\n\n# SSH connection 2\nreader@ubuntu:/dev/fd$ ls -l\ntotal 0\nlrwx------ 1 reader reader 64 Nov  5 18:54 0 -> /dev/pts/1\nlrwx------ 1 reader reader 64 Nov  5 18:54 1 -> /dev/pts/1\nlrwx------ 1 reader reader 64 Nov  5 18:54 2 -> /dev/pts/1\n\n# Virtual machine terminal\nreader@ubuntu:/dev/fd$ ls -l\ntotal 0\nlrwx------ 1 reader reader 64 Nov  5 19:08 0 -> /dev/tty/1\nlrwx------ 1 reader reader 64 Nov  5 19:08 1 -> /dev/tty/1\nlrwx------ 1 reader reader 64 Nov  5 19:08 2 -> /dev/tty/1\n```", "```\ncommand > output-file\n```", "```\nreader@ubuntu:~/scripts/chapter_12$ ls -l /var/log/dpkg.log \n-rw-r--r-- 1 root root 737150 Nov  5 18:49 /var/log/dpkg.log\nreader@ubuntu:~/scripts/chapter_12$ cat /var/log/dpkg.log > redirected-file.log\nreader@ubuntu:~/scripts/chapter_12$ ls -l\ntotal 724\n-rw-rw-r-- 1 reader reader 737150 Nov  5 19:45 redirected-file.log\n```", "```\nreader@ubuntu:~/scripts/chapter_12$ diff /var/log/dpkg.log redirected-file.log \nreader@ubuntu:~/scripts/chapter_12$ echo $?\n0\n```", "```\nreader@ubuntu:~/scripts/chapter_12$ vim redirect-to-file.sh \nreader@ubuntu:~/scripts/chapter_12$ cat redirect-to-file.sh \n#!/bin/bash\n\n#####################################\n# Author: Sebastiaan Tammer\n# Version: v1.0.0\n# Date: 2018-11-05\n# Description: Redirect user input to file.\n# Usage: ./redirect-to-file.sh\n#####################################\n\n# Capture the users' input.\nread -p \"Type anything you like: \" user_input\n\n# Save the users' input to a file.\necho ${user_input} > redirect-to-file.txt\n```", "```\nreader@ubuntu:~/scripts/chapter_12$ bash redirect-to-file.sh \nType anything you like: I like dogs! And cats. Maybe a gecko?\nreader@ubuntu:~/scripts/chapter_12$ ls -l\ntotal 732\n-rw-rw-r-- 1 reader reader 737150 Nov  5 19:45 redirected-file.log\n-rw-rw-r-- 1 reader reader    383 Nov  5 19:58 redirect-to-file.sh\n-rw-rw-r-- 1 reader reader     38 Nov  5 19:58 redirect-to-file.txt\nreader@ubuntu:~/scripts/chapter_12$ cat redirect-to-file.txt\nI like dogs! And cats. Maybe a gecko?\n```", "```\nreader@ubuntu:~/scripts$ bash chapter_12/redirect-to-file.sh\nType anything you like: Hello\nreader@ubuntu:~/scripts$ ls -l\n<SNIPPED>\ndrwxrwxr-x 2 reader reader 4096 Nov  5 19:58 chapter_12\n-rw-rw-r-- 1 reader reader    6 Nov  5 20:02 redirect-to-file.txt\nreader@ubuntu:~/scripts$ bash chapter_12/redirect-to-file.sh\nType anything you like: Bye\nreader@ubuntu:~/scripts$ ls -l\n<SNIPPED>\ndrwxrwxr-x 2 reader reader 4096 Nov  5 19:58 chapter_12\n-rw-rw-r-- 1 reader reader    4 Nov  5 20:02 redirect-to-file.txt\n```", "```\nreader@ubuntu:~/scripts$ vim chapter_12/redirect-to-file.sh \nreader@ubuntu:~/scripts$ cat chapter_12/redirect-to-file.sh \n#!/bin/bash\n\n#####################################\n# Author: Sebastiaan Tammer\n# Version: v1.1.0\n# Date: 2018-11-05\n# Description: Redirect user input to file.\n# Usage: ./redirect-to-file.sh\n#####################################\n\n# Since we're dealing with paths, set current working directory.\ncd $(dirname $0)\n\n# Capture the users' input.\nread -p \"Type anything you like: \" user_input\n\n# Save the users' input to a file. > for overwrite, >> for append.\necho ${user_input} >> redirect-to-file.txt\n```", "```\nreader@ubuntu:~/scripts$ cd /tmp/\nreader@ubuntu:/tmp$ cat /home/reader/scripts/chapter_12/redirect-to-file.txt \nI like dogs! And cats. Maybe a gecko?\nreader@ubuntu:/tmp$ bash /home/reader/scripts/chapter_12/redirect-to-file.sh\nType anything you like: Definitely a gecko, those things are awesome!\nreader@ubuntu:/tmp$ cat /home/reader/scripts/chapter_12/redirect-to-file.txt \nI like dogs! And cats. Maybe a gecko?\nDefinitely a gecko, those things are awesome!\n```", "```\nreader@ubuntu:~/scripts/chapter_12$ cat redirect-to-file.txt \nI like dogs! And cats. Maybe a gecko?\nDefinitely a gecko, those things are awesome!\nreader@ubuntu:~/scripts/chapter_12$ cat redirect-to-file.txt > /dev/pts/0\nI like dogs! And cats. Maybe a gecko?\nDefinitely a gecko, those things are awesome!\nreader@ubuntu:~/scripts/chapter_12$ cat redirect-to-file.txt > /dev/fd/1\nI like dogs! And cats. Maybe a gecko?\nDefinitely a gecko, those things are awesome!\nreader@ubuntu:~/scripts/chapter_12$ cat redirect-to-file.txt > /dev/fd/2\nI like dogs! And cats. Maybe a gecko?\nDefinitely a gecko, those things are awesome!\n```", "```\nreader@ubuntu:/tmp$ cat /root/\ncat: /root/: Permission denied\nreader@ubuntu:/tmp$ cat /root/ 1> error-file\ncat: /root/: Permission denied\nreader@ubuntu:/tmp$ ls -l\n-rw-rw-r-- 1 reader reader    0 Nov  5 20:35 error-file\nreader@ubuntu:/tmp$ cat /root/ 2> error-file\nreader@ubuntu:/tmp$ ls -l\n-rw-rw-r-- 1 reader reader   31 Nov  5 20:35 error-file\nreader@ubuntu:/tmp$ cat error-file \ncat: /root/: Permission denied\n```", "```\nreader@ubuntu:~/scripts/chapter_12$ vim stderr.c \nreader@ubuntu:~/scripts/chapter_12$ cat stderr.c \n#include <stdio.h>\nint main()\n{\n  // Print messages to stdout and stderr.\n  fprintf(stdout, \"This is sent to stdout.\\n\");\n  fprintf(stderr, \"This is sent to stderr.\\n\");\n  return 0;\n}\n\nreader@ubuntu:~/scripts/chapter_12$ gcc stderr.c -o stderr\nreader@ubuntu:~/scripts/chapter_12$ ls -l\ntotal 744\n-rw-rw-r-- 1 reader reader 737150 Nov  5 19:45 redirected-file.log\n-rw-rw-r-- 1 reader reader    501 Nov  5 20:09 redirect-to-file.sh\n-rw-rw-r-- 1 reader reader     84 Nov  5 20:13 redirect-to-file.txt\n-rwxrwxr-x 1 reader reader   8392 Nov  5 20:46 stderr\n-rw-rw-r-- 1 reader reader    185 Nov  5 20:46 stderr.c\n```", "```\nreader@ubuntu:~/scripts/chapter_12$ bash stderr\nstderr: stderr: cannot execute binary file\nreader@ubuntu:~/scripts/chapter_12$ chmod +x stderr\nreader@ubuntu:~/scripts/chapter_12$ ./stderr \nThis is sent to stdout.\nThis is sent to stderr.\n```", "```\nreader@ubuntu:~/scripts/chapter_12$ ./stderr > /tmp/stdout\nThis is sent to stderr.\nreader@ubuntu:~/scripts/chapter_12$ cat /tmp/stdout \nThis is sent to stdout.\n```", "```\nreader@ubuntu:~/scripts/chapter_12$ ./stderr 2> /tmp/stderr\nThis is sent to stdout.\nreader@ubuntu:~/scripts/chapter_12$ cat /tmp/stderr \nThis is sent to stderr.\n```", "```\nreader@ubuntu:~/scripts/chapter_12$ ./stderr\nThis is sent to stdout.\nThis is sent to stderr.\nreader@ubuntu:~/scripts/chapter_12$ ./stderr &> /tmp/output\nreader@ubuntu:~/scripts/chapter_12$ cat /tmp/output\nThis is sent to stderr.\nThis is sent to stdout.\n```", "```\nreader@ubuntu:~/scripts/chapter_12$ ./stderr &> /root/file\n-bash: /root/file: Permission denied\nreader@ubuntu:~/scripts/chapter_12$ echo $?\n1\n```", "```\nreader@ubuntu:~/scripts/chapter_12$ ./stderr &> /dev/null \nreader@ubuntu:~/scripts/chapter_12$ echo $?\n0\nreader@ubuntu:~/scripts/chapter_12$ cat /dev/null \nreader@ubuntu:~/scripts/chapter_12$\n```", "```\nreader@ubuntu:~/scripts/chapter_12$ vim find.sh \nreader@ubuntu:~/scripts/chapter_12$ cat find.sh \n#!/bin/bash\n\n#####################################\n# Author: Sebastiaan Tammer\n# Version: v1.0.0\n# Date: 2018-11-06\n# Description: Find a file.\n# Usage: ./find.sh <file-name>\n#####################################\n\n# Check for the current number of arguments.\nif [[ $# -ne 1 ]]; then\n  echo \"Wrong number of arguments!\"\n  echo \"Usage: $0 <file-name>\"\n  exit 1\nfi\n\n# Name of the file to search for.\nfile_name=$1\n\n# Redirect all errors to /dev/null, so they don't clutter the terminal.\nfind / -name \"${file_name}\" 2> /dev/null\n```", "```\nreader@ubuntu:~/scripts/chapter_12$ find / -name find.sh\nfind: ‘/etc/ssl/private’: Permission denied\nfind: ‘/etc/polkit-1/localauthority’: Permission denied\n<SNIPPED>\nfind: ‘/sys/fs/pstore’: Permission denied\nfind: ‘/sys/fs/fuse/connections/48’: Permission denied\n/home/reader/scripts/chapter_12/find.sh\nfind: ‘/data/devops-files’: Permission denied\nfind: ‘/data/dev-files’: Permission denied\n<SNIPPED>\n```", "```\nreader@ubuntu:~/scripts/chapter_12$ bash find.sh find.sh\n/home/reader/scripts/chapter_12/find.sh\n```", "```\nreader@ubuntu:/tmp$ ls -l\n-rw-rw-r-- 1 reader reader   48 Nov  6 19:26 output\nreader@ubuntu:/tmp$ head -c 1024 /dev/zero > allocated-file\nreader@ubuntu:/tmp$ ls -l\n-rw-rw-r-- 1 reader reader 1024 Nov  6 20:09 allocated-file\n-rw-rw-r-- 1 reader reader   48 Nov  6 19:26 output\nreader@ubuntu:/tmp$ cat allocated-file \nreader@ubuntu:/tmp$ \n```", "```\nreader@ubuntu:/tmp$ fallocate --length 1024 fallocated-file\nreader@ubuntu:/tmp$ ls -l\n-rw-rw-r-- 1 reader reader 1024 Nov  6 20:09 allocated-file\n-rw-rw-r-- 1 reader reader 1024 Nov  6 20:13 fallocated-file\n-rw-rw-r-- 1 reader reader   48 Nov  6 19:26 output\nreader@ubuntu:/tmp$ cat fallocated-file \nreader@ubuntu:/tmp$ \n```", "```\nreader@ubuntu:~$ read -p \"Type something: \" answer\nType something: Something\nreader@ubuntu:~$ echo ${answer}\nsomething\n```", "```\nreader@ubuntu:/tmp$ echo \"Something else\" > answer-file\nreader@ubuntu:/tmp$ read -p \"Type something: \" new_answer < answer-file\nreader@ubuntu:/tmp$ echo ${new_answer}\nSomething else\n```", "```\nreader@ubuntu:/tmp$ head -1 /dev/urandom \n~d=G1���RB�Ҫ��\"@\n                F��OJ2�%�=�8�#,�t�7���M���s��Oѵ�w��k�qݙ����W��E�h��Q\"x8��l�d��P�,�.:�m�[Lb/A�J�ő�M�o�v��\n                                                                                                        �\nreader@ubuntu:/tmp$ head -1 /dev/urandom \n��o�u���'��+�)T�M���K�K����Y��G�g\".!{R^d8L��s5c*�.đ�\n```", "```\nreader@ubuntu:~/scripts/chapter_12$ vim password-generator.sh \nreader@ubuntu:~/scripts/chapter_12$ cat password-generator.sh \n#!/bin/bash\n\n#####################################\n# Author: Sebastiaan Tammer\n# Version: v1.0.0\n# Date: 2018-11-06\n# Description: Generate a password.\n# Usage: ./password-generator.sh <length>\n#####################################\n\n# Check for the current number of arguments.\nif [[ $# -ne 1 ]]; then\n  echo \"Wrong number of arguments!\"\n  echo \"Usage: $0 <length>\"\n  exit 1\nfi\n\n# Verify the length argument.\nif [[ ! $1 =~ ^[[:digit:]]+$ ]]; then\n  echo \"Please enter a length (number).\"\n  exit 1\nfi\n\npassword_length=$1\n\n# tr grabs readable characters from input, deletes the rest.\n# Input for tr comes from /dev/urandom, via input redirection.\n# echo makes sure a newline is printed.\ntr -dc 'a-zA-Z0-9' < /dev/urandom | head -c ${password_length}\necho\n```", "```\nreader@ubuntu:~/scripts/chapter_12$ cat stderr.c \n#include <stdio.h>\nint main()\n{\n  // Print messages to stdout and stderr.\n  fprintf(stdout, \"This is sent to stdout.\\n\");\n  fprintf(stderr, \"This is sent to stderr.\\n\");\n  return 0;\n}\n\nreader@ubuntu:~/scripts/chapter_12$ grep 'stderr' < stderr.c \n  // Print messages to stdout and stderr.\n  fprintf(stderr, \"This is sent to stderr.\\n\");\nreader@ubuntu:~/scripts/chapter_12$ grep 'stderr' < stderr.c > /tmp/grep-file\nreader@ubuntu:~/scripts/chapter_12$ cat /tmp/grep-file \n  // Print messages to stdout and stderr.\n  fprintf(stderr, \"This is sent to stderr.\\n\");\n```", "```\nreader@ubuntu:~/scripts/chapter_12$ < stderr.c grep 'stdout' > /tmp/grep-file-stdout\nreader@ubuntu:~/scripts/chapter_12$ cat /tmp/grep-file-stdout \n // Print messages to stdout and stderr.\n fprintf(stdout, \"This is sent to stdout.\\n\");\n```", "```\nreader@ubuntu:/tmp$ cat /etc/shadow\ncat: /etc/shadow: Permission denied\nreader@ubuntu:/tmp$ cat /etc/shadow > shadow\ncat: /etc/shadow: Permission denied\nreader@ubuntu:/tmp$ cat shadow \n#Still empty, since stderr wasn't redirected to the file.\nreader@ubuntu:/tmp$ cat /etc/shadow > shadow 2>&1 \n#Redirect fd2 to fd1 (stderr to stdout).\nreader@ubuntu:/tmp$ cat shadow \ncat: /etc/shadow: Permission denied\n```", "```\nreader@ubuntu:/tmp$ head -1 /etc/passwd\nroot:x:0:0:root:/root:/bin/bash\nreader@ubuntu:/tmp$ head -1 /etc/passwd 2> passwd\nroot:x:0:0:root:/root:/bin/bash\nreader@ubuntu:/tmp$ cat passwd\n#Still empty, since stdout wasn't redirected to the file.\nreader@ubuntu:/tmp$ head -1 /etc/passwd 2> passwd 1>&2\n#Redirect fd1 to fd2 (stdout to stderr).\nreader@ubuntu:/tmp$ cat passwd \nroot:x:0:0:root:/root:/bin/bash\n```", "```\ndirname $0 > directory-file\ncd < directory-file\nrm directory-file\n```", "```\nreader@ubuntu:~/scripts/chapter_12$ vim simple-password-generator.sh \nreader@ubuntu:~/scripts/chapter_12$ cat simple-password-generator.sh \n#!/bin/bash\n\n#####################################\n# Author: Sebastiaan Tammer\n# Version: v1.0.0\n# Date: 2018-11-10\n# Description: Use command substitution with a variable.\n# Usage: ./simple-password-generator.sh\n#####################################\n\n# Write a random string to a variable using command substitution.\nrandom_password=$(tr -dc 'a-zA-Z0-9' < /dev/urandom | head -c 20)\n\necho \"Your random password is: ${random_password}\"\n\nreader@ubuntu:~/scripts/chapter_12$ bash simple-password-generator.sh \nYour random password is: T3noJ3Udf8a2eQbqPiad\nreader@ubuntu:~/scripts/chapter_12$ bash simple-password-generator.sh \nYour random password is: wu3zpsrusT5zyvbTxJSn\n```", "```\nreader@ubuntu:~/scripts/chapter_12$ echo \"Your random password is: $(tr -dc 'a-zA-Z0-9' < /dev/urandom | head -c 20)\"\nYour random password is: REzCOa11pA2846fvxsa\n```", "```\n<(command)\n```", "```\nreader@ubuntu:~/scripts/chapter_12$ diff <(ls /tmp/) <(ls /home/)\n1,11c1\n< directory-file\n< grep-file\n< grep-file-stdout\n< passwd\n< shadow\n---\n> reader\n```", "```\nreader@ubuntu:/tmp$ echo 'Fly into the distance' > file\nreader@ubuntu:/tmp$ grep 'distance' < file\nFly into the distance reader@ubuntu:/tmp$ echo 'Fly into the distance' | grep 'distance'Fly into the distance \n```", "```\ncommand-with-output | command-using-input\n```", "```\nreader@ubuntu:~/scripts/chapter_12$ cat /etc/shadow | grep 'denied'\ncat: /etc/shadow: Permission denied\nreader@ubuntu:~/scripts/chapter_12$ cat /etc/shadow | grep 'denied' > /tmp/empty-file\ncat: /etc/shadow: Permission denied #Printed to stderr on terminal.\nreader@ubuntu:~/scripts/chapter_12$ cat /etc/shadow | grep 'denied' 2> /tmp/error-file\ncat: /etc/shadow: Permission denied #Printed to stderr on terminal.\nreader@ubuntu:~/scripts/chapter_12$ cat /tmp/empty-file\nreader@ubuntu:~/scripts/chapter_12$ cat /tmp/error-file\n```", "```\nreader@ubuntu:~/scripts/chapter_12$ cat /etc/shadow |& grep 'denied'\ncat: /etc/shadow: Permission denied\nreader@ubuntu:~/scripts/chapter_12$ cat /etc/shadow |& grep 'denied' > /tmp/error-file\nreader@ubuntu:~/scripts/chapter_12$ cat /tmp/error-file \ncat: /etc/shadow: Permission denied\nreader@ubuntu:~/scripts/chapter_12$ cat /etc/shadow |& grep 'denied' 2> /tmp/error-file\ncat: /etc/shadow: Permission denied\nreader@ubuntu:~/scripts/chapter_12$ cat /tmp/error-file\n```", "```\nreader@ubuntu:~/scripts/chapter_12$ vim piped-passwords.sh\nreader@ubuntu:~/scripts/chapter_12$ cat piped-passwords.sh \n#!/bin/bash\n\n#####################################\n# Author: Sebastiaan Tammer\n# Version: v1.0.0\n# Date: 2018-11-10\n# Description: Generate a password, using only pipes.\n# Usage: ./piped-passwords.sh\n#####################################\n\npassword=$(head /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c20)\n\necho \"Your random password is: ${password}\"\n```", "```\nreader@ubuntu:~/scripts/chapter_12$ vim password-setter.sh \nreader@ubuntu:~/scripts/chapter_12$ cat password-setter.sh \n#!/bin/bash\n\n#####################################\n# Author: Sebastiaan Tammer\n# Version: v1.0.0\n# Date: 2018-11-10\n# Description: Set a password using chpasswd.\n# Usage: ./password-setter.sh\n#####################################\n\nNEW_USER_NAME=bob\n\n# Verify this script is run with root privileges.\nif [[ $(id -u) -ne 0 ]]; then\n  echo \"Please run as root or with sudo!\"\n  exit 1\nfi\n\n# We only need exit status, send all output to /dev/null.\nid ${NEW_USER_NAME} &> /dev/null\n\n# Check if we need to create the user.\nif [[ $? -ne 0 ]]; then\n  # User does not exist, create the user.\n  useradd -m ${NEW_USER_NAME}\nfi\n\n# Set the password for the user.\necho \"${NEW_USER_NAME}:password\" | chpasswd\n```", "```\nsudo apt upgrade -y | tee /tmp/upgrade.log\n```", "```\nsudo apt upgrade -y |& tee /tmp/upgrade.log\n```", "```\nreader@ubuntu:~/scripts/chapter_12$ sudo apt upgrade -y |& tee /tmp/upgrade.log\nWARNING: apt does not have a stable CLI interface. Use with caution in scripts.\nReading package lists...\n<SNIPPED>\n0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.\nreader@ubuntu:~/scripts/chapter_12$ cat /tmp/upgrade.log \nWARNING: apt does not have a stable CLI interface. Use with caution in scripts.\nReading package lists...\n<SNIPPED>\n0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.\n```", "```\ncat << EOF\ninput\nmore input\nthe last input\nEOF\n```", "```\nreader@ubuntu:~/scripts/chapter_12$ cat << EOF\n> input\n> more input\n> the last input\n> EOF\ninput\nmore input\nthe last input\n```", "```\nreader@ubuntu:~/scripts/chapter_12$ cat << end-of-file\n> The delimiting identifier is end-of-file\n> But it only stops when end-of-file is the only thing on the line\n> end-of-file does not work, since it has text after it\n> end-of-file\nThe delimiting identifier is end-of-file\nBut it only stops when end-of-file is the only thing on the line\nend-of-file does not work, since it has text behind it\n```", "```\nreader@ubuntu:~/scripts/chapter_12$ wall << EOF\n> Hi guys, we're rebooting soon, please save your work!\n> It would be a shame if you lost valuable time...\n> EOF\n\nBroadcast message from reader@ubuntu (pts/0) (Sat Nov 10 16:21:15 2018):\n\nHi guys, we're rebooting soon, please save your work!\nIt would be a shame if you lost valuable time...\n```", "```\nreader@ubuntu:~/scripts/chapter_12$ cat << EOF\n> Hi, this is $USER!\n> EOF\nHi, this is reader!\n```", "```\nreader@ubuntu:~/scripts/chapter_12$ cat << 'EOF'\n> Hi, this is $USER!\n> EOF\nHi, this is $USER!\n```", "```\nreader@ubuntu:/tmp$ head /home/reader/scripts/chapter_11/while-interactive.sh\n#!/bin/bash\n\n#####################################\n# Author: Sebastiaan Tammer\n# Version: v1.1.0\n# Date: 2018-10-28\n# Description: A simple riddle in a while loop.\n# Usage: ./while-interactive.sh\n#####################################\n\nreader@ubuntu:/tmp$ bash /home/reader/scripts/chapter_11/while-interactive.sh << EOF\na mouse  #Try 1.\nthe sun  #Try 2.\nkeyboard #Try 3.\nEOF\n\nIncorrect, please try again. #Try 1.\nIncorrect, please try again. #Try 2.\nCorrect, congratulations!    #Try 3.\nNow we can continue after the while loop is done, awesome!\n```", "```\nreader@ubuntu:/tmp$ echo \"2^8\" | bc\n256\n\nreader@ubuntu:/tmp$ echo \"4*4\" > math\nreader@ubuntu:/tmp$ bc math\nbc 1.07.1\nCopyright 1991-1994, 1997, 1998, 2000, 2004, 2006, 2008, 2012-2017 Free Software Foundation, Inc.\nThis is free software with ABSOLUTELY NO WARRANTY.\nFor details type `warranty'. \n16\n^C\n(interrupt) use quit to exit.\nquit\n```", "```\nreader@ubuntu:/tmp$ bc <<< 2^8\n256\n```"]