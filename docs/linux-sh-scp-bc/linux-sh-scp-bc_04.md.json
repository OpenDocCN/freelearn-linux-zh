["```\n#!/bin/sh\n#\n# 5/8/2017\n#\ntput clear\n```", "```\n#!/bin/sh\n#\n# 5/8/2017\n#\ntput clear\ndmesg | head\n```", "```\n#!/bin/sh\n#\n# 5/8/2017\n#\nFN=/tmp/dmesg.txt\ndmesg > $FN\necho \"File $FN created.\"\nexit 0\n```", "```\ntput cup <row><col>         # moves the cursor to row, col\ntput cup 0 0                # cursor to the upper left hand side\ntput cup $LINES $COLUMNS    # cursor to bottom right hand side\ntput clear                  # clears the terminal screen\ntput smso                   # bolds the text that follows\ntput rmso                   # un-bolds the text that follows\n```", "```\n#!/bin/sh\n# 6/13/2017\n# script4\n\n# Subroutines\ncls()\n{\n tput clear\n return 0\n}\n\nhome()\n{\n tput cup 0 0\n return 0\n}\n\nend()\n{\n let x=$COLUMNS-1\n tput cup $LINES $x\n echo -n \"X\"                 # no newline or else will scroll\n}\n\nbold()\n{\n tput smso\n}\n\nunbold()\n{\n tput rmso\n}\n\nunderline()\n{\n tput smul\n}\n\nnormalline()\n{\n tput rmul\n}\n\n# Code starts here\nrc=0                         # return code\nif [ $# -ne 1 ] ; then\n echo \"Usage: script4 parameter\"\n echo \"Where parameter can be: \"\n echo \" home      - put an X at the home position\"\n echo \" cls       - clear the terminal screen\"\n echo \" end       - put an X at the last screen position\"\n echo \" bold      - bold the following output\"\n echo \" underline - underline the following output\"\n exit 255\nfi\n\nparm=$1                      # main parameter 1\n\nif [ \"$parm\" = \"home\" ] ; then\n echo \"Calling subroutine home.\"\n home\n echo -n \"X\"\nelif [ \"$parm\" = \"cls\" ] ; then\n cls\nelif [ \"$parm\" = \"end\" ] ; then\n echo \"Calling subroutine end.\"\n end\nelif [ \"$parm\" = \"bold\" ] ; then\n echo \"Calling subroutine bold.\"\n bold\n echo \"After calling subroutine bold.\"\n unbold\n echo \"After calling subroutine unbold.\"\nelif [ \"$parm\" = \"underline\" ] ; then\n echo \"Calling subroutine underline.\"\n underline\n echo \"After subroutine underline.\"\n normalline\n echo \"After subroutine normalline.\"\nelse\n echo \"Unknown parameter: $parm\"\n rc=1\nfi\n\nexit $rc\n```", "```\n#!/bin/sh\n# 6/13/2017\n# script5\n\n# Subroutines\ncls()\n{\n tput clear\n return 0\n}\n\nhome()\n{\n tput cup 0 0\n return 0\n}\n\nend()\n{\n let x=$COLUMNS-1\n tput cup $LINES $x\n echo -n \"X\"                 # no newline or else will scroll\n}\n\nbold()\n{\n tput smso\n}\n\nunbold()\n{\n tput rmso\n}\n\nunderline()\n{\n tput smul\n}\n\nnormalline()\n{\n tput rmul\n}\n\nmove()                       # move cursor to row, col\n{\n tput cup $1 $2\n}\n\nmovestr()                    # move cursor to row, col\n{\n tput cup $1 $2\n echo $3\n}\n\n# Code starts here\ncls                          # clear the screen to make the output look better\nrc=0                         # return code\nif [ $# -ne 1 ] ; then\n echo \"Usage: script5 parameter\"\n echo \"Where parameter can be: \"\n echo \" home      - put an X at the home position\"\n echo \" cls       - clear the terminal screen\"\n echo \" end       - put an X at the last screen position\"\n echo \" bold      - bold the following output\"\n echo \" underline - underline the following output\"\n echo \" move      - move cursor to row,col\"\n echo \" movestr   - move cursor to row,col and output string\"\n exit 255\nfi\n\nparm=$1                      # main parameter 1\n\nif [ \"$parm\" = \"home\" ] ; then\n home\n echo -n \"X\"\nelif [ \"$parm\" = \"cls\" ] ; then\n cls\nelif [ \"$parm\" = \"end\" ] ; then\n move 0 0\n echo \"Calling subroutine end.\"\nend\nelif [ \"$parm\" = \"bold\" ] ; then\n echo \"Calling subroutine bold.\"\n bold\n echo \"After calling subroutine bold.\"\n unbold\n echo \"After calling subroutine unbold.\"\nelif [ \"$parm\" = \"underline\" ] ; then\n echo \"Calling subroutine underline.\"\n underline\n echo \"After subroutine underline.\"\n normalline\n echo \"After subroutine normalline.\"\nelif [ \"$parm\" = \"move\" ] ; then\n move 10 20\n echo \"This line started at row 10 col 20\"\nelif [ \"$parm\" = \"movestr\" ] ; then\n movestr 15 40 \"This line started at 15 40\"\nelse\n echo \"Unknown parameter: $parm\"\n rc=1\nfi\n\nexit $rc\n```", "```\nguest1 $ script5\n```", "```\nguest1 $ script5 move\n```", "```\nguest1 $ script5 movestr\n```", "```\n#!/bin/sh\n#\n# 6/13/2017\n# script6\n\n# Subroutines\nsub1()\n{\n echo \"Entering sub1\"\n rc1=0                       # default is no error\n if [ $# -ne 1 ] ; then\n  echo \"sub1 requires 1 parameter\"\n  rc1=1                      # set error condition\n else\n  echo \"1st parm: $1\"\n fi\n\n echo \"Leaving sub1\"\n return $rc1                 # routine return code\n}\n\nsub2()\n{\n echo \"Entering sub2\"\n rc2=0                       # default is no error\n if [ $# -ne 2 ] ; then\n  echo \"sub2 requires 2 parameters\"\n  rc2=1                      # set error condition\n else\n  echo \"1st parm: $1\"\n  echo \"2nd parm: $2\"\n fi\n echo \"Leaving sub2\"\n return $rc2                 # routine return code\n}\n\nsub3()\n{\n echo \"Entering sub3\"\n rc3=0                       # default is no error\n if [ $# -ne 3 ] ; then\n  echo \"sub3 requires 3 parameters\"\n  rc3=1                      # set error condition\n else\n  echo \"1st parm: $1\"\n  echo \"2nd parm: $2\"\n  echo \"3rd parm: $3\"\n fi\n echo \"Leaving sub3\"\n return $rc3                 # routine return code\n}\n\ncls()                        # clear screen\n{\n tput clear\n return $?                   # return code from tput\n}\n\ncauseanerror()\n{\n echo \"Entering causeanerror\"\n tput firephasers\n return $?                   # return code from tput\n}\n\n# Code starts here\ncls                          # clear the screen\nrc=$?\necho \"return code from cls: $rc\"\nrc=0                         # reset the return code\nif [ $# -ne 3 ] ; then\n echo \"Usage: script6 parameter1 parameter2 parameter3\"\n echo \"Where all parameters are simple strings.\"\n exit 255\nfi\n\nparm1=$1                     # main parameter 1\nparm2=$2                     # main parameter 2\nparm3=$3                     # main parameter 3\n\n# show main parameters\necho \"parm1: $parm1  parm2: $parm2  parm3: $parm3\"\n\nsub1 \"sub1-parm1\"\necho \"return code from sub1: $?\"\n\nsub2 \"sub2-parm1\"\necho \"return code from sub2: $?\"\n\nsub3 $parm1 $parm2 $parm3\necho \"return code from sub3: $?\"\n\ncauseanerror\necho \"return code from causeanerror: $?\"\n\nexit $rc\n```", "```\n#!/bin/sh\n#\n# Auto backs up the file given if it has changed\n# Assumes the cbS command exists\n# Checks that ../back exists\n# Copies to specific USB directory\n# Checks if filename.bak exists on startup, copy if it doesn't\n\necho \"autobackup by Lewis 5/9/2017 A\"\nif [ $# -ne 3 ] ; then\n echo \"Usage: autobackup filename USB-backup-dir delay\"\n exit 255\nfi\n\n# Create back directory if it does not exist\nif [ ! -d back ] ; then\n mkdir back\nfi\n\nFN=$1                        # filename to monitor\nUSBdir=$2                    # USB directory to copy to\nDELAY=$3                     # how often to check\n\nif [ ! -f $FN ] ; then       # if no filename abort\n echo \"File: $FN does not exist.\"\n exit 5\nfi\n\nif [ ! -f $FN.bak ] ; then\n cp $FN $FN.bak\nfi\n\nfilechanged=0\nwhile [ 1 ]\ndo\n cmp $FN $FN.bak\n rc=$?\n if [ $rc -ne 0 ] ; then\n  cp $FN back\n  cp $FN $USBdir\n  cd back\n  cbS $FN\n  cd ..\n  cp $FN $FN.bak\n  filechanged=1\n fi\n\n sleep $DELAY\ndone\n```"]