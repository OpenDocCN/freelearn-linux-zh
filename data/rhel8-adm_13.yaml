- en: '*Chapter 11*:System Security Profiles with OpenSCAP'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第11章*：使用OpenSCAP进行系统安全配置文件'
- en: '**SCAP** stands for **Security Content Automation Protocol**, a standardized
    way to check, verify, and report vulnerability assessment and policy assessment.
    Red Hat Enterprise Linux (RHEL) 8 includes the tool **OpenSCAP**, and profiles
    to audit and manage the security in the systems. This helps ensure the systems
    you are managing comply with standard security policies such as the **Payment
    Card Industry Data Security Standard** (**PCI DSS**) or the **Protection Profile
    for General Purpose Operating Systems**, or **Operating System Protection Profile**
    (**OSPP**) for short, as well as discovering vulnerabilities.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**SCAP**代表**安全内容自动化协议**，这是一种标准化的检查、验证和报告漏洞评估和策略评估的方式。Red Hat Enterprise Linux
    (RHEL) 8包括了工具**OpenSCAP**，以及用于审计和管理系统安全的配置文件。这有助于确保您正在管理的系统符合标准的安全策略，如**支付卡行业数据安全标准**（**PCI
    DSS**）或**通用操作系统保护配置文件**，或简称为**OSPP**，以及发现漏洞。'
- en: RHEL 8 includes this tool to review security profiles in order to discover possible
    attack vectors (misconfigurations or vulnerabilities) and can obtain guidance
    on how to better harden the system. We will learn how to perform a scan on a system,
    and discover what needs to be changed to prepare it, in order to ensure it is
    completely aligned with the regulatory requirements. We will also learn how this
    tool can be used to improve the security of a system for general use by reviewing
    it and applying the recommended changes.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: RHEL 8包括了这个工具，用于审查安全配置文件以发现可能的攻击向量（配置错误或漏洞），并可以获得如何更好地加固系统的指导。我们将学习如何对系统进行扫描，并发现需要更改以准备系统完全符合监管要求的内容。我们还将学习如何使用这个工具来改进系统的安全性，以便通过审查和应用推荐的更改来提高系统的安全性。
- en: 'To review how to use OpenSCAP, in this chapter we will go through the following
    topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 为了了解如何使用OpenSCAP，在本章中我们将讨论以下主题：
- en: Getting started with OpenSCAP and discovering system vulnerabilities
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开始使用OpenSCAP并发现系统漏洞
- en: Using OpenSCAP with security profiles for OSPP and PCI DSS
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用OpenSCAP进行OSPP和PCI DSS的安全配置文件
- en: Getting started with OpenSCAP and discovering system vulnerabilities
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开始使用OpenSCAP并发现系统漏洞
- en: Let's get started in OpenSCAP in a practical way by first reviewing the `Security
    Tools` software group, which has some tools that are good to know, and then proceeding
    to run some scans.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从实际角度开始使用OpenSCAP，首先审查`安全工具`软件组，其中有一些值得了解的工具，然后继续运行一些扫描。
- en: 'Our initial step will be to get information on `Security Tools`:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的初始步骤将是获取有关`安全工具`的信息：
- en: '[PRE0]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This group includes several security tools, such as `aide`, to ensure file integrity
    in the system; `tpm-tools` to manage the `openscap-utils` to review the security
    policies in the system.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这个组包括了几个安全工具，比如`aide`，用于确保系统文件的完整性；`tpm-tools`，用于管理`openscap-utils`以审查系统中的安全策略。
- en: 'We can get more information on those tools by using `dnf`. Let''s review the
    one that is more relevant for this chapter, `openscap-utils`:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过使用`dnf`来获取有关这些工具的更多信息。让我们来审查对本章更相关的一个工具，`openscap-utils`：
- en: '[PRE1]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: We can see in the output of the previous command what the `openscap-utils` package
    is about, with a brief description and a link to the main web page, which includes
    more extensive information.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在上一个命令的输出中看到`openscap-utils`软件包的相关信息，包括简要描述和主要网页的链接，其中包括更详细的信息。
- en: Tip
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: It would be useful to run the `dnf info` command for each of the tools mentioned
    and visit their web pages. This way you will be able to gain a better understanding
    of the capabilities these tools provide and be able to use them.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 对于提到的每个工具运行`dnf info`命令并访问它们的网页将会很有用。这样你就能更好地了解这些工具提供的功能，并能够使用它们。
- en: 'Let''s now install `openscap-utils`:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们安装`openscap-utils`：
- en: '[PRE2]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Now let''s install `scap-security-guide`, which includes the RHEL-specific
    SCAP profiles:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们安装`scap-security-guide`，其中包括了RHEL特定的SCAP配置文件：
- en: '[PRE3]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'With this package comes the SCAP Security Guides, including the one related
    to vulnerabilities for RHEL 8, which is located at `/usr/share/xml/scap/ssg/content/ssg-rhel8-oval.xml`.
    We can now run an initial scan using all the checks included in the profile. Please
    note that this will include 2,323 tests and that this will be done as an exercise
    to learn about possible vulnerabilities and actions to harden a system. So, let''s
    run it:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这个软件包包括了SCAP安全指南，包括了与RHEL 8漏洞相关的指南，位于`/usr/share/xml/scap/ssg/content/ssg-rhel8-oval.xml`。现在我们可以运行一个初始扫描，使用配置文件中包含的所有检查。请注意，这将包括2323个测试，并且这将作为一个学习可能漏洞和加固系统的练习。所以，让我们运行它：
- en: '[PRE4]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'A file called `vulnerability.html` will be generated with the output of the
    scan. The results will look like this:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 将生成一个名为`vulnerability.html`的文件，其中包含扫描的输出。结果将如下所示：
- en: '![Figure 11.1 – Initial results of an OpenSCAP test scan'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '![图11.1 – OpenSCAP测试扫描的初始结果'
- en: '](img/B16799_11_001.jpg)'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_11_001.jpg)'
- en: Figure 11.1 – Initial results of an OpenSCAP test scan
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.1 – OpenSCAP测试扫描的初始结果
- en: 'Let''s check some of the details of the report. In the top-left corner, we
    will find **OVAL Results Generator Information**, with the details of the run,
    and a summary of the results:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们检查报告的一些细节。在左上角，我们将找到**OVAL结果生成器信息**，其中包含运行的详细信息和结果摘要：
- en: '![Figure 11.2 – OpenSCAP test scan summary'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '![图11.2 – OpenSCAP测试扫描摘要'
- en: '](img/B16799_11_002.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_11_002.jpg)'
- en: Figure 11.2 – OpenSCAP test scan summary
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.2 – OpenSCAP测试扫描摘要
- en: 'In the top-right corner, we can see **OVAL Definition Generator Information**
    with a summary of the definitions used for checks:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在右上角，我们可以看到**OVAL定义生成器信息**，其中包含用于检查的定义摘要：
- en: '![Figure 11.3 – OpenSCAP test scan definitions summary'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '![图11.3 – OpenSCAP测试扫描定义摘要'
- en: '](img/B16799_11_003.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_11_003.jpg)'
- en: Figure 11.3 – OpenSCAP test scan definitions summary
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.3 – OpenSCAP测试扫描定义摘要
- en: 'Right below those tokens of information, we can see a basic summary of the
    system, useful if we have a long list of scans and we want to assign this scan
    to the proper system:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些信息标记下方，我们可以看到系统的基本摘要，如果我们有一个很长的扫描列表，并且想要将此扫描分配给适当的系统，这将非常有用：
- en: '![Figure 11.4 – OpenSCAP test scan system summary'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '![图11.4 - OpenSCAP测试扫描系统摘要'
- en: '](img/B16799_11_004.jpg)'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_11_004.jpg)'
- en: Figure 11.4 – OpenSCAP test scan system summary
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.4 - OpenSCAP测试扫描系统摘要
- en: 'Underneath it, we have information on the generator:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面，我们有有关生成器的信息：
- en: '![Figure 11.5 – OpenSCAP test scan generator info'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '![图11.5 - OpenSCAP测试扫描生成器信息'
- en: '](img/B16799_11_005.jpg)'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_11_005.jpg)'
- en: Figure 11.5 – OpenSCAP test scan generator info
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.5 - OpenSCAP测试扫描生成器信息
- en: 'And finally, the results of the checks:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，检查结果如下：
- en: '![Figure 11.6 – OpenSCAP test scan results'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '![图11.6 - OpenSCAP测试扫描结果'
- en: '](img/B16799_11_006.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_11_006.jpg)'
- en: Figure 11.6 – OpenSCAP test scan results
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.6 - OpenSCAP测试扫描结果
- en: With this test, we have run a vulnerability scan on our system, obtaining a
    set of results that, depending on the usage of the system, will need to be addressed.
    In many cases, the warnings received do not apply, so we need to review them carefully.
    This kind of exercise shall be done carefully on production systems, taking care
    of having a proper backup and snapshot of the system before proceeding to apply
    changes. It is recommended to run the hardening in test environments while building
    the service before moving it to production when possible.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这次测试，我们对系统进行了漏洞扫描，得到了一组结果，根据系统的使用情况，这些结果将需要被处理。在许多情况下，收到的警告并不适用，因此我们需要仔细审查它们。这种练习在生产系统上必须小心进行，确保在应用更改之前有适当的备份和系统快照。建议在构建服务时在测试环境中运行加固，然后再将其移至生产环境。
- en: Important note
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: The *Red Hat Enterprise Linux System Design Guide* for RHEL 8 is a great piece
    of documentation to get started on system security. It is recommended to read
    through it in order to extend the knowledge acquired in this chapter. It's available
    at [https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/system_design_guide/index](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/system_design_guide/index).
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '*RHEL 8红帽企业Linux系统设计指南*是一个很好的文档，可以帮助我们开始系统安全工作。建议阅读该文档，以扩展本章中所学到的知识。可在[https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/system_design_guide/index](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/system_design_guide/index)找到。'
- en: Let's learn more about the basics. For this scan, we have used the Red Hat security
    advisories **Open Vulnerability Assessment Language** (**OVAL**) feed, as provided
    by system packages. To check, we have run the OpenSCAP tool to review different
    security advisories and vulnerabilities as written in OVAL.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们了解更多基础知识。对于这次扫描，我们使用了由系统软件包提供的Red Hat安全公告**开放式漏洞评估语言**（**OVAL**）订阅。为了检查，我们运行了OpenSCAP工具来审查不同的安全公告和漏洞，这些漏洞是按照OVAL编写的。
- en: OVAL requires that the analyzed resources are in a certain state to consider
    them correct. It does so in a declarative manner, which means the end state is
    described and reviewed, not how to get to it.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: OVAL要求分析的资源处于特定状态才能被认为是正确的。它以声明方式进行，这意味着描述和审查的是最终状态，而不是如何达到这个状态。
- en: The Red Hat security team generates Red Hat security advisories to address the
    different vulnerabilities that the system may be incurring and releases an OVAL
    definition for each one of them. These are released openly and are available at
    [https://www.redhat.com/security/data/oval/v2/](https://www.redhat.com/security/data/oval/v2/).
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 红帽安全团队生成红帽安全公告，以解决系统可能存在的不同漏洞，并为每一个漏洞发布一个OVAL定义。这些是公开发布的，并可在[https://www.redhat.com/security/data/oval/v2/](https://www.redhat.com/security/data/oval/v2/)上找到。
- en: 'Now let''s take a look at one example found in our report:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们看一下在我们的报告中找到的一个例子：
- en: '`oval:ssg-accounts_logon_fail_delay:def:1`'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`oval:ssg-accounts_logon_fail_delay:def:1`'
- en: '`false`'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`false`'
- en: '`compliance`'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`合规性`'
- en: '`[accounts_logon_fail_delay]`'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`[accounts_logon_fail_delay]`'
- en: '`Ensure that FAIL_DELAY is Configured in /etc/login.defs`'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`确保在/etc/login.defs中配置了FAIL_DELAY`'
- en: 'We can check the manual page for it by running `man login.defs`. In it, we
    will find the following:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过运行`man login.defs`来查看其手册页面。在其中，我们会找到以下内容：
- en: '[PRE5]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'This is the value to establish how long a user will have to wait after a failed
    login attempt. It is intended to avoid brute force attacks on accounts in the
    system. We may take, for example, two approaches to fix it:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个用来确定用户在失败的登录尝试后需要等待多长时间的值。它旨在避免对系统中的帐户进行暴力攻击。我们可以采取两种方法来解决这个问题：
- en: Add the `FAIL_DELAY` variable and value to `login.defs`.
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将`FAIL_DELAY`变量和值添加到`login.defs`中。
- en: Enforce access to the system by only allowing login access using SSH keys and
    not passwords.
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 只允许使用SSH密钥而不是密码来登录系统。
- en: Or even better, do both (security in depth). We could continue to review each
    of the entries in the list and understand each of them to complete the hardening
    of the system to avoid as much exposure as possible. This is a task that is usually
    run in coordination with the security teams and is continuously being reviewed.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 或者更好的是，两者都做（深度安全）。我们可以继续审查列表中的每一项，并了解每一项，以完成系统的加固，尽量避免暴露。这通常需要与安全团队协调，并且需要持续审查。
- en: Now that we have run our first vulnerability scan, let's see how we can do it
    for compliance in the next section.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经运行了第一次漏洞扫描，让我们看看如何在下一节中进行合规性扫描。
- en: Using OpenSCAP with security profiles for OSPP and PCI DSS
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用OpenSCAP进行OSPP和PCI DSS的安全配置文件
- en: There are several security profiles used for compliance in the industry. Two
    of the most common, which we will review here, are the **Operating System Protection
    Profile** (**OSPP**) and the PCI DSS.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在行业中有几种用于合规性的安全配置文件。其中两种最常见的，我们将在这里进行审查，分别是**操作系统保护配置文件**（**OSPP**）和PCI DSS。
- en: The OSPP standard is heavily used in the public sector, serving general-purpose
    systems and also as the baseline for other more restrictive environments (that
    is, defense accredited systems).
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: OSPP标准在公共部门中被广泛使用，为通用系统提供服务，并且也作为其他更严格环境（即，国防认证系统）的基线。
- en: PCI DSS is one of the most widely used standards in the finance sector, which
    also applies to other sectors that want to provide online payments using credit
    cards.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: PCI DSS是金融领域中最广泛使用的标准之一，也适用于其他希望使用信用卡进行在线支付的部门。
- en: 'RHEL 8 provides references to verify those profiles using OpenSCAP tools. Let''s
    move to the `/usr/share/xml/scap/ssg/content/` directory, where they reside, and
    take a look:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: RHEL 8提供了使用OpenSCAP工具验证这些配置文件的参考。让我们转到`/usr/share/xml/scap/ssg/content/`目录，查看它们所在的位置：
- en: '[PRE6]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'As you can see, we have different types of descriptions that can be used with
    OpenSCAP. We already know OVAL. Let''s check the most important ones:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所看到的，我们有不同类型的描述可以与OpenSCAP一起使用。我们已经了解了OVAL。让我们检查最重要的几个：
- en: '**Extensible Configuration Checklist Description Format (XCCDF)**: XCCDF is
    used to build security checklists. It''s very common for compliance testing and
    scoring.'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可扩展配置清单描述格式（XCCDF）**：XCCDF用于构建安全检查表。它非常常用于合规性测试和评分。'
- en: '**Common Platform Enumeration (CPE)**: CPE helps identify systems by assigning
    unique identifier names. This way, it can correlate tests and names.'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**通用平台枚举（CPE）**：CPE通过分配唯一的标识符名称来帮助识别系统。这样，它可以关联测试和名称。'
- en: '**Open Checklist Interactive Language (OCIL)**: OCIL is part of the SCAP standard.
    It is a way to aggregate other checks from different datastores.'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**开放清单交互语言（OCIL）**：OCIL是SCAP标准的一部分。它是一种聚合来自不同数据存储的其他检查的方法。'
- en: '**DataStream (DS)**: DS is a format that puts together several components into
    a single file. It is used to distribute profiles easily.'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据流（DS）**：DS是一种格式，它将几个组件组合成一个单个文件。它用于轻松分发配置文件。'
- en: Tip
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: 'More information on the different security descriptions and components can
    be found on the OpenSCAP web page by checking the components URL: [https://www.open-scap.org/features/scap-components/](https://www.open-scap.org/features/scap-components/).'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 有关不同安全描述和组件的更多信息可以在OpenSCAP网页上找到，通过检查组件URL：[https://www.open-scap.org/features/scap-components/](https://www.open-scap.org/features/scap-components/)。
- en: "In this case, we will use the `ssg-rhel8-ds.xml` file. Let's check the information\
    \ \Lrelated to it:"
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我们将使用`ssg-rhel8-ds.xml`文件。让我们检查与之相关的信息：
- en: '[PRE7]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: As you can see, it includes the profiles for both OSPP and PCI DSS for RHEL
    8\. Let's give them a try.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，它包括RHEL 8的OSPP和PCI DSS配置文件。让我们试试看。
- en: Scanning for OSPP compliance
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 扫描OSPP合规性
- en: 'We can use the `--profile` option for `oscap` to get information specific to
    the **OSPP** profile:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`oscap`的`--profile`选项来获取特定于**OSPP**配置文件的信息：
- en: '[PRE8]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'We can see in the information that the OSPP profile comes described as `xccdf`.
    We can now run `oscap`, indicating that we want to use that format with the `xcddf`
    option and that the action we want to take is to evaluate the system with `eval`.
    The command will be as follows:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在信息中，我们可以看到OSPP配置文件被描述为`xccdf`。我们现在可以运行`oscap`，指定我们要使用`xcddf`选项的格式，并且我们要执行的操作是使用`eval`评估系统。命令如下：
- en: '[PRE9]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'We will obtain the `ospp-report.html` file with the full report on the OSPP
    rule results:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将获得`ospp-report.html`文件，其中包含有关OSPP规则结果的完整报告：
- en: '![Figure 11.7 – OpenSCAP OSPP scan results'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '![图11.7 – OpenSCAP OSPP扫描结果'
- en: '](img/B16799_11_007.jpg)'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_11_007.jpg)'
- en: Figure 11.7 – OpenSCAP OSPP scan results
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.7 – OpenSCAP OSPP扫描结果
- en: 'It will show the points that require modification to be compliant with the
    profile:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 它将显示需要修改以符合配置文件的要点：
- en: '![Figure 11.8 – OpenSCAP OSPP scan results, detail rules that require action'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '![图11.8 – OpenSCAP OSPP扫描结果，需要采取行动的详细规则'
- en: '](img/B16799_11_008.jpg)'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_11_008.jpg)'
- en: Figure 11.8 – OpenSCAP OSPP scan results, detail rules that require action
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.8 – OpenSCAP OSPP扫描结果，需要采取行动的详细规则
- en: We can now follow, step by step, the recommendations and fix them in order to
    be fully OSPP compliant. Also, we can use this scan to harden systems that, even
    when they do not need to be OSPP compliant, will be in an exposed network such
    as a DMZ, and we want to have them hardened.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以一步一步地遵循建议并修复它们，以便完全符合OSPP。此外，我们可以使用此扫描来加固系统，即使它们不需要符合OSPP，也将处于暴露的网络中，例如DMZ，并且我们希望对它们进行加固。
- en: Important note
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: Red Hat provides a way to automatically apply all those changes. It is based
    on the automation tool `/usr/share/scap-security-guide/ansible/rhel8-playbook-ospp.yml`.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: Red Hat提供了一种自动应用所有这些更改的方法。它基于自动化工具`/usr/share/scap-security-guide/ansible/rhel8-playbook-ospp.yml`。
- en: Now that we have reviewed the system for OSPP compliance, let's move to the
    next target, PCI DSS compliance.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经审查了OSPP合规性的系统，让我们转向下一个目标，即PCI DSS合规性。
- en: Scanning for PCI DSS compliance
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 扫描PCI DSS合规性
- en: 'We can follow the same procedure as before, also using the `--profile` option
    for `oscap` to get information specific to the PCI DSS profile:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以按照之前的步骤进行，同样使用`oscap`的`--profile`选项来获取特定于PCI DSS配置文件的信息：
- en: '[PRE10]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'We can run `oscap` with the same options as in the previous section but specifying
    `pci-dss` as the profile. It will generate the proper report:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用与上一节相同的选项运行`oscap`，但指定`pci-dss`作为配置文件。它将生成适当的报告：
- en: '[PRE11]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: We can start reviewing the items in the report and start fixing them.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以开始审查报告中的项目并开始修复它们。
- en: Important note
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: As in the previous section, Red Hat also provides a way to automatically apply
    all those changes with Ansible. The playbook for PCI DSS is located at `/usr/share/scap-security-guide/ansible/rhel8-playbook-pci-dss.yml`.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 与上一节一样，Red Hat还提供了一种使用Ansible自动应用所有这些更改的方法。PCI DSS的playbook位于`/usr/share/scap-security-guide/ansible/rhel8-playbook-pci-dss.yml`。
- en: We have seen that changing from one profile to a different one with OpenSCAP
    is very easy and we can scan for as many profiles as available.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到，使用OpenSCAP从一个配置文件切换到另一个配置文件非常容易，我们可以扫描尽可能多的配置文件。
- en: Summary
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: By learning the basics of **OpenSCAP**, we are ready to review and harden systems
    to make them compliant with the regulations we need them to run under.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 通过学习**OpenSCAP**的基础知识，我们已经准备好审查和加固系统，使其符合我们需要其运行的法规要求。
- en: Now if you are requested to comply with any regulatory requisitions, you can
    find the right SCAP profile for it (or build it if it doesn't exist) and ensure
    that your systems are fully compliant.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果您被要求遵守任何监管要求，您可以找到适合它的SCAP配置文件（如果不存在，可以构建它），并确保您的系统完全符合要求。
- en: Also, even when no regulatory requirements apply, the use of OpenSCAP can help
    you find vulnerabilities in the system, or apply a more secure (and restrictive)
    configuration to your systems in order to reduce the risks.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，即使没有监管要求，使用OpenSCAP也可以帮助您发现系统中的漏洞，或者应用更安全（和限制性）的配置以减少风险。
- en: There are ways to extend our knowledge and skills by learning Ansible and being
    able to automatically apply changes to our systems in a way that is easy to scale,
    as well as Red Hat Satellite, which can help run SCAP scans to the whole IT base
    we are managing even when we could be talking about thousands of systems.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 通过学习Ansible并能够自动应用系统变更的方式，我们可以扩展我们的知识和技能，这种方式易于扩展，以及Red Hat Satellite，它可以帮助我们对我们管理的整个IT基础进行SCAP扫描，即使我们可能谈论的是成千上万的系统。
- en: Now that our security skills are improving and being consolidated, let's dive
    deeper into more low-level topics such as local storage and filesystems, as described
    in the next chapter.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们的安全技能正在提高并得到巩固，让我们深入探讨更多关于本地存储和文件系统的低级主题，如下一章所述。
