["```\ndonnie@ubuntu:~$ sudo iptables -L\n[sudo] password for donnie:\nChain INPUT (policy ACCEPT)\ntarget prot opt source destination\n\nChain FORWARD (policy ACCEPT)\ntarget prot opt source destination\n\nChain OUTPUT (policy ACCEPT)\ntarget prot opt source destination\ndonnie@ubuntu:~$\n```", "```\ndonnie@ubuntu:~$ sudo ip6tables -L\nChain INPUT (policy ACCEPT)\ntarget     prot opt source               destination\n\nChain FORWARD (policy ACCEPT)\ntarget     prot opt source               destination\n\nChain OUTPUT (policy ACCEPT)\ntarget     prot opt source               destination\ndonnie@ubuntu:~$\n\n```", "```\nsudo iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT\n```", "```\ndonnie@ubuntu:~$ sudo iptables -L\nChain INPUT (policy ACCEPT)\ntarget prot opt source destination\nACCEPT all -- anywhere anywhere ctstate RELATED,ESTABLISHED\n\nChain FORWARD (policy ACCEPT)\ntarget prot opt source destination\n\nChain OUTPUT (policy ACCEPT)\ntarget prot opt source destination\ndonnie@ubuntu:~$\n```", "```\nsudo iptables -A INPUT -p tcp --dport ssh -j ACCEPT\nsudo iptables -A INPUT -j DROP\n```", "```\ndonnie@ubuntu:~$ sudo iptables -L\nChain INPUT (policy ACCEPT)\ntarget     prot opt source               destination\nACCEPT     all  --  anywhere             anywhere             ctstate RELATED,ESTABLISHED\nACCEPT     tcp  --  anywhere             anywhere             tcp dpt:ssh\nDROP       all  --  anywhere             anywhere\n\nChain FORWARD (policy ACCEPT)\ntarget     prot opt source               destination\n\nChain OUTPUT (policy ACCEPT)\ntarget     prot opt source               destination\ndonnie@ubuntu:~$\n```", "```\nsudo iptables -I INPUT 1 -i lo -j ACCEPT\n```", "```\ndonnie@ubuntu:~$ sudo iptables -L\nChain INPUT (policy ACCEPT)\ntarget prot opt source destination\nACCEPT all -- anywhere anywhere\nACCEPT all -- anywhere anywhere ctstate RELATED,ESTABLISHED\nACCEPT tcp -- anywhere anywhere tcp dpt:ssh\nDROP all -- anywhere anywhere\n\nChain FORWARD (policy ACCEPT)\ntarget prot opt source destination\n\nChain OUTPUT (policy ACCEPT)\ntarget prot opt source destination\ndonnie@ubuntu:~$\n```", "```\ndonnie@ubuntu:~$ sudo iptables -L -v\nChain INPUT (policy ACCEPT 0 packets, 0 bytes)\n pkts bytes target     prot opt in     out     source               destination\n 0     0 ACCEPT     all  --  lo     any     anywhere             anywhere\n 393 25336 ACCEPT     all  --  any    any     anywhere             anywhere             ctstate RELATED,ESTABLISHED\n 0     0 ACCEPT     tcp  --  any    any     anywhere             anywhere             tcp dpt:ssh\n 266 42422 DROP       all  --  any    any     anywhere             anywhere\n\nChain FORWARD (policy ACCEPT 0 packets, 0 bytes)\n pkts bytes target     prot opt in     out     source               destination\n\nChain OUTPUT (policy ACCEPT 72 packets, 7924 bytes)\n pkts bytes target     prot opt in     out     source               destination\ndonnie@ubuntu:~$\n```", "```\nsudo apt install iptables-persistent\n```", "```\ndonnie@ubuntu:~$ ls -l /etc/iptables*\ntotal 8\n-rw-r--r-- 1 root root 336 Oct 10 10:29 rules.v4\n-rw-r--r-- 1 root root 183 Oct 10 10:29 rules.v6\ndonnie@ubuntu:~$\n```", "```\n sudo iptables -L\n```", "```\n sudo iptables -A INPUT -m conntrack \n                                      --ctstate ESTABLISHED,RELATED\n                      -j ACCEPT\n sudo iptables -A INPUT -p tcp --dport ssh -j ACCEPT\n sudo iptables -A INPUT -j DROP\n```", "```\n sudo iptables -L\n```", "```\n sudo iptables -I INPUT 1 -i lo -j ACCEPT\n```", "```\n sudo iptables -L\n sudo iptables -L -v\n```", "```\n         sudo apt install iptables-persistent\n```", "```\ndonnie@ubuntu:~$ sudo ufw enable\nCommand may disrupt existing ssh connections. Proceed with operation (y|n)? y\nFirewall is active and enabled on system startup\ndonnie@ubuntu:~$\n```", "```\nsudo ufw allow 22/tcp\n```", "```\nChain ufw-user-input (1 references)\ntarget     prot opt source               destination\nACCEPT     tcp  --  anywhere             anywhere             tcp dpt:ssh\n```", "```\nsudo ufw allow 53\n\nChain ufw-user-input (1 references)\ntarget     prot opt source               destination\nACCEPT     tcp  --  anywhere             anywhere             tcp dpt:ssh\nACCEPT     tcp  --  anywhere             anywhere             tcp dpt:domain\nACCEPT     udp  --  anywhere             anywhere             udp dpt:domain\n```", "```\n sudo iptables -L\n```", "```\n sudo ufw status\n sudo ufw enable\n sudo ufw status\n sudo iptables -L\n sudo ip6tables -L\n```", "```\n sudo ufw allow 22/tcp\n sudo iptables -L\n sudo ip6tables -L\n```", "```\n        sudo ufw allow 53\n sudo iptables -L\n sudo ip6tables -L\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --state\nrunning\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo systemctl status firewalld\n\u25cf firewalld.service - firewalld - dynamic firewall daemon\n Loaded: loaded (/usr/lib/systemd/system/firewalld.service; enabled; vendor preset: enabled)\n Active: active (running) since Fri 2017-10-13 13:42:54 EDT; 1h 56min ago\n Docs: man:firewalld(1)\n Main PID: 631 (firewalld)\n CGroup: /system.slice/firewalld.service\n \u2514\u2500631 /usr/bin/python -Es /usr/sbin/firewalld --nofork --nopid\n\nOct 13 13:42:55 localhost.localdomain firewalld[631]: WARNING: ICMP type 'reject-route' is not supported by the kernel for ipv6.\nOct 13 13:42:55 localhost.localdomain firewalld[631]: WARNING: reject-route: INVALID_ICMPTYPE: No supported ICMP type., ignoring for run-time.\nOct 13 15:19:41 localhost.localdomain firewalld[631]: WARNING: ICMP type 'beyond-scope' is not supported by the kernel for ipv6.\nOct 13 15:19:41 localhost.localdomain firewalld[631]: WARNING: beyond-scope: INVALID_ICMPTYPE: No supported ICMP type., ignoring for run-time.\nOct 13 15:19:41 localhost.localdomain firewalld[631]: WARNING: ICMP type 'failed-policy' is not supported by the kernel for ipv6.\nOct 13 15:19:41 localhost.localdomain firewalld[631]: WARNING: failed-policy: INVALID_ICMPTYPE: No supported ICMP type., ignoring for run-time.\nOct 13 15:19:41 localhost.localdomain firewalld[631]: WARNING: ICMP type 'reject-route' is not supported by the kernel for ipv6.\nOct 13 15:19:41 localhost.localdomain firewalld[631]: WARNING: reject-route: INVALID_ICMPTYPE: No supported ICMP type., ignoring for run-time.\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ cd /usr/lib/firewalld/zones\n[donnie@localhost zones]$ ls\nblock.xml dmz.xml drop.xml external.xml home.xml internal.xml public.xml trusted.xml work.xml\n[donnie@localhost zones]$\n```", "```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<zone>\n  <short>Public</short>\n  <description>For use in public areas. You do not trust the other computers on networks to not harm your computer. Only selected incoming connections are accepted.</description>\n  <service name=\"ssh\"/>\n  <service name=\"dhcpv6-client\"/>\n</zone>\n```", "```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<zone>\n  <short>Home</short>\n  <description>For use in home areas. You mostly trust the other computers on networks to not harm your computer. Only selected incoming connections are accepted.</description>\n  <service name=\"ssh\"/>\n  <service name=\"mdns\"/>\n  <service name=\"samba-client\"/>\n  <service name=\"dhcpv6-client\"/>\n</zone>\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --get-zones\n[sudo] password for donnie:\nblock dmz drop external home internal public trusted work\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --list-all-zones\nblock\n target: %%REJECT%%\n icmp-block-inversion: no\n interfaces:\n sources:\n services:\n ports:\n protocols:\n masquerade: no\n forward-ports:\n source-ports:\n icmp-blocks:\n rich rules:\n, , ,\n, , ,\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --info-zone=internal\ninternal\n target: default\n icmp-block-inversion: no\n interfaces:\n sources:\n services: ssh mdns samba-client dhcpv6-client\n ports:\n protocols:\n masquerade: no\n forward-ports:\n source-ports:\n icmp-blocks:\n rich rules:\n\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --get-default-zone\npublic\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --get-active-zones\npublic\n interfaces: enp0s3\n[donnie@localhost ~]$\n```", "```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<zone>\n  <short>DMZ</short>\n  <description>For computers in your demilitarized zone that are publicly-accessible with limited access to your internal network. Only selected incoming connections are accepted.</description>\n  <service name=\"ssh\"/>\n</zone>\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --set-default-zone=dmz\n[sudo] password for donnie:\nsuccess\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --get-default-zone\ndmz\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo ls -l /etc/firewalld\ntotal 12\n-rw-------. 1 root root 2003 Oct 11 17:37 firewalld.conf\n-rw-r--r--. 1 root root 2006 Aug 4 17:14 firewalld.conf.old\n. . .\n```", "```\n[donnie@localhost ~]$ sudo diff /etc/firewalld/firewalld.conf /etc/firewalld/firewalld.conf.old\n6c6\n< DefaultZone=dmz\n---\n> DefaultZone=public\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --get-services\n[sudo] password for donnie:\nRH-Satellite-6 amanda-client amanda-k5-client bacula bacula-client bitcoin bitcoin-rpc bitcoin-testnet bitcoin-testnet-rpc ceph ceph-mon cfengine condor-collector ctdb dhcp dhcpv6 dhcpv6-client dns docker-registry dropbox-lansync elasticsearch freeipa-ldap freeipa-ldaps freeipa-replication freeipa-trust ftp ganglia-client ganglia-master high-availability http https imap imaps ipp ipp-client ipsec iscsi-target kadmin kerberos kibana klogin kpasswd kshell ldap ldaps libvirt libvirt-tls managesieve mdns mosh mountd ms-wbt mssql mysql nfs nrpe ntp openvpn ovirt-imageio ovirt-storageconsole ovirt-vmconsole pmcd pmproxy pmwebapi pmwebapis pop3 pop3s postgresql privoxy proxy-dhcp ptp pulseaudio puppetmaster quassel radius rpc-bind rsh rsyncd samba samba-client sane sip sips smtp smtp-submission smtps snmp snmptrap spideroak-lansync squid ssh synergy syslog syslog-tls telnet tftp tftp-client tinc tor-socks transmission-client vdsm vnc-server wbem-https xmpp-bosh xmpp-client xmpp-local xmpp-server\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --info-service=dropbox-lansync\n[sudo] password for donnie:\ndropbox-lansync\n ports: 17500/udp 17500/tcp\n protocols:\n source-ports:\n modules:\n destination:\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --info-zone=dmz\ndmz (active)\n target: default\n icmp-block-inversion: no\n interfaces: enp0s3\n sources:\n services: ssh\n ports:\n protocols:\n masquerade: no\n forward-ports:\n source-ports:\n icmp-blocks:\n rich rules:\n\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --add-service=http\nsuccess\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --info-zone=dmz\ndmz (active)\n target: default\n icmp-block-inversion: no\n interfaces: enp0s3\n sources:\n services: ssh http\n ports:\n protocols:\n masquerade: no\n forward-ports:\n source-ports:\n icmp-blocks:\n rich rules:\n\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --permanent --info-zone=dmz\ndmz\n target: default\n icmp-block-inversion: no\n interfaces:\n sources:\n services: ssh\n ports:\n protocols:\n masquerade: no\n forward-ports:\n source-ports:\n icmp-blocks:\n rich rules:\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --info-zone=dmz\n[sudo] password for donnie:\ndmz (active)\n target: default\n icmp-block-inversion: no\n interfaces: enp0s3\n sources:\n services: ssh\n ports:\n protocols:\n masquerade: no\n forward-ports:\n source-ports:\n icmp-blocks:\n rich rules:\n\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --permanent --add-service={http,https}\n[sudo] password for donnie:\nsuccess\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --info-zone=dmz\ndmz (active)\n target: default\n icmp-block-inversion: no\n interfaces: enp0s3\n sources:\n services: ssh\n ports:\n protocols:\n masquerade: no\n forward-ports:\n source-ports:\n icmp-blocks:\n rich rules:\n\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --permanent --info-zone=dmz\ndmz\n target: default\n icmp-block-inversion: no\n interfaces:\n sources:\n services: ssh http https\n ports:\n protocols:\n masquerade: no\n forward-ports:\n source-ports:\n icmp-blocks:\n rich rules:\n\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --reload\nsuccess\n[donnie@localhost ~]$\n```", "```\ndonnie@localhost services]$ pwd\n/usr/lib/firewalld/services\n[donnie@localhost services]$ grep '10000' *\n[donnie@localhost services]$\n```", "```\ndonnie@localhost ~]$ sudo firewall-cmd --add-port=10000/tcp\n[sudo] password for donnie:\nsuccess\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --permanent --add-port=10000/tcp\nsuccess\n[donnie@localhost ~]$ sudo firewall-cmd --reload\nsuccess\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --add-port={636/tcp,637/tcp,638/udp}\nsuccess\n[donnie@localhost ~]$\n```", "```\nsudo firewall-cmd --add-rich-rule='rule family=\"ipv4\" source address=\"200.192.0.0/24\" service name=\"http\" drop'\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --info-zone=dmz\n[sudo] password for donnie:\ndmz (active)\n target: default\n icmp-block-inversion: no\n interfaces: enp0s3\n sources:\n services: ssh http https\n ports: 10000/tcp 636/tcp 637/tcp 638/udp\n protocols:\n masquerade: no\n forward-ports:\n source-ports:\n icmp-blocks:\n rich rules:\n rule family=\"ipv4\" source address=\"200.192.0.0/24\" service name=\"http\" drop\n[donnie@localhost ~]$\n```", "```\nsudo firewall-cmd --permanent --add-rich-rule='rule family=\"ipv4\" source address=\"200.192.0.0/24\" service name=\"http\" drop'\n\nsudo firewall-cmd --reload\n```", "```\nsudo firewall-cmd --permanent --add-rich-rule='rule service name=\"ntp\" audit limit value=\"1/m\" accept'\n```", "```\nman firewalld.richlanguage\n```", "```\n sudo firewall-cmd --get-zones\n sudo firewall-cmd --get-default-zone\n sudo firewall-cmd --get-active-zones\n```", "```\n man firewalld.zones\n man firewalld.zone\n```", "```\n sudo firewall-cmd --list-all-zones\n```", "```\n sudo firewall-cmd --get-services\n sudo firewall-cmd --info-service=dropbox-lansync\n```", "```\n sudo firewall-cmd --set-default-zone=dmz\n sudo firewall-cmd --permanent --add-service={http,https}\n sudo firewall-cmd --info-zone=dmz\n sudo firewall-cmd --permanent --info-zone=dmz\n```", "```\n sudo firewall-cmd --reload\n sudo firewall-cmd --info-zone=dmz\n sudo firewall-cmd --list-services\n```", "```\n sudo firewall-cmd --permanent --add-port=10000/tcp\n sudo firewall-cmd --list-ports\n sudo firewall-cmd --reload\n sudo firewall-cmd --list-ports\n sudo firewall-cmd --info-zone=dmz\n```", "```\n sudo firewall-cmd --permanent --remove-port=10000/tcp\n sudo firewall-cmd --reload\n sudo firewall-cmd --list-ports\n sudo firewall-cmd --info-zone=dmz\n```", "```\n apropos firewall\n```", "```\nsudo apt install nftables\nsudo nft list tables\n```", "```\n#!/usr/sbin/nft -f\nflush ruleset\ntable inet filter {\n        chain input {\n                type filter hook input priority 0;\n\n                # accept any localhost traffic\n                iif lo accept\n\n                # accept traffic originated from us\n                ct state established,related accept\n\n                # activate the following line to accept \n                  common local services\n                # tcp dport { 22, 80, 443 } ct state new accept\n\n                # accept neighbour discovery otherwise \n                  IPv6 connectivity breaks.\n                ip6 nexthdr icmpv6 icmpv6 type { nd-neighbor-solicit,\n                  nd-router-advert, nd-neighbor-advert } accept\n\n                # count and drop any other traffic\n                counter drop\n        }\n}\n```", "```\ntcp dport 22 ct state new accept\n```", "```\nsudo nft -f /etc/nftables.conf\n\ndonnie@ubuntu2:~$ sudo nft list table inet filter\ntable inet filter {\n chain input {\n type filter hook input priority 0; policy accept;\n iif lo accept\n ct state established,related accept\n tcp dport ssh ct state new accept\n ip6 nexthdr ipv6-icmp icmpv6 type { nd-router-advert, nd-neighbor-solicit, nd-neighbor-advert} accept\n counter packets 67 bytes 10490 drop\n }\n}\ndonnie@ubuntu2:~$\n```", "```\ntcp dport 22 ip saddr { 192.168.0.7, 192.168.0.10 } drop\ntcp dport 22 ct state new accept\n```", "```\nsudo nft delete table inet filter\nsudo nft list tables\nsudo nft add table inet ubuntu_filter\nsudo nft list tables\n```", "```\nsudo nft add chain inet ubuntu_filter input { type filter hook input priority 0\\; policy drop\\; }\n```", "```\ndonnie@ubuntu2:~$ sudo nft list table inet ubuntu_filter\n[sudo] password for donnie:\ntable inet filter {\n chain input {\n type filter hook input priority 0; policy drop;\n }\n}\ndonnie@ubuntu2:~$\n```", "```\nsudo nft add rule inet ubuntu_filter input ct state established accept\nsudo nft add rule inet ubuntu_filter input tcp dport 22 ct state new accept\n\ndonnie@ubuntu2:~$ sudo nft list table inet ubuntu_filter\ntable inet ubuntu_filter {\n chain input {\n type filter hook input priority 0; policy drop;\n ct state established accept\n tcp dport ssh ct state new accept\n }\n}\ndonnie@ubuntu2:~ \n```", "```\nsudo nft insert rule inet ubuntu_filter input iif lo accept\n\ndonnie@ubuntu2:~$ sudo nft list table inet ubuntu_filter\ntable inet ubuntu_filter {\n chain input {\n type filter hook input priority 0; policy drop;\n iif lo accept\n ct state established accept\n tcp dport ssh ct state new accept\n }\n}\ndonnie@ubuntu2:~$\n```", "```\ndonnie@ubuntu2:~$ sudo nft list table inet ubuntu_filter -a\ntable inet ubuntu_filter {\n chain input {\n type filter hook input priority 0; policy drop;\n iif lo accept # handle 4\n ct state established accept # handle 2\n tcp dport ssh ct state new accept # handle 3\n }\n}\ndonnie@ubuntu2:~$\n```", "```\nsudo nft insert rule inet ubuntu_filter input position 3 tcp dport 22 ip saddr { 192.168.0.7, 192.168.0.10 } drop\n\ndonnie@ubuntu2:~$ sudo nft list table inet ubuntu_filter -a\ntable inet ubuntu_filter {\n chain input {\n type filter hook input priority 0; policy drop;\n iif lo accept # handle 4\n ct state established accept # handle 2\n tcp dport ssh ip saddr { 192.168.0.10, 192.168.0.7} drop # handle 6\n tcp dport ssh ct state new accept # handle 3\n }\n}\ndonnie@ubuntu2:~$\n```", "```\nsudo nft delete rule inet ubuntu_filter input handle 6\n\ndonnie@ubuntu2:~$ sudo nft list table inet ubuntu_filter -a\ntable inet ubuntu_filter {\n chain input {\n type filter hook input priority 0; policy drop;\n iif lo accept # handle 4\n ct state established accept # handle 2\n tcp dport ssh ct state new accept # handle 3\n }\n}\ndonnie@ubuntu2:~$\n```", "```\nsudo sh -c \"nft list table inet ubuntu_filter > new_nftables.conf\"\n```", "```\ntable inet ubuntu_filter {\n        chain input {\n                type filter hook input priority 0; policy drop;\n                iif lo accept\n                ct state established accept\n                tcp dport ssh ct state new accept\n        }\n}\n```", "```\n#!/usr/sbin/nft -f\nflush ruleset\n\ntable inet ubuntu_filter {\n        chain input {\n                type filter hook input priority 0; policy drop;\n                iif lo accept\n                ct state established accept\n                tcp dport ssh ct state new accept\n        }\n}\n```", "```\nsudo nft -f /etc/new_nftables.conf\n\ndonnie@ubuntu2:~$ sudo nft list table inet ubuntu_filter\ntable inet ubuntu_filter {\n chain input {\n type filter hook input priority 0; policy drop;\n iif lo accept\n ct state established accept\n tcp dport ssh ct state new accept\n }\n}\ndonnie@ubuntu2:~$\n```", "```\n sudo ufw status\n sudo iptables -L\n```", "```\n sudo apt install nftables\n```", "```\n sudo nft list tables\n sudo nft -f /etc/nftables.conf\n sudo nft list tables\n sudo nft list table inet filter\n```", "```\n sudo cp /etc/nftables.conf /etc/nftables.conf.bak\n```", "```\n        tcp dport ssh ip saddr { 192.168.0.7, 192.168.0.10 } drop\n```", "```\n sudo nft list tables\n sudo nft -f /etc/nftables.conf\n sudo nft list tables\n sudo nft list table inet filter\n```"]