- en: Chapter 1. Arch Linux Environment Setup How-to
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章。Arch Linux环境设置指南
- en: Welcome to Arch Linux Environment Setup How-to. Arch Linux is a very flexible
    distribution and this book will guide you to the point where you can get a basic
    system in place. From there on you can go in any direction you want. A simple
    server, a full-blown desktop system with all the bells and whistles. In the end,
    Arch Linux is always what you make of it.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎来到Arch Linux环境设置指南。Arch Linux是一个非常灵活的发行版，本书将指导您到达可以建立基本系统的地步。从那里，您可以朝任何方向发展。一个简单的服务器，一个功能齐全的桌面系统。最终，Arch
    Linux始终是您所做的样子。
- en: Installing Arch Linux using the official ISO (Should know)
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用官方ISO安装Arch Linux（应该知道）
- en: These days the installation of Arch Linux might look like a work of insanity,
    as there is no installer available in the official media, just a guideline to
    follow. The installation without an installer is as easy as it can be. For experienced
    users, installing without an installer is even more convenient. The newest ISOs
    require that you have your machine connected to the Internet, as there are no
    longer packages available on the installation media.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 如今，安装Arch Linux可能看起来像是一种疯狂的工作，因为官方媒体中没有安装程序，只有一个要遵循的指南。没有安装程序的安装就像它可以一样简单。对于有经验的用户来说，没有安装程序的安装甚至更加方便。最新的ISO要求您的机器连接到互联网，因为安装媒体上不再有软件包可用。
- en: Getting ready
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: You can get the official ISO image file from [https://www.archlinux.org/download/](https://www.archlinux.org/download/).
    On this page you will find a download link to the latest release. Depending on
    your preference, download the torrent file or the ISO image file immediately.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从[https://www.archlinux.org/download/](https://www.archlinux.org/download/)获取官方ISO镜像文件。在此页面上，您将找到到最新版本的下载链接。根据您的偏好，立即下载种子文件或ISO镜像文件。
- en: 'The following list describes the main tasks that we will perform in this recipe:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 以下列表描述了我们将在这个步骤中执行的主要任务：
- en: '**Preparing, booting, and setting keyboard layout**: We are going to get the
    ISO file from the download page of the Arch Linux website and store it on the
    preferred media of our choice. At the time of writing this book, there is a dual
    ISO image file that contains both i686 and x86-64 architectures on one disk. Start
    your PC with your preferred installation media (CD or USB stick). On most PC systems,
    you can access the boot menu by pressing one of the function keys, usually between
    *F8* and *F12* depending on the motherboard manufacturer. On older machines where
    you do not yet have a boot menu, you might need to change the boot order in the
    BIOS where the CD-ROM (or DVD/Blu-ray) has to be chosen as the first device to
    try booting from. We''ll also explain how to use a different keyboard layout than
    the default one in this recipe.'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**准备、启动和设置键盘布局**：我们将从Arch Linux网站的下载页面获取ISO文件，并将其存储在我们选择的首选媒体上。在撰写本书时，有一个双重ISO镜像文件，其中包含i686和x86-64架构在一个磁盘上。使用您首选的安装媒体（CD或USB闪存驱动器）启动您的PC。在大多数PC系统上，您可以通过按一个功能键（通常在*F8*和*F12*之间，具体取决于主板制造商）来访问启动菜单。在尚未具有启动菜单的旧机器上，您可能需要在BIOS中更改启动顺序，选择CD-ROM（或DVD/蓝光）作为首选设备进行启动。我们还将在本步骤中解释如何使用与默认键盘布局不同的键盘布局。'
- en: '**Creating, formatting, and mounting partitions**: You can partition the disks
    the way you want using cfdisk (for MBR disk partitioning) or cgdisk (for GUID
    disk partitioning). After creating the partitions, we can choose to format our
    created partitions with specific filesystems. When all partitions are formatted,
    we need to mount the partitions. First we will mount the root partition to `/mnt`.
    The other partitions will be mounted later on after you have created the specific
    folders. We''ll designate our device with `/dev/sdX`; in your case this can be
    `/dev/sda`, and so on.'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**创建、格式化和挂载分区**：您可以使用cfdisk（用于MBR磁盘分区）或cgdisk（用于GUID磁盘分区）按照您的意愿对磁盘进行分区。创建分区后，我们可以选择使用特定的文件系统格式化我们创建的分区。当所有分区都格式化完成后，我们需要挂载这些分区。首先，我们将把根分区挂载到`/mnt`。其他分区将在您创建了特定文件夹后挂载。我们将使用`/dev/sdX`指定我们的设备；在您的情况下，这可以是`/dev/sda`等。'
- en: '**Connecting to the Internet**: To be able to continue installing the ISO you
    need to connect to the Internet, because there are no packages available for installation
    on the ISO. For a wireless network you will need to use netcfg. When connected
    to a wired network, just use dhcpcd or dhclient.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**连接到互联网**：为了能够继续安装ISO，您需要连接到互联网，因为ISO上没有可用于安装的软件包。对于无线网络，您需要使用netcfg。连接到有线网络时，只需使用dhcpcd或dhclient。'
- en: '**Installing the base system and boot loader**: These days the base system
    gets installed by running a simple script **pacstrap**. Pacstrap takes multiple
    parameters, the target location, and the packages or groups you want to install.
    For people who want to develop on their machines, the best `base` install is adding
    `base-devel` to the default installation. For normal end users, just `base` will
    be sufficient to start.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**安装基本系统和引导加载程序**：如今，基本系统通过运行一个简单的脚本**pacstrap**来安装。Pacstrap接受多个参数，目标位置和您想要安装的软件包或组。对于想要在他们的机器上开发的人来说，最好的`base`安装是将`base-devel`添加到默认安装中。对于普通用户来说，只需`base`就足以开始了。'
- en: '**Configuring the system**: In this recipe, we''ll describe the flow of what
    to do during the configuration. For more extensive information on how to configure
    your system, refer to the *Configuring your system* recipe.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 系统配置：在这个步骤中，我们将描述配置过程中要做的事情。有关如何配置系统的更多详细信息，请参考《配置您的系统》步骤。
- en: How to do it...
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'The following steps will guide you in preparing, booting, and setting keyboard
    layout:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤将指导您准备、启动和设置键盘布局：
- en: Once you have downloaded the ISO image file, you should also verify its integrity
    by downloading the `sha1sums.txt` file from the download page.
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦您下载了ISO镜像文件，您还应该通过从下载页面下载`sha1sums.txt`文件来验证其完整性。
- en: Note
  id: totrans-15
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: These days you can also check if the ISO is completely valid by verifying the
    signature of the ISO.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 如今，您还可以通过验证ISO的签名来检查ISO是否完全有效。
- en: 'Verify the integrity by issuing the `sha1sum -c sha1sums.txt` command and you''ll
    see whether your download was successful or not. Also check if the signature of
    the ISO is correct by running `gpg -v archlinux-...iso.sig`:'
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过发出`sha1sum -c sha1sums.txt`命令来验证完整性，您将看到您的下载是否成功。还要通过运行`gpg -v archlinux-...iso.sig`来检查ISO的签名是否正确：
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The following screenshot shows the execution of this step:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示了此步骤的执行：
- en: '![How to do it...](img/9724OS_01_01.jpg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](img/9724OS_01_01.jpg)'
- en: As you can see in the previous screenshot, the ISO's checksum is ok and the
    signature is valid.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如前面的屏幕截图所示，ISO的校验和有效签名都是正确的。
- en: Now that we are sure our ISO is ok, we can burn this to a CD with our favorite
    burning program.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们确定ISO没有问题，我们可以用我们喜欢的刻录程序将其刻录到CD上。
- en: Insert the CD into the drive, or insert the USB stick into the USB port of your
    PC.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将CD插入驱动器，或将USB存储设备插入PC的USB端口。
- en: Enter the boot menu, or let your computer automatically boot from the inserted
    installation media.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入引导菜单，或者让您的计算机自动从插入的安装介质中引导。
- en: If the previous steps are performed correctly, you will see the following screenshot:![How
    to do it...](img/9724OS_01_02.jpg)
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果前面的步骤执行正确，您将看到以下屏幕截图：![如何做...](img/9724OS_01_02.jpg)
- en: Select the architecture you want and press *Enter*, and we'll be on our way.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择您想要的架构并按*Enter*，我们就可以开始了。
- en: Search the keyboard layout desired for your region. The available keyboard layouts
    can be found at `/usr/share/kbd/keymaps/`.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 搜索所需的区域键盘布局。可在`/usr/share/kbd/keymaps/`找到可用的键盘布局。
- en: Set the desired keyboard layout with `loadkeys keyboardlayout`.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`loadkeys keyboardlayout`设置所需的键盘布局。
- en: 'Now let''s perform the following steps to create, format, and mount partitions:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们执行以下步骤来创建、格式化和挂载分区：
- en: 'Start cfdisk or cgdisk, having the first parameter as the device you want to
    partition:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动cfdisk或cgdisk，第一个参数是您要分区的设备：
- en: '[PRE1]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Create your partition scheme.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建您的分区方案。
- en: Store the partition scheme.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 存储分区方案。
- en: 'Use the `mkfs` command to create a filesystem on a specific partition:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`mkfs`命令在特定分区上创建文件系统：
- en: '[PRE2]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Mount your root partition to `/mnt`:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将根分区挂载到`/mnt`：
- en: '[PRE3]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Make directories under `mount` for your other partitions:'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`mount`下为其他分区创建目录：
- en: '[PRE4]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Mount the other partitions:'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 挂载其他分区：
- en: '[PRE5]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The following steps are needed to connect to the Internet:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 连接到互联网需要以下步骤：
- en: When we need a wireless network, create a netcfg profile and run `netcfg mywireless`.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当我们需要无线网络时，创建一个netcfg配置文件并运行`netcfg mywireless`。
- en: Use dhclient or dhcpcd to get an IP address.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用dhclient或dhcpcd获取IP地址。
- en: 'The following steps should be performed for installing the base system and
    boot loader:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 安装基本系统和引导加载程序应执行以下步骤：
- en: 'Run pacstrap with the desired parameters:'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用所需的参数运行pacstrap：
- en: '[PRE6]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Install the desired boot loader: the best choice at this moment is Syslinux.'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装所需的引导加载程序：此刻最好的选择是Syslinux。
- en: The final installation of the boot loader will be done in a chroot during the
    initial configuration (discussed later in the book).
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引导加载程序的最终安装将在初始配置期间在chroot中完成（稍后在本书中讨论）。
- en: 'We''ll now list the steps to do during the configuration:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将列出配置期间要执行的步骤：
- en: 'Generate `fstab` with `genfstab`:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`genfstab`生成`fstab`：
- en: '[PRE7]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Change the root into the system location:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将根更改为系统位置：
- en: '[PRE8]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Set your hostname in `/etc/hostname`.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`/etc/hostname`中设置您的主机名。
- en: Create `/etc/localtime symlink`.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建`/etc/localtime`符号链接。
- en: Set your locale in `/etc/locale.conf`.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`/etc/locale.conf`中设置您的区域设置。
- en: Uncomment the configured locale in `/etc/locale.gen`.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 取消注释`/etc/locale.gen`中配置的区域设置。
- en: Run `locale-gen`.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行`locale-gen`。
- en: Configure `/etc/mkinitcpio.conf`.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置`/etc/mkinitcpio.conf`。
- en: 'Generate your initial ramdisk:'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成您的初始ramdisk：
- en: '[PRE9]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Finish installation of your boot loader.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成引导加载程序的安装。
- en: Set the root password with `passwd`.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`passwd`设置根密码。
- en: Leave the chroot environment (`exit`).
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 离开chroot环境（`exit`）。
- en: Note
  id: totrans-66
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: For more extensive information on how to configure your system, refer to the
    *Configuring your system* recipe.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 有关如何配置系统的更多详细信息，请参阅*配置您的系统*配方。
- en: Note
  id: totrans-68
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: For a detailed description of the main tasks performed, refer to the *Getting
    ready* section of this recipe.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 有关执行的主要任务的详细描述，请参阅本配方的*准备就绪*部分。
- en: How it works...
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: We downloaded the ISO image file via torrent, or via HTTP from the mirror sites
    listed on the download page. The `sha1sum` command lets us verify the integrity
    of the downloaded ISO. On top of the checksum, we can also check the integrity
    by verifying the signature available for the ISO. So now, we can rest assured
    that the downloaded file is the real one. The ISO contains a fully working operating
    system. It also contains all the necessary tools to perform system recovery and
    installation.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过种子文件或从下载页面上列出的镜像站点通过HTTP下载了ISO映像文件。`sha1sum`命令让我们验证已下载ISO的完整性。除了校验和外，我们还可以通过验证ISO的签名来检查完整性。因此，现在我们可以放心地知道下载的文件是真实的。ISO包含一个完全可用的操作系统。它还包含执行系统恢复和安装所需的所有必要工具。
- en: The keyboard configuration set with `loadkeys` will make sure that the key you
    press on your keyboard will be translated to the correct letter on your screen.
    Using a different keyboard layout from the one on your physical keyboard might
    be confusing.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`loadkeys`设置的键盘配置将确保您在键盘上按下的键会被正确地转换为屏幕上的正确字母。使用与物理键盘上不同的键盘布局可能会令人困惑。
- en: We then created a partition scheme on the selected disk with the appropriate
    tool (cfdisk or cgdisk). **Make Filesystem** (**mkfs**) is a unified frontend
    to create a filesystem. Using it we created our filesystem layout manually under
    `/mnt` by creating our default partition layout in our root, and mounting the
    specific partitions accordingly.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们使用适当的工具（cfdisk或cgdisk）在所选磁盘上创建了分区方案。**Make Filesystem**（**mkfs**）是一个统一的前端，用于创建文件系统。使用它，我们在`/mnt`下手动创建了我们的文件系统布局，通过在我们的根目录中创建默认分区布局，并相应地挂载特定分区。
- en: You can make a connection with your wireless network (if needed), and then use
    dhcpcd or dhclient to obtain an IP address that enables you to access the Internet.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以连接到你的无线网络（如果需要），然后使用dhcpcd或dhclient获取一个IP地址，以便你访问互联网。
- en: Pacstrap will run **pacman** with a modified root location to install the desired
    packages into the newly created system.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: Pacstrap将使用修改后的根位置运行**pacman**，以安装所需的软件包到新创建的系统中。
- en: 'For example, installing Syslinux:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，安装Syslinux：
- en: '[PRE10]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The specific configuration files will ensure we don't have to do all those steps
    over and over again on every boot.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 特定的配置文件将确保我们不必在每次启动时都重复所有这些步骤。
- en: There's more...
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: You can use the official ISO directly from the USB stick if you prefer. There
    might be some issues with the verification of the ISO. The next two sections discuss
    them and provide you with the solution.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你愿意，你可以直接从USB驱动器使用官方ISO。验证ISO可能会出现一些问题。接下来的两个部分讨论了这些问题，并为你提供了解决方案。
- en: Using the ISO from a USB drive
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用USB驱动器中的ISO
- en: 'The ISOs downloaded for Arch Linux are all ''hybrid'' images, which means you
    can put them on a USB drive and they will be bootable. So installing from a USB
    drive is also very simple. Place a USB drive in your machine (*warning: it will
    lose all its data*) and issue the following command:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 为Arch Linux下载的ISO都是“混合”映像，这意味着你可以将它们放在USB驱动器上，并且它们将是可引导的。因此，从USB驱动器安装也非常简单。将USB驱动器放入你的机器中（*警告：它将丢失所有数据*），然后输入以下命令：
- en: '[PRE11]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Note
  id: totrans-84
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Make sure you have `if=the correct ISO filename` and `of=/dev/sdX`, where you
    don't use a *partition* of the USB drive like `/dev/sdX1`, but the full USB drive.
    So use only `/dev/sdX`.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 确保你有`if=正确的ISO文件名`和`of=/dev/sdX`，其中你不使用USB驱动器的*分区*，如`/dev/sdX1`，而是整个USB驱动器。因此只使用`/dev/sdX`。
- en: Having problems verifying the ISO signature?
  id: totrans-86
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 验证ISO签名时遇到问题吗？
- en: 'When you don''t have the signer''s public key in your `gpg keyring` you will
    get an error like **gpg: Can''t check signature: No public key**. This means you
    will first have to import the signer''s public key before verification of the
    signature is possible:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '当你的`gpg keyring`中没有签名者的公钥时，你会收到一个错误，如**gpg: Can''t check signature: No public
    key**。这意味着你首先必须导入签名者的公钥，然后才能进行签名的验证：'
- en: '[PRE12]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Import the public key, in this case the public key of Pierre Schmitz. Then
    you can run the verification of the ISO again. The verification should now give
    you **gpg: Good signature from "Pierre Schmitz <pierre@archlinux.de>"**. When
    you have done the steps described here, you will get a warning that the key is
    not certified with a trusted signature. In the case of verifying the integrity
    of the ISO, this is of no importance. For more information about GPG and signatures,
    see [http://www.gnupg.org/](http://www.gnupg.org/).'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '导入公钥，这里是Pierre Schmitz的公钥。然后你可以再次运行ISO的验证。验证现在应该给你**gpg: Good signature from
    "Pierre Schmitz <pierre@archlinux.de>"**。当你完成这里描述的步骤后，你会收到一个警告，说这个密钥没有受到受信任签名的认证。在验证ISO的完整性的情况下，这并不重要。有关GPG和签名的更多信息，请参见[http://www.gnupg.org/](http://www.gnupg.org/)。'
- en: The next section talks about a common sample of a good desktop partition scheme.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的部分讨论了一个良好的桌面分区方案的常见示例。
- en: A good partition scheme for desktops
  id: totrans-91
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 桌面的良好分区方案
- en: On a desktop system, especially Arch Linux, I personally suggest having a separate
    `/var` partition. Depending on the other goals you might have for this partition
    (for example, running a huge MySQL database, other databases, and so on), a sensible
    value would be 5 GB and above. Don't overdo it or you will have a lot of empty
    space in the `/var` partition. Why make `/var` so big? Pacman keeps its cache
    in `/var`, and you don't really want your root filesystem being deadlocked by
    a filled up disk with package cache.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在桌面系统上，尤其是Arch Linux，我个人建议有一个单独的`/var`分区。根据你对这个分区的其他目标（例如，运行一个庞大的MySQL数据库，其他数据库等）可能有的需求，一个合理的值将是5GB或更多。不要过度使用，否则你的`/var`分区将有很多空间。为什么要把`/var`做得这么大？Pacman将它的缓存保存在`/var`中，你真的不希望你的根文件系统被一个填满了软件包缓存的磁盘所死锁。
- en: '**Boot partition**: 50 MB'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**引导分区**：50MB'
- en: '**Swap partition**:'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**交换分区**：'
- en: 'When your RAM is less than 4 GB: RAM + one third of RAM'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当你的RAM小于4GB时：RAM + RAM的三分之一
- en: 'When your RAM is greater than 4 GB: Fix it on 4 GB (there is actually no real
    need to make it bigger)'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当你的RAM大于4GB时：将其固定在4GB（实际上没有必要使其更大）
- en: '**Root partition**: 10 GB (gamers might want to go to 50 GB here)'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**根分区**：10GB（游戏玩家可能会想要增加到50GB）'
- en: '**Var partition**: 5 GB (if only used for cache) when having some data from
    databases stored on it; I would go up depending on the need'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Var分区**：5GB（如果只用于缓存），如果其中存储了一些数据库的数据；根据需要可以增加'
- en: '**Home partition**: These days you''ll end up having 300 to 400 GB and even
    more'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**主目录分区**：现在你可能会有300到400GB甚至更多'
- en: The netcfg tool originally developed by Arch Linux provides us with tons of
    options, which we will discuss in the next section.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 最初由Arch Linux开发的netcfg工具为我们提供了大量的选项，我们将在下一节中讨论。
- en: Netcfg sample configurations
  id: totrans-101
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Netcfg示例配置
- en: 'The sample configurations can be found in the `/etc/network.d/examples` folder.
    In the following table, we have given a list of sample configurations provided
    by the netcfg package:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 示例配置可以在`/etc/network.d/examples`文件夹中找到。在下表中，我们列出了netcfg软件包提供的示例配置列表：
- en: '| Connection type | Example profile |'
  id: totrans-103
  prefs: []
  type: TYPE_TB
  zh: '| 连接类型 | 示例配置 |'
- en: '| --- | --- |'
  id: totrans-104
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Wireless/WEP hex key | `wireless-wep` |'
  id: totrans-105
  prefs: []
  type: TYPE_TB
  zh: '| 无线/WEP十六进制密钥 | `wireless-wep` |'
- en: '| Wireless/WEP string key | `wireless-wep-string-key` |'
  id: totrans-106
  prefs: []
  type: TYPE_TB
  zh: '| 无线/WEP字符串密钥 | `wireless-wep-string-key` |'
- en: '| Wireless/WPA-Personal (passphrase/preshared key) | `wireless-wpa` |'
  id: totrans-107
  prefs: []
  type: TYPE_TB
  zh: '| 无线/WPA-Personal（密码/预共享密钥） | `wireless-wpa` |'
- en: '| Wireless/WPA-Enterprise |'
  id: totrans-108
  prefs: []
  type: TYPE_TB
  zh: '| 无线/WPA-Enterprise |'
- en: '`wireless-wpa-config` (`wpa_supplicant` configuration is external)'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`wireless-wpa-config`（`wpa_supplicant`配置是外部的）'
- en: '`wireless-wpa-configsection` (`wpa_supplicant` configuration stored as a string)'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`wireless-wpa-configsection`（`wpa_supplicant`配置存储为字符串）'
- en: '|'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Wired/DHCP | `ethernet-dhcp` |'
  id: totrans-112
  prefs: []
  type: TYPE_TB
  zh: '| 有线/DHCP | `ethernet-dhcp` |'
- en: '| Wired/static IP | `ethernet-static` |'
  id: totrans-113
  prefs: []
  type: TYPE_TB
  zh: '| 有线/静态IP | `ethernet-static` |'
- en: '| Wired/iproute configuration | `ethernet-iproute` |'
  id: totrans-114
  prefs: []
  type: TYPE_TB
  zh: '| 有线/iproute配置 | `ethernet-iproute` |'
- en: Note
  id: totrans-115
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: For the more extended explanations of some parts to follow, I would refer you
    to the *Configuring your system* recipe.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 对于接下来的一些部分的更详细的解释，我建议您参考*配置您的系统*方法。
- en: Genfstab extra options
  id: totrans-117
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Genfstab额外选项
- en: 'If you prefer the use of UUID or label in your `fstab` file, you can pass an
    extra parameter to the `genfstab` script: `U` for UUID or `L` for labels.'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您更喜欢在`fstab`文件中使用UUID或标签，可以向`genfstab`脚本传递额外参数：`U`表示UUID，`L`表示标签。
- en: Final installation of Syslinux
  id: totrans-119
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Syslinux的最终安装
- en: The final installation of Syslinux has to be done from within the chrooted environment.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: Syslinux的最终安装必须在chrooted环境中完成。
- en: '[PRE13]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Should the previous command fail while trying to set the boot flag, use the
    following command:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 如果前面的命令在尝试设置引导标志时失败，可以使用以下命令：
- en: '[PRE14]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: After a successful installation of Syslinux, configure the way your system will
    boot by editing `/boot/syslinux/syslinux.cfg`.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 成功安装Syslinux后，通过编辑`/boot/syslinux/syslinux.cfg`来配置系统启动方式。
- en: Installing Arch Linux using the Archboot ISO (Should know)
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Archboot ISO安装Arch Linux（应该知道）
- en: In this recipe we'll learn about the installation of Arch Linux. It might seem
    a little scary because of the manual installation process, but it is not difficult
    at all. The installation script will practically guide you all the way through
    the installation, and you can have a system capable of booting in even less than
    10 minutes. In the Arch Linux ecosystem, the installation is something that is
    usually done once and then never again because of the rolling release of packages.
    Also see the *Beginner's Guide* at [https://wiki.archlinux.org/index.php/Beginners'_Guide](https://wiki.archlinux.org/index.php/Beginners'_Guide)
    to get a grasp of what Arch Linux is all about. As Arch Linux is an ever moving
    target, the preferred method of installation is when you are connected to the
    Internet so you can fetch all the latest and greatest software available. Even
    before downloading, it is a must to read the latest news at [http://www.archlinux.org/news/](http://www.archlinux.org/news/)
    about any new developments.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个方法中，我们将学习如何安装Arch Linux。由于手动安装过程，可能会显得有点可怕，但实际上并不难。安装脚本将贯穿整个安装过程，您可以在不到10分钟内拥有一个能够启动的系统。在Arch
    Linux生态系统中，由于软件包的滚动发布，安装通常只需要进行一次，然后就再也不需要了。还可以参考[https://wiki.archlinux.org/index.php/Beginners'_Guide](https://wiki.archlinux.org/index.php/Beginners'_Guide)中的*初学者指南*，了解Arch
    Linux的相关信息。由于Arch Linux是一个不断发展的目标，最好的安装方法是在连接到互联网时进行，这样您可以获取所有最新和最好的软件。甚至在下载之前，必须阅读[http://www.archlinux.org/news/](http://www.archlinux.org/news/)上的最新消息，了解任何新的发展。
- en: When we only want a taste of Arch Linux and are probably far from sure that
    this is what we want for all day use, consider learning how the system works by
    installing it in a virtual machine. In the *Beginner's Guide* there is a useful
    section about it at [https://wiki.archlinux.org/index.php/Beginners'_Guide#Install_on_a_virtual_machine](https://wiki.archlinux.org/index.php/Beginners'_Guide#Install_on_a_virtual_machine).
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们只是想尝试Arch Linux，并且可能并不确定这是否适合全天使用时，可以考虑通过在虚拟机中安装来学习系统的工作方式。在*初学者指南*中有一个有用的部分，网址为[https://wiki.archlinux.org/index.php/Beginners'_Guide#Install_on_a_virtual_machine](https://wiki.archlinux.org/index.php/Beginners'_Guide#Install_on_a_virtual_machine)。
- en: Getting ready
  id: totrans-128
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: We can get the Archboot ISO from [http://wiki.archlinux.org/index.php/Archboot](http://wiki.archlinux.org/index.php/Archboot).
    On this page we will find a download link to the latest release. We can select
    to download the torrent files or the ISO immediately.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以从[http://wiki.archlinux.org/index.php/Archboot](http://wiki.archlinux.org/index.php/Archboot)获取Archboot
    ISO。在这个页面上，我们会找到最新版本的下载链接。我们可以选择立即下载种子文件或ISO。
- en: 'The following list describes the main tasks that we will perform in this recipe:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 以下列表描述了我们将在这个方法中执行的主要任务：
- en: '**Preparing the installation media**: We are going to download the ISO file
    from the Archboot wiki page and save it on the preferred media of our choice.
    At the time of writing, there is a choice to download an architecture-specific
    ISO or a dual ISO that contains both i686 and x86-64 architectures on one disk.
    I would suggest downloading the dual ISO, which makes installing on any PC and
    any of these architectures possible without any hassle.'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 准备安装介质：我们将从Archboot维基页面下载ISO文件，并将其保存在我们选择的首选介质上。在撰写本文时，可以选择下载特定架构的ISO或包含i686和x86-64架构的双重ISO。我建议下载双重ISO，这样可以在任何PC上安装任何架构，而无需任何麻烦。
- en: '**Booting the install media and starting installation**: Start your PC using
    your preferred installation media (CD or USB drive). On most PC systems, you can
    get into the boot menu by pressing one of the function keys, usually between *F8*
    and *F12* depending on the motherboard manufacturer. On older machines where you
    do not yet have a boot menu, you might need to change the boot order in the BIOS
    where the CD-ROM (or DVD/Blu-ray) has to be chosen as the first device to try
    booting from.'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**引导安装介质并开始安装**：使用您首选的安装介质（CD或USB驱动器）启动您的PC。在大多数PC系统上，您可以通过按下一个功能键（通常在*F8*和*F12*之间，具体取决于主板制造商）进入引导菜单。在还没有引导菜单的旧机器上，您可能需要在BIOS中更改引导顺序，选择CD-ROM（或DVD/蓝光）作为首选启动设备。'
- en: '**Setting keyboard and console font**: When using a different keyboard layout
    than the default one, you will for sure need this recipe to configure your specific
    keyboard layout and optionally the console font you like. If you have configured
    both, the installer will also bring these settings into the configuration of our
    installed system.'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置键盘和控制台字体：当使用不同于默认键盘布局时，您肯定需要这个方法来配置您特定的键盘布局，以及您喜欢的控制台字体。如果两者都配置了，安装程序还将把这些设置带入到我们安装的系统的配置中。
- en: '**Setting date and time**: In this recipe we will also configure three small
    parts—we''ll set our time zone, the current time, and the current date.'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置日期和时间：在这个方法中，我们还将配置三个小部分——设置我们的时区、当前时间和当前日期。
- en: '**Auto preparing hard drive**: The **Auto-Prepare** option will guide you with
    the creation of a default partition scheme. When we can''t have our entire drive
    erased, or we want to differ from the default partition scheme chosen by the installer,
    we should skip to the steps for *Manually preparing hard drive*.'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自动准备硬盘**：**自动准备**选项将指导您创建默认的分区方案。当我们无法擦除整个驱动器，或者我们想要与安装程序选择的默认分区方案有所不同时，我们应该跳转到*手动准备硬盘*的步骤。'
- en: Note
  id: totrans-136
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'Warning: the selected hard drive will be erased completely.'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 警告：所选的硬盘将被完全擦除。
- en: '**Manually preparing hard drive**: Manual partition gives you full control
    over how many partitions you create. This can also concern multiple disks, so
    there is total freedom. Use the manual preparation when you are used to partitioning.'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**手动准备硬盘**：手动分区可以让您完全控制创建多少个分区。这也可能涉及多个磁盘，因此有完全的自由。当您习惯于分区时，请使用手动准备。'
- en: '**Selecting source**: We can select if we want to install from the repositories
    available on the Internet, or to install immediately from the packages available
    on the installation media. It would be best to opt for FTP/HTTP as this would
    ensure we have the latest packages available.'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**选择源**：我们可以选择是从互联网上可用的存储库安装，还是立即从安装媒体上可用的软件包安装。最好选择FTP/HTTP，因为这将确保我们有最新的软件包可用。'
- en: '**Selecting packages**: From my point of view the best way to select your packages
    is by first installing the base system. And when we are done and the system is
    booting standalone, add packages along the way as we need them. The installer
    will ask if you want to add the extra repository so you will be able to install
    everything at once. I would say the safe option here is not to include the extra
    repository and start with the base system. In general, it will be faster to install
    applications when you need them. After the installation, we should only check
    some automatically created configuration files just to make sure the installer
    created them correctly, and we will get a bootable system when rebooting after
    installing the boot loader. The more extensive configuration will be explained
    later on. If you want to change anything here during the installation procedure,
    I would suggest you skip forward to the *Configuring your system* recipe where
    the configuration is explained in depth.'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**选择软件包**：从我的角度来看，选择软件包的最佳方式是首先安装基本系统。当我们完成并系统独立引导时，可以根据需要逐步添加软件包。安装程序会询问是否要添加额外的存储库，以便一次性安装所有内容。我认为在这里选择不包括额外的存储库并从基本系统开始是比较安全的。通常，需要时安装应用程序会更快。安装后，我们只需检查一些自动创建的配置文件，以确保安装程序正确创建了它们，并且在安装引导加载程序后重新启动时将获得可引导的系统。更详细的配置将在后面解释。如果您在安装过程中想要更改任何内容，我建议您跳转到*配置系统*的步骤，其中会深入解释配置。'
- en: '**Installing boot loader**: By the end of the recipe we''ll have almost everything
    that we need. However, for our machine to be really usable, we''ll have to install
    the boot loader as this piece of software will enable us to get into Arch Linux
    when we reboot.'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**安装引导加载程序**：在本教程结束时，我们几乎拥有所需的一切。但是，为了使我们的计算机真正可用，我们必须安装引导加载程序，因为这个软件将使我们在重新启动时能够进入Arch
    Linux。'
- en: How to do it...
  id: totrans-142
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Let''s perform the following steps for preparing the installation media:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们为准备安装媒体执行以下步骤：
- en: Once we have downloaded the ISO image file, we must verify its integrity by
    also downloading the `md5sum.txt` file from the `archboot` folder.
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦我们下载了ISO镜像文件，我们必须通过从“archboot”文件夹下载“md5sum.txt”文件来验证其完整性。
- en: We will verify the integrity by issuing the `md5sum -c md5sum.txt` command and
    checking whether our download was successful:![How to do it...](img/9724OS_02_01.jpg)
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将通过发出`md5sum -c md5sum.txt`命令来验证完整性，并检查我们的下载是否成功：![如何操作...](img/9724OS_02_01.jpg)
- en: As we can see, all the ISOs were downloaded but the torrent files were not.
    This leads to some successful checks and others state that the files are not found,
    but in the end we know the ISO file we downloaded is ok.
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 正如我们所看到的，所有ISO都已下载，但是种子文件没有。这导致一些成功的检查和其他状态文件未找到，但最终我们知道我们下载的ISO文件是正常的。
- en: Now that we are sure our ISO is ok, we can burn this to a CD with our favorite
    burning program.
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 既然我们确定我们的ISO是正常的，我们可以使用我们喜欢的刻录程序将其刻录到CD上。
- en: 'The following steps will guide you in booting the install media and starting
    the installation:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤将指导您启动安装媒体并开始安装：
- en: Insert the CD in the drive or insert the USB stick in the USB port of your PC.
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将CD插入驱动器或将USB插入PC的USB端口。
- en: Enter the boot menu or let your computer automatically boot from the inserted
    installation media.
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入启动菜单或让计算机自动从插入的安装媒体启动。
- en: If the previous steps went fine, we should see the following screenshot:![How
    to do it...](img/9724OS_02_02.jpg)
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果前面的步骤进行得很顺利，我们应该会看到以下截图：![如何操作...](img/9724OS_02_02.jpg)
- en: Select the architecture depending on whether we want to boot the **Long Term
    Supported** (**LTS**) or the default kernel. The default kernel should be fine,
    but if we want to run the LTS kernel for stability reasons, we can select it.
    Press *Enter* and we'll be on our way.
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据我们是否要引导**长期支持**（**LTS**）或默认内核，选择架构。默认内核应该没问题，但是如果出于稳定性原因我们想要运行LTS内核，我们可以选择它。按下*Enter*，我们就可以开始了。
- en: When the installation media is completely started, we get some initial information
    about the Archboot environment. When we press *Enter*, the installation scripts
    will be started:![How to do it...](img/9724OS_02_03.jpg)
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当安装媒体完全启动时，我们会得到有关Archboot环境的一些初始信息。当我们按下*Enter*时，安装脚本将启动：![如何操作...](img/9724OS_02_03.jpg)
- en: When ready to go, press *Enter* and we will be presented with the **MAIN MENU**
    screen. The menu contains several steps that are followed in a chronological order
    for a fresh installation:![How to do it...](img/9724OS_02_04.jpg)
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 准备好后，按下*Enter*，我们将看到**主菜单**屏幕。菜单包含几个按照时间顺序进行新安装的步骤：![如何操作...](img/9724OS_02_04.jpg)
- en: 'Let''s perform the following steps to set keyboard and console font:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们执行以下步骤来设置键盘和控制台字体：
- en: We are presented with the keyboard layout choice, where you get a list with
    all the possible keyboard layouts that Arch Linux supports. Select your keyboard
    layout and continue.
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以选择键盘布局，列出Arch Linux支持的所有可能的键盘布局。选择您的键盘布局并继续。
- en: Optionally, you can also select a console font of your liking. If you have no
    idea or don't want to do this, just go back to the main installer menu and continue
    with the next step. If you have a preference, then select the **Set Console Font
    option** and select your font.
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可选地，您还可以选择自己喜欢的控制台字体。如果您不知道或不想这样做，只需返回到主安装程序菜单并继续下一步。如果您有偏好，然后选择**设置控制台字体选项**并选择您的字体。
- en: 'Let''s set our time zone, the current time, and the current date:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们设置我们的时区、当前时间和当前日期：
- en: Select the time zone. This is something similar to Continent/Capital. For example,
    Europe/Brussels.
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择时区。这类似于大陆/首都。例如，欧洲/布鲁塞尔。
- en: Select **UTC** for your hardware clock. This will make sure the daylight saving
    changes will be applied correctly.
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为您的硬件时钟选择**UTC**。这将确保夏令时更改将被正确应用。
- en: Set your current system time. This is actually the time it is now in your time
    zone.
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置您当前的系统时间。这实际上是您所在时区的当前时间。
- en: Set your current system date.
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置您当前的系统日期。
- en: 'The following steps should be performed for auto preparing the hard drive:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 自动准备硬盘需要执行以下步骤：
- en: First of all, you are presented with a choice of using the old MBR partition
    tables or the new GUID (GPT) partition tables. The choice is entirely yours; however,
    for older machines the safe choice is MBR. For newer machines and machines with
    UEFI bootups, it's recommended to use the GPT partition tables.
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，您可以选择使用旧的MBR分区表或新的GUID（GPT）分区表。选择完全取决于您；但是，对于较旧的机器，安全的选择是MBR。对于较新的机器和具有UEFI引导的机器，建议使用GPT分区表。
- en: Select the size you want to be used for the boot `(/boot`) partition.
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择要用于引导`(/boot`)分区的大小。
- en: Select the size you want to be used for the swap `(/swap`) partition.
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择要用于交换`(/swap`)分区的大小。
- en: Select the size you want to be used for the root `(/root`) partition.
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择要用于根`(/root`)分区的大小。
- en: The remaining disk space will automatically be claimed for your home (`/home`)
    partition where all the users' data will be residing.
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 剩余的磁盘空间将自动用于您的家（`/home`)分区，其中所有用户的数据将驻留。
- en: Select the filesystem you want to be used for the root partition and for the
    home partition. The safest choice here is ext4\. If you are an adventurous spirit,
    you could go with Btrfs or NILFS. Do your research before making a choice for
    using a currently marked experimental filesystem, if it really is the thing you
    want to use.
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择要用于根分区和家目录分区的文件系统。这里最安全的选择是ext4。如果您是一个冒险的精神，您可以选择Btrfs或NILFS。在选择使用当前标记为实验性文件系统之前，请进行研究，确保它确实是您想要使用的东西。
- en: Choose the naming system you want to be used in the configuration files.
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择您想要在配置文件中使用的命名系统。
- en: When we are completely sure everything is ok, we continue and the installer
    will prepare the entire drive. If all goes well, the installer will state that
    the preparation was successful.
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当我们完全确定一切都没问题时，我们继续，安装程序将准备整个驱动器。如果一切顺利，安装程序将声明准备成功。
- en: 'The following steps should be performed for manually preparing the hard drive:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 手动准备硬盘需要执行以下步骤：
- en: Select the partition type (MBR or GPT). For extended information see step 1
    performed for *Auto preparing hard drive*.
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择分区类型（MBR或GPT）。有关更多信息，请参见*自动准备硬盘*执行的步骤1。
- en: Select a disk to partition.
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择要分区的磁盘。
- en: The installer presents you with cfdisk or cgdisk depending on whether you have
    selected to use MBR or GPT partitioning.
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装程序会根据您选择使用MBR或GPT分区来提供cfdisk或cgdisk。
- en: After the partitions are created, we need to go back to the partitioning menu
    and use the **Set Filesystem Mountpoints** option.
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建分区后，我们需要返回到分区菜单并使用**设置文件系统挂载点**选项。
- en: First you need to select what partition you will be using as swap.
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，您需要选择要用作交换的分区。
- en: The installer will then ask you to select the root partition for your system.
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，安装程序会要求您选择系统的根分区。
- en: After these required partitions are selected, you can keep on selecting partitions
    and set their mount points to the location you want.
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择完所需的分区后，您可以继续选择分区并将它们的挂载点设置为您想要的位置。
- en: Note
  id: totrans-180
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: As we're doing a manual partitioning layout, we can apply the hints from the
    Auto-Prepare section in the manual section. However, by using the manual approach,
    you gain a lot of extra freedom to create a partition scheme as you please.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们正在进行手动分区布局，我们可以应用手动部分中的自动准备部分的提示。但是，通过使用手动方法，您可以获得更多额外的自由来创建您喜欢的分区方案。
- en: 'The following steps are needed to select your source:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 选择您要使用的源需要以下步骤：
- en: Select CD-ROM or FTP/HTTP.
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择CD-ROM或FTP/HTTP。
- en: Configure your network.
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置您的网络。
- en: Select the mirror you want to use (this only has to be done when FTP/HTTP is
    selected).
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择要使用的镜像（仅在选择FTP/HTTP时才需要执行此操作）。
- en: 'The following steps are needed to select your packages:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 选择您的软件包需要以下步骤：
- en: Don't enable the extra repository.
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不要启用额外的存储库。
- en: Only select **base**; this contains all the packages needed to get a working
    system after the installation.
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 只选择**base**；这包含安装后获得工作系统所需的所有软件包。
- en: Select the packages you want to install.
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择要安装的软件包。
- en: Let the installation script do its job of installing the packages.
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让安装脚本安装软件包。
- en: 'Finally, let''s install the boot loader:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，让我们安装引导加载程序：
- en: Choose the boot loader you like the best.
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择您最喜欢的引导加载程序。
- en: The best known will be GRUB and Syslinux—those are probably also the best supported.
    There are also other boot loaders available such as LILO.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 最著名的将是GRUB和Syslinux——这些可能也是最受支持的。还有其他可用的引导加载程序，如LILO。
- en: The installer will suggest you check the configuration file it has created.
    In most cases this configuration will be correct, but you should always check
    if it is correct. See if the correct devices are used in the configuration file.
    You can verify the correct devices by checking your filesystem's layout.
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装程序会建议您检查它创建的配置文件。在大多数情况下，这个配置将是正确的，但您应该始终检查它是否正确。查看配置文件中是否使用了正确的设备。您可以通过检查文件系统的布局来验证正确的设备。
- en: Install the boot loader.
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装引导加载程序。
- en: Now that you have taken all the steps needed to install a basic working Arch
    Linux system on your computer, the only thing left in the installation procedure
    is to reboot your system and remove the installation media. Then you can enjoy
    the first boot of your freshly installed Arch Linux.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您已经采取了安装基本的Arch Linux系统所需的所有步骤，安装过程中唯一剩下的事情就是重新启动系统并移除安装介质。然后，您就可以享受您新安装的Arch
    Linux的首次启动了。
- en: Reboot the system.
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重新启动系统。
- en: Note
  id: totrans-198
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: For a detailed description of the main tasks performed, refer to the *Getting
    ready* section of this recipe.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 有关执行的主要任务的详细描述，请参阅本食谱的“准备就绪”部分。
- en: How it works...
  id: totrans-200
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: We downloaded the Archboot ISO via the torrent files or directly using a web
    browser, and the `md5sum` command lets us verify the integrity of the downloaded
    ISO. So now, we can rest assured that the downloaded file is the real one.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过种子文件或直接使用Web浏览器下载了Archboot ISO，并且`md5sum`命令让我们验证了下载的ISO的完整性。所以现在，我们可以放心地知道下载的文件是真实的。
- en: Note
  id: totrans-202
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Never use an ISO where you have not verified the checksums.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 永远不要使用您未验证校验和的ISO。
- en: The Archboot ISO contains a fully working operating system so first we boot
    that. We are automatically logged into the live system on pressing the *Enter*
    key. Next, the installation scripts are called and we get dropped in the Archboot
    installation scripts.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: Archboot ISO包含一个完全可用的操作系统，所以首先我们启动它。按下*Enter*键后，我们会自动登录到实时系统。接下来，安装脚本被调用，我们被放入Archboot安装脚本中。
- en: The installation scripts will call the correct application to set the keyboard
    layout and the console font, and the selected date and time settings. The installation
    scripts will also keep track of the selected values to put them in the appropriate
    configuration files.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 安装脚本将调用正确的应用程序来设置键盘布局和控制台字体，以及选择的日期和时间设置。安装脚本还将跟踪所选的值，以将它们放入适当的配置文件中。
- en: If we have selected the **Auto-Prepare** option, then based on the configuration
    we have made, the installer will run fdisk and create the partition scheme that
    we want.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们选择了**自动准备**选项，那么根据我们所做的配置，安装程序将运行fdisk并创建我们想要的分区方案。
- en: 'If we have chosen to do a manual partition of the disk, then we can select
    any layout we want. Once we are satisfied with the partition scheme, the installer
    will ask some questions (for example: Where to mount? What filesystem?), and uses
    our answers to mount the partitions we have made to the correct mount points.
    The installation scripts will also keep track of the answers given so that they
    can be used later on for the generation of a configuration file.'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们选择手动分区磁盘，那么我们可以选择任何布局。一旦我们对分区方案满意，安装程序将询问一些问题（例如：挂载到哪里？使用什么文件系统？），并使用我们的答案将我们创建的分区挂载到正确的挂载点上。安装脚本还将跟踪给出的答案，以便稍后用于生成配置文件。
- en: The installation script will show you a list of packages that pacman has made
    available for you to install. When you have selected all the packages you want
    on your system, the installation script will pass these packages with some extra
    parameters back to pacman, which will do the actual installing.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 安装脚本将向您显示pacman为您提供的要安装的软件包列表。当您选择了系统上想要的所有软件包后，安装脚本将使用一些额外的参数将这些软件包传递回pacman，然后pacman将进行实际安装。
- en: At the end of the installation, a list of configuration files will be prepared
    for you. These configuration files are there for you to review. When you are satisfied
    with the configuration file, save it. The installation script will now use the
    configuration file to put the selected boot loader into place.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 安装结束时，将为您准备一份配置文件列表。这些配置文件供您审查。当您对配置文件满意时，请保存它。安装脚本现在将使用配置文件将所选的引导加载程序放置到相应位置。
- en: There's more...
  id: totrans-210
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: When we want to divert from the default settings, we might need some extra knowledge.
    So let's discuss them one by one.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们想要偏离默认设置时，我们可能需要一些额外的知识。所以让我们逐一讨论它们。
- en: The ISOs can be used from a USB drive
  id: totrans-212
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ISO可以从USB驱动器中使用
- en: 'The ISOs downloaded from Arch Linux are all "hybrid" images, which means you
    can save them on a USB drive and they will be bootable. Installing from a USB
    drive is also very simple. Just connect a USB drive to your machine and issue
    the following command:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 从Arch Linux下载的ISO都是“混合”映像，这意味着您可以将它们保存在USB驱动器上，并且它们将是可启动的。从USB驱动器安装也非常简单。只需将USB驱动器连接到您的计算机，并发出以下命令：
- en: '[PRE15]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Note
  id: totrans-215
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: All information on the USB drive will be overwritten.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: USB驱动器上的所有信息都将被覆盖。
- en: We need to make sure that we set the correct input file, our ISO, to the `if`
    parameter. Also the output file parameter must be the device and not some partition
    of the device, such as `of=/dev/sdX`. The `X` stands for the letter assigned by
    the system to your USB drive.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要确保将正确的输入文件，即我们的ISO，设置为`if`参数。同时，输出文件参数必须是设备，而不是设备的某个分区，比如`of=/dev/sdX`。`X`代表系统分配给您的USB驱动器的字母。
- en: Selecting local time versus UTC
  id: totrans-218
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 选择本地时间还是UTC
- en: There are some rare cases where the choice for local time on your hardware clock
    is the best choice. For example, when installing Arch Linux next to Windows XP,
    which is an operating system not capable of handling a different time on a hardware
    clock and system clock. More recent versions of the Windows operating system can
    handle the hardware clock being set to UTC.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些罕见情况下，硬件时钟上的本地时间是最佳选择。例如，在安装Arch Linux旁边的Windows XP时，这是一个无法处理硬件时钟和系统时钟不同时间的操作系统。更近期的Windows操作系统可以处理将硬件时钟设置为UTC的情况。
- en: A safe partition size choice for desktop systems
  id: totrans-220
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 桌面系统的安全分区大小选择
- en: Partitioning is a very wide topic. It can be done in an endless number of combinations.
    We will now discuss some extra information required to understand the partitioning.
    Also some nice defaults to have a system up and running quickly.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 分区是一个非常广泛的主题。它可以以无数种组合进行。我们现在将讨论一些理解分区所需的额外信息。还有一些很好的默认值，可以让系统快速启动和运行。
- en: 'The following list is a selection for normal desktop use. For people wanting
    to play a lot of games, these size selections will not fit your needs:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 以下列表是正常桌面使用的选择。对于想要玩很多游戏的人来说，这些大小选择将无法满足您的需求：
- en: '**Boot partition**: 50 MB'
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**引导分区**：50MB'
- en: '**Swap partition**:'
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**交换分区**：'
- en: 'When your RAM is less than 4 GB: RAM + one third of RAM'
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当您的RAM小于4GB时：RAM + RAM的三分之一
- en: 'When your RAM is more than 4 GB: Fix it on 4 GB (there is actually no real
    need to make it bigger)'
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当您的RAM大于4GB时：将其固定在4GB（实际上没有真正需要使其更大）
- en: '**Root partition**: 10 GB (gamers might want to go to 50 GB here)'
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**根分区**：10GB（玩家可能希望在这里选择50GB）'
- en: '**Home partition**: These days you''ll end up having 300 to 400 GB and even
    more'
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**家目录分区**：这些天您最终会有300到400GB甚至更多'
- en: Selecting the desired filesystem
  id: totrans-229
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 选择所需的文件系统
- en: When selecting which filesystem to use for your root and home partitions, you
    should be well informed about the possibilities of the filesystems. When you have
    no idea, the best choice is **ext4** as this is the default filesystem these days
    with modern features, nice speed, and robustness, so you don't lose any data.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 在选择根和家目录分区的文件系统时，您应该对文件系统的可能性有所了解。如果您不知道，最好的选择是**ext4**，因为这是现代特性、速度快和稳健性的默认文件系统，因此您不会丢失任何数据。
- en: '![Selecting the desired filesystem](img/9724OS_02_05.jpg)'
  id: totrans-231
  prefs: []
  type: TYPE_IMG
  zh: 选择所需的文件系统
- en: What about the filesystem on boot?
  id: totrans-232
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 引导时的文件系统怎么样？
- en: The boot partition will automatically be formatted with the ext2 filesystem.
    This is the safest choice, as all boot loaders you can find out there will be
    able to get your system to boot when you have a boot partition formatted as ext2.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 引导分区将自动使用ext2文件系统格式化。这是最安全的选择，因为您可以在那里找到的所有引导加载程序都能够在引导分区格式化为ext2时使系统启动。
- en: Naming schemes for block devices
  id: totrans-234
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 块设备的命名方案
- en: 'There are three ways to point to a block device (partition):'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 有三种指向块设备（分区）的方法：
- en: '**UUID scheme**: This is a unique ID that we can use to point to a block device'
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**UUID方案**：这是一个唯一的ID，我们可以用它来指向一个块设备'
- en: '**LABEL scheme**: Here we can point to a partition by using its label'
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**LABEL方案**：在这里，我们可以通过使用其标签指向一个分区'
- en: '**KERNEL scheme**: This is the oldest method used to point to a block device
    by directly pointing to the device node'
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**KERNEL方案**：这是通过直接指向设备节点来指向块设备的最古老的方法'
- en: Using the UUID scheme might look ugly in your configuration but this is the
    most certain way you will always point to the correct device. Say you have some
    hardware changes and the devices are ordered in a new way; with this you will
    still have the correct block device selected.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 使用UUID方案可能会使您的配置看起来不太美观，但这是您始终指向正确设备的最确定的方法。假设您有一些硬件更改，并且设备以新的方式排序；使用这种方法，您仍将选择正确的块设备。
- en: The LABEL scheme is looking very elegant and simple but there might be some
    name collisions as multiple physical disk partitions can have the same name.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: LABEL方案看起来非常简洁优雅，但可能会出现一些名称冲突，因为多个物理磁盘分区可能具有相同的名称。
- en: The KERNEL scheme is actually the oldest and here we are just pointing to some
    device node (such as `/dev/sda1`), but this could fail someday after some hardware
    changes, which could lead to a different order of the device nodes.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: KERNEL方案实际上是最古老的，这里我们只是指向一些设备节点（比如`/dev/sda1`），但在一些硬件更改后可能会失败，这可能导致设备节点的不同顺序。
- en: '![Naming schemes for block devices](img/9724OS_02_06.jpg)'
  id: totrans-242
  prefs: []
  type: TYPE_IMG
  zh: 块设备的命名方案
- en: A good partition scheme for desktops
  id: totrans-243
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 桌面系统的良好分区方案
- en: On a desktop system, especially on Arch Linux, I suggest having a separate `/var`
    partition. Depending on the other goals you have for this partition (for example,
    running a huge MySQL database, other databases, and so on), the appropriate value
    would be 5 GB and up. Don't overdo it or you will have a lot of empty space in
    the `/var` partition. Why so big? Pacman keeps its cache in `/var` and you don't
    really want your root filesystem being deadlocked by a disk that's filled up with
    package cache.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 在桌面系统上，特别是在Arch Linux上，我建议有一个单独的`/var`分区。根据您对此分区的其他目标（例如运行一个庞大的MySQL数据库，其他数据库等），适当的值将是5GB及以上。不要过度使用，否则您将在`/var`分区中有很多空间。为什么这么大？Pacman将其缓存保存在`/var`中，您真的不希望您的根文件系统被填满了软件包缓存而陷入僵局。
- en: Selecting a mirror geographically close to you
  id: totrans-245
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 选择一个地理位置靠近您的镜像
- en: 'When installing Arch Linux from the Internet, it is best to choose a mirror
    close to our home for the best download speeds:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 当从互联网安装Arch Linux时，最好选择一个靠近我们家的镜像以获得最佳的下载速度：
- en: '![Selecting a mirror geographically close to you](img/9724OS_02_07.jpg)'
  id: totrans-247
  prefs: []
  type: TYPE_IMG
  zh: 选择一个地理位置靠近您的镜像
- en: When your network is up and running, you can select a mirror and select one
    that is as close as possible to your location. We will get the best performance
    this way. Should you be in doubt what the closest mirror is for you, you can always
    select a global mirror such as [mirrors.kernel.org](http://mirrors.kernel.org),
    which will automatically choose a server close to you.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 当您的网络正常运行时，可以选择一个镜像，并选择尽可能靠近您位置的镜像。这样我们将获得最佳性能。如果您对您的最近的镜像有疑问，您可以随时选择全球镜像，例如[mirrors.kernel.org](http://mirrors.kernel.org)，它将自动选择一个靠近您的服务器。
- en: What packages to select
  id: totrans-249
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 选择哪些软件包
- en: During the installation of Arch Linux, we can select a list of packages to install.
    I will now share my own preferred way. When this is a first time installation,
    my personal preference would be to leave all the packages selected from the base
    group. If you really insist on removing some packages from the base group, go
    ahead and remove them, but you should really know what you are doing in that case.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 在安装Arch Linux时，我们可以选择要安装的软件包列表。现在我将分享我的首选方式。对于第一次安装，我个人偏好是保留从基本组中选择的所有软件包。如果您坚持要从基本组中删除一些软件包，可以继续删除，但在这种情况下，您确实应该知道自己在做什么。
- en: '![What packages to select](img/9724OS_02_08.jpg)'
  id: totrans-251
  prefs: []
  type: TYPE_IMG
  zh: '![选择哪些软件包](img/9724OS_02_08.jpg)'
- en: Having the extra repository enabled
  id: totrans-252
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 启用额外的软件源
- en: If this is not the first install of Arch Linux, you can definitely enable the
    use of the extra repository so that you can select a whole bunch of applications,
    which you know for sure you want to have installed on your system. For example,
    you can immediately install Xorg, GNOME, XFce, KDE, and so on. For a first time
    install, I would go step-by-step and leave the extra as it is for now.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这不是Arch Linux的第一次安装，您肯定可以启用额外的软件源，以便可以选择一大堆应用程序，您肯定想要在系统上安装。例如，您可以立即安装Xorg、GNOME、XFce、KDE等。对于第一次安装，我建议一步一步进行，暂时保持额外的软件源不变。
- en: Configuring your system (Should know)
  id: totrans-254
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置您的系统（应该知道）
- en: In this recipe we'll explain the configuration files used to identify your system.
    Usually, these files only need to be configured once and stay the same for the
    entire life of the system.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将解释用于识别您的系统的配置文件。通常，这些文件只需要配置一次，并且在整个系统的生命周期内保持不变。
- en: Getting ready
  id: totrans-256
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'The following list describes the main tasks that we will perform in this recipe:'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 以下列表描述了本教程中将执行的主要任务：
- en: '**Configuring hostname**: A **hostname** is a name we give to a machine that
    will make it easy to recognize which machine we are talking about. So if we are
    in a network, we can easily separate the different machines by their hostnames.'
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置主机名：**主机名**是我们为机器指定的名称，这将使我们很容易识别我们正在谈论的是哪台机器。因此，如果我们在一个网络中，我们可以通过它们的主机名轻松区分不同的机器。
- en: '**Configuring console**: We''ll also configure the virtual console, what keyboard
    layout to use, and maybe some special font and mapping for these.'
  id: totrans-259
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置控制台：我们还将配置虚拟控制台，使用哪种键盘布局，以及可能一些特殊的字体和映射。
- en: '**Configuring the localization**: In this task we will set up our machine with
    the correct localization. This can be done very extensively in the `locale.conf`
    file. In the most common cases, we only set `LANG` and `LC_COLLATE` in this file.
    If you want to narrow it down, you can get more information by typing `man locale.conf`.
    However, `LC_COLLATE` is the fallback when everything else fails.'
  id: totrans-260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置本地化：在这个任务中，我们将使用正确的本地化设置我们的机器。这可以在`locale.conf`文件中非常广泛地完成。在大多数情况下，我们只在此文件中设置`LANG`和`LC_COLLATE`。如果您想缩小范围，可以通过输入`man
    locale.conf`来获取更多信息。但是，当一切都失败时，`LC_COLLATE`是后备。
- en: '**Configuring time zone**: Setting your time zone will make sure that your
    system clock is correct. This has to be used in combination with `/etc/localtime`.
    Actually, they have to be changed together so for your own safety change the `/etc/localtime`
    symlink, and then immediately add the new time zone to `/etc/timezone`.'
  id: totrans-261
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置时区：设置您的时区将确保系统时钟正确。这必须与`/etc/localtime`结合使用。实际上，它们必须一起更改，因此为了您自己的安全，请更改`/etc/localtime`符号链接，然后立即将新时区添加到`/etc/timezone`。
- en: '**Configuring module handling**: Do you want to load extra modules that are
    not getting loaded by default? In the case of "fancy" hardware or some third-party
    software such as VMware or VirtualBox, we might need this. You can add a configuration
    file in `/etc/modules-load.d/`with a list of modules. The modules have to be separated
    by newlines. When you want to add some comments in those files, you can do that
    by starting your line with `#` or `;`. The files placed in the directory only
    need one extra requirement; the name has to end with `*.conf`.'
  id: totrans-262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置模块处理：您是否想加载默认未加载的额外模块？在“花哨”的硬件或一些第三方软件（如VMware或VirtualBox）的情况下，我们可能需要这样做。您可以在`/etc/modules-load.d/`中添加一个配置文件，其中包含模块列表。模块必须用换行符分隔。当您想在这些文件中添加一些注释时，您可以通过在行首加上`#`或`;`来实现。放置在该目录中的文件只需要一个额外要求；名称必须以`*.conf`结尾。
- en: How to do it...
  id: totrans-263
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'The following step configures the hostname:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤配置主机名：
- en: Edit the hostname with `vim /etc/hostname` to configure it.
  id: totrans-265
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`vim /etc/hostname`编辑主机名进行配置。
- en: 'Let''s list the steps required to configure the console:'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们列出配置控制台所需的步骤：
- en: Edit `/etc/vconsole.conf`.
  id: totrans-267
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑`/etc/vconsole.conf`。
- en: 'Add the keywords with their values. For example:'
  id: totrans-268
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加带有它们的值的关键字。例如：
- en: '[PRE16]'
  id: totrans-269
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Let''s list the steps required to configure the localization:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们列出配置本地化所需的步骤：
- en: To indicate what locales we want to support, edit `/etc/locale.gen`.
  id: totrans-271
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要指示我们要支持的区域设置，编辑`/etc/locale.gen`。
- en: When we have changed the `locale.gen` file, run `locale-gen`.
  id: totrans-272
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当我们更改了`locale.gen`文件后，运行`locale-gen`。
- en: 'To indicate what locale we want to use by default, edit `/etc/locale.conf`:'
  id: totrans-273
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要指示我们要默认使用的区域设置，编辑`/etc/locale.conf`：
- en: '[PRE17]'
  id: totrans-274
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Let''s list the steps required to configure the time zone:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们列出配置时区所需的步骤：
- en: 'Create a symlink `/etc/localtime` pointing to your time zone:'
  id: totrans-276
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建指向您时区的符号链接`/etc/localtime`：
- en: '[PRE18]'
  id: totrans-277
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Copy the time zone's name into `/etc/timezone`.
  id: totrans-278
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将时区的名称复制到`/etc/timezone`中。
- en: 'Let''s list the steps required to configure modules:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们列出配置模块所需的步骤：
- en: For loading modules, add a configuration file to `/etc/modules-load.d/`.
  id: totrans-280
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要加载模块，请将配置文件添加到`/etc/modules-load.d/`。
- en: For blacklisting and passing special parameters to modules, add a configuration
    file to `/etc/modprobe.d/`.
  id: totrans-281
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要对模块进行黑名单和传递特殊参数，请将配置文件添加到`/etc/modprobe.d/`。
- en: Note
  id: totrans-282
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: For a detailed description of the main tasks performed, refer to the *Getting
    ready section* of this recipe.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 有关执行的主要任务的详细描述，请参阅本教程的*准备就绪部分*。
- en: How it works...
  id: totrans-284
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: On boot, the system will read the content of the `/etc/hostname` file. This
    content will be used to identify the system to us as the user, and also to identify
    the machine in a network. The hostname is mostly for user convenience because
    it's much easier to remember than a big list of numbers.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 在启动时，系统将读取`/etc/hostname`文件的内容。此内容将用于识别我们作为用户的系统，并在网络中标识机器。主机名主要是为了用户方便，因为它比一个大数字列表更容易记住。
- en: The terminal will allow you to type on your localized keyboard. The output on
    your screen will correspond with the button pressed on your keyboard. Also, the
    terminal will show you the text output in the selected font. Lastly, it will do
    a translation of text encoding where needed. In the example shown in the steps
    to configure the console, the output will be translated from ISO-8859-1 to Unicode.
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 终端将允许您在本地化键盘上输入。屏幕上的输出将与键盘上按下的按钮对应。此外，终端将以所选字体显示文本输出。最后，它将根据需要对文本编码进行翻译。在配置控制台的步骤中显示的示例中，输出将从ISO-8859-1翻译为Unicode。
- en: All applications supporting the localization will bring you their output in
    American English, if `LANG=en_US`. When the application does not have the selected
    language, it will fall back to the "C language". The C language is the default
    language in computer systems, so this will also be in English.
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 所有支持本地化的应用程序将以美式英语输出，如果`LANG=en_US`。当应用程序没有选择的语言时，它将退回到“C语言”。C语言是计算机系统中的默认语言，因此它也将是英语。
- en: The time shown on your system will be the one from your time zone. When you
    are in a time zone where you have daylight saving changes, your PC will automatically
    adjust to it.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 系统显示的时间将是您所在时区的时间。当您处于一个有夏令时变化的时区时，您的计算机将自动调整。
- en: All files residing in `/etc/modules-load.d/` ending with `*.conf` will be used
    to load extra modules. All `*.conf` files residing in `/etc/modprobe.d/` will
    be used to determine if the modules must be blacklisted, or used with some special
    options.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 所有位于`/etc/modules-load.d/`中以`*.conf`结尾的文件将用于加载额外的模块。所有位于`/etc/modprobe.d/`中的`*.conf`文件将用于确定模块是否必须被列入黑名单，或者是否必须使用一些特殊选项。
- en: There's more...
  id: totrans-290
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Let's look at some tips and tricks for easier configuration of your desired
    keymap and console font and also, an easy way to find the available time zones.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一些关于更轻松配置所需键盘映射和控制台字体的技巧，以及查找可用时区的简便方法。
- en: KEYMAP
  id: totrans-292
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: KEYMAP
- en: 'We can get a list of all the available keyboard layout mappings by listing
    the folder `/usr/share/kbd/keymaps`. From the following screenshot, we can see
    we have found the Belgian layout so we can add `KEYMAP=be-latin1` to our configuration
    file:'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过列出文件夹`/usr/share/kbd/keymaps`来获取所有可用的键盘布局映射列表。从下面的截图中，我们可以看到我们已经找到了比利时布局，因此我们可以将`KEYMAP=be-latin1`添加到我们的配置文件中：
- en: '![KEYMAP](img/9724OS_03_01.jpg)'
  id: totrans-294
  prefs: []
  type: TYPE_IMG
  zh: '![KEYMAP](img/9724OS_03_01.jpg)'
- en: CONSOLEFONT
  id: totrans-295
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: CONSOLEFONT
- en: We can find a list of all the available fonts for the console by listing `/usr/share/kbd/consolefonts`.
    When we find the desired font, we can add this to our configuration file. For
    example, `CONSOLEFONT=Lat2-Terminus16.psfu.gz`.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过列出`/usr/share/kbd/consolefonts`来找到控制台中所有可用字体的列表。当我们找到所需的字体时，可以将其添加到我们的配置文件中。例如，`CONSOLEFONT=Lat2-Terminus16.psfu.gz`。
- en: CONSOLEMAP
  id: totrans-297
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: CONSOLEMAP
- en: To get a list of possible transformations, we can take a list of `/usr/share/kbd/consoletrans`.
    Optionally, we can add this to our configuration file, but this is not always
    needed. For example, `CONSOLEMAP=8859-1_to_uni`.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取可能的转换列表，我们可以获取`/usr/share/kbd/consoletrans`的列表。可选地，我们可以将其添加到我们的配置文件中，但这并不总是需要的。例如，`CONSOLEMAP=8859-1_to_uni`。
- en: Finding your time zone
  id: totrans-299
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 查找您的时区
- en: 'Finding your time zone is far from difficult as it is practically always Continent/Capital.
    We can run `ls` in the `/usr/share/zoneinfo/` folder and take it from there:'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 查找您的时区远非困难，因为它几乎总是大陆/首都。我们可以在`/usr/share/zoneinfo/`文件夹中运行`ls`，然后从那里获取：
- en: '[PRE19]'
  id: totrans-301
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Installing and removing packages (Must know)
  id: totrans-302
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装和删除软件包（必须知道）
- en: 'In this recipe we will see how package management in Arch Linux revolves around
    pacman. **Pacman** is just short for package manager, and not a joke that package
    management is a game. The complete guide to pacman can be found on the wiki at
    [https://wiki.archlinux.org/index.php/Pacman](https://wiki.archlinux.org/index.php/Pacman).
    Arch Linux has three official repositories: [core], [extra], and [community].
    Both [core] and [extra] are maintained by the Arch Linux Developers, while the
    [community] repository is maintained by the Trusted Users. There are also a lot
    of unofficial repositories maintained by the Arch Linux enthusiasts, which install
    specific types of software not found in the official repositories, thereby making
    your life much easier. The list of unofficial repositories can be found at [https://wiki.archlinux.org/index.php/Unofficial_User_Repositories](https://wiki.archlinux.org/index.php/Unofficial_User_Repositories).'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个教程中，我们将看到Arch Linux中的软件包管理围绕着pacman展开。**Pacman**只是软件包管理器的简称，而不是软件包管理是一种游戏的笑话。Pacman的完整指南可以在维基上找到[https://wiki.archlinux.org/index.php/Pacman](https://wiki.archlinux.org/index.php/Pacman)。Arch
    Linux有三个官方仓库：[core]、[extra]和[community]。[core]和[extra]都由Arch Linux开发人员维护，而[community]仓库由受信任的用户维护。还有许多由Arch
    Linux爱好者维护的非官方仓库，这些仓库安装了官方仓库中找不到的特定类型的软件，从而使您的生活变得更加轻松。非官方仓库的列表可以在[https://wiki.archlinux.org/index.php/Unofficial_User_Repositories](https://wiki.archlinux.org/index.php/Unofficial_User_Repositories)找到。
- en: Arch Linux is using a complete open model, which means every piece of software
    provided in the official repositories can be rebuilt by the user. This is what
    we call the **Arch Build System** or **ABS**. Arch Linux also gives the users
    a very easy way to share buildscripts for other software not found in the repositories
    by means of the **Arch User Repository** or **AUR**. And finally, there is also
    a nice list of commonly used software on the wiki at [https://wiki.archlinux.org/index.php/Common_Applications](https://wiki.archlinux.org/index.php/Common_Applications).
    This list might help you find the ultimate application to fit your needs.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: Arch Linux采用完全开放的模型，这意味着官方存储库中提供的每个软件都可以由用户重新构建。这就是我们所说的**Arch Build System**或**ABS**。Arch
    Linux还为用户提供了一种非常简单的方式，通过**Arch User Repository**或**AUR**来分享其他存储库中找不到的软件的构建脚本。最后，在维基上还有一个常用软件的列表，网址为[https://wiki.archlinux.org/index.php/Common_Applications](https://wiki.archlinux.org/index.php/Common_Applications)。这个列表可能会帮助您找到最适合您需求的应用程序。
- en: Getting ready
  id: totrans-305
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'The following list describes the main tasks that we will perform in this recipe:'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 以下列表描述了我们在本教程中将执行的主要任务：
- en: '**Configuring pacman**: Firstly, the default configuration of pacman is done
    in `/etc/pacman.conf`. Secondly, you also have `/etc/pacman.d/mirrorlist` installed
    on your system by default, which contains the selected mirror used during the
    installation. The mirrorlist contains all the official mirrors of Arch Linux.
    The default configuration that you get after the installation works perfectly
    fine. You can find all the information related to pacman on the wiki page at [https://wiki.archlinux.org/index.php/Pacman](https://wiki.archlinux.org/index.php/Pacman).'
  id: totrans-307
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**配置pacman**：首先，pacman的默认配置在`/etc/pacman.conf`中完成。其次，您还会在系统上默认安装`/etc/pacman.d/mirrorlist`，其中包含安装过程中使用的选定镜像。mirrorlist包含Arch
    Linux的所有官方镜像。安装后获得的默认配置可以完美运行。您可以在维基页面[https://wiki.archlinux.org/index.php/Pacman](https://wiki.archlinux.org/index.php/Pacman)上找到与pacman相关的所有信息。'
- en: '**Full system upgrade**: This is probably the most used action of all, once
    you have your system installed with all the software that suits your needs. Often
    you will only be left doing a full system upgrade from time to time.'
  id: totrans-308
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**完整系统升级**：这可能是所有操作中最常用的操作，一旦您的系统安装了满足您需求的所有软件。通常情况下，您只需要不时进行完整系统升级。'
- en: '**Installing a package from the repositories**: Installing packages with pacman
    is straightforward. We can pass multiple packages to the command to install more
    than one package, or we could even pass a groupname to install a whole group of
    packages.'
  id: totrans-309
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**从存储库安装软件包**：使用pacman安装软件包很简单。我们可以将多个软件包传递给命令以安装多个软件包，或者甚至可以传递一个组名以安装整个软件包组。'
- en: Note
  id: totrans-310
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: We can also install a package through an update where we need to pass the package
    file to pacman in order to have some piece of software installed.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以通过更新安装软件包，需要将软件包文件传递给pacman以安装某些软件。
- en: '**Searching packages in the repositories**: This will enable us to search if
    our favorite piece of software is available in the repositories so we can install
    it hassle free.'
  id: totrans-312
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在存储库中搜索软件包**：这将使我们能够搜索我们喜欢的软件是否在存储库中可用，以便我们可以轻松安装。'
- en: '**Installing a package from a disk**: This practically behaves in the same
    way as installing from the repositories with one exception: here we pass a file
    to the command and not a package name.'
  id: totrans-313
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**从磁盘安装软件包**：这实际上与从存储库安装的方式相同，唯一的区别是这里我们将文件传递给命令，而不是软件包名称。'
- en: '**Removing a package**: When we get tired of a package, or we have found some
    new piece of software that does the same job but suits our needs better, we could
    remove a certain package or even group.'
  id: totrans-314
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**删除软件包**：当我们厌倦了一个软件包，或者找到了一些新的软件可以更好地满足我们的需求时，我们可以删除某个软件包甚至整个软件包组。'
- en: '**Cleaning package cache**: Over time, we don''t want our disk being filled
    up with old package files, so from time to time it is a very good practice to
    clean the package cache.'
  id: totrans-315
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**清理软件包缓存**：随着时间的推移，我们不希望我们的磁盘被旧的软件包文件填满，因此不时清理软件包缓存是一个非常好的做法。'
- en: '**Official and unofficial repositories**: Arch Linux provides us with a lot
    of packages by default and these can be found in the official repositories. The
    official repositories contain packages supported by the Arch Linux Developers
    and Trusted Users.'
  id: totrans-316
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**官方和非官方存储库**：Arch Linux默认提供了大量软件包，这些软件包可以在官方存储库中找到。官方存储库包含Arch Linux开发人员和受信任用户支持的软件包。'
- en: '**Using the Arch Build System**: The **Arch Build System** (**ABS**) is similar
    to the ports system you find in FreeBSD. All the buildscripts to create the packages
    found in the official repositories are available through the ABS. This enables
    you as a user to rebuild every package according to your own wishes, with your
    own compiler flags, and so on. If you want to fully use the ABS, you will need
    to install **base-devel** and **abs** with pacman. If you only want to check how
    things got done, you will only need to install abs.'
  id: totrans-317
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用Arch Build System**：**Arch Build System**（**ABS**）类似于FreeBSD中的ports系统。用于创建官方存储库中找到的软件包的所有构建脚本都可以通过ABS获得。这使您作为用户可以根据自己的需求重新构建每个软件包，使用自己的编译器标志等。如果您想充分使用ABS，您需要使用pacman安装**base-devel**和**abs**。如果您只想查看如何完成任务，您只需要安装abs。'
- en: '**Using the Arch User Repository**: The **Arch User Repository** (**AUR**)
    contains packages not found in the official repositories and are pure user contributed
    content. So everyone registered on the AUR website [https://aur.archlinux.org](https://aur.archlinux.org)
    can upload new packages, so other users might benefit from that work. To use the
    AUR you must install base-devel. For more details about the AUR, I will refer
    to the wiki at [https://wiki.archlinux.org/index.php/AUR](https://wiki.archlinux.org/index.php/AUR).![Getting
    ready](img/9724OS_04_06.jpg)'
  id: totrans-318
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用Arch用户存储库**：**Arch用户存储库**（**AUR**）包含在官方存储库中找不到的软件包，是纯用户贡献的内容。因此，每个在AUR网站[https://aur.archlinux.org](https://aur.archlinux.org)注册的人都可以上传新软件包，因此其他用户可能会从中受益。要使用AUR，您必须安装base-devel。有关AUR的更多详细信息，我将参考[https://wiki.archlinux.org/index.php/AUR](https://wiki.archlinux.org/index.php/AUR)上的wiki。![准备就绪](img/9724OS_04_06.jpg)'
- en: 'Using makepkg: Makepkg is the tool used for building packages for Arch Linux.
    I will not go too deep into the usage, but will bring you up to speed to get your
    packages built from the ABS or AUR. Makepkg assumes that base-devel is installed.
    Also see [https://wiki.archlinux.org/index.php/Makepkg](https://wiki.archlinux.org/index.php/Makepkg).
    Makepkg has to be called in a directory with at least one file named `PKGBUILD`.'
  id: totrans-319
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用makepkg：Makepkg是用于构建Arch Linux软件包的工具。我不会深入使用，但会让您快速了解如何从ABS或AUR构建软件包。Makepkg假定已安装base-devel。还请参阅[https://wiki.archlinux.org/index.php/Makepkg](https://wiki.archlinux.org/index.php/Makepkg)。Makepkg必须在至少有一个名为`PKGBUILD`的文件的目录中调用。
- en: How to do it...
  id: totrans-320
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Let''s list the steps required to configure pacman:'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们列出配置pacman所需的步骤：
- en: Edit `/etc/pacman.conf` to modify options or add/remove some repositories.
  id: totrans-322
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑`/etc/pacman.conf`以修改选项或添加/删除一些存储库。
- en: Edit `/etc/pacman.d/mirrorlist` to change or add a mirror with the official
    repositories in it.
  id: totrans-323
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑`/etc/pacman.d/mirrorlist`以更改或添加包含官方存储库的镜像。
- en: Run `pacman -Syu` as root for the full system upgrade.
  id: totrans-324
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以root身份运行`pacman -Syu`进行完整系统升级。
- en: To install a package from the repositories, in a terminal run `pacman -S somepackage`
    as root.
  id: totrans-325
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要从存储库安装软件包，请在终端中以root身份运行`pacman -S somepackage`。
- en: As root, run `pacman -Ss somepackage` for searching packages in the repositories.
  id: totrans-326
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以root身份，运行 `pacman -Ss somepackage` 来搜索存储库中的软件包。
- en: Run `pacman -U somepackage.pkg.tar.xz` as root in a terminal for installing
    a package from disk.
  id: totrans-327
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在终端中以root身份运行`pacman -U somepackage.pkg.tar.xz`以从磁盘安装软件包。
- en: As root, run `pacman -R somepackage` for removing a package.
  id: totrans-328
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以root身份运行`pacman -R somepackage`以删除软件包。
- en: For cleaning the package cache, run `pacman -Sc` as root and answer the questions.
  id: totrans-329
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要清理软件包缓存，请以root身份运行`pacman -Sc`并回答问题。
- en: 'Let''s list the steps required to configure official and unofficial repositories:'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们列出配置官方和非官方存储库所需的步骤：
- en: Open `/etc/pacman.conf`.
  id: totrans-331
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`/etc/pacman.conf`。
- en: Disable or enable an official repository, or add an unofficial repository.
  id: totrans-332
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 禁用或启用官方存储库，或添加非官方存储库。
- en: 'Let''s list the steps required to use the ABS:'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们列出使用ABS所需的步骤：
- en: 'Install base-devel and abs:'
  id: totrans-334
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装base-devel和abs：
- en: '[PRE20]'
  id: totrans-335
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Optionally edit `/etc/abs.conf`.
  id: totrans-336
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可选地编辑`/etc/abs.conf`。
- en: Let abs synchronize the `abs` scripts. You must run abs as root.
  id: totrans-337
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让abs同步`abs`脚本。您必须以root身份运行abs。
- en: 'Let''s list the steps required to use the AUR:'
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们列出使用AUR所需的步骤：
- en: 'Install base-devel:'
  id: totrans-339
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装base-devel：
- en: '[PRE21]'
  id: totrans-340
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Search for your favorite application in the AUR.
  id: totrans-341
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在AUR中搜索您喜欢的应用程序。
- en: Download the tarball and start building it.
  id: totrans-342
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载tarball并开始构建它。
- en: 'Let''s list the steps required to use makepkg:'
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们列出使用makepkg所需的步骤：
- en: Go to a folder with a buildscript in it (`PKGBUILD`).
  id: totrans-344
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到包含构建脚本的文件夹（`PKGBUILD`）。
- en: Run `makepkg`.
  id: totrans-345
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行 `makepkg`。
- en: This should get the package to build. If it is missing dependencies to build
    the package, you will need to install those first.
  id: totrans-346
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这应该可以获取软件包进行构建。如果缺少构建软件包的依赖项，您需要先安装这些依赖项。
- en: Note
  id: totrans-347
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: For a detailed description of the main tasks performed, refer to the *Getting
    ready* section of this recipe.
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 有关执行的主要任务的详细描述，请参考本教程的*准备就绪*部分。
- en: How it works...
  id: totrans-349
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The options set in `pacman.conf` will determine the behavior of pacman. These
    vary from ignoring packages or groups, from updates to extra repositories. What
    we have defined in the mirrorlist will determine where our packages come from
    (from which server).
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 在`pacman.conf`中设置的选项将决定pacman的行为。这些选项从忽略软件包或组到更新到额外的存储库都有所不同。我们在mirrorlist中定义的内容将决定我们的软件包来自哪里（从哪个服务器）。
- en: The full system upgrade command will synchronize your local package databases
    with the remote ones, and depending on the packages you have installed it will
    ask you if you want to continue with the installation of some upgraded packages.
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 完整系统升级命令将使您的本地软件包数据库与远程数据库同步，并根据您安装的软件包询问您是否要继续安装一些升级的软件包。
- en: '![How it works...](img/9724OS_04_01.jpg)'
  id: totrans-352
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的...](img/9724OS_04_01.jpg)'
- en: The `pacman -S somepackage` command will look for the package name or group
    you have passed, and if it exists, it will continue to try and install it.
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: '`pacman -S somepackage`命令将搜索您传递的软件包名称或组，如果存在，它将继续尝试安装它。'
- en: '![How it works...](img/9724OS_04_02.jpg)'
  id: totrans-354
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的...](img/9724OS_04_02.jpg)'
- en: On executing the `pacman -Ss somepackage` command, pacman will search in the
    locally synced databases if the package we are looking for is available somewhere.
    If that is the case, we will see what version is available for us to install.
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 在执行`pacman -Ss somepackage`命令时，pacman将在本地同步的数据库中搜索我们要查找的软件包是否可用。如果是这样，我们将看到可供我们安装的版本。
- en: '![How it works...](img/9724OS_04_03.jpg)'
  id: totrans-356
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的...](img/9724OS_04_03.jpg)'
- en: On executing the `pacman -U somepackage.pkg.tar.xz` command, pacman will check
    the dependencies of the package and try to install these alongside the package
    you want to install. When all goes well, it will install the package inside the
    tarball on the correct location.
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 在执行`pacman -U somepackage.pkg.tar.xz`命令时，pacman将检查软件包的依赖关系，并尝试将这些依赖项与您要安装的软件包一起安装。一切顺利时，它将在正确的位置安装tarball中的软件包。
- en: The package will be removed from the system on executing the `pacman -R somepackage`
    command. The only thing left of the package will be an entry in the cache.
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 执行`pacman -R somepackage`命令后，软件包将从系统中删除。软件包的唯一剩下的东西将是缓存中的条目。
- en: '![How it works...](img/9724OS_04_04.jpg)'
  id: totrans-359
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的...](img/9724OS_04_04.jpg)'
- en: On executing the `pacman -Sc` command, pacman will look for old package files
    and ask you if you want those to be removed from the filesystem.
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 执行`pacman -Sc`命令时，pacman将查找旧的软件包文件，并询问您是否希望将其从文件系统中删除。
- en: '![How it works...](img/9724OS_04_05.jpg)'
  id: totrans-361
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的...](img/9724OS_04_05.jpg)'
- en: Pacman uses `pacman.conf` for the options and the repositories. All enabled
    repositories will be used for package installation now. Should we have some configuration
    mismatches, pacman will notify us.
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: Pacman使用`pacman.conf`进行选项和仓库。现在，所有已启用的仓库都将用于软件包安装。如果存在一些配置不匹配，pacman将通知我们。
- en: Abs will use `rsync` to synchronize the buildscripts used in the official repositories
    to your local computer. This will facilitate you, for example, to build an officially
    supported package with other options enabled or disabled.
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: Abs将使用`rsync`来同步官方仓库中使用的构建脚本到您的本地计算机。例如，这将使您能够使用其他启用或禁用的选项构建官方支持的软件包。
- en: The AUR is actually just a website with a collection of user contributed buildscripts.
    If your favorite application is already available there, you can benefit from
    the work that someone else has already done. It is also very easy to contribute
    improvements via comments.
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: AUR实际上只是一个网站，其中包含用户贡献的构建脚本。如果您喜欢的应用程序已经在那里可用，您可以从其他人已经完成的工作中受益。通过评论也很容易贡献改进。
- en: Makepkg will read the information described in the `PKGBUILD` file to get the
    package built correctly, and have it in the correct format for pacman to install
    it on your system.
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: Makepkg将读取`PKGBUILD`文件中描述的信息，以正确构建软件包，并以pacman可以在您的系统上安装的正确格式呈现。
- en: '![How it works...](img/9724OS_04_07.jpg)'
  id: totrans-366
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的...](img/9724OS_04_07.jpg)'
- en: There's more...
  id: totrans-367
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: The `pacman.conf` file has sections defined by `[section]`. These sections can
    have some options defined inside them. There is one special section called `[options]`
    where the global options can be configured for pacman. The other sections are
    the repositories defined by default or the user. In regards to the repositories,
    the order of the declaration is important. The repository nearest to the top of
    the file will take precedence, in descending order. This is of great importance
    for repositories that provide packages with the same name. The order is also important
    so as to understand why `[testing]` must be defined above `[core]`. Generally
    the `pacman.conf` file is very well documented by means of comments that explain
    the options provided, but here we'll try to explain them in depth.
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: '`pacman.conf`文件由`[section]`定义的部分组成。这些部分可以在其中定义一些选项。有一个特殊的部分称为`[options]`，可以在其中为pacman配置全局选项。其他部分是默认或用户定义的仓库。关于仓库，声明的顺序很重要。文件顶部最近的仓库将优先，按降序排列。这对于提供具有相同名称的软件包的仓库非常重要。声明的顺序也很重要，以便理解为什么`[testing]`必须在`[core]`之上定义。通常，`pacman.conf`文件通过解释提供的选项的注释进行了很好的文档化，但是在这里我们将尝试深入解释它们。'
- en: The **mirrorlist** is a file with all official Arch Linux mirrors listed. Let's
    find a mirror closer to home so we can get the best download speeds. We can define
    more than one server here. Note that this will not give us the packages from the
    most up-to-date server, but when the first in the list is unreachable then the
    second can be used, so we are still able to update our system.
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: '**mirrorlist**是一个列出所有官方Arch Linux镜像的文件。让我们找一个离家更近的镜像，这样我们就可以获得最佳的下载速度。我们可以在这里定义多个服务器。请注意，这不会给我们提供来自最新服务器的软件包，但是当列表中的第一个不可访问时，可以使用第二个，因此我们仍然能够更新我们的系统。'
- en: The pacman.conf options
  id: totrans-370
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: pacman.conf选项
- en: The `pacman.conf` options can be found at [https://www.archlinux.org/pacman/pacman.conf.5.html](https://www.archlinux.org/pacman/pacman.conf.5.html).
    By default, everything should be working out of the box. The default should also
    be sufficient for new users.
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: '`pacman.conf`的选项可以在[https://www.archlinux.org/pacman/pacman.conf.5.html](https://www.archlinux.org/pacman/pacman.conf.5.html)找到。默认情况下，一切都应该可以正常工作。默认情况也应该足够适用于新用户。'
- en: Some repository samples
  id: totrans-372
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 一些仓库示例
- en: The following is a sample of the `[core]` repository. We can see that signature
    checking is required for the packages, and we use the mirrorlist for the configured
    servers.
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是`[core]`仓库的示例。我们可以看到软件包需要进行签名检查，并且我们使用镜像列表来配置服务器。
- en: '[PRE22]'
  id: totrans-374
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'The following sample will use the default `SigLevel` defined in the `[options]`
    section, and when used, it will first try to use FTP, and when this is not available
    it will fall back to HTTP:'
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例将使用`[options]`部分中定义的默认`SigLevel`，并在使用时首先尝试使用FTP，当不可用时将退回到HTTP：
- en: '[PRE23]'
  id: totrans-376
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'In the following sample, we have a local repository where you can see all possible
    URLs that can be used to fill in the `Server` option:'
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下示例中，我们有一个本地仓库，您可以在其中看到可以用于填写`Server`选项的所有可能的URL：
- en: '[PRE24]'
  id: totrans-378
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: More information about official and unofficial repositories
  id: totrans-379
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 有关官方和非官方仓库的更多信息
- en: By default, the official repositories are listed in `pacman.conf`. Not all of
    them are enabled by default. There is also a nice list of unofficial repositories
    where you can find some very high quality software.
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，官方仓库在`pacman.conf`中列出。并非所有官方仓库都是默认启用的。还有一个非官方仓库的很好的列表，您可以在那里找到一些非常高质量的软件。
- en: For complete information about the official repositories and in what cases you
    should enable or disable them, check out [https://wiki.archlinux.org/index.php/The_Arch_Linux_Repositories](https://wiki.archlinux.org/index.php/The_Arch_Linux_Repositories).
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: 有关官方仓库的完整信息以及在何种情况下应该启用或禁用它们，请查看[https://wiki.archlinux.org/index.php/The_Arch_Linux_Repositories](https://wiki.archlinux.org/index.php/The_Arch_Linux_Repositories)。
- en: Due to the fact that it is easy to set up your own repository, there are a lot
    of users who are building a set of specific packages and providing them as unofficial
    repositories for everyone. The complete list of unofficial repositories can be
    found on [https://wiki.archlinux.org/index.php/Unofficial_User_Repositories](https://wiki.archlinux.org/index.php/Unofficial_User_Repositories).
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: 由于很容易设置自己的软件仓库，有很多用户正在构建一组特定的软件包，并将它们作为非官方软件仓库提供给所有人。非官方软件仓库的完整列表可以在[https://wiki.archlinux.org/index.php/Unofficial_User_Repositories](https://wiki.archlinux.org/index.php/Unofficial_User_Repositories)上找到。
- en: More information on the ABS
  id: totrans-383
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 有关ABS的更多信息
- en: By using the ABS, we as users get a great deal of flexibility over our system.
    For first time users of ABS, you would want to check the ABS wiki page at [https://wiki.archlinux.org/index.php/ABS](https://wiki.archlinux.org/index.php/ABS).
    For a simplified introduction, you can also refer to [https://wiki.archlinux.org/index.php/ABS_FAQ](https://wiki.archlinux.org/index.php/ABS_FAQ).
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用ABS，我们作为用户对我们的系统有很大的灵活性。对于第一次使用ABS的用户，您可能希望查看ABS维基页面[https://wiki.archlinux.org/index.php/ABS](https://wiki.archlinux.org/index.php/ABS)。对于一个简化的介绍，您也可以参考[https://wiki.archlinux.org/index.php/ABS_FAQ](https://wiki.archlinux.org/index.php/ABS_FAQ)。
- en: Booting and managing services with systemd (Should know)
  id: totrans-385
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用systemd引导和管理服务（应该知道）
- en: Systemd provides us with a more modern approach of booting. It also benefits
    from the modern multicore processors and relies on very aggressive parallelization
    to get the job done very quickly. Arch Linux provides systemd by default. Systemd
    uses "the so-called service files" to define how and when a certain service or
    "a so-called daemon" has to be started.
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: Systemd为我们提供了一种更现代的引导方法。它还受益于现代多核处理器，并依赖于非常激进的并行化来快速完成工作。Arch Linux默认提供systemd。Systemd使用“所谓的服务文件”来定义何时以及何种方式启动某个特定服务或“所谓的守护进程”。
- en: Getting ready
  id: totrans-387
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'The following list describes the main tasks that we will perform in this recipe:'
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 以下列表描述了我们将在本教程中执行的主要任务：
- en: '**Installing systemd**'
  id: totrans-389
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**安装systemd**'
- en: '**Setting the default target**: The default target can be compared with the
    runlevel when using initscripts. It is not the same, but flows from the same idea
    that you want some stuff being started in certain cases. "A so-called runlevel"
    is called a **target** in the systemd world.'
  id: totrans-390
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**设置默认目标**：默认目标可以与使用initscripts时的运行级别进行比较。它不同，但源自同样的想法，即你希望在某些情况下启动一些东西。在systemd世界中，“所谓的运行级别”被称为**目标**。'
- en: '**Starting a service manually**: Using the `systemctl` command, we can start
    and stop services on demand.'
  id: totrans-391
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**手动启动服务**：使用`systemctl`命令，我们可以根据需要启动和停止服务。'
- en: '**Enabling services during boot time**: Of course systemd can start services
    during boot time. It is very simple to enable or disable these services.'
  id: totrans-392
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在启动时启用服务**：当然，systemd可以在启动时启动服务。启用或禁用这些服务非常简单。'
- en: How to do it...
  id: totrans-393
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Let''s list the steps required to install systemd:'
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们列出安装systemd所需的步骤：
- en: Install both systemd and systemd-arch-units to make the installation work by
    running `pacman -S systemd systemd-arch-units`.
  id: totrans-395
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行`pacman -S systemd systemd-arch-units`安装systemd和systemd-arch-units以使安装工作。
- en: 'Add `init=/bin/systemd` to your kernel command line by editing `/boot/syslinux/syslinux.cfg`:'
  id: totrans-396
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过编辑`/boot/syslinux/syslinux.cfg`，在内核命令行中添加`init=/bin/systemd`：
- en: '[PRE25]'
  id: totrans-397
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Let''s list the steps required to set the default target:'
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们列出设置默认目标所需的步骤：
- en: 'If you want to end up with a graphical system, enable the graphical target:'
  id: totrans-399
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你想最终得到一个图形系统，启用图形目标：
- en: '[PRE26]'
  id: totrans-400
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'When a terminal is sufficient, the multiuser target will suffice:'
  id: totrans-401
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当终端足够时，多用户目标就足够了：
- en: '[PRE27]'
  id: totrans-402
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Start a service manually by running the following command:'
  id: totrans-403
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下命令手动启动服务：
- en: '[PRE28]'
  id: totrans-404
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Enable services during boot time by running the following command:'
  id: totrans-405
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下命令在启动时启用服务：
- en: '[PRE29]'
  id: totrans-406
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Note
  id: totrans-407
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: For a detailed description of the main tasks performed, refer to the *Getting
    ready* section of this recipe.
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: 有关执行的主要任务的详细描述，请参考本教程的*准备工作*部分。
- en: How it works...
  id: totrans-409
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: We need the systemd-arch-units package, because not all packages providing services
    are providing the service files needed to be able to use them with systemd. Due
    to the fact that we added `init=/bin/systemd` to the kernel command line, the
    system will use systemd for startup.
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要安装systemd-arch-units软件包，因为并非所有提供服务的软件包都提供了使用systemd所需的服务文件。由于我们在内核命令行中添加了`init=/bin/systemd`，系统将使用systemd进行启动。
- en: These days only two targets can be set automatically as the default target,
    as only `graphical.target` and `multi-user.target` provide the default target
    installation.
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: 如今，只有两个目标可以自动设置为默认目标，因为只有`graphical.target`和`multi-user.target`提供默认目标安装。
- en: 'In the `systemctl start service` command, `service` is actually the name of
    a file. For example, NetworkManager has a systemd service file called `NetworkManager.service`,
    and it is this full name we need to pass to the `systemctl` command. For example:'
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: 在`systemctl start service`命令中，`service`实际上是一个文件的名称。例如，NetworkManager有一个名为`NetworkManager.service`的systemd服务文件，这就是我们需要传递给`systemctl`命令的完整名称。例如：
- en: '[PRE30]'
  id: totrans-413
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: To be able to know what services to start during boot time, `systemctl` will
    create symlinks to the specific service files in the correct locations where systemd
    will search them during boot.
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: 为了能够知道在启动时启动哪些服务，`systemctl`将在正确的位置为特定的服务文件创建符号链接，systemd在启动时将在这些位置搜索它们。
- en: There's more...
  id: totrans-415
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Once we are satisfied with systemd booting our system, we can eventually fine-tune
    it a little more.
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们对systemd引导我们的系统感到满意，我们最终可以对其进行微调。
- en: Systemd only initialization
  id: totrans-417
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 只有systemd初始化
- en: 'The following command will provide symlinks for initscripts'' compatibility:'
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令将为initscripts的兼容性提供符号链接：
- en: '[PRE31]'
  id: totrans-419
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: The result is that you can omit the extra parameter `init=/bin/systemd` on your
    kernel command line.
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是，你可以在内核命令行中省略额外的参数`init=/bin/systemd`。
- en: We can easily change the desired target by changing the kernel command line
    in our boot loader configuration. This makes it easy to test if some specific
    target suits our needs.
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过更改引导加载程序配置中的内核命令行轻松更改所需的目标。这样可以轻松测试某些特定目标是否符合我们的需求。
- en: Set the target on the kernel command line
  id: totrans-422
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在内核命令行上设置目标
- en: Similar to the appending of a number to the kernel command line when using initscripts,
    we can also do this for systemd using the `systemd.unit` parameter.
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: 与在使用initscripts时将数字附加到内核命令行类似，我们也可以使用`systemd.unit`参数为systemd执行此操作。
- en: 'For example, considering Syslinux as the boot loader, open `/boot/syslinux/syslinux.cfg`
    and add `systemd.unit=multi-user.target` to the kernel command line:'
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，考虑Syslinux作为引导加载程序，打开`/boot/syslinux/syslinux.cfg`并将`systemd.unit=multi-user.target`添加到内核命令行中：
- en: '[PRE32]'
  id: totrans-425
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: The previous example is valid for a system with only systemd, otherwise we also
    would require `init=/bin/systemd`.
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: 先前的示例适用于仅使用systemd的系统，否则我们还需要`init=/bin/systemd`。
- en: List all available services
  id: totrans-427
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 列出所有可用的服务
- en: We might want to know what services we have available on our system, and of
    course we want to know what we can do with those services.
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可能想要知道我们的系统上有哪些服务，当然也想知道我们可以对这些服务做些什么。
- en: 'We can list all the used services or choose the list all the available services
    by running the following commands:'
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以列出所有使用的服务或通过运行以下命令选择列出所有可用的服务：
- en: '[PRE33]'
  id: totrans-430
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Default actions for services
  id: totrans-431
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 服务的默认操作
- en: By default systemd supports actions such as `start`, `stop`, `restart`, `reload`,
    and `status`. There are more actions available, which can be found by issuing
    `man systemctl`.
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，systemd支持`start`、`stop`、`restart`、`reload`和`status`等操作。还有更多可用的操作，可以通过发出`man
    systemctl`来找到。
- en: Check if a service will be started at boot
  id: totrans-433
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 检查服务是否将在引导时启动
- en: 'Before enabling a service, we might want to check if the service is not already
    enabled. We can check if a service is already enabled for startup during the boot
    process by using the `is-enabled` action:'
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
  zh: 在启用服务之前，我们可能希望检查服务是否已经启用。我们可以通过使用`is-enabled`操作来检查服务是否已经启用了在引导过程中启动：
- en: '[PRE34]'
  id: totrans-435
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Disable a service from starting during boot
  id: totrans-436
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 禁用在引导时启动的服务
- en: 'If we find some service we no longer need, we would want to disable it. Sometimes
    we no longer want some services being started during the boot process, so we need
    to disable them:'
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们发现一些不再需要的服务，我们可能希望禁用它们。有时我们不再希望在引导过程中启动某些服务，因此需要禁用它们：
- en: '[PRE35]'
  id: totrans-438
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Booting and managing services using initscripts (Should know)
  id: totrans-439
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用initscripts引导和管理服务（应该知道）
- en: In this recipe we will learn about initscripts. **Initscripts** is a collection
    of scripts that make sure your computer starts up fine. It also provides the necessary
    functions and tools to manage services on your system. Initscripts' services are
    often referred to as **daemons** ([https://wiki.archlinux.org/index.php/Daemon](https://wiki.archlinux.org/index.php/Daemon)).
    These days, booting using initscripts can still be used in conjunction with systemd,
    but over time the use of initscripts will be discouraged and phased out. **Systemd**
    is a daemon that controls the startup of your system and also manages the services
    running on them. The initscripts are written in **Bash**, so they are easy to
    read and modify when needed. Extended information about the boot process of Arch
    Linux can be found at [https://wiki.archlinux.org/index.php/Arch_Boot_Process](https://wiki.archlinux.org/index.php/Arch_Boot_Process).
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将学习有关initscripts的知识。**Initscripts**是一组脚本，可确保计算机正常启动。它还提供了管理系统上的服务所需的功能和工具。Initscripts的服务通常被称为**守护进程**（[https://wiki.archlinux.org/index.php/Daemon](https://wiki.archlinux.org/index.php/Daemon)）。如今，使用initscripts进行引导仍然可以与systemd一起使用，但随着时间的推移，将不鼓励使用initscripts并逐步淘汰。**Systemd**是一个守护进程，用于控制系统的启动，并管理运行在其中的服务。Initscripts是用**Bash**编写的，因此在需要时很容易阅读和修改。有关Arch
    Linux引导过程的更多信息，请访问[https://wiki.archlinux.org/index.php/Arch_Boot_Process](https://wiki.archlinux.org/index.php/Arch_Boot_Process)。
- en: Getting ready
  id: totrans-441
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 做好准备
- en: 'The following list describes the main tasks that we will perform in this recipe:'
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
  zh: 以下列表描述了本教程中将执行的主要任务：
- en: '**Changing runlevel**: The definition of a runlevel is somewhat abstract. The
    **runlevel** will determine what applications will be started. Arch Linux uses
    some of the runlevels globally defined, and we can find exactly what they do on
    [https://wiki.archlinux.org/index.php/Runlevels](https://wiki.archlinux.org/index.php/Runlevels).
    While the system is running, you can change the runlevel on the fly, or maybe
    you want to do some administrative actions on the machine that require you to
    change the runlevel.'
  id: totrans-443
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更改运行级别：运行级别的定义有点抽象。**运行级别**将决定将启动哪些应用程序。Arch Linux使用全局定义的一些运行级别，我们可以在[https://wiki.archlinux.org/index.php/Runlevels](https://wiki.archlinux.org/index.php/Runlevels)上找到它们的确切作用。在系统运行时，可以动态更改运行级别，或者可能需要更改运行级别以执行一些需要更改运行级别的机器上的管理操作。
- en: '**Setting the default runlevel**: By default the runlevel used is `3`. This
    is the multiuser runlevel without starting `X`.'
  id: totrans-444
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置默认运行级别：默认情况下使用的运行级别是`3`。这是多用户运行级别，不会启动`X`。
- en: '**Manually starting a service (daemon)**: With initscripts, all the files needed
    for starting and stopping some services are also just Bash scripts so they can
    be called directly.'
  id: totrans-445
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 手动启动服务（守护进程）：使用initscripts，启动和停止某些服务所需的所有文件也只是Bash脚本，因此可以直接调用它们。
- en: '**Automatically starting a service (daemon)**: The list of daemons that get
    started during boot time are configured in the `rc.conf` file within the `DAEMONS`
    array.'
  id: totrans-446
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动启动服务（守护进程）：在`rc.conf`文件的`DAEMONS`数组中配置了在启动时启动的守护进程的列表。
- en: How to do it...
  id: totrans-447
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'The following step changes the runlevel:'
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤更改运行级别：
- en: Run `telinit runlevel` to change the runlevel, where `runlevel` is a number
    from `0` to `6`.
  id: totrans-449
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行`telinit runlevel`来更改运行级别，其中`runlevel`是从`0`到`6`的数字。
- en: 'Let''s list the steps required to set the default runlevel:'
  id: totrans-450
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们列出设置默认运行级别所需的步骤：
- en: Edit `/etc/inittab`.
  id: totrans-451
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑`/etc/inittab`。
- en: Change the line where you find `id:3:initdefault:`. Here you will already see
    that the default selected runlevel is `3`.
  id: totrans-452
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更改您找到的`id:3:initdefault:`所在的行。在这里，您将看到默认选择的运行级别为`3`。
- en: Test if your configuration was done correctly by running `telinit q`.
  id: totrans-453
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行`telinit q`测试您的配置是否正确。
- en: 'To manually start a service (daemon), begin by calling the script directly:'
  id: totrans-454
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要手动启动服务（守护进程），请首先调用脚本：
- en: '[PRE36]'
  id: totrans-455
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Let''s list the steps required to automatically start a service (daemon):'
  id: totrans-456
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们列出自动启动服务（守护进程）所需的步骤：
- en: Edit `/etc/rc.conf`.
  id: totrans-457
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑`/etc/rc.conf`。
- en: 'Add a new item to the `DAEMONS` array as you please:'
  id: totrans-458
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照您的意愿向`DAEMONS`数组添加新项目：
- en: '[PRE37]'
  id: totrans-459
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Save the file.
  id: totrans-460
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存文件。
- en: Note
  id: totrans-461
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: For a detailed description of the main tasks performed, refer to the *Getting
    ready* section of this recipe.
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: 有关执行的主要任务的详细描述，请参阅本食谱的*准备就绪*部分。
- en: How it works...
  id: totrans-463
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The `telinit` command will change the runlevel and depending on what number
    you switch to, some running applications and daemons might get stopped or just
    get started.
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: '`telinit`命令将更改运行级别，并根据您切换到的数字，一些正在运行的应用程序和守护进程可能会停止或只是启动。'
- en: The default selected runlevel set in the `inittab` file determines what scripts
    will be used during the startup of your PC. This is also the reason why you always
    need to check if the configuration is correct by running `telinit q`, because
    if the `inittab` file is corrupted somehow your system will become unbootable.
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
  zh: 在`inittab`文件中设置的默认选择的运行级别决定了在启动计算机时将使用哪些脚本。这也是为什么您总是需要通过运行`telinit q`来检查配置是否正确，因为如果`inittab`文件以某种方式损坏，您的系统将无法启动。
- en: 'The Bash script sitting in the `/etc/rc.d/` folder will be executable. It will
    by default also provide three actions: `start`, `stop`, and `restart`.'
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
  zh: 位于`/etc/rc.d/`文件夹中的Bash脚本将是可执行的。默认情况下，它还提供三种操作：`start`，`stop`和`restart`。
- en: During startup, the initscripts will read the `DAEMONS` array defined in the
    `rc.conf` file, and in the order they are defined all the daemons will be started
    during boot.
  id: totrans-467
  prefs: []
  type: TYPE_NORMAL
  zh: 在启动过程中，初始化脚本将读取在`rc.conf`文件中定义的`DAEMONS`数组，并按照它们的定义顺序在启动过程中启动所有的守护进程。
- en: There's more...
  id: totrans-468
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Now let's talk about some general information that is relevant to this recipe.
  id: totrans-469
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们谈谈与本食谱相关的一些一般信息。
- en: The runlevels
  id: totrans-470
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 运行级别
- en: The runlevels are just numbers, but for us humans it is easier to remember sentences.
    So we do some matching of an action versus the runlevel number.
  id: totrans-471
  prefs: []
  type: TYPE_NORMAL
  zh: 运行级别只是数字，但对于我们人类来说，记住句子更容易。因此，我们对动作与运行级别编号进行了一些匹配。
- en: 'The following list defines each runlevel number:'
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: 以下列表定义了每个运行级别编号：
- en: '`0`: Poweroff'
  id: totrans-473
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`0`：关机'
- en: '`1`: Single-user mode (rescue mode)'
  id: totrans-474
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`1`：单用户模式（救援模式）'
- en: '`2` and `4`: These are user defined, but as on any other system they are the
    same as `3` by default'
  id: totrans-475
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`2`和`4`：这些是用户定义的，但与任何其他系统一样，默认情况下与`3`相同'
- en: '`3`: Multi-user mode; users can log in via a terminal or network'
  id: totrans-476
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`3`：多用户模式；用户可以通过终端或网络登录'
- en: '`5`: Multi-user graphical mode; this is runlevel `3 + X` (some display manager)'
  id: totrans-477
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`5`：多用户图形模式；这是运行级别`3 + X`（某些显示管理器）'
- en: '`6`: Reboot'
  id: totrans-478
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`6`：重启'
- en: '`emergency`: Emergency shell (you will encounter this during boot failures)'
  id: totrans-479
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`emergency`：紧急shell（您将在启动失败时遇到此问题）'
- en: Setting the default runlevel in the kernel command line
  id: totrans-480
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在内核命令行中设置默认运行级别
- en: The modification of the `/etc/inittab` file can lead to an unbootable system.
    So there are other ways to configure the default runlevel.
  id: totrans-481
  prefs: []
  type: TYPE_NORMAL
  zh: 修改`/etc/inittab`文件可能导致无法启动的系统。因此，有其他方法可以配置默认运行级别。
- en: We can set the default runlevel we want in the kernel command line configured
    in our boot loader configuration file. This will allow us to safely switch runlevels.
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在引导加载程序配置文件中设置我们想要的默认运行级别。这将允许我们安全地切换运行级别。
- en: 'Lets perform the following step to set the default runlevel via the boot loader
    (Syslinux in this example):'
  id: totrans-483
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们执行以下步骤通过引导加载程序（在此示例中为Syslinux）设置默认运行级别：
- en: Edit `/boot/syslinux/syslinux.cfg`.
  id: totrans-484
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编辑`/boot/syslinux/syslinux.cfg`。
- en: '[PRE38]'
  id: totrans-485
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: We have set the default runlevel to `5` (graphical mode).
  id: totrans-486
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已将默认运行级别设置为`5`（图形模式）。
- en: The default actions
  id: totrans-487
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 默认操作
- en: Arch Linux provides a helper application that makes it easy to start multiple
    daemons in one command.
  id: totrans-488
  prefs: []
  type: TYPE_NORMAL
  zh: Arch Linux提供了一个助手应用程序，可以轻松地一次启动多个守护进程。
- en: 'The scripts that facilitate the starting of the daemons usually provide three
    actions by default:'
  id: totrans-489
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，简化守护进程启动的脚本默认提供三种操作：
- en: '`start`: Starts the daemon'
  id: totrans-490
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`start`：启动守护进程'
- en: '`stop`: Stops the daemon'
  id: totrans-491
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`stop`：停止守护进程'
- en: '`restart`: Restarts the daemon'
  id: totrans-492
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`restart`：重新启动守护进程'
- en: Another common action is `reload`, which facilitates the running daemon to actually
    reload its configuration without really stopping.
  id: totrans-493
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个常见的操作是`reload`，它使正在运行的守护进程实际重新加载其配置而无需真正停止。
- en: The rc.d helper
  id: totrans-494
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: rc.d助手
- en: Arch Linux provides a helper that can start and stop multiple services in one
    command. The helper comes with a nice man page, which you can read by issuing
    `man rc.d`.
  id: totrans-495
  prefs: []
  type: TYPE_NORMAL
  zh: Arch Linux提供了一个助手，可以一次启动和停止多个服务。该助手带有一个很好的手册，您可以通过发出`man rc.d`来阅读。
- en: '[PRE39]'
  id: totrans-496
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: The actions you can provide to `rc.d` are the same that you can pass to the
    scripts directly. So if a script provides the `reload` action, `rc.d` can use
    it.
  id: totrans-497
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以向`rc.d`提供的操作与直接传递给脚本的操作相同。因此，如果脚本提供`reload`操作，`rc.d`可以使用它。
- en: Now, the default way of starting the daemons is sequential. The first has to
    be started correctly before the next can be started. We can improve our boot time
    by configuring the `DAEMONS` array a little differently.
  id: totrans-498
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，启动守护进程的默认方式是顺序的。必须正确启动第一个，然后才能启动下一个。我们可以通过稍微不同地配置`DAEMONS`数组来改善我们的启动时间。
- en: Daemons can be started in the background
  id: totrans-499
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 守护进程可以在后台启动
- en: 'If we want some service to be started in parallel with the one''s following
    it, you can add `@` in front of the entry in the `DAEMONS` array:'
  id: totrans-500
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们希望某些服务与其后的服务并行启动，可以在`DAEMONS`数组中的条目前面添加`@`：
- en: '[PRE40]'
  id: totrans-501
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Leave a daemon in the array without being started
  id: totrans-502
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在数组中留下一个未启动的守护进程
- en: 'We can also leave a service in the `DAEMONS` array but still disable it from
    automatically being started. For this we need to add `!` in front of the service:'
  id: totrans-503
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以将服务留在`DAEMONS`数组中，但仍然禁用它自动启动。为此，我们需要在服务前面添加`!`：
- en: '[PRE41]'
  id: totrans-504
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: Get a list of the available daemons
  id: totrans-505
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 获取可用守护程序的列表
- en: We can get a list of all the available services by running `rc.d list`.
  id: totrans-506
  prefs: []
  type: TYPE_NORMAL
  zh: 通过运行`rc.d list`命令，我们可以获取所有可用服务的列表。
- en: Configuring GUI using Xorg (Should know)
  id: totrans-507
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Xorg配置GUI（应该知道）
- en: In this recipe we will learn how to configure GUI using **Xorg**. When we want
    to use our system as a desktop system, we will need Xorg one way or the other.
    These days Xorg is the de facto standard for displaying and using graphical interfaces
    on Linux-based systems. Also for most single-screen setups, you don't need to
    configure anything. Multi-screen setups and setups with proprietary drivers are
    the exceptions to this rule. Some distributions provide you with tools to install
    the correct video driver; Arch Linux does not. So, eventually we will need to
    find out which driver to install. In relation to the keyboard, mouse, and a lot
    of other input devices, Xorg can find them mostly automatically. In some cases
    the input devices need an additional Xorg driver installed.
  id: totrans-508
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个食谱中，我们将学习如何使用**Xorg**配置GUI。当我们想要将我们的系统用作桌面系统时，我们无论如何都需要Xorg。这些天，Xorg是在Linux系统上显示和使用图形界面的事实标准。对于大多数单屏设置，您不需要配置任何内容。多屏设置和使用专有驱动程序的设置是这个规则的例外。一些发行版提供了工具来安装正确的视频驱动程序；Arch
    Linux没有。因此，最终我们需要找出要安装哪个驱动程序。关于键盘、鼠标和许多其他输入设备，Xorg大多数情况下可以自动找到它们。在某些情况下，输入设备需要安装额外的Xorg驱动程序。
- en: Getting ready
  id: totrans-509
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'The following list describes the main tasks that we will perform in this recipe:'
  id: totrans-510
  prefs: []
  type: TYPE_NORMAL
  zh: 以下列表描述了我们将在本食谱中执行的主要任务：
- en: '**Installing Xorg**: We''ll install the basic required packages to be able
    to use the Xorg graphics system.'
  id: totrans-511
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装Xorg：我们将安装基本所需的软件包，以便能够使用Xorg图形系统。
- en: '**Changing keyboard layout**: For most people changing the keyboard layout
    is not needed, as most use QWERTY. But for some parts of the world where other
    layouts are being used, this might come in handy.'
  id: totrans-512
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更改键盘布局：对于大多数人来说，更改键盘布局是不需要的，因为大多数人使用QWERTY。但是对于世界上一些使用其他布局的地方，这可能会很方便。
- en: '**Installing input drivers**: When we have some special input hardware with
    us, we might need to install extra input drivers. These days everything should
    be detected automatically, but sometimes in order to meet the specific requirements
    of your input hardware we need to install input drivers. For example, laptop users
    might need to install the Synaptics driver for their touchpad.'
  id: totrans-513
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装输入驱动程序：当我们有一些特殊的输入硬件时，我们可能需要安装额外的输入驱动程序。这些天一切都应该被自动检测，但有时为了满足您的输入硬件的特定要求，我们需要安装输入驱动程序。例如，笔记本电脑用户可能需要为其触摸板安装Synaptics驱动程序。
- en: '**Installing video drivers**: First we need to find out which graphics we have
    installed in our system and what will be the best driver to use for them.'
  id: totrans-514
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装视频驱动程序：首先，我们需要找出系统中安装了哪些显卡，以及对它们来说最好的驱动程序是什么。
- en: '**Using the proprietary NVIDIA drivers**: The proprietary NVIDIA drivers are
    easy to install on Arch Linux, as they can be found in the official repositories.
    There is an article in the Arch Linux wiki ([https://wiki.archlinux.org/index.php/NVIDIA](https://wiki.archlinux.org/index.php/NVIDIA))
    that covers all the bits and pieces.'
  id: totrans-515
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用专有的NVIDIA驱动程序：在Arch Linux上安装专有的NVIDIA驱动程序很容易，因为它们可以在官方存储库中找到。Arch Linux维基中有一篇文章涵盖了所有细节。
- en: '**Using the proprietary AMD drivers**: The reference for using the AMD (ATI)
    Catalyst drivers with Arch Linux is the following wiki page:'
  id: totrans-516
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用专有的AMD驱动程序：在Arch Linux上使用AMD（ATI）Catalyst驱动程序的参考资料是以下维基页面：
- en: '[https://wiki.archlinux.org/index.php/ATI_Catalyst](https://wiki.archlinux.org/index.php/ATI_Catalyst)'
  id: totrans-517
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://wiki.archlinux.org/index.php/ATI_Catalyst](https://wiki.archlinux.org/index.php/ATI_Catalyst)'
- en: On this page we find a whole bunch of information needed to get the Catalyst
    drivers working nicely on your hardware.
  id: totrans-518
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个页面上，我们找到了许多需要的信息，以便在您的硬件上很好地使用Catalyst驱动程序。
- en: Note
  id: totrans-519
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: A short while ago, the catalyst and catalyst-utils packages made it into the
    official repositories. So they become very easy to install.
  id: totrans-520
  prefs: []
  type: TYPE_NORMAL
  zh: 不久前，catalyst和catalyst-utils软件包进入了官方存储库。因此，它们变得非常容易安装。
- en: How to do it...
  id: totrans-521
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Install xorg-server:'
  id: totrans-522
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装xorg-server：
- en: '[PRE42]'
  id: totrans-523
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Let''s change the keyboard layout now:'
  id: totrans-524
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们更改键盘布局：
- en: 'Run the `setxkbmap` command followed by the desired keyboard layout:'
  id: totrans-525
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行`setxkbmap`命令，然后选择所需的键盘布局：
- en: '[PRE43]'
  id: totrans-526
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'Install the input driver:'
  id: totrans-527
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装输入驱动程序：
- en: '[PRE44]'
  id: totrans-528
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Let''s list the steps required to install video drivers:'
  id: totrans-529
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们列出安装视频驱动程序所需的步骤：
- en: Find the graphics card used in your system.
  id: totrans-530
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 找出系统中使用的显卡。
- en: 'Search if there is a driver available:'
  id: totrans-531
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 搜索是否有可用的驱动程序：
- en: '[PRE45]'
  id: totrans-532
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'Install the driver:'
  id: totrans-533
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装驱动程序：
- en: '[PRE46]'
  id: totrans-534
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'Let''s list the steps required to use the proprietary NVIDIA drivers:'
  id: totrans-535
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们列出使用专有的NVIDIA驱动程序所需的步骤：
- en: 'Install nvidia and nvidia-utils:'
  id: totrans-536
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装nvidia和nvidia-utils：
- en: '[PRE47]'
  id: totrans-537
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: Create the configuration file `/etc/X11/xorg.conf.d/20-nvidia.conf`.
  id: totrans-538
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建配置文件`/etc/X11/xorg.conf.d/20-nvidia.conf`。
- en: Restart and see if the driver is being used.
  id: totrans-539
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重新启动并查看驱动程序是否正在使用。
- en: 'Let''s list the steps required to use the proprietary AMD drivers:'
  id: totrans-540
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们列出使用专有的AMD驱动程序所需的步骤：
- en: 'Install catalyst and catalyst-utils by running the following command:'
  id: totrans-541
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下命令安装catalyst和catalyst-utils：
- en: '[PRE48]'
  id: totrans-542
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'Add the `nomodeset` parameter to the kernel command line to make sure that
    the open source drivers will not kick in:'
  id: totrans-543
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在内核命令行中添加`nomodeset`参数，以确保不会启动开源驱动程序：
- en: '[PRE49]'
  id: totrans-544
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: Add a default configuration file `/etc/X11/xorg.conf.d/20-catalyst.conf` so
    that Xorg knows it has to use the proprietary driver.
  id: totrans-545
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加默认配置文件`/etc/X11/xorg.conf.d/20-catalyst.conf`，以便Xorg知道必须使用专有驱动程序。
- en: '[PRE50]'
  id: totrans-546
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: Note
  id: totrans-547
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: For a detailed description of the main tasks performed, refer to the *Getting
    ready* section of this recipe.
  id: totrans-548
  prefs: []
  type: TYPE_NORMAL
  zh: 有关执行的主要任务的详细描述，请参阅本食谱的*准备工作*部分。
- en: How it works...
  id: totrans-549
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Pacman will download and install the xorg-server package and its minimally needed
    dependencies.
  id: totrans-550
  prefs: []
  type: TYPE_NORMAL
  zh: Pacman将下载并安装xorg-server软件包及其最小必需的依赖项。
- en: The `setxkbmap` command will change the selected keyboard layout. For example,
    we had a US layout by default, and after running `setxkbmap be` it will be the
    Belgian AZERTY layout.
  id: totrans-551
  prefs: []
  type: TYPE_NORMAL
  zh: '`setxkbmap`命令将更改所选的键盘布局。例如，默认情况下我们使用的是美国布局，运行`setxkbmap be`后将是比利时AZERTY布局。'
- en: The specific drivers get installed to your system by pacman, which will provide
    Xorg with the means to understand the input from a touchpad and handle it correctly.
  id: totrans-552
  prefs: []
  type: TYPE_NORMAL
  zh: 特定的驱动程序由pacman安装到您的系统中，这将为Xorg提供理解触摸板输入并正确处理它的手段。
- en: 'The NVIDIA driver should be automatically detected by Xorg, but to be sure
    you can add a file to `/etc/X11/xorg.conf.d/`, such as `/etc/X11/xorg.conf.d/20-nvidia.conf`:'
  id: totrans-553
  prefs: []
  type: TYPE_NORMAL
  zh: NVIDIA驱动程序应该会被Xorg自动检测到，但为了确保，您可以在`/etc/X11/xorg.conf.d/`中添加一个文件，例如`/etc/X11/xorg.conf.d/20-nvidia.conf`：
- en: '[PRE51]'
  id: totrans-554
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'You could when needed have a default configuration created by issuing the following
    command:'
  id: totrans-555
  prefs: []
  type: TYPE_NORMAL
  zh: 在需要时，您可以通过发出以下命令创建默认配置：
- en: '[PRE52]'
  id: totrans-556
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'When having two connected screens, you can also autogenerate a twinview default
    configuration:'
  id: totrans-557
  prefs: []
  type: TYPE_NORMAL
  zh: 当有两个连接的屏幕时，您还可以自动生成一个twinview默认配置：
- en: '[PRE53]'
  id: totrans-558
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: When we are using the AMD proprietary drivers, setting the `nomodeset` parameter
    makes sure that the built-in kernel drivers don't start to conflict with the proprietary
    driver. The Xorg configuration file will make sure that Xorg will start without
    errors. Although not entirely necessary, we make sure that Xorg uses the driver
    and serves us well.
  id: totrans-559
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们使用AMD专有驱动程序时，设置`nomodeset`参数可以确保内置内核驱动程序不会开始与专有驱动程序发生冲突。Xorg配置文件将确保Xorg在没有错误的情况下启动。虽然不是完全必要的，但我们确保Xorg使用驱动程序并为我们提供良好的服务。
- en: There's more...
  id: totrans-560
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: We can opt to use our graphical environment directly, which will imply the installation
    of xorg-xinit, or we could use our Xorg environment with a display manager. A
    **display manager** is a graphical login screen so we can use Xorg all the way.
  id: totrans-561
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以选择直接使用我们的图形环境，这将意味着安装xorg-xinit，或者我们可以使用带有显示管理器的Xorg环境。**显示管理器**是一个图形登录屏幕，因此我们可以一直使用Xorg。
- en: Directly using Xorg
  id: totrans-562
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 直接使用Xorg
- en: 'In order to start Xorg directly from the terminal, we first need to install
    the xorg-xinit package to facilitate this:'
  id: totrans-563
  prefs: []
  type: TYPE_NORMAL
  zh: 为了直接从终端启动Xorg，我们首先需要安装xorg-xinit软件包以便进行这样的操作：
- en: '[PRE54]'
  id: totrans-564
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'Then the `startx` command will get us into the X server. When using this directly
    without configuration, X will not start as we will have some missing applications
    requested by the default configuration. So let''s go forward and install:'
  id: totrans-565
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，`startx`命令将使我们进入X服务器。如果直接使用此命令而没有配置，X将不会启动，因为我们将缺少默认配置所请求的一些应用程序。因此，让我们继续并安装：
- en: '[PRE55]'
  id: totrans-566
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: Using Xorg with a window manager or a desktop environment
  id: totrans-567
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用Xorg与窗口管理器或桌面环境
- en: For our own convenience it's best to install a **window manager** (**WM**) or
    a **desktop environment**. For a complete list of window managers go to [https://wiki.archlinux.org/index.php/Window_manager](https://wiki.archlinux.org/index.php/Window_manager).
    And for a full list of desktop environments go to [https://wiki.archlinux.org/index.php/Desktop_Environment](https://wiki.archlinux.org/index.php/Desktop_Environment).
  id: totrans-568
  prefs: []
  type: TYPE_NORMAL
  zh: 为了方便起见，最好安装一个**窗口管理器**（**WM**）或**桌面环境**。有关窗口管理器的完整列表，请转到[https://wiki.archlinux.org/index.php/Window_manager](https://wiki.archlinux.org/index.php/Window_manager)。有关桌面环境的完整列表，请转到[https://wiki.archlinux.org/index.php/Desktop_Environment](https://wiki.archlinux.org/index.php/Desktop_Environment)。
- en: 'In this section we''ll install Xfce ([https://wiki.archlinux.org/index.php/Xfce](https://wiki.archlinux.org/index.php/Xfce)):'
  id: totrans-569
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将安装Xfce ([https://wiki.archlinux.org/index.php/Xfce](https://wiki.archlinux.org/index.php/Xfce))：
- en: '[PRE56]'
  id: totrans-570
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: Pacman will ask if we want to install all the packages from the Xfce group.
    We say yes as this is most convenient.
  id: totrans-571
  prefs: []
  type: TYPE_NORMAL
  zh: Pacman会询问我们是否要安装Xfce组中的所有软件包。我们说是，因为这样最方便。
- en: As Xfce is installed now, we can issue `startxfce4` from a started Xorg session
    or modify our `~/.xinitrc`. In the `.xinitrc` file we can uncomment the line `#
    exec startxfce4` and save the file. When logged in, we can now issue `startx`
    and enjoy the Xfce desktop environment.
  id: totrans-572
  prefs: []
  type: TYPE_NORMAL
  zh: 现在Xfce已安装，我们可以在启动的Xorg会话中发出`startxfce4`，或者修改我们的`~/.xinitrc`。在`.xinitrc`文件中，我们可以取消注释`#
    exec startxfce4`一行并保存文件。登录后，我们现在可以发出`startx`并享受Xfce桌面环境。
- en: Using Xorg with a display manager
  id: totrans-573
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用Xorg与显示管理器
- en: For desktop users this is the common usage as they need a graphical login screen
    and continue from there to the desired desktop environment or window manager.
    There are several display managers available in Arch Linux. In this section we'll
    only describe **LXDM**, which is a fairly simple display manager. For a list of
    other display managers available for Arch Linux you can read [https://wiki.archlinux.org/index.php/Display_Manager](https://wiki.archlinux.org/index.php/Display_Manager).
  id: totrans-574
  prefs: []
  type: TYPE_NORMAL
  zh: 对于桌面用户来说，这是常见的用法，因为他们需要一个图形登录屏幕，然后从那里继续到所需的桌面环境或窗口管理器。在Arch Linux中有几个可用的显示管理器。在本节中，我们只描述**LXDM**，这是一个相当简单的显示管理器。有关Arch
    Linux可用的其他显示管理器的列表，您可以阅读[https://wiki.archlinux.org/index.php/Display_Manager](https://wiki.archlinux.org/index.php/Display_Manager)。
- en: 'To install LXDM we issue pacman with the following command:'
  id: totrans-575
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装LXDM，我们使用以下命令发出pacman：
- en: '[PRE57]'
  id: totrans-576
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: When using initscripts, we can add LXDM at the end of our `DAEMONS` array. When
    we are using systemd, we can issue `systemctl enable lxdm.service` to enable the
    startup of LXDM on boot. When we have rebooted, the LXDM display manager shows
    up and we can select, for example, **Xfce Session** from the Desktop Session drop-down
    list.
  id: totrans-577
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用initscripts时，我们可以将LXDM添加到我们的`DAEMONS`数组的末尾。当我们使用systemd时，我们可以发出`systemctl
    enable lxdm.service`命令，以在启动时启用LXDM。重启后，LXDM显示管理器将显示出来，我们可以从桌面会话下拉列表中选择，例如**Xfce会话**。
- en: Setting keyboard layout in the configuration files
  id: totrans-578
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在配置文件中设置键盘布局
- en: 'As we want our keyboard and mouse automatically configured every time our computer
    starts, we can set the keyboard layout in a configuration file, so we don''t have
    to run `setxkbmap` every time we come into Xorg. We already have xf86-input-evdev
    installed, so we can put our keyboard settings in the same file `10-evdev.conf`,
    such as `/etc/X11/xorg.conf.d/10-evdev.conf` (only the keyboard section):'
  id: totrans-579
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们希望键盘和鼠标在每次计算机启动时自动配置，因此我们可以在配置文件中设置键盘布局，这样我们就不必每次进入Xorg时都运行`setxkbmap`。我们已经安装了xf86-input-evdev，因此我们可以将键盘设置放在同一个文件`10-evdev.conf`中，例如`/etc/X11/xorg.conf.d/10-evdev.conf`（仅键盘部分）：
- en: '[PRE58]'
  id: totrans-580
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'The highlighted parts are added and do the following:'
  id: totrans-581
  prefs: []
  type: TYPE_NORMAL
  zh: 高亮部分被添加并执行以下操作：
- en: '`XkbModel`: What keyboard model are we using? In our example, `pc105`.'
  id: totrans-582
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`XkbModel`: 我们使用什么键盘型号？在我们的例子中，是`pc105`。'
- en: '`XkbLayout`: What keyboard layout are we using? In our example, `be` (Belgian
    AZERTY).'
  id: totrans-583
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`XkbLayout`: 我们使用什么键盘布局？在我们的例子中，是`be`（比利时AZERTY）。'
- en: Finding the keyboard options
  id: totrans-584
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 查找键盘选项
- en: We can find all the possible models, layouts, and options in `/usr/share/X11/xkb/rules/evdev.lst`.
  id: totrans-585
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在`/usr/share/X11/xkb/rules/evdev.lst`中找到所有可能的型号、布局和选项。
- en: Finding what graphics card is used on your system
  id: totrans-586
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 查找系统上使用的显卡
- en: By default we have limited support for our graphics card. To enhance our Xorg
    experience, we must find what graphics card we have, and what drivers to install
    for them. With matching drivers for our hardware, we will get far better performance
    than before.
  id: totrans-587
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，我们对显卡的支持有限。为了增强我们的Xorg体验，我们必须找出我们有什么显卡，以及为它们安装什么驱动程序。通过为我们的硬件安装匹配的驱动程序，我们将获得比以前更好的性能。
- en: 'The easiest way to find which drivers to install is by using the application
    **lspci**:'
  id: totrans-588
  prefs: []
  type: TYPE_NORMAL
  zh: 找出要安装的驱动程序最简单的方法是使用应用程序**lspci**：
- en: '[PRE59]'
  id: totrans-589
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'Example output:'
  id: totrans-590
  prefs: []
  type: TYPE_NORMAL
  zh: 示例输出：
- en: '[PRE60]'
  id: totrans-591
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: Now we already know that we have an ATI card. In some cases we will need the
    driver used by the kernel to determine what Xorg driver to use exactly. In this
    example we already know it will be xf86-video-ati.
  id: totrans-592
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经知道我们有一张ATI卡。在某些情况下，我们需要使用内核使用的驱动程序来确定要使用的确切的Xorg驱动程序。在这个例子中，我们已经知道它将是xf86-video-ati。
- en: Installing the graphics driver
  id: totrans-593
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装显卡驱动程序
- en: Now we can install the driver we need for our specific system. In this example
    it will be xf86-video-ati, but it can be any of the drivers available (replace
    `ati` with what you need in the following example).
  id: totrans-594
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以为我们特定的系统安装所需的驱动程序。在这个例子中，它将是xf86-video-ati，但可以是任何可用的驱动程序（在下面的例子中用您需要的替换`ati`）。
- en: '[PRE61]'
  id: totrans-595
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: NVIDIA GUI configuration
  id: totrans-596
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: NVIDIA GUI配置
- en: NVIDIA does not really want us to struggle with the configuration of our graphics
    card. So they have provided us with a nice GUI to create a fine-tuned configuration.
  id: totrans-597
  prefs: []
  type: TYPE_NORMAL
  zh: NVIDIA实际上并不希望我们为显卡的配置而苦苦挣扎。因此，他们为我们提供了一个很好的GUI来创建一个精细调整的配置。
- en: The simplest way to configure your NVIDIA infrastructure is by configuring everything
    with **nvidia-settings**. You can issue this application as root so that you can
    write the global configuration file.
  id: totrans-598
  prefs: []
  type: TYPE_NORMAL
  zh: 配置NVIDIA基础设施的最简单方法是使用**nvidia-settings**配置所有内容。您可以以root身份发出此应用程序，以便您可以编写全局配置文件。
- en: '![NVIDIA GUI configuration](img/9724OS_07_01.jpg)'
  id: totrans-599
  prefs: []
  type: TYPE_IMG
  zh: '![NVIDIA GUI配置](img/9724OS_07_01.jpg)'
- en: 'Using the GUI you also can store a configuration file. Do so by entering `/etc/X11/xorg.conf.d/20-nvidia.conf`:'
  id: totrans-600
  prefs: []
  type: TYPE_NORMAL
  zh: 使用GUI，您还可以存储配置文件。通过输入`/etc/X11/xorg.conf.d/20-nvidia.conf`来这样做：
- en: '![NVIDIA GUI configuration](img/9724OS_07_02.jpg)'
  id: totrans-601
  prefs: []
  type: TYPE_IMG
  zh: '![NVIDIA GUI配置](img/9724OS_07_02.jpg)'
- en: AMD also provides us with some helpful tools to make the configuration very
    easy. Let's discuss them now.
  id: totrans-602
  prefs: []
  type: TYPE_NORMAL
  zh: AMD还为我们提供了一些有用的工具，使配置变得非常容易。现在让我们来讨论它们。
- en: Autogenerate an Xorg configuration file with AMD
  id: totrans-603
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用AMD自动生成Xorg配置文件
- en: 'If you want to do some extended configuration, you can start a new configuration
    file by running:'
  id: totrans-604
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想进行一些扩展配置，可以通过运行以下命令来启动一个新的配置文件：
- en: '[PRE62]'
  id: totrans-605
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: This will create a new configuration file, `/etc/X11/xorg.conf`.
  id: totrans-606
  prefs: []
  type: TYPE_NORMAL
  zh: 这将创建一个新的配置文件，`/etc/X11/xorg.conf`。
- en: AMD GUI configuration
  id: totrans-607
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: AMD GUI配置
- en: You can further fine-tune the working of your ATI hardware by running the AMDCCCLE
    application.
  id: totrans-608
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过运行AMDCCCLE应用程序进一步微调您的ATI硬件的工作。
- en: '![AMD GUI configuration](img/9724OS_07_03.jpg)'
  id: totrans-609
  prefs: []
  type: TYPE_IMG
  zh: '![AMD GUI配置](img/9724OS_07_03.jpg)'
