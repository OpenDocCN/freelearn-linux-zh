["```\nyum \u2013y install virtio-win libguestfs*\n```", "```\nvirt-install --name WS2019 --memory=4096 --vcpus 2 --cpu host --video qxl --features=hyperv_relaxed=on,hyperv_spinlocks=on,hyperv_vapic=on --clock hypervclock_present=yes --disk /var/lib/libvirt/images/WS2019.qcow2,format=qcow2,bus=virtio,cache=none,size=60 --cdrom /iso/windows-server-2019.iso --disk /usr/share/virtio-win/virtio-win.iso,device=cdrom --vnc --os-type=windows --os-variant=win2k19 --accelerate --noapic \n```", "```\nmsiexec /i CloudbaseInitSetup.msi /qn /l*v log.txt\n```", "```\n[DEFAULT]\n# Name of the user that will get created, group for that user\nusername=Admin\ngroups=Administrators\nfirstlogonbehaviour=no\ninject_user_password=true\u00a0\u00a0# Use password from the metadata (not random).\n```", "```\nconfig_drive_raw_hhd=true\nconfig_drive_cdrom=true\n# Path to tar implementation from Ubuntu.\nbsdtar_path=C:\\Program Files\\Cloudbase Solutions\\Cloudbase-Init\\bin\\bsdtar.exe\nmtools_path= C:\\Program Files\\Cloudbase Solutions\\Cloudbase-Init\\bin\\\n```", "```\n# Logging level\nverbose=true\ndebug=true\n# Where to store logs\nlogdir=C:\\Program Files (x86)\\Cloudbase Solutions\\Cloudbase-Init\\log\\\nlogfile=cloudbase-init-unattend.log\ndefault_log_levels=comtypes=INFO,suds=INFO,iso8601=WARN\nlogging_serial_port_settings=\n```", "```\n# Use DHCP to get all network and NTP settings\nmtu_use_dhcp_config=true\nntp_use_dhcp_config=true\n```", "```\n# Location of scripts to be started during the process\nlocal_scripts_path=C:\\Program Files\\Cloudbase Solutions\\Cloudbase-Init\\LocalScripts\\\n```", "```\n# Services for loading\nmetadata_services=cloudbaseinit.metadata.services.configdrive.ConfigDriveService, cloudbaseinit.metadata.services.httpservice.HttpService,\ncloudbaseinit.metadata.services.ec2service.EC2Service,\ncloudbaseinit.metadata.services.maasservice.MaaSHttpService\n# Plugins to load\nplugins=cloudbaseinit.plugins.common.mtu.MTUPlugin,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cloudbaseinit.plugins.common.sethostname.SetHostNamePlugin\n# Miscellaneous.\nallow_reboot=false\u00a0\u00a0\u00a0\u00a0# allow the service to reboot the system\nstop_service_on_exit=false\n```", "```\n[DEFAULT]\nusername=Admin\ngroups=Administrators\ninject_user_password=true\nconfig_drive_raw_hhd=true\nconfig_drive_cdrom=true\nconfig_drive_vfat=true\nbsdtar_path=C:\\Program Files\\Cloudbase Solutions\\Cloudbase-Init\\bin\\bsdtar.exe\nmtools_path= C:\\Program Files\\Cloudbase Solutions\\Cloudbase-Init\\bin\\\ndebug=true\ndefault_log_levels=comtypes=INFO,suds=INFO,iso8601=WARN\nlogging_serial_port_settings=\nmtu_use_dhcp_config=true\nntp_use_dhcp_config=true\n```", "```\nlocal_scripts_path=C:\\PS1\n```", "```\nmetadata_services=cloudbaseinit.metadata.services.base.EmptyMetadataService\nplugins=cloudbaseinit.plugins.common.mtu.MTUPlugin,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cloudbaseinit.plugins.common.sethostname.SetHostNamePlugin, cloudbaseinit.plugins.common.localscripts.LocalScriptsPlugin,cloudbaseinit.plugins.common.userdata.UserDataPlugin\nallow_reboot=false\u00a0\u00a0\u00a0\u00a0\nstop_service_on_exit=false\n```", "```\n[DEFAULT]\nusername=Admin\ngroups=Administrators\ninject_user_password=true\nconfig_drive_raw_hhd=true\nconfig_drive_cdrom=true\nconfig_drive_vfat=true\n```", "```\nbsdtar_path=C:\\Program Files\\Cloudbase Solutions\\Cloudbase-Init\\bin\\bsdtar.exe\nmtools_path= C:\\Program Files\\Cloudbase Solutions\\Cloudbase-Init\\bin\\\ndebug=true\n```", "```\nfirst_logon_behaviour=no\ndefault_log_levels=comtypes=INFO,suds=INFO,iso8601=WARN\nlogging_serial_port_settings=\nmtu_use_dhcp_config=true\nntp_use_dhcp_config=true\nlocal_scripts_path=C:\\PS1\n```", "```\nSet-ExecutionPolicy -ExecutionPolicy Unrestricted -Force\n$password = \"Pa$$w0rd\" | ConvertTo-SecureString -AsPlainText -Force\nNew-LocalUser -name \"packt1\" -Password $password\nNew-LocalUser -name \"packt2\" -Password $password\nNew-LocalGroup -name \"Students\"\nAdd-LocalGroupMember -group \"Students\" -Member \"packt1\",\"packt2\"\nRename-Computer -NewName \"Server1\" -Restart\n```", "```\n# ps1\n$password = \"Pa$$w0rd\" | ConvertTo-SecureString -AsPlainText -Force\nNew-LocalUser -name \"packt1\" -Password $password\nNew-LocalUser -name \"packt2\" -Password $password\nNew-LocalGroup -name \"Students\"\nAdd-LocalGroupMember -group \"Students\" -Member \"packt1\",\"packt2\"\nRename-Computer -NewName \"Server1\" \u2013Restart\n```"]