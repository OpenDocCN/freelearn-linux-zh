- en: 'Chapter 7: Deploying Your Virtual Machines'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第7章：部署您的虚拟机
- en: It's easy to deploy a single **virtual machine** (**VM**) in Azure, but as soon
    as you want to deploy more workloads in a single, reproducible way, you need some
    sort of automation.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在Azure中部署单个虚拟机（VM）很容易，但一旦您想以一种单一的、可重复的方式部署更多的工作负载，您就需要某种自动化。
- en: In Azure, you can use **Azure Resource Manager** (**ARM**) to deploy VMs using
    template configuration files together with the Azure CLI, PowerShell, Ruby, and
    C#. Other third-party tools used to create images for VMs, such as Packer and
    Vagrant, are discussed later in this chapter.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在Azure中，您可以使用Azure资源管理器（ARM）使用模板配置文件部署VM，还可以使用Azure CLI、PowerShell、Ruby和C#。本章后面将讨论用于创建VM映像的第三方工具，如Packer和Vagrant。
- en: All these deployment methods or image creation methods use images from Azure,
    but it's also possible to create your own custom VMs with custom images.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些部署方法或映像创建方法都使用Azure中的映像，但也可以创建自己的自定义VM并使用自定义映像。
- en: 'Before going into the configuration of all the possible options, it is important
    to be aware of the different deployment options and why you should or shouldn''t
    use them. You must ask yourself several questions first:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在进入所有可能选项的配置之前，了解不同的部署选项以及为什么应该或不应该使用它们是很重要的。首先，您必须先问自己几个问题：
- en: When are you going to deploy your application?
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您何时打算部署您的应用程序？
- en: Which parts of the workload should be reproducible?
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 工作负载的哪些部分应该是可重复的？
- en: Which parts of the configuration of the workload should be done during deployment?
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 工作负载的配置的哪些部分应该在部署期间完成？
- en: 'All these questions will be answered by the end of this chapter. These are
    the key takeaways from this chapter:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些问题将在本章结束时得到解答。以下是本章的主要要点：
- en: We will be discussing automated deployment options in Azure.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们将讨论Azure中的自动化部署选项。
- en: We will see how deployment can be automated using the Azure CLI and PowerShell.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们将看到如何使用Azure CLI和PowerShell自动化部署。
- en: We will be covering Azure ARM templates for deployment and how they can be reused
    for redeployment.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们将介绍Azure ARM模板用于部署以及它们如何可以被重用于重新部署。
- en: VM image creation tools such as Packer and Vagrant will be discussed.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将讨论VM映像创建工具，如Packer和Vagrant。
- en: Finally, we will explain how to use custom images and bring our own **VHD**
    (**Virtual Hard Disks**) to Azure.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，我们将解释如何使用自定义映像并将我们自己的VHD（虚拟硬盘）带入Azure。
- en: Deployment Scenarios
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 部署场景
- en: 'The three questions mentioned in the introduction are very important; these
    can differ per company, per application, and during the development stage. The
    following are examples of a few deployment scenarios:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 介绍中提到的三个问题非常重要；这些可能因公司、应用程序和开发阶段而异。以下是一些部署场景的示例：
- en: Applications are developed in-house, maybe even on your local computer. Once
    finished, applications are deployed in Azure. Updates will be applied to the running
    workload.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用程序是内部开发的，甚至可能是在您的本地计算机上。完成后，应用程序将在Azure中部署。更新将应用于正在运行的工作负载。
- en: This is the same scenario, but now the updates will be done by deploying a new
    VM.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这是相同的情景，但现在更新将通过部署新的VM来完成。
- en: Applications are delivered by another vendor.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用程序由另一个供应商提供。
- en: These three examples are very common and can affect the way that you want to
    deploy your workload.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 这三个示例非常常见，可能会影响您想要部署工作负载的方式。
- en: What Do You Need?
  id: totrans-20
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 你需要什么？
- en: Before jumping into the deployment, you should know what you need or, in other
    words, what resources are required to make your application work properly. Additionally,
    everything in Azure has a limit and a quota. Some limits are hard, and some can
    be increased by reaching out to Microsoft Support. To see the complete list of
    Azure limits and quotas, visit [https://docs.microsoft.com/en-us/azure/azure-subscription-service-limits](https://docs.microsoft.com/en-us/azure/azure-subscription-service-limits).
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在跳入部署之前，您应该知道您需要什么，或者换句话说，需要哪些资源才能使您的应用程序正常工作。此外，Azure中的所有内容都有限制和配额。一些限制是硬性的，有些可以通过联系微软支持来增加。要查看完整的Azure限制和配额列表，请访问[https://docs.microsoft.com/en-us/azure/azure-subscription-service-limits](https://docs.microsoft.com/en-us/azure/azure-subscription-service-limits)。
- en: 'Prior to deployment, we need to plan and make sure that our subscription limits
    won''t block our project. If there is a restriction or limitation, reach out to
    Microsoft Support and increase the quota. However, if you are on a free trial,
    quota requests will not be approved. You may have to move the deployment to a
    region where you have enough quota to fulfill the deployment. These are the key
    resources that we''ll be deploying:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在部署之前，我们需要计划并确保我们的订阅限制不会阻碍我们的项目。如果有限制或限制，请联系微软支持并增加配额。但是，如果您正在使用免费试用，配额请求将不会被批准。您可能需要将部署移至您有足够配额来完成部署的地区。这些是我们将要部署的关键资源：
- en: A resource group
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个资源组
- en: A storage account (unmanaged) or a managed disk
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个存储账户（未管理）或托管磁盘
- en: A network security group
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络安全组
- en: A virtual network
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个虚拟网络
- en: A subnet for the virtual network
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 虚拟网络的子网
- en: A network interface attached to the VM
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连接到VM的网络接口
- en: 'Regarding the VM, you need to specify and think about the following:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 关于VM，您需要指定并考虑以下内容：
- en: VM sizing
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: VM大小
- en: Storage
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储
- en: VM extensions
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: VM扩展
- en: Operating system
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 操作系统
- en: Initial configuration
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 初始配置
- en: The deployment of your application
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用程序的部署
- en: 'If you take a look at these lists, you might be wondering whether automated
    deployment or automation is necessary or required. The answer is not easy to find.
    Let''s look at the scenarios again and try to find the answer. We could decide
    to do the following:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您看一下这些列表，您可能会想知道自动化部署是否是必要的或必需的。答案并不容易找到。让我们再次看看这些情景，并尝试找到答案。我们可以决定做以下事情：
- en: Create a script in PowerShell or Bash to prepare the Azure environment for the
    workload
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个PowerShell或Bash脚本来准备工作负载的Azure环境
- en: Create a second script to deploy the VM based on an offer in Azure and use an
    Azure VM extension to configure the initial configuration
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建第二个脚本来部署基于Azure中的一个提供的VM，并使用Azure VM扩展来配置初始配置
- en: Deploy the application with a software manager such as Yum
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用像Yum这样的软件管理器部署应用程序
- en: 'There is nothing wrong with deciding to do this; it could be the best solution
    for you! However, whether you like it or not, there are dependencies:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 决定这样做没有错；这可能是您的最佳解决方案！然而，不管您喜不喜欢，都有依赖关系：
- en: You deploy your operating system based on an image. This image is made available
    by a publisher. What happens if the image is updated to a version that is not
    supported by your application?
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您的操作系统是基于一个镜像部署的。这个镜像是由发布者提供的。如果镜像更新到您的应用程序不支持的版本会发生什么？
- en: How much initial configuration is already done in this image? How much is needed,
    and who is in control of the image?
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这个镜像中已经完成了多少初始配置？还需要多少，谁控制这个镜像？
- en: Is this image compliant with your security policies?
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这个镜像是否符合您的安全策略？
- en: If you want to leave Azure for whatever reason, can you move your application
    to somewhere else?
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果出于任何原因您想离开Azure，您能把您的应用程序迁移到其他地方吗？
- en: Automated Deployment Options in Azure
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Azure中的自动化部署选项
- en: 'After this long introduction, it''s time to have a look at the feature options
    that make it possible to automate the deployment of your workload:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个漫长的介绍之后，是时候看一下功能选项了，这些选项使得自动化部署您的工作负载成为可能：
- en: Scripting
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 脚本编写
- en: Azure Resource Manager
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure资源管理器
- en: Ansible
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ansible
- en: Terraform
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Terraform
- en: We will be discussing Ansible and Terraform in *Chapter 8, Exploring Continuous
    Configuration Automation*.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在*第8章，探索持续配置自动化*中讨论Ansible和Terraform。
- en: Scripting
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 脚本编写
- en: 'Automation can be done with scripts. In Azure, there are many options supported
    by Microsoft:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 自动化可以通过脚本完成。在Azure中，有许多由Microsoft支持的选项：
- en: Bash with the Azure CLI
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Azure CLI的Bash
- en: PowerShell with the Az module
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 带有Az模块的PowerShell
- en: Python, with the complete SDK available at [https://docs.microsoft.com/en-us/azure/python/python-sdk-azure-install](https://docs.microsoft.com/en-us/azure/python/python-sdk-azure-install
    )
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python，完整的SDK可在[https://docs.microsoft.com/en-us/azure/python/python-sdk-azure-install](https://docs.microsoft.com/en-us/azure/python/python-sdk-azure-install
    )找到
- en: Ruby, with a preview SDK available at [https://azure.microsoft.com/en-us/develop/ruby](https://azure.microsoft.com/en-us/develop/ruby
    )
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ruby，预览SDK可在[https://azure.microsoft.com/en-us/develop/ruby](https://azure.microsoft.com/en-us/develop/ruby
    )找到
- en: Go, with a complete SDK available at [https://github.com/Azure/azure-sdk-for-go](https://github.com/Azure/azure-sdk-for-go
    )
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Go，完整的SDK可在[https://github.com/Azure/azure-sdk-for-go](https://github.com/Azure/azure-sdk-for-go
    )找到
- en: And there are libraries available for Node.js
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 还有可用于Node.js的库
- en: Also, you can use programming languages such as Java and C#. There are community
    projects as well; for instance, [https://github.com/capside/azure-sdk-perl](https://github.com/capside/azure-sdk-perl)
    is an attempt to build a full Azure SDK for Perl.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，您还可以使用Java和C#等编程语言。也有社区项目；例如，[https://github.com/capside/azure-sdk-perl](https://github.com/capside/azure-sdk-perl)
    是一个构建Perl的完整Azure SDK的尝试。
- en: All languages are valid options; choose a language you are already familiar
    with. Please be aware that the Ruby SDK was in preview at the time that this book
    was written. During the preview state, the syntax can change.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 所有语言都是有效的选择；选择您已经熟悉的语言。请注意，Ruby SDK在撰写本书时处于预览状态。在预览状态下，语法可能会发生变化。
- en: Scripting is especially good for preparing an Azure environment. You can also
    use scripting to deploy your VMs, and you can even include the initial configuration
    using VM extensions. The question of whether it's a good idea is dependent on
    your scripting abilities, the base image of the operating system, and the versions
    of software installed in it.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 脚本编写特别适用于准备Azure环境。您还可以使用脚本来部署您的VM，并且甚至可以使用VM扩展来包含初始配置。这是否是一个好主意取决于您的脚本能力、操作系统的基本镜像以及其中安装的软件版本。
- en: 'The biggest argument against using scripts is that it is time-consuming to
    write them. Here are some tips that can help you write scripts efficiently:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 使用脚本的最大反对意见是编写脚本很耗时。以下是一些可以帮助您高效编写脚本的提示：
- en: Use as many variables as possible. This way, if you have changes to make in
    the script, all you have to do is change the variables' values.
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尽可能使用多个变量。这样，如果您需要在脚本中进行更改，您只需要更改变量的值。
- en: Use recognizable variable names in loops, not something like `for i in`.
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在循环中使用可识别的变量名，而不是像`for i in`这样的东西。
- en: Especially for bigger scripts, declare functions that you can reuse.
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 特别是对于更大的脚本，声明可以重复使用的函数。
- en: Sometimes, it makes sense to put variables (such as the one that provides authentication)
    and functions in separate files. One task per script is often a good idea.
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有时，将变量（例如提供身份验证的变量）和函数放在单独的文件中是有意义的。通常一个脚本执行一个任务是个好主意。
- en: Include the timestamp of the modification in your code, or, even better, use
    a version control system such as Git.
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在您的代码中包含修改的时间戳，或者更好的是使用Git这样的版本控制系统。
- en: Include tests. For instance, only create this resource if it doesn't already
    exist. Use human-readable exit codes. If the script failed to deploy a resource,
    use something like *not able to create $resource*, so that whoever is running
    the script will understand that the script failed to create the resource.
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包含测试。例如，只有在资源不存在时才创建此资源。使用可读的退出代码。如果脚本无法部署资源，请使用类似*无法创建$resource*的内容，这样运行脚本的人就会明白脚本无法创建资源。
- en: Include sufficient comments. If you need to debug or reuse the script after
    some time, you'll still know what it does. Don't forget to include a description
    in the header as well.
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包含足够的注释。如果您需要在一段时间后调试或重用脚本，您仍然会知道它的作用。不要忘记在标题中包含描述。
- en: Spend some time on the layout; use indentation to keep the code readable. Use
    two spaces for indentation, not tabs!
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在布局上花一些时间；使用缩进使代码易读。使用两个空格进行缩进，而不是制表符！
- en: It's now time for a short example. This example will give you an idea of how
    to create scripts to provide the things needed in Azure before deploying a VM.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是举一个简短示例的时候了。这个示例将让您了解在部署虚拟机之前如何创建脚本来提供Azure所需的东西。
- en: 'First, declare the variables. You can also add the variables to a file and
    make PowerShell load the variables. It is recommended to store them in the same
    script so that you can always go back and update them when required:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，声明变量。您也可以将变量添加到一个文件中，并让PowerShell加载这些变量。建议将它们存储在同一个脚本中，这样您可以随时返回并在需要时更新它们。
- en: '[PRE0]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Next, write a script to create a resource group. If the resource already exists,
    the script will skip the creation part. As mentioned earlier, adding comments
    is the best practice to make the script readable, so make use of comments marked
    by `#` so that you understand what the code block does:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，编写一个脚本来创建一个资源组。如果资源已经存在，脚本将跳过创建部分。如前所述，添加注释是使脚本可读的最佳实践，因此请使用`#`标记的注释，以便您了解代码块的作用：
- en: '[PRE1]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Create the virtual network and configure the subnet:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 创建虚拟网络并配置子网：
- en: '[PRE2]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Here is an example of creating a network security group:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 这是创建网络安全组的一个示例：
- en: '[PRE3]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: By now, you should have a pretty good idea of how you can create a script and
    a virtual network. As mentioned at the beginning of this section, scripting is
    not the only resort to automate a deployment; there are other methods. In the
    next section, we'll be discussing how to use Azure Resource Manager templates
    to automate deployment.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，您应该已经对如何创建脚本和虚拟网络有了一个很好的想法。正如在本节开头提到的，脚本编写并不是自动化部署的唯一手段；还有其他方法。在下一节中，我们将讨论如何使用Azure资源管理器模板来自动化部署。
- en: Automated Deployment with Azure Resource Manager
  id: totrans-82
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用Azure资源管理器进行自动化部署
- en: 'In *Chapter 2, Getting Started with the Azure Cloud*, we defined **Azure Resource
    Manager** (**ARM**) as follows:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在*第2章，开始使用Azure云*中，我们将**Azure资源管理器**（**ARM**）定义如下：
- en: '*"Basically, the Azure Resource Manager enables you to work with resources
    such as storage and VMs. To do so, you have to create one or more resource groups
    so you can execute life cycle operations, such as deploying, updating, and deleting
    all the resources in the resource group in a single operation."*'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: “基本上，Azure资源管理器使您能够使用诸如存储和虚拟机之类的资源。为此，您必须创建一个或多个资源组，以便您可以执行生命周期操作，例如在单个操作中部署、更新和删除资源组中的所有资源。”
- en: From the Azure portal or with scripting, you are able to do all the things stated.
    But that's only a small part of it. You can deploy Azure resources through ARM
    by using templates. There are hundreds of quick-start templates provided by Microsoft,
    available at [https://azure.microsoft.com/en-us/resources/templates](https://azure.microsoft.com/en-us/resources/templates
    )
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 从Azure门户或使用脚本，您可以做到上述所有的事情。但这只是其中的一小部分。您可以通过ARM使用模板部署Azure资源。微软提供了数百个快速启动模板，可在[https://azure.microsoft.com/en-us/resources/templates](https://azure.microsoft.com/en-us/resources/templates)找到。
- en: 'When you create a VM via the Azure portal, you can download that VM as a template
    even before you create it. If you refer to the following screenshot, you can see
    that even before creating the VM, we have an option to download the template for
    automation:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 当您通过Azure门户创建虚拟机时，甚至在创建之前就可以将该虚拟机下载为模板。如果您参考以下截图，您会发现即使在创建虚拟机之前，我们也有一个下载自动化模板的选项：
- en: '![Navigating within the Dashboard to create and download VM as a template](img/B15455_07_01.jpg)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![在仪表板中导航以创建并下载虚拟机作为模板](img/B15455_07_01.jpg)'
- en: 'Figure 7.1: Downloading VM as a template'
  id: totrans-88
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图7.1：将虚拟机下载为模板
- en: 'If you click on **Download a template for automation**, you''ll get the following
    screen:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您点击**下载自动化模板**，您将会看到以下屏幕：
- en: '![Adding script to the library within the template pane](img/B15455_07_02.jpg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![在模板窗格中添加脚本到库中](img/B15455_07_02.jpg)'
- en: 'Figure 7.2: VM template pane'
  id: totrans-91
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图7.2：VM模板窗格
- en: As you can see, you can add the script to your library in Azure or you can download
    this file to your local computer. You will also get a **Deploy** option, with
    which you can change the parameters and deploy directly to Azure.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所看到的，您可以将脚本添加到Azure的库中，或者将此文件下载到您的本地计算机。您还将获得一个**部署**选项，通过它您可以更改参数并直接部署到Azure。
- en: In the **Scripts** pane, Azure gives you links on how to deploy using PowerShell
    and the CLI.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 在**脚本**窗格中，Azure给出了使用PowerShell和CLI进行部署的链接。
- en: You can easily change the parameters and deploy a new VM or redeploy exactly
    the same VM. It is not that different than using your own scripts, but it's less
    time-consuming in development terms.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以轻松更改参数并部署新的虚拟机，或者重新部署完全相同的虚拟机。这与使用自己的脚本并没有太大的不同，但在开发方面更节省时间。
- en: This is not the only thing you can do with ARM; you can configure every aspect
    of Azure resources. For example, if you are deploying a Network Security Group
    via an ARM template, you define everything, such as the rule, port range, and
    the priority of the rule, in the same way as you would create from the Azure portal
    or via the CLI. It's not that difficult to create your own ARM template. You'll
    need the ARM reference guide, which can be found at [https://docs.microsoft.com/en-us/azure/templates](https://docs.microsoft.com/en-us/azure/templates).
    Together with these examples, it's a great resource to get started.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 这并不是您可以使用ARM做的唯一事情；您可以配置Azure资源的每一个方面。例如，如果您通过ARM模板部署网络安全组，您可以像在Azure门户或通过CLI创建一样，定义一切，比如规则、端口范围和规则的优先级。创建自己的ARM模板并不那么困难。您需要ARM参考指南，可以在[https://docs.microsoft.com/en-us/azure/templates](https://docs.microsoft.com/en-us/azure/templates)找到。再加上这些示例，这是一个很好的入门资源。
- en: Another way of getting started is by using the Visual Studio Code editor, which
    is available for Windows, Linux, and macOS at [https://code.visualstudio.com](https://code.visualstudio.com).
    The **Azure Resource Manager Tools** extension is a must-have if you are going
    to start using ARM, together with some other extensions, such as **Azure Account
    and Sign-In**, **Azure Resource Manager snippets**, and **Azure CLI Tools**. You
    can start using existing templates, and can even upload them to Cloud Shell, execute
    them, and debug them.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种开始的方法是使用可在Windows、Linux和macOS上使用的Visual Studio Code编辑器，网址为[https://code.visualstudio.com](https://code.visualstudio.com)。**Azure资源管理器工具**扩展是必不可少的，如果您要开始使用ARM，还有其他一些扩展，如**Azure帐户和登录**、**Azure资源管理器片段**和**Azure
    CLI工具**。您可以开始使用现有模板，甚至可以将它们上传到Cloud Shell，执行它们并对其进行调试。
- en: 'To install the Azure Resource Manager Tools extension, follow these steps:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装Azure资源管理器工具扩展，请按照以下步骤进行：
- en: Open Visual Studio Code.
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Visual Studio Code。
- en: Select **Extensions** from the left menu. Or, from the **View** menu, select
    **Extensions** to open the **Extensions** pane.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从左侧菜单中选择**扩展**。或者，从**查看**菜单中选择**扩展**以打开**扩展**窗格。
- en: Search for **Resource Manager**.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 搜索**资源管理器**。
- en: Select **Install** under **Azure Resource Manager Tools**.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**Azure资源管理器工具**下选择**安装**。
- en: 'Here is the screen where you find the **Install** option:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 这是您找到**安装**选项的屏幕：
- en: '![Navigating on Visual Studio Code for installing Azure Resource Manager Tools](img/B15455_07_03.jpg)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![在Visual Studio Code上导航以安装Azure资源管理器工具](img/B15455_07_03.jpg)'
- en: 'Figure 7.3: Installing Azure Resource Manager Tools'
  id: totrans-104
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图7.3：安装Azure资源管理器工具
- en: Another nice feature in Azure is the ARM Visualizer, which you can find at [http://armviz.io](http://armviz.io).
    It's still in the early stages of development. This is a tool that can help you
    to get a quick insight into the purpose of the ARM template you downloaded from
    the Quickstart Templates website.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: Azure中的另一个不错的功能是ARM Visualizer，您可以在[http://armviz.io](http://armviz.io)找到它。它仍处于早期开发阶段。这是一个可以帮助您快速了解从Quickstart模板网站下载的ARM模板目的的工具。
- en: 'Instead of downloading templates, it''s also possible to save them to a library:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 除了下载模板，还可以将其保存到库中：
- en: '![Saving templates to the library using ARM Visualizer](img/B15455_07_04.jpg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![使用ARM Visualizer将模板保存到库中](img/B15455_07_04.jpg)'
- en: 'Figure 7.4: Saving templates to the library'
  id: totrans-108
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图7.4：将模板保存到库中
- en: 'As stated in this pane, you can easily navigate in the Azure portal by using
    **All resources** in the left-hand navigation bar and searching for templates:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 如此窗格所述，您可以通过在左侧导航栏中使用**所有资源**并搜索模板来轻松在Azure门户中导航：
- en: '![Navigating to the templates on the Azure portal](img/B15455_07_05.jpg)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![在Azure门户上导航到模板](img/B15455_07_05.jpg)'
- en: 'Figure 7.5: Navigating to the templates on the Azure portal'
  id: totrans-111
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图7.5：在Azure门户上导航到模板
- en: You can still edit your template here! Another nice feature is that you can
    share your template with other users of your tenant. This can be very useful,
    as you can create a user who is only allowed to use this template for deployment.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 您仍然可以在这里编辑您的模板！另一个不错的功能是，您可以与您的租户的其他用户共享您的模板。这可能非常有用，因为您可以创建一个只允许使用此模板进行部署的用户。
- en: Now that we know how to deploy a template from the Azure portal, let's see how
    we can deploy ARM templates using PowerShell and Bash.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道了如何从Azure门户部署模板，让我们看看如何可以使用PowerShell和Bash部署ARM模板。
- en: Deploying ARM Templates Using PowerShell
  id: totrans-114
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用PowerShell部署ARM模板
- en: 'First, to validate whether the template format is right, execute the following
    command:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，验证模板格式是否正确，执行以下命令：
- en: '[PRE4]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Then go ahead with the deployment:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 然后继续部署：
- en: '[PRE5]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Deploying ARM Templates Using Bash
  id: totrans-119
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用Bash部署ARM模板
- en: 'You can also validate your template and parameter file prior to deployment
    to avoid any unexpected errors:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以在部署之前验证您的模板和参数文件，以避免任何意外错误：
- en: '[PRE6]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'To deploy, execute the following command:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 要部署，请执行以下命令：
- en: '[PRE7]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Now that we have deployed a new VM, we can keep the `templates.json` and `parameters.json`,
    which can be reused by changing the variable values.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经部署了一个新的VM，我们可以保留`templates.json`和`parameters.json`，通过更改变量值可以重复使用它们。
- en: 'Let''s assume we have deleted the VM and you want it to be redeployed. All
    you need is the JSON files. As explained earlier, if you have stored the template
    in Azure, you can find an option to redeploy there:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们已经删除了VM，并且您希望重新部署它。您只需要JSON文件。如前所述，如果您已将模板存储在Azure中，您可以在那里找到重新部署的选项：
- en: '![Redeploying the VM using the JSON files](img/B15455_07_06.jpg)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![使用JSON文件重新部署VM](img/B15455_07_06.jpg)'
- en: 'Figure 7.6: Redeploying the VM using the JSON files'
  id: totrans-127
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图7.6：使用JSON文件重新部署VM
- en: If you prefer to accomplish the same task via the Azure CLI or PowerShell, run
    the commands we used earlier and your VM will be ready with the same configuration
    as mentioned in the ARM template.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您希望通过Azure CLI或PowerShell完成相同的任务，请运行我们之前使用的命令，您的VM将准备好，配置与ARM模板中提到的相同。
- en: Initial Configuration
  id: totrans-129
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 初始配置
- en: 'Following the deployment of your workload, post-deployment configuration is
    needed. If you want to do this as a part of your automation solution, then there
    are two options:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 在部署工作负载之后，需要进行后部署配置。如果您想将其作为自动化解决方案的一部分来完成，那么有两个选项：
- en: The custom script extension, which can be used at any time after the deployment.
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自定义脚本扩展可以在部署后的任何时间使用。
- en: '`cloud-init` is available during boot.'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cloud-init`在引导期间可用。'
- en: Initial Configuration with the Custom Script Extension
  id: totrans-133
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用自定义脚本扩展进行初始配置
- en: After the deployment of the VM, it is possible to execute post-deployment scripts
    using the custom script extension. In the previous example, we were deploying
    a VM using ARM templates. What if you want to run a script after deployment? This
    is the role of the custom script extension. For example, let's assume you want
    to deploy a VM, and after deployment, you want to install Apache on it without
    logging in to the VM. In this case, we will write a script to install Apache and
    Apache will be installed after deployment using the custom script extension.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 在VM部署后，可以使用自定义脚本扩展执行后部署脚本。在前面的示例中，我们使用ARM模板部署了VM。如果您想在部署后运行脚本怎么办？这就是自定义脚本扩展的作用。例如，假设您想部署一个VM，并且在部署后，您想在其中安装Apache而无需登录到VM。在这种情况下，我们将编写一个脚本来安装Apache，并且将使用自定义脚本扩展在部署后安装Apache。
- en: This extension will work on all Microsoft-endorsed Linux operating systems,
    except CoreOS and OpenSUSE LEAP. Change the `apt-get` command in the script to
    the software manager supported by your distribution if you are using a distribution
    other than Debian or Ubuntu.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 该扩展将适用于除CoreOS和OpenSUSE LEAP之外的所有Microsoft认可的Linux操作系统。如果您使用的是除Debian或Ubuntu之外的发行版，则将脚本中的`apt-get`命令更改为您的发行版支持的软件管理器。
- en: 'You can use PowerShell to configure the extension:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用PowerShell来配置扩展：
- en: '[PRE8]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The PowerShell output will give you the status after the configuration, that
    is, whether it was OK or something went wrong. After running the script, you can
    verify whether the installation was successful in the logs of the VM. Since we
    are following this on an Ubuntu VM, you can verify the installation of nginx by
    checking the `/var/log/apt/history.log` file. The output confirms that nginx and
    all other dependencies have been installed:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: PowerShell输出将在配置后给出状态，即是否正常或出现了问题。运行脚本后，您可以在VM的日志中验证安装是否成功。由于我们正在Ubuntu VM上进行此操作，您可以通过检查`/var/log/apt/history.log`文件来验证nginx的安装。输出确认了nginx和所有其他依赖项都已安装：
- en: '![Checking logs to verify nginx installation](img/B15455_07_07.jpg)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![检查日志以验证nginx安装](img/B15455_07_07.jpg)'
- en: 'Figure 7.7: Checking logs to verify nginx installation'
  id: totrans-140
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图7.7：检查日志以验证nginx安装
- en: Instead of a command, you can also provide a script.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以提供脚本而不是命令。
- en: 'Let''s create a very simple script:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个非常简单的脚本：
- en: '[PRE9]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Now, the script must be encoded using the `base64` command. You can do this
    on any Linux VM you have, or you can use `base64` string:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，脚本必须使用`base64`命令进行编码。您可以在任何Linux VM上执行此操作，或者您可以使用`base64`字符串：
- en: '[PRE10]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Note
  id: totrans-146
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: On some versions of base64, you have to add the `-w0` parameter to disable word
    wrapping. Just make sure that it is one line!
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些版本的base64中，您必须添加`-w0`参数以禁用换行。只需确保它是一行！
- en: 'The `$Settings` variable will be as follows:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '`$Settings`变量将如下所示：'
- en: '[PRE11]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'As we have already installed nginx using the first script, you can either remove
    ngnix using `apt purge nginx` or you can create a new VM altogether. As we did
    before, we can go and check the history log:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们已经使用第一个脚本安装了nginx，您可以使用`apt purge nginx`来删除ngnix，或者您可以完全创建一个新的VM。与之前一样，我们可以去检查历史日志：
- en: '![Checking the history log for nginx](img/B15455_07_08.jpg)'
  id: totrans-151
  prefs: []
  type: TYPE_IMG
  zh: '![检查nginx的历史日志](img/B15455_07_08.jpg)'
- en: 'Figure 7.8: Checking the history log'
  id: totrans-152
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图7.8：检查历史日志
- en: 'The log entry clearly shows that `apt install –y nginx firewalld` has been
    executed. Since we are looking at the apt history, we will not be able to confirm
    whether the firewalld HTTP rule was added. To confirm that, you can run `firewall-cmd
    –list-services`:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 日志条目清楚地显示了`apt install –y nginx firewalld`已被执行。由于我们正在查看apt历史记录，我们将无法确认是否添加了firewalld
    HTTP规则。要确认这一点，您可以运行`firewall-cmd –list-services`：
- en: '![Verifying firewalld rule](img/B15455_07_09.jpg)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
  zh: '![验证firewalld规则](img/B15455_07_09.jpg)'
- en: 'Figure 7.9: Checking whether the firewalld HTTP rule is added'
  id: totrans-155
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图7.9：检查是否添加了firewalld HTTP规则
- en: Scripts can be compressed or uploaded to a storage blob if you want.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 如果需要，脚本可以被压缩或上传到存储blob中。
- en: 'Of course, you can use the Azure CLI to make the initial configuration. In
    that scenario, you have to provide a JSON file similar to this one:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，您可以使用Azure CLI进行初始配置。在这种情况下，您必须提供类似于此的JSON文件：
- en: '[PRE12]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Then, execute the following `az` command:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，执行以下`az`命令：
- en: '[PRE13]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Note
  id: totrans-161
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: The JSON file can be included in an ARM template.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: JSON文件可以包含在ARM模板中。
- en: If you are using PowerShell or the Azure CLI for debugging purposes, the `/var/log/azure/custom-script`
    directory contains the log of your actions.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您正在使用PowerShell或Azure CLI进行调试目的，`/var/log/azure/custom-script`目录包含您的操作日志。
- en: Initial Configuration with cloud-init
  id: totrans-164
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用cloud-init进行初始配置
- en: A problem with the custom VM extension is that scripts can be very distribution-specific.
    You can already see that in the examples used. If you use different distributions,
    you'll need multiple scripts or you'll have to include distribution checks.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 自定义VM扩展的问题在于脚本可能非常特定于发行版。您已经可以在使用的示例中看到这一点。如果使用不同的发行版，您将需要多个脚本，或者您将需要包含发行版检查。
- en: Another way to do some initial configuration after the deployment of your VM
    is by using cloud-init.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 在部署VM后进行一些初始配置的另一种方法是使用cloud-init。
- en: cloud-init is a Canonical project that was created to provide a cloud solution
    and a Linux-distribution-agnostic approach for customizing cloud images. In Azure,
    it can be used with images to prepare the operating system during the first boot,
    or while creating the VM.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: cloud-init是一个由Canonical创建的项目，旨在为定制云映像提供云解决方案和Linux发行版不可知的方法。在Azure中，它可以与映像一起使用，以在第一次引导期间或创建VM时准备操作系统。
- en: Not every Microsoft-endorsed Linux distribution is supported; Debian and SUSE
    are not supported at all and it always takes some time before the latest version
    of a distribution can be used.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 并非所有得到Microsoft认可的Linux发行版都受支持；Debian和SUSE根本不受支持，而且在最新版本的发行版可以使用之前通常需要一些时间。
- en: cloud-init can be used to run Linux commands and create files. There are modules
    available in cloud-init to configure the system, for instance, to install software
    or do some user and group management. If a module is available, then it's the
    best way to do it. It is not only easier (the hard work is done for you), but
    it's also distribution agnostic.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: cloud-init可用于运行Linux命令和创建文件。cloud-init中有可用的模块来配置系统，例如安装软件或进行一些用户和组管理。如果有可用的模块，那么这是最好的方法。它不仅更容易（为您完成了艰苦的工作），而且还与发行版无关。
- en: 'cloud-init uses YAML; please be aware that indentation is important! The purpose
    of the script is to install the `npm`, `nodejs`, and `nginx` packages, then configure
    nginx, and finally, display a message, `Hello World from host $hostname`, where
    `$hostname` is the name of the VM. To start with, let''s create a YAML file with
    the following content, and name it `cloudinit.yml`:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: cloud-init使用YAML；请注意缩进很重要！脚本的目的是安装`npm`，`nodejs`和`nginx`软件包，然后配置nginx，最后显示消息`Hello
    World from host $hostname`，其中`$hostname`是VM的名称。首先，让我们创建一个YAML文件，内容如下，并将其命名为`cloudinit.yml`：
- en: '[PRE14]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'If you look at this configuration file, you can use some of the following modules
    in action:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您查看此配置文件，您可以看到以下模块的一些使用情况：
- en: '`users` and `groups`: User management'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`users`和`groups`：用户管理'
- en: '`packages` and `package_upgrade`: Software management'
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`packages`和`package_upgrade`：软件管理'
- en: '`write_files`: File creation'
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`write_files`：文件创建'
- en: '`runcmd`: Run commands that are not possible with modules'
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`runcmd`：运行模块无法实现的命令'
- en: 'You can also create a VM:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以创建一个VM：
- en: '[PRE15]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: After deployment, it will take some time before everything is done. Logging
    is done in the VM in the `/var/log/cloud-init.log` and `/var/log/cloud-init-output.log`
    files.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 部署后，需要一些时间才能完成所有工作。日志记录在VM的`/var/log/cloud-init.log`和`/var/log/cloud-init-output.log`文件中。
- en: 'Change the network security group rules to permit traffic on port `80`. After
    that, open your browser to the IP address of the VM. If everything is OK, it will
    show the following: `Hello World from host ubuntu-web!`'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 更改网络安全组规则以允许端口`80`上的流量。之后，打开浏览器到VM的IP地址。如果一切正常，它将显示以下内容：`Hello World from host
    ubuntu-web!`
- en: Note
  id: totrans-181
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: There is no support for cloud-init in the Az cmdlets.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: Az cmdlets不支持cloud-init。
- en: Vagrant
  id: totrans-183
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Vagrant
- en: 'Until now, we used solutions provided by Microsoft; maybe we should call them
    native solutions. That''s not the only way to deploy your workload in Azure. Many
    vendors have created solutions to automate deployments in Azure. In this section,
    we want to cover a solution from a company called HashiCorp ([https://www.hashicorp.com](https://www.hashicorp.com)).
    Later on in this chapter, we''ll cover another product from this company: Packer.
    There are several reasons why we have chosen these products:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们使用了Microsoft提供的解决方案；也许我们应该称它们为本地解决方案。这不是在Azure中部署工作负载的唯一方法。许多供应商已经创建了在Azure中自动化部署的解决方案。在本节中，我们想介绍来自名为HashiCorp的公司的解决方案（[https://www.hashicorp.com](https://www.hashicorp.com)）。在本章的后面，我们将介绍该公司的另一款产品：Packer。我们选择这些产品有几个原因：
- en: The products are very popular and well-known.
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这些产品非常受欢迎和知名。
- en: There is an excellent relationship between Microsoft and HashiCorp; they work
    very hard together to implement more and more features.
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Microsoft和HashiCorp之间有着良好的关系；他们一起努力实现越来越多的功能。
- en: 'And the most important reason: HashiCorp has different products that you can
    use for different implementation scenarios. This will make you think again about
    what method you want to choose in different use cases.'
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 而且最重要的原因是：HashiCorp有不同的产品，可以用于不同的实施场景。这将让您再次考虑在不同的用例中选择什么方法。
- en: Vagrant is a tool you can use for deployment if you are a developer. It helps
    you to set up an environment in a standardized way that you can redeploy over
    and over again.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: Vagrant是开发人员可以用来部署的工具。它可以帮助您以标准化的方式设置环境，以便您可以一遍又一遍地重新部署。
- en: Installing and Configuring Vagrant
  id: totrans-189
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装和配置Vagrant
- en: 'Vagrant is available for several Linux distributions, Windows, and macOS and
    can be downloaded from [https://www.vagrantup.com/downloads.html](https://www.vagrantup.com/downloads.html):'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: Vagrant适用于多个Linux发行版、Windows和macOS，并可从[https://www.vagrantup.com/downloads.html](https://www.vagrantup.com/downloads.html)下载：
- en: 'To install the software in Ubuntu, use the following commands:'
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要在Ubuntu中安装软件，请使用以下命令：
- en: '[PRE16]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'In RHEL/CentOS, use the following command:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 在RHEL/CentOS中，使用以下命令：
- en: '[PRE17]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: If you deploy it on a separate VM or workstation, make sure that you install
    the Azure CLI as well.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您将其部署在单独的VM或工作站上，请确保您也安装了Azure CLI。
- en: 'Log in to Azure:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 登录到Azure：
- en: '[PRE18]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Create a service principal account that Vagrant can use to authenticate:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个服务主体帐户，Vagrant可以用来进行身份验证：
- en: '[PRE19]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: From the output, you need the `appID`, also known as the **Client ID**, and
    the password, which is the same as the **Client Secret**.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 从输出中，您需要`appID`，也称为**客户端ID**，以及密码，它与**客户端密钥**相同。
- en: 'Execute the following command to get your tenant ID and subscription ID:'
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行以下命令以获取您的租户ID和订阅ID：
- en: '[PRE20]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: In the output of this command, you can see your tenant ID and your subscription
    ID.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 在此命令的输出中，您可以看到您的租户ID和订阅ID。
- en: 'Create a file with the following content and save it to `~/.azure/vagrant.sh`:'
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个具有以下内容的文件，并将其保存到`~/.azure/vagrant.sh`：
- en: '[PRE21]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'These variables must be exported before you can use Vagrant. In macOS and Linux,
    you can do that by executing the following command:'
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在使用Vagrant之前，必须导出这些变量。在macOS和Linux中，您可以通过执行以下命令来实现：
- en: '[PRE22]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'An SSH key pair must be available. If this has not already been done, create
    a key pair with this command:'
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 必须有一个SSH密钥对可用。如果尚未完成此操作，请使用此命令创建密钥对：
- en: '[PRE23]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'The last step involves the installation of the Azure plugin for Vagrant:'
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后一步涉及安装Vagrant的Azure插件：
- en: '[PRE24]'
  id: totrans-211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Verify the installation:'
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证安装：
- en: '[PRE25]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '![Verifying the vagrant installation using the version command](img/B15455_07_10.jpg)'
  id: totrans-214
  prefs: []
  type: TYPE_IMG
  zh: '![使用版本命令验证vagrant安装](img/B15455_07_10.jpg)'
- en: 'Figure 7.10: Verifying the vagrant installation'
  id: totrans-215
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图7.10：验证vagrant安装
- en: Now that we have confirmed Vagrant is up and running, let's go ahead and deploy
    a VM using Vagrant.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经确认Vagrant已经启动运行，让我们继续使用Vagrant部署一个VM。
- en: Deploying a VM with Vagrant
  id: totrans-217
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用Vagrant部署虚拟机
- en: 'To deploy a VM with Vagrant, you''ll need to create a new working directory
    where we will create the `Vagrantfile`:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用Vagrant部署虚拟机，你需要创建一个新的工作目录，在那里我们将创建`Vagrantfile`：
- en: '[PRE26]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'The configuration file starts with a statement that we need the Azure plugin
    for Vagrant that we installed earlier. After that, the configuration of the VM
    starts. To be able to provide a workload with Vagrant, a dummy VM is needed. It''s
    almost an empty file: it only registers Azure as a provider. To get this dummy
    VM, execute the following command:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 配置文件以一个声明开始，我们需要之前安装的Vagrant的Azure插件。之后，VM的配置开始。为了能够使用Vagrant提供工作负载，需要一个虚拟box。它几乎是一个空文件：只注册Azure作为提供者。要获得这个虚拟box，执行以下命令：
- en: '[PRE27]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Normally, a lot of the options, for example, `vm_image_urn`, will be embedded
    in a box file and you just have to provide minimal options in the `Vagrantfile`.
    Since we''re using a dummy box, there are no pre-configured defaults. `az.vm_image_urn`
    is the actual image offered by Azure with the following syntax:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，很多选项，比如`vm_image_urn`，将被嵌入到一个box文件中，你只需要在`Vagrantfile`中提供最少的选项。由于我们使用的是一个虚拟box，没有预先配置的默认值。`az.vm_image_urn`是Azure提供的实际镜像，语法如下：
- en: '[PRE28]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Besides using standard images, it is possible to use custom **virtual hard
    disk** (**VHD**) files using these directives:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 除了使用标准镜像，还可以使用自定义**虚拟硬盘**（**VHD**）文件，使用这些指令：
- en: '`vm_vhd_uri`'
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`vm_vhd_uri`'
- en: '`vm_operating_system`'
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`vm_operating_system`'
- en: '`vm_vhd_storage_account_id`'
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`vm_vhd_storage_account_id`'
- en: Later in this chapter, we will discuss these custom VHD files in more detail.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的后面，我们将更详细地讨论这些自定义VHD文件。
- en: 'Another important value is the name of the VM; it''s also used as a DNS prefix.
    This must be unique! Otherwise, you''ll get this error: `DNS record <name>.<location>.cloudapp.azure.com
    is already used by another public IP`.'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个重要的值是虚拟机的名称；它也被用作DNS前缀。这必须是唯一的！否则，你会得到这个错误：`DNS记录<name>.<location>.cloudapp.azure.com已经被另一个公共IP使用了`。
- en: 'Deploy the Vagrant box, the VM:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 部署Vagrant box，虚拟机：
- en: '[PRE29]'
  id: totrans-231
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Here is what the output should look like:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 输出应该是这样的：
- en: '![Deploying the vagrant box using the up command](img/B15455_07_11.jpg)'
  id: totrans-233
  prefs: []
  type: TYPE_IMG
  zh: '![使用up命令部署vagrant box](img/B15455_07_11.jpg)'
- en: 'Figure 7.11: Deploying the vagrant box'
  id: totrans-234
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图7.11：部署vagrant box
- en: 'When the machine is ready to use, you can log in using this command:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 当机器准备好使用时，你可以使用这个命令登录：
- en: '[PRE30]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: The contents of your work directory are copied to `/vagrant` in the VM. This
    can be a very nice way to have your files available in the VM.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 你的工作目录的内容被复制到VM中的`/vagrant`。这可以是一个非常好的方式，让你的文件在VM中可用。
- en: 'Clean up your work with this command:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这个命令清理你的工作：
- en: '[PRE31]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Note
  id: totrans-240
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: It's possible to create multi-machine boxes as well.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 也可以创建多台虚拟机。
- en: Vagrant Provisioners
  id: totrans-242
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Vagrant Provisioners
- en: Providing an easy way to deploy a VM is not the most important feature of Vagrant.
    The main reason to use Vagrant is to have a complete environment up and running;
    after deployment, VMs need configuration. There are provisioners to do the after-work.
    The purpose of provisioners is to make configuration changes, automatically install
    packages, and more. You can use the shell provisioner, which helps to upload and
    execute scripts in the guest VM, and the file provisioner to run commands and
    copy files to the VM.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 提供一种简单的方式来部署虚拟机并不是Vagrant最重要的特性。使用Vagrant的主要原因是让一个完整的环境运行起来；部署后，虚拟机需要配置。有provisioners来完成后续工作。provisioners的目的是进行配置更改，自动安装软件包等。你可以使用shell
    provisioner，在客户端VM中上传和执行脚本，以及文件provisioner来运行命令并将文件复制到VM中。
- en: Another possibility is to use Vagrant provisioners for orchestration tools,
    such as Ansible and Salt. The next chapter will discuss those tools. In this chapter,
    together with the provisioners' documentation on the Vagrant website ([https://www.vagrantup.com/docs/provisioning/](https://www.vagrantup.com/docs/provisioning/)),
    we will configure the shell provisioners and the file provisioner. Let's go ahead
    start configuring the provisioners by adding the following code block to the `Vagrantfile`.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个可能性是使用Vagrant provisioners来进行编排工具，比如Ansible和Salt。下一章将讨论这些工具。在本章中，连同Vagrant网站上的provisioners文档（[https://www.vagrantup.com/docs/provisioning/](https://www.vagrantup.com/docs/provisioning/)），我们将配置shell
    provisioners和文件provisioner。让我们继续通过将以下代码块添加到`Vagrantfile`来配置provisioners。
- en: 'Add this to the bottom of the `Vagrantfile`:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 将这段代码添加到`Vagrantfile`的底部：
- en: '[PRE32]'
  id: totrans-246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'We have referenced a file, `provision.sh`, in the shell provisioner. So let''s
    create a short `provision.sh` script with some simple commands:'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在shell provisioner中引用了一个文件`provision.sh`。所以让我们创建一个简短的`provision.sh`脚本，包含一些简单的命令：
- en: '[PRE33]'
  id: totrans-248
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Deploy the VM again, and you can see that Vagrant has taken the SSH key we
    created and has started the provisioning:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 再次部署VM，你会看到Vagrant已经接受了我们创建的SSH密钥，并开始了配置：
- en: '![Deploying the VM again to make Vagrant take the SSH key and start the provisioning](img/B15455_07_12.jpg)'
  id: totrans-250
  prefs: []
  type: TYPE_IMG
  zh: '![再次部署VM以使Vagrant接受SSH密钥并开始配置](img/B15455_07_12.jpg)'
- en: 'Figure 7.12: Vagrant has started provisioning'
  id: totrans-251
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图7.12：Vagrant已开始配置
- en: 'Execute this code to verify whether the `/tmp/done` directory has been created
    in the VM as we instructed in the `provision.sh` file:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 执行这段代码来验证在VM中是否已经创建了`/tmp/done`目录，就像我们在`provision.sh`文件中指示的那样：
- en: '[PRE34]'
  id: totrans-253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Packer
  id: totrans-254
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Packer
- en: It's important for a developer, especially if there are many people working
    on the same application, to have a standardized environment. If you are not using
    container technology (refer to *Chapter 9*, *Container Virtualization in Azure*,
    and *Chapter 10*, *Working with Azure Kubernetes Service*, to find out more about
    this technology), Vagrant is a great tool that helps developers with this and
    manages the life cycle of a VM to get things running very quickly in a reproducible
    way. It provisions the setup based on image offerings or a custom VHD. It's everything
    you need if you want to develop your application in the cloud.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 对于开发人员来说，尤其是如果有许多人在同一应用上工作，拥有标准化的环境非常重要。如果您不使用容器技术（请参阅*第9章*，*Azure中的容器虚拟化*，以及*第10章*，*使用Azure
    Kubernetes服务*，了解有关此技术的更多信息），Vagrant是一个很好的工具，它可以帮助开发人员管理虚拟机的生命周期，以便以可重复的方式快速启动应用程序。它根据镜像提供或自定义VHD进行配置。如果您想在云中开发应用程序，这就是您所需要的一切。
- en: But if you want more complex environments, building your own images, multi-machine
    deployments, cross-cloud environments, and so on, it's not completely impossible,
    but as soon as you try, you will see that Vagrant is not made for those scenarios.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，如果您想要更复杂的环境、构建自己的镜像、多机部署、跨云环境等，这并非完全不可能，但一旦尝试，您会发现Vagrant并不适用于这些场景。
- en: 'This is where another HashiCorp product comes in handy: Packer. In this section,
    we''re going to use Packer with a very similar configuration to the one we used
    before with Vagrant.'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是另一个HashiCorp产品Packer派上用场的地方。在本节中，我们将使用与之前与Vagrant相似的配置来使用Packer。
- en: Installing and Configuring Packer
  id: totrans-258
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装和配置Packer
- en: Packer is available for macOS, Windows, several Linux distributions, and FreeBSD.
    Packages are available to download at [https://www.packer.io/downloads.html](https://www.packer.io/downloads.html).
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: Packer可用于macOS、Windows、多个Linux发行版和FreeBSD。可在[https://www.packer.io/downloads.html](https://www.packer.io/downloads.html)下载软件包。
- en: 'Download a package, unzip it, and you''re ready to go. In Linux, it''s a good
    idea to create a `~/.bin` directory and unzip it there:'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 下载软件包，解压缩，然后就可以使用了。在Linux中，最好创建一个`~/.bin`目录并在那里解压缩：
- en: '[PRE35]'
  id: totrans-261
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Log out and log in again. Almost every distribution adds the `~/bin` directory
    to the `PATH` variable as soon it's available, but you have to log out and log
    in again.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 注销并重新登录。几乎每个发行版都会在`~/bin`目录可用时将其添加到`PATH`变量中，但您必须注销并重新登录。
- en: 'Check the `PATH` variable by executing `$PATH`. If you are not able to see
    the `bin` folder in your home directory added to the path, execute the following:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 通过执行`$PATH`检查`PATH`变量。如果您无法看到`bin`文件夹添加到路径中，请执行以下操作：
- en: '[PRE36]'
  id: totrans-264
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Verify the installation:'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 验证安装：
- en: '[PRE37]'
  id: totrans-266
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'If the installation was successful, the command will return the version of
    Packer, as you can see in this screenshot:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 如果安装成功，该命令将返回Packer的版本，如图中所示：
- en: '![Verifying packer installation through Packer version ](img/B15455_07_13.jpg)'
  id: totrans-268
  prefs: []
  type: TYPE_IMG
  zh: '![通过Packer版本验证Packer安装](img/B15455_07_13.jpg)'
- en: 'Figure 7.13: Verifying packer installation through Packer version'
  id: totrans-269
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图7.13：通过Packer版本验证Packer安装
- en: 'For the configuration of Packer, we''ll need the same information as for Vagrant:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Packer的配置，我们将需要与Vagrant相同的信息：
- en: Azure tenant ID (`az account show`)
  id: totrans-271
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure租户ID（`az account show`）
- en: Azure subscription ID (`az account show`)
  id: totrans-272
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure订阅ID（`az account show`）
- en: The ID of the service principal account (if you want to use the same one as
    in Vagrant, use the `az app list --display-name vagrant` command)
  id: totrans-273
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务主体帐户的ID（如果要使用与Vagrant相同的帐户，请使用`az app list --display-name vagrant`命令）
- en: The secret key to this account (if needed, you can use the `az ad sp reset-credentials`
    command to generate a new one)
  id: totrans-274
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 此帐户的秘密密钥（如果需要，可以使用`az ad sp reset-credentials`命令生成新的密钥）
- en: The existing resource group in the correct location; in this example, we are
    using `LinuxOnAzure` as the resource group name and `West Europe` as the location
    (created with the `az group create --location "West Europe" --name "LinuxOnAzure"`
    command)
  id: totrans-275
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在正确的位置中存在的资源组；在此示例中，我们使用`LinuxOnAzure`作为资源组名称，`West Europe`作为位置（使用`az group
    create --location "West Europe" --name "LinuxOnAzure"`命令创建）
- en: 'Create a file (for instance, `/packer/ubuntu.json`) with the following content:'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个文件（例如`/packer/ubuntu.json`），其中包含以下内容：
- en: '[PRE38]'
  id: totrans-277
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Validate the syntax:'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 验证语法：
- en: '[PRE39]'
  id: totrans-279
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'Then, build the image as follows:'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，按以下方式构建镜像：
- en: '[PRE40]'
  id: totrans-281
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: '![Building the image using the Packer build command](img/B15455_07_14.jpg)'
  id: totrans-282
  prefs: []
  type: TYPE_IMG
  zh: '![使用Packer构建命令构建镜像](img/B15455_07_14.jpg)'
- en: 'Figure 7.14: Building the image using Packer build command'
  id: totrans-283
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图7.14：使用Packer构建命令构建镜像
- en: It takes a few minutes for Packer to build the VM, run the provisioners, and
    clean up the deployment.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: Packer需要一些时间来构建虚拟机，运行配置程序并清理部署。
- en: 'Once the build is complete, Packer will give you a summary of what was built,
    such as the resource group, where the VM was deployed, the name of the image,
    and the location:'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 构建完成后，Packer将为您提供构建的摘要，例如资源组、虚拟机部署位置、镜像名称和位置：
- en: '![Image summary provided by Packer, once build is complete](img/B15455_07_15.jpg)'
  id: totrans-286
  prefs: []
  type: TYPE_IMG
  zh: '![Packer提供的图像摘要，构建完成后](img/B15455_07_15.jpg)'
- en: 'Figure 7.15: Image summary'
  id: totrans-287
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图7.15：镜像摘要
- en: 'The build will create an image but not a running VM. From the image Packer
    created, you can deploy a machine using this command:'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 构建将创建一个镜像，但不会创建运行中的虚拟机。从Packer创建的镜像中，您可以使用以下命令部署虚拟机：
- en: '[PRE41]'
  id: totrans-289
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'To clean up the environment and delete the image created by Packer, execute
    the following command:'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 要清理环境并删除Packer创建的镜像，请执行以下命令：
- en: '[PRE42]'
  id: totrans-291
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: The JSON file that I provided earlier in this chapter is sufficient to create
    an image. It is very similar to what we did with Vagrant, but to make it into
    a deployable image, we have to generalize the VM, which means allowing it to be
    imaged for multiple deployments. Adding `/usr/sbin/waagent -force -deprovision+user
    & export HISTSIZE=0 && sync` to the code will generalize the VM. Don't worry about
    this code – you will see it again when we generalize the VM via the Azure CLI
    in the next section.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 我在本章前面提供的JSON文件足以创建镜像。这与我们在Vagrant中所做的非常相似，但为了将其转换为可部署的镜像，我们必须将VM进行泛化，这意味着允许它为多个部署进行镜像化。将`/usr/sbin/waagent
    -force -deprovision+user & export HISTSIZE=0 && sync`添加到代码中将泛化VM。不要担心这段代码-在下一节中，当我们通过Azure
    CLI泛化VM时，您将再次看到它。
- en: 'Locate the following code:'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 找到以下代码：
- en: '[PRE43]'
  id: totrans-294
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'This needs to be replaced with the following code:'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 这需要用以下代码替换：
- en: '[PRE44]'
  id: totrans-296
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: '`execute_command` is a command used to execute the script as the correct user.'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: '`execute_command`是用于以正确用户身份执行脚本的命令。'
- en: Validate the template using the `packer validate` command, as we did before,
    to avoid any errors and build the image again.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`packer validate`命令验证模板，以避免任何错误并重新构建镜像。
- en: So far, we have created the image using Packer, but this can also be done using
    the Azure CLI and Powershell. The next section is all about this.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经使用Packer创建了镜像，但也可以使用Azure CLI和Powershell来完成。接下来的部分将详细介绍这一点。
- en: Custom Virtual Machines and VHDs
  id: totrans-300
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自定义虚拟机和VHD
- en: In the previous section, we used standard VM offerings in Azure and used two
    different methods to do some configuration work afterward. However, as stated
    before, there are reasons why a default image might not be the solution for you.
    Let's summarize the reasons one more time.
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一节中，我们在Azure中使用了标准VM提供，并使用了两种不同的方法进行了一些配置工作。然而，正如之前所述，存在一些原因使得默认镜像可能不适合您。让我们再次总结一下原因。
- en: 'The native image offerings by Azure are a good starting point to deploy VMs.
    Some of the benefits of using native images are as follows:'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: Azure的本机镜像提供了部署VM的良好起点。使用本机镜像的一些好处如下：
- en: Created and supported by Linux distribution vendors or a trusted partner
  id: totrans-303
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由Linux发行版供应商或可信赖的合作伙伴创建和支持
- en: Fast to deploy, both manually and orchestrated, and, of course, you can customize
    them afterward
  id: totrans-304
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 快速部署，无论是手动还是编排，当然，您之后可以自定义它们
- en: Easy-to-extend functionality and options with Azure extensions
  id: totrans-305
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Azure扩展功能和选项轻松扩展
- en: 'If you are going with the native offerings there are some disadvantages or,
    in other words, some drawbacks:'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您选择使用本机提供的服务，那么也会有一些缺点或者说一些不足之处：
- en: If you want more hardening than the standard image, then you have to rely on
    hardened image versions from the Marketplace, which is expensive for some.
  id: totrans-307
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您需要比标准镜像更加安全的镜像，那么您必须依赖于市场上昂贵的加固镜像版本。
- en: The standard image is not compliant with, for example, company standards, especially
    when it comes to partitioning.
  id: totrans-308
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 标准镜像不符合公司标准，尤其是在分区方面。
- en: The standard image is not optimized for a certain application.
  id: totrans-309
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 标准镜像并非针对特定应用进行了优化。
- en: Some Linux distributions aren't supported, such as Alpine and ArchLinux.
  id: totrans-310
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一些Linux发行版不受支持，例如Alpine和ArchLinux。
- en: 'Questions about reproducible environments: how long is a certain image version
    available?'
  id: totrans-311
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关于可重现环境的问题：某个镜像版本可用多长时间？
- en: So we need custom images, with which we can customize the image and mitigate
    the issues or drawbacks. We are not suggesting that the native offers are not
    secure or can't accomplish the task, but in an enterprise environment, there are
    scenarios such as bring-your-own-subscription for RHEL/SLES VMs and third-party
    **Independent Software Vendor** (**ISV**) software packaged as images with which
    you have to go with the custom images. Let's go ahead and see how we can use custom
    images in Azure.
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们需要自定义镜像，以便我们可以自定义镜像并减轻问题或不足之处。我们并不是在暗示本机提供不安全或无法完成任务，但在企业环境中，存在一些情况，例如为RHEL/SLES
    VMs提供自己的订阅和作为镜像打包的第三方**独立软件供应商**（**ISV**）软件，您必须使用自定义镜像。让我们继续看看如何在Azure中使用自定义镜像。
- en: Creating a Managed Image
  id: totrans-313
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建托管镜像
- en: In the previous section, we investigated Packer. A VM was created, and after
    that, it was transformed into an image. This image can be used to deploy a new
    VM. This technique is also called **capturing a VM image**.
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一节中，我们调查了Packer。创建了一个VM，然后将其转换为镜像。此镜像可用于部署新的VM。这种技术也称为**捕获VM镜像**。
- en: 'Let''s find out whether we can do it step by step the manual way using the
    Azure CLI:'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看是否可以逐步使用Azure CLI手动进行操作：
- en: 'Create a resource group:'
  id: totrans-316
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建资源组：
- en: '[PRE45]'
  id: totrans-317
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'Create a VM:'
  id: totrans-318
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建VM：
- en: '[PRE46]'
  id: totrans-319
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'Log in to the VM and deprovision it using the Azure VM Agent. It generalizes
    the VM by removing user-specific data:'
  id: totrans-320
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到VM并使用Azure VM Agent取消配置它。它通过删除特定于用户的数据来泛化VM：
- en: '[PRE47]'
  id: totrans-321
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'Once you execute the command, the output will show warnings about the data
    that is going to be deleted. You can proceed by entering `y`, as shown here:'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 执行命令后，输出将显示有关即将删除的数据的警告。您可以输入`y`继续，如下所示：
- en: '![ Deprovisioning the VM using VM Agent](img/B15455_07_16.jpg)'
  id: totrans-323
  prefs: []
  type: TYPE_IMG
  zh: '![使用VM Agent取消配置VM](img/B15455_07_16.jpg)'
- en: 'Figure 7.16: Deprovisioning the VM'
  id: totrans-324
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图7.16：取消配置VM
- en: Type `exit` to leave the SSH session.
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 输入`exit`退出SSH会话。
- en: 'Deallocate the VM:'
  id: totrans-326
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 释放VM：
- en: '[PRE48]'
  id: totrans-327
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'Mark it as being generalized. This means allowing it to be imaged for multiple
    deployments:'
  id: totrans-328
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将其标记为泛化。这意味着允许它为多个部署进行镜像化：
- en: '[PRE49]'
  id: totrans-329
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Create an image from the VM in this resource group:'
  id: totrans-330
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从此资源组中的VM创建镜像：
- en: '[PRE50]'
  id: totrans-331
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'Verify the result:'
  id: totrans-332
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证结果：
- en: '[PRE51]'
  id: totrans-333
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'The output will show the list of images in a table format:'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 输出将以表格格式显示镜像列表：
- en: '![List of Azure images in tablular format](img/B15455_07_17.jpg)'
  id: totrans-335
  prefs: []
  type: TYPE_IMG
  zh: '![以表格格式列出的Azure镜像列表](img/B15455_07_17.jpg)'
- en: 'Figure 7.17: Azure image list'
  id: totrans-336
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图7.17：Azure镜像列表
- en: 'You can deploy a new VM with this image:'
  id: totrans-337
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以使用此镜像部署新的VM：
- en: '[PRE52]'
  id: totrans-338
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'If you are in PowerShell, this is also possible. Let''s go very quickly through
    the first step. The process is very similar; the only difference is that we are
    using PowerShell cmdlets:'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在PowerShell中，这也是可能的。让我们非常快速地通过第一步。流程非常相似；唯一的区别是我们使用PowerShell cmdlet：
- en: '[PRE53]'
  id: totrans-340
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'PowerShell may prompt you to enter credentials. Proceed with entering the credentials
    to access your VM. After that, we will proceed with the deallocation of the VM:'
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: PowerShell可能提示您输入凭据。继续输入凭据以访问您的VM。之后，我们将继续对VM进行去配置：
- en: '[PRE54]'
  id: totrans-342
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'As we did before, now we have to mark the VM as generalized:'
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 与之前一样，现在我们必须将VM标记为通用化：
- en: '[PRE55]'
  id: totrans-344
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'Let''s capture the VM information and save it to a variable, because we will
    need it to create the image''s configuration:'
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们捕获VM信息并将其保存到一个变量中，因为我们将需要它来创建图像的配置：
- en: '[PRE56]'
  id: totrans-346
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'Now let''s create the image''s configuration:'
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们创建图像的配置：
- en: '[PRE57]'
  id: totrans-348
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'Since we have the configuration stored in `$image`, use that to create the
    image:'
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 因为我们在`$image`中存储了配置，所以使用它来创建图像：
- en: '[PRE58]'
  id: totrans-350
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'Verify that the image has been created:'
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 验证图像是否已创建：
- en: '[PRE59]'
  id: totrans-352
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'Running the preceding command will give you an output similar to the following,
    with the details of the image you created:'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 运行上述命令将为您提供类似以下的输出，其中包含您创建的图像的详细信息：
- en: '![Summary of the image details obtained using Get-AzImage –ImageName command](img/B15455_07_18.jpg)'
  id: totrans-354
  prefs: []
  type: TYPE_IMG
  zh: '![使用Get-AzImage –ImageName命令获取的图像详细信息摘要](img/B15455_07_18.jpg)'
- en: 'Figure 7.18: Fetching image details'
  id: totrans-355
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图7.18：获取图像详细信息
- en: 'If you want to create a VM using the image we just created, execute the following
    command:'
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想使用刚刚创建的图像创建VM，请执行以下命令：
- en: '[PRE60]'
  id: totrans-357
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: To summarize what we did, we created a VM, generalized it, and created an image
    that can be further used to deploy multiple VMs. There is also an alternative
    method to create multiple VMs from a reference image, which is using ''snaphots''.
    This will be covered in the next section.
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 总结我们所做的，我们创建了一个VM，通用化了它，并创建了一个可以进一步用于部署多个VM的图像。还有一种从参考图像创建多个VM的替代方法，即使用''快照''。这将在下一节中介绍。
- en: An Alternative Method Using Snapshots
  id: totrans-359
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用快照的备用方法
- en: If you want to keep the original VM, you can create a VM image from a snapshot.
    A snapshot in Azure is actually a complete VM!
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想保留原始VM，可以从快照创建VM图像。Azure中的快照实际上是一个完整的VM！
- en: '**Using PowerShell**'
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: '**使用PowerShell**'
- en: 'Declare a variable, `$vm`, which will store the information about the VM we
    are going to take and create a snapshot:'
  id: totrans-362
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 声明一个变量`$vm`，它将存储有关我们将要获取和创建快照的VM的信息：
- en: '[PRE61]'
  id: totrans-363
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'As we need the snapshot ID for a later step, we will reinitialize the snapshot
    variable:'
  id: totrans-364
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 因为我们需要快照ID用于后续步骤，所以我们将重新初始化快照变量：
- en: '[PRE62]'
  id: totrans-365
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: The next step involves creating the image configuration from the snapshot.
  id: totrans-366
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一步涉及从快照创建图像配置。
- en: '[PRE63]'
  id: totrans-367
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'Finally, create the image:'
  id: totrans-368
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，创建图像：
- en: '[PRE64]'
  id: totrans-369
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: '**Using the Azure CLI**'
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: '**使用Azure CLI**'
- en: 'In the Azure CLI, things are easier; just get the ID of the snapshot and convert
    it to a disk:'
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 在Azure CLI中，事情更容易；只需获取快照的ID并将其转换为磁盘：
- en: 'Using the Azure CLI, create a snapshot:'
  id: totrans-372
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用Azure CLI创建快照：
- en: '[PRE65]'
  id: totrans-373
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: 'Create the image:'
  id: totrans-374
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建图像：
- en: '[PRE66]'
  id: totrans-375
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: Don't forget to generalize the VM before you snapshot it. If you don't want
    to do that, create a disk from the snapshot and use that as a disk parameter with
    the `--attach-os-disk` command in the Azure CLI, or `Set-AzVMOSDisk` in PowerShell.
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 在对VM进行快照之前不要忘记通用化VM。如果您不想这样做，可以从快照创建磁盘，并将其用作Azure CLI中的`--attach-os-disk`命令的磁盘参数，或者在PowerShell中使用`Set-AzVMOSDisk`。
- en: Custom VHDs
  id: totrans-377
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 自定义VHD
- en: 'You can completely build your own image from scratch. In this scenario, you
    have to build your own VHD file. There are multiple ways to do this:'
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以完全从头开始构建自己的图像。在这种情况下，您必须构建自己的VHD文件。有多种方法可以做到这一点：
- en: Create a VM in Hyper-V or in VirtualBox, which is a free hypervisor available
    for Windows, Linux, and macOS. Both products support VHD natively.
  id: totrans-379
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Hyper-V或VirtualBox中创建一个VM，它是Windows、Linux和macOS可用的免费hypervisor。这两种产品都原生支持VHD。
- en: Create your VM in VMware Workstation or KVM and use it in Linux `qemu-img` to
    convert the image. For Windows, the Microsoft Virtual Machine Converter is available
    at [https://www.microsoft.com/en-us/download/details.aspx?id=42497](https://www.microsoft.com/en-us/download/details.aspx?id=42497).
    This includes a PowerShell cmdlet, `ConvertTo-MvmcVirtualHardDisk`, to make the
    conversion.
  id: totrans-380
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在VMware Workstation或KVM中创建您的VM，并在Linux `qemu-img`中使用它来转换图像。对于Windows，可以在[https://www.microsoft.com/en-us/download/details.aspx?id=42497](https://www.microsoft.com/en-us/download/details.aspx?id=42497)下载Microsoft
    Virtual Machine Converter。这包括一个PowerShell cmdlet，`ConvertTo-MvmcVirtualHardDisk`，用于进行转换。
- en: Note
  id: totrans-381
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: Azure only supports Type-1 VHD files and should have a virtual size aligned
    to 1 MB. At the time of writing this book, Type-2 is available in preview ([https://docs.microsoft.com/en-us/azure/virtual-machines/windows/generation-2](https://docs.microsoft.com/en-us/azure/virtual-machines/windows/generation-2)).
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: Azure仅支持Type-1 VHD文件，并且应该具有与1 MB对齐的虚拟大小。在撰写本书时，Type-2正在预览中（[https://docs.microsoft.com/en-us/azure/virtual-machines/windows/generation-2](https://docs.microsoft.com/en-us/azure/virtual-machines/windows/generation-2)）。
- en: Azure runs on Hyper-V. Linux requires certain kernel modules to run in Azure.
    If the VM was created outside of Hyper-V, the Linux installers may not include
    the drivers for Hyper-V in the initial ramdisk (`initrd` or `initramfs`), unless
    the VM detects that it's running on a Hyper-V environment.
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: Azure在Hyper-V上运行。Linux需要特定的内核模块才能在Azure中运行。如果VM是在Hyper-V之外创建的，Linux安装程序可能不包括Hyper-V驱动程序在初始ramdisk（`initrd`或`initramfs`）中，除非VM检测到它正在运行在Hyper-V环境中。
- en: When using a different virtualization system (such as VirtualBox or KVM) to
    prepare your Linux image, you may need to rebuild the `initrd` so that at least
    the `hv_vmbus` and `hv_storvsc` kernel modules are available on the initial ramdisk.
    This known issue is for systems based on the upstream Red Hat distribution, and
    possibly others.
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用不同的虚拟化系统（如VirtualBox或KVM）来准备您的Linux图像时，您可能需要重建`initrd`，以便至少`hv_vmbus`和`hv_storvsc`内核模块在初始ramdisk上可用。这个已知问题适用于基于上游Red
    Hat发行版的系统，可能也适用于其他系统。
- en: 'The mechanism for rebuilding the `initrd` or `initramfs` image may vary depending
    on the distribution. Consult your distribution''s documentation or support for
    the proper procedure. Here is an example of rebuilding the `initrd` by using the
    `mkinitrd` utility:'
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: 重建`initrd`或`initramfs`映像的机制可能因发行版而异。请查阅您发行版的文档或支持以获取正确的操作步骤。以下是使用`mkinitrd`实用程序重建`initrd`的示例：
- en: 'Back up the existing `initrd` image:'
  id: totrans-386
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 备份现有的`initrd`映像：
- en: '[PRE67]'
  id: totrans-387
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: 'Rebuild the `initrd` with the `hv_vmbus` and `hv_storvsc kernel` modules:'
  id: totrans-388
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`hv_vmbus`和`hv_storvsc内核`模块重建`initrd`：
- en: '[PRE68]'
  id: totrans-389
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: It's almost impossible to describe every available option for each Linux distribution
    and each hypervisor. In general, the things you need to do are listed here. It's
    very important that we follow the steps accurately, otherwise, this task cannot
    be accomplished. We strongly recommend following the Microsoft documentation for
    this ([https://docs.microsoft.com/en-us/azure/virtual-machines/linux/create-upload-generic](https://docs.microsoft.com/en-us/azure/virtual-machines/linux/create-upload-generic)).
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 几乎不可能描述每个Linux发行版和每个hypervisor的所有可用选项。总的来说，您需要做的事情在这里列出。非常重要的是我们要准确地按照步骤进行，否则无法完成此任务。我们强烈建议按照Microsoft的文档进行操作（[https://docs.microsoft.com/en-us/azure/virtual-machines/linux/create-upload-generic](https://docs.microsoft.com/en-us/azure/virtual-machines/linux/create-upload-generic)）。
- en: 'Modify the kernel boot line in GRUB or GRUB2 to include the following parameters
    so that all console messages are sent to the first serial port. These messages
    can help Azure Support to debug any issues:'
  id: totrans-391
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改GRUB或GRUB2中的内核引导行，以包括以下参数，以便所有控制台消息都发送到第一个串行端口。这些消息可以帮助Azure支持调试任何问题：
- en: '[PRE69]'
  id: totrans-392
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: 'Microsoft also recommends removing the following parameters, if they exist:'
  id: totrans-393
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Microsoft还建议删除以下参数（如果存在）：
- en: '[PRE70]'
  id: totrans-394
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: Install the Azure Linux Agent, because the agent is required for provisioning
    Linux images on Azure. You can install it using the `rpm` or `deb` file, or you
    can manually install it using the steps available in the Linux Agent Guide ([https://docs.microsoft.com/en-us/azure/virtual-machines/extensions/agent-linux](https://docs.microsoft.com/en-us/azure/virtual-machines/extensions/agent-linux)).
  id: totrans-395
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装Azure Linux代理，因为代理是在Azure上为Linux映像进行配置所必需的。您可以使用`rpm`或`deb`文件安装它，或者您可以按照Linux代理指南中提供的步骤手动安装它（[https://docs.microsoft.com/en-us/azure/virtual-machines/extensions/agent-linux](https://docs.microsoft.com/en-us/azure/virtual-machines/extensions/agent-linux)）。
- en: Make sure the OpenSSH server is installed and autostarts during boot.
  id: totrans-396
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保安装了OpenSSH服务器并在启动时自动启动。
- en: Don't create swap. You can enable it later if required, as we discussed in the
    previous chapter.
  id: totrans-397
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不要创建交换。如果需要，稍后可以启用它，就像我们在前一章中讨论的那样。
- en: Deprovision the VM as in the *Creating a Managed Image* section.
  id: totrans-398
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 取消配置VM，如*创建托管映像*部分所述。
- en: Shut down the VM, and your VHD is ready to be uploaded to the VM.
  id: totrans-399
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭VM，您的VHD已准备好上传到VM。
- en: For simplicity, we are going to skip the preceding steps and download the official
    image from Ubuntu's cloud image repository, because the most important part is
    the uploading of the image to Azure. Download the cloud image from [https://cloud-images.ubuntu.com/bionic/](https://cloud-images.ubuntu.com/bionic/).
    This web page contains all the versions of Bionic, and you can navigate through
    the directories and download the tar.gz file for Azure. The filename will be similar
    to `bionic-server-cloudimg-amd64-azure.vhd.tar.gz`; however, this name may vary
    a little depending upon the version you are looking at.
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: 为简单起见，我们将跳过前面的步骤，并从Ubuntu的云映像存储库下载官方映像，因为最重要的部分是将映像上传到Azure。从[https://cloud-images.ubuntu.com/bionic/](https://cloud-images.ubuntu.com/bionic/)下载云映像。此网页包含所有Bionic的版本，您可以浏览目录并下载Azure的tar.gz文件。文件名类似于`bionic-server-cloudimg-amd64-azure.vhd.tar.gz`；但是，这个名称可能会根据您查看的版本有所不同。
- en: 'Now we have to upload the VHD to Azure:'
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们必须将VHD上传到Azure：
- en: 'To start with, it''s a good idea to have a separate storage account for images,
    so let''s create a new storage account. Here, we are going with `Premium_LRS`,
    but if you wish, you can go for `Standard_LRS` as well to save some costs:'
  id: totrans-402
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，为映像准备一个单独的存储帐户是个好主意，所以让我们创建一个新的存储帐户。在这里，我们选择`Premium_LRS`，但如果您愿意，也可以选择`Standard_LRS`以节省一些成本：
- en: '[PRE71]'
  id: totrans-403
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: 'Save the output for later use. List the access keys:'
  id: totrans-404
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存输出以备后用。列出访问密钥：
- en: '[PRE72]'
  id: totrans-405
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: 'Save the output again. The next thing we need is a container to store the files:'
  id: totrans-406
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次保存输出。我们需要的下一步是创建一个容器来存储文件：
- en: '[PRE73]'
  id: totrans-407
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: 'Now you can upload the VHD:'
  id: totrans-408
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在您可以上传VHD：
- en: '[PRE74]'
  id: totrans-409
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: Note
  id: totrans-410
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: You can also upload the file using the Azure portal or PowerShell. Other methods
    are Azure Storage Explorer ([https://azure.microsoft.com/en-us/features/storage-explorer/](https://azure.microsoft.com/en-us/features/storage-explorer/))
    or the Azure VHD utils ([https://github.com/Microsoft/azure-vhd-utils](https://github.com/Microsoft/azure-vhd-utils)).
    The last one is amazingly fast!
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用Azure门户或PowerShell上传文件。其他方法包括Azure存储资源管理器（[https://azure.microsoft.com/en-us/features/storage-explorer/](https://azure.microsoft.com/en-us/features/storage-explorer/)）或Azure
    VHD工具（[https://github.com/Microsoft/azure-vhd-utils](https://github.com/Microsoft/azure-vhd-utils)）。最后一个方法速度非常快！
- en: 'Receive the blob URL:'
  id: totrans-412
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接收blob URL：
- en: '[PRE75]'
  id: totrans-413
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: 'It''s now possible to create a disk from the upload:'
  id: totrans-414
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在可以从上传创建一个磁盘：
- en: '[PRE76]'
  id: totrans-415
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: 'Create a VM image with this disk:'
  id: totrans-416
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用此磁盘创建VM映像：
- en: '[PRE77]'
  id: totrans-417
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: 'Finally, create a VM based on this image:'
  id: totrans-418
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，基于此映像创建一个VM：
- en: '[PRE78]'
  id: totrans-419
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: Note
  id: totrans-420
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: You can make your VHD images public; a nice example of this is a lesser-known
    Linux distribution named NixOS. On their website, [https://nixos.org/nixos/download.html](https://nixos.org/nixos/download.html),
    they describe a way to deploy their operating system in Azure!
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以将VHD映像设为公共；一个很好的例子是一个名为NixOS的鲜为人知的Linux发行版。在他们的网站上，[https://nixos.org/nixos/download.html](https://nixos.org/nixos/download.html)，他们描述了在Azure中部署其操作系统的方法！
- en: Let's conclude what we've done. We took two approaches here. We created and
    uploaded a Linux VHD from an existing VM, and then we manually downloaded an Ubuntu
    VHD and used it. Either way, we will be uploading it to a storage account and
    will create an image using it. This image is reusable, and you can deploy as many
    VMs you want.
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们总结一下我们所做的。我们采取了两种方法。我们从现有的VM创建并上传了一个Linux VHD，然后手动下载了一个Ubuntu VHD并使用它。无论哪种方式，我们都将把它上传到存储账户，并将使用它创建一个镜像。这个镜像是可重复使用的，你可以部署任意多个VM。
- en: The automation process and the tools available for it is vast. In the next chapter,
    we will continue with the automation process and we will discuss the most widely
    used tools, which are Ansible and Terraform.
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: 自动化过程和可用工具是广泛的。在下一章中，我们将继续讨论自动化过程，并讨论最广泛使用的工具，即Ansible和Terraform。
- en: Summary
  id: totrans-424
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we started asking why and when we should use automation in
    Azure. Later on, we added questions regarding using the images offered by Azure.
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们开始思考在Azure中为什么以及何时应该使用自动化。随后，我们添加了关于使用Azure提供的镜像的问题。
- en: 'With these questions in mind, we explored the options for automating our deployments:'
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到这些问题，我们探讨了自动化部署的选项：
- en: Scripting
  id: totrans-427
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 脚本编写
- en: ARM templates
  id: totrans-428
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ARM模板
- en: Vagrant
  id: totrans-429
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Vagrant
- en: Packer
  id: totrans-430
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Packer
- en: Building and using your own images
  id: totrans-431
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建和使用自己的镜像
- en: Vagrant and Packer are examples of third-party solutions that are very popular
    tools that make it possible to easily create and recreate environments as an important
    part of your development process.
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: Vagrant和Packer是第三方解决方案的例子，它们是非常受欢迎的工具，可以轻松地创建和重新创建环境，作为你的开发过程的重要部分。
- en: It's important to know that all the techniques described in this chapter can
    be combined into a complete solution. For instance, you can use cloud-init together
    with ARM, but also with Vagrant.
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的是要知道，本章中描述的所有技术都可以组合成一个完整的解决方案。例如，你可以将cloud-init与ARM一起使用，也可以与Vagrant一起使用。
- en: Automation and orchestration are closely related. In this chapter, we covered
    automation, especially as a part of development environments, to automate the
    deployment of VMs. Automation is often a difficult solution to maintain your workload
    following development and deployment. This is where orchestration kicks in, as
    covered in the next chapter.
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
  zh: 自动化和编排是密切相关的。在本章中，我们讨论了自动化，特别是作为开发环境的一部分，用于自动化VM的部署。自动化通常是一个难以维护的解决方案，用于跟踪开发和部署的工作负载。这就是编排发挥作用的地方，下一章将涵盖这一点。
- en: Questions
  id: totrans-435
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: What are the main reasons for using automated deployments in Azure?
  id: totrans-436
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Azure中使用自动化部署的主要原因是什么？
- en: What is the purpose of automation in development environments?
  id: totrans-437
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在开发环境中自动化的目的是什么？
- en: Can you describe the differences between scripting and automation?
  id: totrans-438
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你能描述脚本编写和自动化之间的区别吗？
- en: Can you name some of the automated deployment options available in Azure?
  id: totrans-439
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你能说出Azure中可用的一些自动化部署选项吗？
- en: What is the difference between Vagrant and Packer?
  id: totrans-440
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Vagrant和Packer有什么区别？
- en: Why should you use your own image instead of an image offered by Azure?
  id: totrans-441
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为什么应该使用自己的镜像而不是Azure提供的镜像？
- en: What options are available to create your own image?
  id: totrans-442
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 有哪些选项可以创建自己的镜像？
- en: And perhaps you can find some time to finish the example script in the *Scripting*
    section, in the language of your choice.
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: 也许你可以抽出一些时间来完成*脚本编写*部分的示例脚本，用你选择的语言。
- en: Further Reading
  id: totrans-444
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: Especially regarding the Azure CLI, PowerShell, and ARM, the Azure documentation
    contains a huge amount of valuable information, with many examples. And everything
    we wrote in the *Further reading* section of *Chapter 2, Getting Started with
    the Azure Cloud*, is important for this chapter as well.
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
  zh: 特别是关于Azure CLI、PowerShell和ARM，Azure文档包含大量有价值的信息和许多示例。我们在*第2章，开始使用Azure云*的*进一步阅读*部分中写的一切对本章也很重要。
- en: Another resource provided by Microsoft is its blogs. If you visit [https://blogs.msdn.microsoft.com/wriju/category/azure/](https://blogs.msdn.microsoft.com/wriju/category/azure/),
    you'll find many interesting posts about automation, including more detailed examples.
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: 微软提供的另一个资源是其博客。如果你访问[https://blogs.msdn.microsoft.com/wriju/category/azure/](https://blogs.msdn.microsoft.com/wriju/category/azure/)，你会发现许多关于自动化的有趣帖子，包括更详细的示例。
- en: In his blog at [https://michaelcollier.wordpress.com](https://michaelcollier.wordpress.com),
    Michael S. Collier provides a lot of information regarding Azure. Almost every
    post includes scripting and automation possibilities.
  id: totrans-447
  prefs: []
  type: TYPE_NORMAL
  zh: 在他的博客[https://michaelcollier.wordpress.com](https://michaelcollier.wordpress.com)中，Michael
    S. Collier提供了大量关于Azure的信息。几乎每篇帖子都包括脚本编写和自动化的可能性。
- en: There are not many recent books about Vagrant. We are sure you would really
    enjoy *Infrastructure as Code (IAC) Cookbook*, by Stephane Jourdan and Pierre
    Pomes, published a year ago. This book not only concerns Vagrant; it also covers
    other solutions, such as cloud-init and Terraform. The authors created a book
    that is not only a great introduction but managed to make it useable as a reference
    guide as well.
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: 关于Vagrant并没有太多最近的书。我们相信你会喜欢一年前出版的*Infrastructure as Code (IAC) Cookbook*，作者是Stephane
    Jourdan和Pierre Pomes。这本书不仅涉及Vagrant；它还涵盖了其他解决方案，如cloud-init和Terraform。作者创作了一本不仅是很好的介绍，而且还能用作参考指南的书。
- en: 'Can we suggest a book that has been recently published? *Hands-On DevOps with
    Vagrant: Implement End-to-End DevOps and Infrastructure Management Using Vagrant*,
    by Alex Braunton. His posts on YouTube regarding this topic are worth watching
    as well.'
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
  zh: '我们可以推荐一本最近出版的书吗？*Hands-On DevOps with Vagrant: Implement End-to-End DevOps
    and Infrastructure Management Using Vagrant*，作者是Alex Braunton。他在YouTube上关于这个主题的帖子也值得一看。'
