- en: Chapter 10. Scripting Best Practices
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第10章。脚本最佳实践
- en: This chapter explains some practices and techniques that will help the reader
    become a better and more efficient programmer.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章解释了一些实践和技术，这些实践和技术将帮助读者成为更好、更高效的程序员。
- en: In this chapter we will talk about what I consider to be scripting (or programming)
    best practices. Having programmed computers since 1977 I have attained quite a
    bit of experience in this field. I take great pleasure in teaching people about
    computers and hopefully my ideas will be of some benefit.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论我认为是脚本（或编程）最佳实践。自1977年以来，我一直在编程计算机，积累了相当丰富的经验。我很高兴教人们有关计算机的知识，希望我的想法能对一些人有所帮助。
- en: 'The topics covered are as follows:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 涵盖的主题如下：
- en: Backups will be discussed again, including verification
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 备份将再次被讨论，包括验证
- en: I'll explain how to pick a text editor you are comfortable with and learn its
    capabilities
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我将解释如何选择一个你感到舒适的文本编辑器，并了解它的功能
- en: I'll cover some basic command line items such as using a good prompt, command
    completion, environment variables and aliases
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我将涵盖一些基本的命令行项目，比如使用良好的提示符、命令完成、环境变量和别名
- en: I'll provide some bonus scripts
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我将提供一些额外的脚本
- en: Verifying backups
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 验证备份
- en: I have already spoken about backups at least twice in this book and this will
    be the last time I promise. Create your backup scripts and make sure they run
    when they are supposed to. But one thing I have not talked about yet is verification
    of the backups. You might have 10 teraquads of backups lying around somewhere,
    but do they actually work? When was the last time you checked?
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经在本书中至少两次谈到了备份，这将是我承诺的最后一次。创建您的备份脚本，并确保它们在应该运行时运行。但我还没有谈到的一件事是验证备份。您可能有10太拉夸德的备份存放在某个地方，但它们真的有效吗？您上次检查是什么时候？
- en: When using the `tar` command it will report at the end of the run if it encountered
    any issues making the archive. In general if it doesn't show anything amiss the
    backup is probably good. Using `tar` with the `-t (tell)` option, or actually
    extracting it on the local or remote machine, is also a good way to determine
    if the archive was made successfully.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`tar`命令时，它会在运行结束时报告是否遇到任何问题制作存档。一般来说，如果没有显示任何问题，备份可能是好的。使用带有`-t（tell）`选项的`tar`，或者在本地或远程机器上实际提取它，也是确定存档是否成功制作的好方法。
- en: Note
  id: totrans-11
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'Note: A somewhat common mistake when using tar is to include a file in the
    backup that is currently being updated.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 注意：在使用tar时一个常见的错误是将当前正在更新的文件包含在备份中。
- en: 'Here is a rather obvious example:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个相当明显的例子：
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The `tar` command might not consider this an error but will usually report it
    so be sure to check for this.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '`tar`命令可能不认为这是一个错误，但通常会报告，所以一定要检查一下。'
- en: Another common backup mistake is to not copy the file to another computer or
    external device. If you are good at making backups but they are all on the same
    machine eventually the hard drive and/or controller is going to fail. You may
    be able to recover the data but why take the risk? Copy your files to at least
    one external drive and/or computer and be safe.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个常见的备份错误是不将文件复制到另一台计算机或外部设备。如果您擅长备份，但它们都在同一台机器上，最终硬盘和/或控制器将会失败。您可能能够恢复数据，但为什么要冒险呢？将文件复制到至少一个外部驱动器和/或计算机上，保险起见。
- en: There is one last thing about backups I will mention. Make sure you have a backup
    sent to an off-site location, preferably in another city, state, continent, or
    planet. You really can't be too careful with your valuable data.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我将提到备份的最后一件事。确保您将备份发送到离岗位置，最好是在另一个城市、州、大陆或行星上。对于您宝贵的数据，您真的不能太小心。
- en: ssh and scp
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ssh和scp
- en: Using `scp` to a remote computer is a really good idea too and my backup program
    does that every night as well. Here is how to set up unattended `ssh`/`scp`. In
    this case, the root account on machine 1 (M1) will be able to `scp` files to the
    `guest1` account on machine 2 (M2). I do it this way because I always disable
    root access of `ssh`/`scp` for security reasons on all my machines.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`scp`到远程计算机也是一个非常好的主意，我的备份程序每天晚上也会这样做。以下是如何设置无人值守`ssh`/`scp`。在这种情况下，机器1（M1）上的root帐户将能够将文件`scp`到机器2（M2）上的guest1帐户。我之所以这样做，是因为出于安全原因，我总是在所有的机器上禁用`ssh`/`scp`的root访问。
- en: First make sure `ssh` has been run at least once on each machine. This will
    set up some needed directories and files.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先确保在每台机器上至少运行了一次`ssh`。这将设置一些必要的目录和文件。
- en: On M1, under `root`, run the `ssh-keygen -t rsa` command. This will create the
    file `id_rsa.pub` in the `/root/.ssh` directory.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在M1上，在`root`下，运行`ssh-keygen -t rsa`命令。这将在`/root/.ssh`目录中创建文件`id_rsa.pub`。
- en: Use `scp` to copy that file to M2 to the `/tmp` directory (or some other suitable
    location).
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`scp`将该文件复制到M2的`/tmp`目录（或其他适当的位置）。
- en: On M2 go to the /`home/guest1/.ssh directory`.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在M2中转到`/home/guest1/.ssh`目录。
- en: If there is already an `authorized_keys` file edit it, otherwise create it.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果已经有一个`authorized_keys`文件，请编辑它，否则创建它。
- en: Copy the line in the `/tmp/id_rsa.pub` file into the `authorized_keys` file
    and save it.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`/tmp/id_rsa.pub`文件中的行复制到`authorized_keys`文件中并保存。
- en: Test this by using `scp` to copy a file from M1 to M2\. It should work without
    prompting for a password. If there are any problems remember that this has to
    be set up for each user that wants to perform unattended `ssh`/`scp`.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用`scp`将文件从M1复制到M2进行测试。它应该可以在不提示输入密码的情况下工作。如果有任何问题，请记住，这必须为每个想要执行无人值守`ssh`/`scp`的用户设置。
- en: If you have an **Internet service provider** (**ISP**) that provides SSH with
    your account this method should work on there as well. I use it all the time and
    it is really convenient. Using this approach you can have a script generate an
    HTML file and then copy it right to your website. Dynamic generation of HTML pages
    is something programs are really good at.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的**互联网服务提供商**（**ISP**）为您的帐户提供SSH，这种方法也可以在那里使用。我一直在使用它，它真的很方便。使用这种方法，您可以让脚本生成一个HTML文件，然后将其直接复制到您的网站上。动态生成HTML页面是程序真正擅长的事情。
- en: Find and use a good text editor
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 找到并使用一个好的文本编辑器
- en: If you only occasionally write scripts or programs then vi is probably good
    enough for you. However, if you get into some real in depth programming, be it
    in Bash, C, Java, or some other language you should very definitely check out
    some of the other text editors that are available on Linux. You will almost certainly
    become more productive.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你只是偶尔写脚本或程序，那么vi可能对你来说已经足够了。然而，如果你进行了一些真正深入的编程，无论是在Bash、C、Java还是其他语言，你都应该非常确定地了解一些其他可用的Linux文本编辑器。你几乎肯定会变得更有生产力。
- en: As I mentioned before, I have been working with computers for a really long
    time. I started out using an editor on DOS called Edlin and it was pretty weak
    (but still better than punch cards). I eventually moved on and started using vi
    on AIX (IBM's version of UNIX). I got pretty good at using vi since we didn't
    have any other options yet. As time went on other choices became available and
    I started using the IBM Personal Editors. These were really easy to use, more
    efficient than vi, and had many more features. As I did more and more programming,
    I found that none of these editors could do everything I wanted and so I wrote
    my own in the C programming language. This was a long time ago under DOS, however,
    my editor has now been modified to run on Xenix, OS/2, AIX, Solaris, UNIX, FreeBSD,
    NetBSD, and of course Linux. It also works well on Windows under the Cygwin environment.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我之前提到的，我已经使用计算机工作了很长时间。我最开始在DOS上使用一个叫做Edlin的编辑器，它相当弱（但仍然比穿孔卡好）。我最终转而开始在AIX（IBM的UNIX版本）上使用vi。我在使用vi方面变得相当擅长，因为当时我们还没有其他选择。随着时间的推移，其他选择变得可用，我开始使用IBM个人编辑器。这些非常容易使用，比vi更高效，并且具有更多功能。随着我进行了越来越多的编程，我发现这些编辑器都不能满足我想要的一切，所以我用C编程语言编写了自己的编辑器。这是很久以前在DOS下，然而，我的编辑器现在已经被修改以在Xenix、OS/2、AIX、Solaris、UNIX、FreeBSD、NetBSD和当然Linux上运行。它在Cygwin环境下的Windows上也运行良好。
- en: Any text editor should have the standard features such as copy, paste, move,
    insert, delete, split, join, find/replace, and so on. These should be easy to
    use and require not more than two keystrokes. The `save` command should only need
    one keystroke.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 任何文本编辑器都应该具有标准功能，如复制、粘贴、移动、插入、删除、拆分、合并、查找/替换等。这些应该易于使用，不需要超过两个按键。`保存`命令只需要一个按键。
- en: 'In addition, a good editor will also have one, more, or all of the following:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，一个好的编辑器还应该具有以下一个或多个功能：
- en: Ability to edit more than one file at a time (file ring)
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 能够同时编辑多个文件（文件环）
- en: Ability to switch to the next or previous file in the ring with a single keystroke
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 能够用单个按键切换到环中的下一个或上一个文件
- en: Be able to show which files are in the ring and switch to any file instantly
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 能够显示环中的文件并立即切换到任何文件
- en: Ability to insert a file into the current file
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 能够将文件插入当前文件
- en: Be able to record and play back a remembered key sequence. This is sometimes
    referred to as a macro
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 能够记录和回放记住的按键序列。有时这被称为宏
- en: An undo/restore feature
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 撤销/恢复功能
- en: An auto file save option
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动保存文件选项
- en: A locked files feature, to prevent editing the same file in another instance
    of the editor
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个锁定文件的功能，以防止在编辑器的另一个实例中编辑同一个文件
- en: Absolutely no obvious shortcomings or bugs. This is mandatory
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 绝对没有明显的缺陷或错误。这是强制性的
- en: Accept input via telepathy
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过心灵感应接受输入
- en: Well, maybe I haven't quite figured out that last one yet. There are of course
    many, many more features that could be listed but I feel those are some of the
    most important.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 嗯，也许我还没有完全弄清楚最后一个。当然还有许多许多其他功能可以列出，但我觉得这些是最重要的。
- en: 'Here''s a screenshot of my editor showing an example of how the `ring` command
    might look:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我的编辑器的截图，显示了`ring`命令可能的样子：
- en: '![Find and use a good text editor](img/B07040_10_01.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![查找和使用好的文本编辑器](img/B07040_10_01.jpg)'
- en: Many more features could be shown but that should be enough to get the point
    across. I will mention that vi is a fine editor and is used with success by probably
    the majority of UNIX/Linux people. However, in my experience if a lot of programming
    is being done the use of a different editor with more features will save you a
    lot of time. It's also quite a bit easier, and that makes the process even more
    fun.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 还有很多功能可以展示，但这应该足以表达观点。我会提到vi是一个很好的编辑器，可能大多数UNIX/Linux用户都成功地使用它。然而，根据我的经验，如果要进行大量的编程，使用具有更多功能的不同编辑器将节省大量时间。这也更容易一些，这使得整个过程更有趣。
- en: Environment variables and aliases
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 环境变量和别名
- en: 'Environment variables were covered in [Chapter2](ch02.html "Chapter 2. Working
    with Variables"), *Working with Variables*. Here is a cool trick that I learned
    years ago that can really help when using the command line. Most Linux systems
    generally have several standard directories under `$HOME` such as Desktop, Downloads,
    Music, Pictures, and so on. I personally do not like typing the same things over
    and over again and so do this to help use the system more efficiently. Here are
    some of the lines that I have added to my `/home/guest1/.bashrc file`:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 环境变量在[第2章](ch02.html "第2章. 变量处理")中有介绍，*变量处理*。这是我多年前学到的一个很酷的技巧，可以在使用命令行时真正帮助。大多数Linux系统通常在`$HOME`下有几个标准目录，如桌面、下载、音乐、图片等。我个人不喜欢一遍又一遍地输入相同的东西，所以这样做可以帮助更有效地使用系统。以下是我添加到`/home/guest1/.bashrc`文件的一些行：
- en: '[PRE1]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Using this approach you can cd to any of the above directories by just typing
    the lowercase alias. What''s even better is you can also copy or move files to
    or from the directory by using the uppercase exported environment variable. Check
    out the following screenshot:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这种方法，你可以通过只输入小写别名来cd到上述任何一个目录。更好的是，你还可以通过使用大写导出的环境变量来复制或移动文件到目录中或从目录中。看看下面的截图：
- en: '![Environment variables and aliases](img/B07040_10_02.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![环境变量和别名](img/B07040_10_02.jpg)'
- en: It took me several years to start doing this and I am still kicking myself for
    not discovering it sooner. Remember to make the alias lowercase and the env var
    uppercase and you should be good to go.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 我花了好几年的时间才开始做这件事，我仍然为自己没有早点发现而感到后悔。记住将别名设为小写，环境变量设为大写，你就可以开始了。
- en: Notice the command I ran in the `Bookmarks` directory. I actually typed `mv
    $DESK/` and then hit the *Tab* key. This caused the line to auto-complete and
    then I added the dot `.` character and pressed *Enter*.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 注意我在“书签”目录中运行的命令。我实际上输入了`mv $DESK/`然后按了*Tab*键。这导致该行自动完成，然后我添加了句点`.`字符并按下*Enter*。
- en: Remember to use command auto-completion any time you can, it's a great time
    saver.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 记住尽可能使用命令自动完成，这样可以节省大量时间。
- en: The line `. $LB/source.lbcur.txt` needs to be explained. You can see I have
    an `lbcur` alias which puts me into the directory where I am currently working
    on this book. Since I use both my root and `guest1` accounts to write a book,
    I can change the chapter number in just the `source.lbcur.txt` file. I then source
    the `.bashrc` files for root and `guest1` and I'm done. Otherwise, I would have
    to make the change in each `.bashrc` file. With just two files maybe it wouldn't
    be that bad, but suppose you had several users? I use this technique quite a bit
    on my systems as I am a very lazy typist.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 需要解释的是`. $LB/source.lbcur.txt`这一行。你可以看到我有一个`lbcur`别名，它让我进入我当前撰写本书的目录。由于我同时使用我的root和`guest1`账户来写书，我只需在`source.lbcur.txt`文件中更改章节号。然后我为root和`guest1`源`.bashrc`文件，就完成了。否则，我将不得不在每个`.bashrc`文件中进行更改。也许只有两个文件可能不会那么糟糕，但假设你有几个用户呢？我在我的系统上经常使用这种技术，因为我是一个非常懒的打字员。
- en: 'Remember: When using aliases and environment variables you need to source the
    users''s `.bashrc` file before any changes will be picked up in the terminal.'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 记住：当使用别名和环境变量时，需要在终端中更改之前先源用户的`.bashrc`文件。
- en: ssh prompt
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ssh提示
- en: When I run a Linux system I tend to have at least 30 terminal windows open.
    Some of these are logged into the other machines in my house. As of this writing
    I am logged into laptop1, laptop4, and gabi1 (my girlfriend's laptop running Fedora
    20). I found a while back that if the prompt were different on these terminals
    it was harder for me to get mixed up and type the right command but on the wrong
    computer. Needless to say that could be a disaster. For a while I would change
    the prompt manually but that got old very quickly. One day I found almost by accident
    a really cool solution to this problem. I have used this technique on Red Hat
    Enterprise Linux, Fedora, and CentOS and so it should work on your system as well
    (with maybe a little bit of tweaking).
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 当我运行Linux系统时，我倾向于至少打开30个终端窗口。其中一些登录到我家的其他机器上。在撰写本文时，我已登录到laptop1、laptop4和gabi1（我女朋友运行Fedora
    20的笔记本电脑）。我发现很久以前，如果这些终端的提示不同，我很难弄清楚并在错误的计算机上输入正确的命令。不用说，那可能是一场灾难。有一段时间我会手动更改提示，但这很快就厌倦了。有一天我几乎偶然发现了这个问题的一个非常酷的解决方案。我在Red
    Hat Enterprise Linux、Fedora和CentOS上使用了这种技术，所以它也应该适用于您的系统（可能需要稍微调整）。
- en: 'These lines are in the `$HOME/.bashrc` file on all my systems:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 这些行在我所有系统的`$HOME/.bashrc`文件中：
- en: '[PRE2]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: So what this does is use the set command to grep for the string `XAUTHORITY`.
    That string is only in the environment on the local machine. So when you open
    a terminal locally on big1 it uses the normal prompt. However, if you `ssh` to
    another system the string is not there and so it uses the long expanded prompt.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 所以这个命令使用set命令来grep字符串`XAUTHORITY`。这个字符串只存在于本地机器的环境中。因此，当你在big1本地打开终端时，它使用正常的提示。然而，如果你`ssh`到另一个系统，该字符串就不存在，因此它使用长扩展提示。
- en: 'Here is a screenshot of my system showing how this looks:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我系统的屏幕截图：
- en: '![ssh prompt](img/B07040_10_03.jpg)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![ssh提示](img/B07040_10_03.jpg)'
- en: Testing an archive
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试一个存档
- en: Here is something that I ran into on several of my computer jobs. I would be
    asked by my manager to take over a project from a fellow worker. He would `zip`
    or `tar` up the files and then give me the archive. I would uncompress it on my
    system and try to begin the work. But there was always a file missing. It would
    often take two, three, or more attempts before I would finally have every file
    needed to compile the project. So, the moral to this story is when making an archive
    to give to someone else make absolutely sure to copy it to another machine and
    test it there. Only then can you be reasonably sure that you have included every
    file.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我在几个计算机工作中遇到的问题。我的经理会要求我接手一个同事的项目。他会将文件`zip`或`tar`起来，然后给我存档。我会在我的系统上解压缩它并尝试开始工作。但总会有一个文件丢失。通常需要两次、三次或更多次尝试，我才最终拥有编译项目所需的每个文件。所以，这个故事的教训是，当制作一个要交给别人的存档时，一定要确保将其复制到另一台机器上并在那里进行测试。只有这样，你才能相对确定地包含了每个文件。
- en: Progress indicator
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进度指示器
- en: Here is another cursor movement script that also calculates the low and high
    of the `$RANDOM` Bash variable. It might not look all that cool to everyone but
    it does show some more of the concepts we have covered in this book. I was also
    somewhat curious as to what the range of that random number generator was.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 这是另一个光标移动脚本，它还计算了`$RANDOM` Bash变量的低和高。这可能对每个人来说看起来并不那么酷，但它确实展示了我们在本书中涵盖的更多概念。我也对那个随机数生成器的范围有些好奇。
- en: Chapter 10 - Script 1
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第10章 - 脚本1
- en: '[PRE3]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'And the output on my system:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我系统上的输出：
- en: '![Chapter 10 - Script 1](img/B07040_10_04.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![第10章 - 脚本1](img/B07040_10_04.jpg)'
- en: Creating new commands from a template
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从模板创建新命令
- en: 'Since you are reading this book it can be assumed that you are going to be
    writing a good number of scripts. Here is another handy trick I learned over the
    years. When I need to create a new script, instead of doing it from scratch I
    use this simple command:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 由于您正在阅读本书，可以假定您将要编写大量脚本。这是我多年来学到的另一个方便的技巧。当我需要创建一个新脚本时，我不是从头开始做，而是使用这个简单的命令：
- en: Chapter 10 – Script 2
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第10章 - 脚本2
- en: '[PRE4]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Be sure that after you create the `mkcmd.template` file that you run `chmod
    755` on it. That way you do not have to remember to do it every time on your new
    commands. In fact, that was the main reason I wrote this script.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 确保在创建`mkcmd.template`文件后对其运行`chmod 755`。这样你就不必每次都记得这样做了。事实上，这就是我写这个脚本的主要原因。
- en: Feel free to modify this however you want, and of course change `kw` to vi or
    whatever editor you are using.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 随意修改这个脚本，当然也可以将`kw`更改为您正在使用的vi或其他编辑器。
- en: Alerting the user
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 提醒用户
- en: 'It''s nice to have your computer beep when an important task has completed
    and you want to know about it right away. Here''s a script I use to beep the internal
    speaker on my computer:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 当重要任务完成并且您想立刻知道时，让您的计算机响铃是很好的。以下是我用来响铃我的计算机内部扬声器的脚本：
- en: Chapter 10 – Script 3
  id: totrans-80
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第10章 - 脚本3
- en: '[PRE5]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: This command will beep the PC speaker if it has one and if the driver has been
    loaded. Note that this command will probably only work on your system when run
    as the root user.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令会响铃PC扬声器（如果有的话），并且驱动程序已经加载。请注意，这个命令可能只有在以root用户身份运行时才能在您的系统上工作。
- en: Summary
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this last chapter, I showed some of the programming best practices I have
    learned. The features of a good text editor were talked about, and a `$RANDOM`
    testing script was included. I also presented some of the scripts I have written
    over the years to make my systems more efficient and easier to use.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在这最后一章中，我展示了一些我学到的编程最佳实践。讨论了一个好的文本编辑器的特性，并包括了一个`$RANDOM`测试脚本。我还介绍了我多年来编写的一些脚本，以使我的系统更高效、更易于使用。
