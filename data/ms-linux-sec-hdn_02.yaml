- en: Securing User Accounts
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保护用户账户
- en: Managing users is one of the more challenging aspects of IT administration.
    You need to make sure that users can always access their stuff and that they can
    perform the required tasks to do their jobs. You also need to ensure that users'
    stuff is always secure from unauthorized users and that users can't perform any
    tasks that don't fit their job description. It's a tall order, but we aim to show
    that it's doable.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 管理用户是IT管理中更具挑战性的方面之一。您需要确保用户始终可以访问其内容，并且可以执行所需的任务来完成工作。您还需要确保用户的内容始终受到未经授权用户的保护，并且用户不能执行与其工作描述不符的任何任务。这是一个艰巨的任务，但我们的目标是表明这是可行的。
- en: 'In this chapter, we''ll cover the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: The dangers of logging in as the root user
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以root用户登录的危险
- en: The advantages of using sudo
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用sudo的优势
- en: How to set up sudo privileges for full administrative users and for users with
    only certain delegated privileges
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何为完整的管理用户和仅具有特定委派权限的用户设置sudo权限
- en: Advanced tips and tricks to use sudo
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用sudo的高级技巧和技巧
- en: Locking down users' home directories
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 锁定用户的主目录
- en: Enforcing strong password criteria
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 强制执行强密码标准
- en: Setting and enforcing password and account expiration
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置和强制执行密码和帐户过期
- en: Preventing brute-force password attacks
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 防止暴力破解密码攻击
- en: Locking user accounts
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 锁定用户帐户
- en: Setting up security banners
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置安全横幅
- en: The dangers of logging in as the root user
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 以root用户登录的危险
- en: A huge advantage that Unix and Linux operating systems have over Windows is
    that Unix and Linux do a much better job of keeping privileged administrative
    accounts separated from normal user accounts. Indeed, one reason that older versions
    of Windows were so susceptible to security issues, such as **drive-by** virus
    infections, was the common practice of setting up user accounts with administrative
    privileges, without having the protection of the **User Access Control** that's
    in newer versions of Windows. (Even with User Access Control, Windows systems
    still do get infected, just not quite as often.)  With Unix and Linux, it's a
    lot harder to infect a properly configured system.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: Unix和Linux操作系统相对于Windows的一个巨大优势是，Unix和Linux更好地将特权管理帐户与普通用户帐户分开。事实上，旧版本的Windows容易受到安全问题的影响，例如**随意**病毒感染，一个常见的做法是设置具有管理权限的用户帐户，而没有新版本Windows中的**用户访问控制**的保护。（即使有用户访问控制，Windows系统仍然会被感染，只是不太频繁。）在Unix和Linux中，更难以感染一个正确配置的系统。
- en: 'You likely already know that the all-powerful administrator account on a Unix
    or Linux system is the root account. If you''re logged in as the root user, you
    can do anything you want to do to that system. So you may think, "*Yeah, that''s
    handy, so that''s what I''ll do.*" However, always logging in as the root user
    can present a whole load of security problems. Consider the following. Logging
    in as the root user can:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能已经知道Unix或Linux系统上的超级管理员帐户是root帐户。如果您以root用户身份登录，您可以对该系统执行任何您想要执行的操作。因此，您可能会认为，“是的，这很方便，所以我会这样做。”但是，始终以root用户登录可能会带来一系列安全问题。考虑以下。以root用户登录可能会：
- en: Make it easier for you to accidentally perform an action that causes damage
    to the system
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使您更容易意外执行导致系统损坏的操作
- en: Make it easier for someone else to perform an action that causes damage to the
    system
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使其他人更容易执行导致系统损坏的操作
- en: So if you always log on as the root user or even if you just make the root user
    account readily accessible, you could say that you're doing a big part of attackers'
    and intruders' work for them. Also, imagine if you were the head Linux administrator
    at a large corporation, and the only way to allow users to perform admin tasks
    was to give them all the root password. What would happen if one of those users
    were to leave the company? You wouldn't want for that person to still have the
    ability to log in to the systems, so you'd have to change the password and distribute
    the new one to all of the other users. And, what if you just want for users to
    have admin privileges for only certain tasks, instead of having full root privileges?
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，如果您总是以root用户登录，甚至只是使root用户帐户容易访问，可以说您正在为攻击者和入侵者做很大一部分工作。此外，想象一下，如果您是一家大公司的Linux管理员，允许用户执行管理员任务的唯一方法是给他们所有的root密码。如果其中一个用户离开公司会发生什么？您不希望该人仍然有能力登录系统，因此您必须更改密码并将新密码分发给所有其他用户。而且，如果您只希望用户对某些任务具有管理员权限，而不是具有完整的root权限呢？
- en: What we need is a mechanism that allows users to perform administrative tasks
    without incurring the risk of having them always log on as the root user and that
    would also allow users to have only the admin privileges they really need to perform
    a certain job. In Linux and Unix, we have that mechanism in the form of the sudo
    utility.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要一种机制，允许用户执行管理任务，而不会冒着他们始终以root用户登录的风险，并且还允许用户仅具有他们真正需要执行某项工作的管理权限。在Linux和Unix中，我们通过sudo实用程序实现了这种机制。
- en: The advantages of using sudo
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用sudo的优势
- en: 'Used properly, the sudo utility can greatly enhance the security of your systems,
    and it can make an administrator''s job much easier. With sudo, you can do the
    following:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 正确使用，sudo实用程序可以极大地增强系统的安全性，并且可以使管理员的工作更加轻松。使用sudo，您可以执行以下操作：
- en: Assign certain users full administrative privileges, while assigning other users
    only the privileges they need to perform tasks that are directly related to their
    respective jobs.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为某些用户分配完整的管理权限，同时为其他用户分配他们需要执行与其工作直接相关的任务所需的权限。
- en: Allow users to perform administrative tasks by entering their own normal user
    passwords so that you don't have to distribute the root password to everybody
    and his brother.
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许用户通过输入其自己的普通用户密码执行管理任务，以便您不必将root密码分发给每个人和他的兄弟。
- en: Make it harder for intruders to break into your systems. If you implement sudo
    and disable the root user account, would-be intruders won't know which account
    to attack because they won't know which one has admin privileges.
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 增加入侵者进入系统的难度。如果您实施了sudo并禁用了root用户帐户，潜在的入侵者将不知道要攻击哪个帐户，因为他们不知道哪个帐户具有管理员权限。
- en: Create sudo policies that you can deploy across an entire enterprise network
    even if that network has a mix of Unix, BSD, and Linux machines.
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建sudo策略，即使网络中有Unix、BSD和Linux混合的机器，也可以在整个企业网络中部署。
- en: Improve your auditing capabilities because you'll be able to see what users
    are doing with their admin privileges.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提高您的审计能力，因为您将能够看到用户如何使用他们的管理员权限。
- en: 'In regards to that last bullet point, consider the following snippet from the
    `secure` log of my CentOS 7 virtual machine:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 关于最后一条要点，考虑一下我CentOS 7虚拟机的`secure`日志中的以下片段：
- en: '[PRE0]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'You can see that I used `su -` to log in to the root command prompt and that
    I then logged back out. While I was logged in, I did several things that require
    root privileges, but none of that got recorded. What did get recorded though is
    something that I did with sudo. That is, because the root account is disabled
    on this machine, I used my sudo privilege to get `su -` to work for me. Let''s
    look at another snippet to show a bit more detail about how this works:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以看到，我使用`su -`登录到root命令提示符，然后退出登录。当我登录时，我做了一些需要root权限的事情，但没有记录下来。但记录下来的是我使用sudo做的事情。也就是说，因为这台机器上禁用了root帐户，我使用了我的sudo特权来让`su
    -`为我工作。让我们看另一个片段，以展示更多关于这是如何工作的细节：
- en: '[PRE1]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This time, I used my sudo privilege to open a log file, to view my hard drive
    configuration, to perform a system update, to check the status of the Secure Shell
    daemon, and to once again view a log file. So, if you were the security administrator
    at my company, you'd be able to see whether or not I'm abusing my sudo power.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 这一次，我使用我的sudo特权来打开一个日志文件，查看我的硬盘配置，执行系统更新，检查安全外壳守护程序的状态，再次查看日志文件。因此，如果您是我公司的安全管理员，您将能够看到我是否滥用了我的sudo权限。
- en: Now, you're asking, "*What's to prevent a person from just doing a sudo su -
    to prevent his or her misdeeds from being detected?*" That's easy. Just don't
    give people the power to go to the root command prompt.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您可能会问，“*有什么办法阻止一个人只是做一个sudo su - 以防止他或她的不端行为被发现吗？*” 这很容易。只是不要给人们去root命令提示符的权限。
- en: Setting up sudo privileges for full administrative users
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为完整的管理员用户设置sudo权限
- en: Before we look at how to limit what users can do, let's first look at how to
    allow a user to do everything, including logging into the root command prompt.
    There are a couple of methods for doing that.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们看如何限制用户的操作之前，让我们首先看一下如何允许用户做任何事情，包括登录到root命令提示符。有几种方法可以做到这一点。
- en: Method 1 – adding users to a predefined admin group
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 方法1 - 将用户添加到预定义的管理员组
- en: The first method, which is the simplest, is to add users to a predefined administrators
    group and then, if it hasn't already been done, to configure the sudo policy to
    allow that group to do its job. It's simple enough to do except that different
    Linux distro families use different admin groups.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 第一种方法，也是最简单的方法，是将用户添加到预定义的管理员组，然后，如果尚未完成，配置sudo策略以允许该组完成其工作。这很简单，只是不同的Linux发行版系列使用不同的管理员组。
- en: 'On Unix, BSD, and most Linux systems, you would add users to the `wheel` group.
    (Members of the Red Hat family, including CentOS, fall into this category.) When
    I do the `groups` command on my CentOS machine, I get this:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在Unix、BSD和大多数Linux系统上，您可以将用户添加到`wheel`组中。 (红帽家族的成员，包括CentOS，属于这个类别。) 当我在我的CentOS机器上执行`groups`命令时，我得到了这个：
- en: '[PRE2]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'This shows that I''m a member of the wheel group. By doing `sudo visudo`, I''ll
    open the sudo policy file. Scrolling down, we''ll see the line that gives the
    wheel group its awesome power:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这表明我是`wheel`组的成员。通过执行`sudo visudo`，我将打开sudo策略文件。向下滚动，我们将看到赋予`wheel`组强大权限的行：
- en: '[PRE3]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The percent sign indicates that we''re working with a group. The three ALLs
    mean that members of that group can perform any command, as any user, on any machine
    in the network on which this policy is deployed. The only slight catch is that
    group members will be prompted to enter their own normal user account passwords
    in order to perform a sudo task. Scroll down a bit more, and you''ll see the following:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 百分号表示我们正在使用一个组。三个ALL表示该组的成员可以在部署了此策略的网络中的任何计算机上，作为任何用户执行任何命令。唯一的小问题是组成员将被提示输入他们自己的普通用户帐户密码以执行sudo任务。再往下滚动一点，你会看到以下内容：
- en: '[PRE4]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: If we were to comment out the `%wheel` line in the former snippet and remove
    the comment symbol from in front of the `%wheel` line in this snippet, then members
    of the `wheel` group would be able to perform all of their sudo tasks without
    ever having to enter any password. That's something that I really don't recommend,
    even for home use. In a business setting, allowing people to have passwordless
    sudo privileges is a definite no-no.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们注释掉前面片段中的`%wheel`行，并从此片段中的`%wheel`行前面删除注释符号，那么`wheel`组的成员将能够在不输入任何密码的情况下执行所有sudo任务。这是我真的不建议的事情，即使在家庭使用中也是如此。在商业环境中，允许人们拥有无密码sudo权限是绝对不可以的。
- en: 'To add an existing user to the `wheel` group, use `usermod` with the `-G` option.
    You might also want to use the `-a` option as well, in order to prevent removing
    the user from other groups to which he or she belongs. For our example, let''s
    add Maggie:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 要将现有用户添加到`wheel`组中，使用`usermod`命令和`-G`选项。您可能还想使用`-a`选项，以防止将用户从其他组中删除。对于我们的示例，让我们添加Maggie：
- en: '[PRE5]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'You can also add a user account to the `wheel` group as you create it. Let''s
    do that now for Frank:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以在创建用户帐户时将其添加到`wheel`组中。现在让我们为Frank做到这一点：
- en: '[PRE6]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Note that with my usage of `useradd`, I''m assuming that we''re working with
    a member of the Red Hat family, which comes with predefined default settings to
    create user accounts. For non-Red Hat-type distros that use the `wheel` group,
    you''d need to either reconfigure the default settings or use extra option switches
    in order to create the user''s home directory and to assign the correct shell.
    Your command then would look something like:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，使用`useradd`时，我假设我们正在使用红帽系列的操作系统，该操作系统具有预定义的默认设置来创建用户账户。对于使用`wheel`组的非红帽类型的发行版，您需要重新配置默认设置或使用额外的选项开关来创建用户的主目录并分配正确的shell。您的命令可能如下所示：
- en: '**`sudo useradd -G wheel -m -d /home/frank -s /bin/bash frank`**'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**`sudo useradd -G wheel -m -d /home/frank -s /bin/bash frank`**'
- en: For members of the Debian family, including Ubuntu, the procedure is the same,
    except that you would use the `sudo` group instead of the `wheel` group. (This
    kind of figures, considering that the Debian folk have pretty much always marched
    to the beat of a different drummer.)
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Debian系列的成员，包括Ubuntu，程序是相同的，只是您将使用`sudo`组而不是`wheel`组。 （考虑到Debian人一直以来都是与众不同的，这种情况似乎是合理的。）
- en: One way in which this technique would come in handy is whenever you need to
    create a virtual private server on a cloud service, such as Rackspace, DigitalOcean,
    or Vultr. When you log in to one of those services and initially create your virtual
    machine, the cloud service will have you log in to that virtual machine as the
    root user. (This even happens with Ubuntu, even though the root user account is
    disabled whenever you do a local installation of Ubuntu.)
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 这种技术会在以下情况下非常有用，即当您需要在Rackspace、DigitalOcean或Vultr等云服务上创建虚拟专用服务器时。当您登录到这些服务并最初创建虚拟机时，云服务将要求您以root用户身份登录到该虚拟机。（即使在Ubuntu上也会发生这种情况，尽管在进行本地安装Ubuntu时会禁用root用户帐户。）
- en: 'The first thing that you''ll want to do in this scenario is to create a normal
    user account for yourself and give it full sudo privileges. Then, log out of the
    root account and log back in with your normal user account. You''ll then want
    to disable the root account with the command:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，您首先要做的是为自己创建一个普通用户帐户，并为其提供完整的sudo权限。然后，退出root帐户并使用普通用户帐户重新登录。然后，您将需要使用以下命令禁用root帐户：
- en: '**`sudo passwd -l root`**'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**`sudo passwd -l root`**'
- en: You'll also want to do some additional configuration to lock down Secure Shell
    access, but we'll cover that in [Chapter 4](081f4a65-5141-48fb-a865-0c23c96019c3.xhtml),
    *Encrypting and SSH Hardening*.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 您还需要进行一些额外的配置来锁定安全外壳访问，但我们将在[第4章](081f4a65-5141-48fb-a865-0c23c96019c3.xhtml)中进行介绍，*加密和SSH加固*。
- en: Method 2 – creating an entry in the sudo policy file
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 方法2 - 在sudo策略文件中创建条目
- en: 'Okay, adding users to either the `wheel` group or the `sudo` group works great
    if you''re either just working with a single machine or if you''re deploying a
    sudo policy across a network that uses just one of these two admin groups. But
    what if you want to deploy a sudo policy across a network with a mixed group of
    both Red Hat and Ubuntu machines? Or what if you don''t want to go around to each
    machine to add users to an admin group? Then, just create an entry in the sudo
    policy file. You can either create an entry for an individual user or create a
    user alias. If you do `sudo visudo` on your CentOS virtual machine, you''ll see
    a commented-out example of a user alias:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，将用户添加到`wheel`组或`sudo`组对于只使用一个这两个管理组的单个计算机或部署sudo策略的网络非常有效。但是，如果您想要在既有红帽又有Ubuntu机器的网络上部署sudo策略，或者如果您不想去每台机器上添加用户到管理员组，那么只需在sudo策略文件中创建一个条目。您可以为单个用户创建条目，也可以创建用户别名。如果在您的CentOS虚拟机上执行`sudo
    visudo`，您将看到一个已注释的用户别名示例：
- en: '[PRE7]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'You can uncomment this line and add your own set of usernames, or you can just
    add a line with your own user alias. To give members of the user alias full sudo
    power, add another line that would look like this:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以取消注释此行并添加您自己的一组用户名，或者您可以只添加一个包含您自己用户别名的行。要为用户别名的成员提供完整的sudo权限，请添加另一行，看起来像这样：
- en: '[PRE8]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'It''s also possible to add a `visudo` entry for just a single user, and you
    might need to do that under very special circumstances. For example:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 还可以为单个用户添加`visudo`条目，在非常特殊的情况下可能需要这样做。例如：
- en: '[PRE9]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: But for ease of management, it's best to go with either a user group or a user
    alias.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 但为了便于管理，最好选择用户组或用户别名。
- en: The sudo policy file is the `/etc/sudoers` file. I always hesitate to tell students
    that because every once in a while I have a student try to edit it in a regular
    text editor. That doesn't work though, so please don't try it. Always edit `sudoers`
    with the command, `sudo visudo`.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: sudo策略文件是`/etc/sudoers`文件。我总是犹豫告诉学生这一点，因为偶尔会有学生尝试在常规文本编辑器中编辑它。但这是行不通的，请不要尝试。请始终使用命令`sudo
    visudo`编辑`sudoers`。
- en: Setting up sudo for users with only certain delegated privileges
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为仅具有特定委派权限的用户设置sudo
- en: A basic tenet of IT security philosophy is to give network users enough privileges
    so that they can get their jobs done, but no privileges beyond that. So, you'll
    want as few people as possible to have full sudo privileges. (If you have the
    root user account enabled, you'll want even fewer people to know the root password.)
    You'll also want a way to delegate privileges to people according to what their
    specific jobs are. Backup admins will need to be able to perform backup tasks,
    help desk personnel will need to perform user management tasks, and so on. With
    sudo, you can delegate these privileges and disallow users from doing any other
    administrative jobs that don't fit their job description.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: IT安全哲学的一个基本原则是为网络用户提供足够的权限，以便他们完成工作，但不得超出此范围。因此，您希望尽可能少的人拥有完整的sudo权限。（如果启用了root用户帐户，则希望更少的人知道root密码。）您还希望根据其具体工作来委派权限给人员。备份管理员将需要执行备份任务，帮助台人员将需要执行用户管理任务，依此类推。使用sudo，您可以委派这些权限，并禁止用户执行与其工作描述不符的任何其他管理工作。
- en: 'The best way to explain this is to have you open `visudo` on your CentOS virtual
    machine. So, go ahead and start the CentOS VM and enter the following command:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 解释这一点的最好方法是让您在CentOS虚拟机上打开`visudo`。因此，继续启动CentOS VM并输入以下命令：
- en: '[PRE10]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Unlike Ubuntu, CentOS has a fully commented and well-documented `sudoers` file.
    I''ve already shown you the line that creates the `ADMIN` user alias, and you
    can create other user aliases for other purposes. You can, for example, create
    a `BACKUPADMINS` user alias for backup administrators, a `WEBADMINS` user alias
    for web server administrators, or whatever else you desire. So, you could add
    a line that looks something like this:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 与Ubuntu不同，CentOS有一个完全注释和有文档的`sudoers`文件。我已经向您展示了创建`ADMIN`用户别名的行，您可以为其他目的创建其他用户别名。例如，您可以为备份管理员创建`BACKUPADMINS`用户别名，为Web服务器管理员创建`WEBADMINS`用户别名，或者任何其他您想要的。因此，您可以添加类似以下内容的行：
- en: '[PRE11]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: That's good, except that Vicky and Cleopatra still can't do anything. You'll
    need to assign some duties to the user alias.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 这很好，除了Vicky和Cleopatra仍然无法做任何事情。您需要将一些职责分配给用户别名。
- en: 'If you look at the example user alias mentioned later, you''ll see a list of
    example `Command Aliases`. One of these examples just happens to be `SOFTWARE`,
    which contains the commands that an admin would need to either install or remove
    software or to update the system. It''s commented out, as are all of the other
    example command aliases, so you''ll need to remove the hash symbol from the beginning
    of the line before you can use it:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您查看稍后提到的示例用户别名，您将看到一个示例`Command Aliases`列表。其中一个例子恰好是`SOFTWARE`，其中包含管理员需要安装或删除软件或更新系统的命令。它被注释掉，就像所有其他示例命令别名一样，因此您需要在使用之前从行首删除井号符号：
- en: '[PRE12]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Now, it''s just a simple matter of assigning the `SOFTWARE` command alias to
    the `SOFTWAREADMINS` user alias:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，只需将`SOFTWARE`命令别名分配给`SOFTWAREADMINS`用户别名即可：
- en: '[PRE13]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Vicky and Cleopatra, both members of the `SOFTWAREADMINS` user alias, can now
    run the `rpm`, `up2date`, and `yum` commands with root privileges.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '`SOFTWAREADMINS`用户别名的成员Vicky和Cleopatra现在可以以root权限运行`rpm`、`up2date`和`yum`命令。'
- en: 'All but one of these predefined command aliases are ready to use after you
    uncomment them and assign them to either a user, group, or user alias. The one
    exception is the `SERVICES` command alias:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在取消注释并将它们分配给用户、组或用户别名之后，除了一个预定义的命令别名都可以使用。唯一的例外是`SERVICES`命令别名：
- en: '[PRE14]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The problem with this `SERVICES` alias is that it also lists the different
    subcommands for the `systemctl` command. The way sudo works is that if a command
    is listed by itself, then the assigned user can use that command with any subcommands,
    options, or arguments. So, in the `SOFTWARE` example, members of the `SOFTWARE`
    user alias can run a command such as:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '`SERVICES`别名的问题在于它还列出了`systemctl`命令的不同子命令。sudo的工作方式是，如果一个命令单独列出，那么分配的用户可以使用该命令的任何子命令、选项或参数。因此，在`SOFTWARE`示例中，`SOFTWARE`用户别名的成员可以运行如下命令：'
- en: '[PRE15]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'But, when a command is listed in the command alias with a subcommand, option,
    or argument, that''s all anyone who''s assigned to the command alias can run.
    With the `SERVICES` command alias in its current configuration, the `systemctl`
    commands just won''t work. To see why, let''s set Charlie and Lionel up in the
    `SERVICESADMINS` user alias and then uncomment the `SERVICES` command alias, as
    we''ve already done earlier:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，当命令在命令别名中列出时带有子命令、选项或参数，那么分配给命令别名的任何人都可以运行。在当前配置中，`SERVICES`命令别名中的`systemctl`命令就无法工作。为了了解原因，让我们将Charlie和Lionel设置为`SERVICESADMINS`用户别名，然后取消注释`SERVICES`命令别名，就像我们之前已经做过的那样：
- en: '[PRE16]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Now, watch what happens when Lionel tries to check the status of the Secure
    Shell service:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，看看当Lionel尝试检查Secure Shell服务的状态时会发生什么：
- en: '[PRE17]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Okay, so Lionel can run `sudo systemctl status`, which is pretty much useless,
    but he can''t do anything meaningful, like specifying the service that he wants
    to check. That''s a bit of a problem. There are two ways to fix this, but there''s
    only one way that you want to use. You could just eliminate all of the `systemctl`
    subcommands and make the `SERVICES` alias look like this:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，所以Lionel可以运行`sudo systemctl status`，这几乎没有用，但他无法做任何有意义的事情，比如指定他想要检查的服务。这有点问题。有两种方法可以解决这个问题，但只有一种方法是您想要使用的。您可以删除所有`systemctl`子命令，并使`SERVICES`别名看起来像这样：
- en: '[PRE18]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'But, if you do that, Lionel and Charlie will also be able to shut down or reboot
    the system, edit the services files, or change the machine from one systemd target
    to another. That''s probably not what you want. Because the `systemctl` command
    covers a lot of different functions, you have to be careful not to allow delegated
    users to access too many of those functions. A better solution would be to add
    a wildcard to each of the `systemctl` subcommands:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，如果这样做，Lionel和Charlie也将能够关闭或重新启动系统，编辑服务文件，或将机器从一个systemd目标更改为另一个。这可能不是您想要的。因为`systemctl`命令涵盖了许多不同的功能，您必须小心，不要允许委派用户访问太多这些功能。更好的解决方案是为每个`systemctl`子命令添加通配符：
- en: '[PRE19]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Now, Lionel and Charlie can perform any of the `systemctl` functions that are
    listed in this command alias, for any service:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，Lionel和Charlie可以执行此命令别名中列出的任何服务的`systemctl`功能：
- en: '[PRE20]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Keep in mind that you''re not limited to using user aliases and command aliases.
    You can also assign privileges to either a Linux group or to an individual user.
    You can also assign individual commands to a user alias, Linux group, or individual
    user. For example:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，您不仅限于使用用户别名和命令别名。您还可以将特权分配给Linux组或个别用户。您还可以将单个命令分配给用户别名、Linux组或个别用户。例如：
- en: '[PRE21]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Katelyn can now do all of the commands in the `STORAGE` command alias, whereas
    Gunther can only use `fdisk` to look at the partition tables. The members of the
    `backup_admins` Linux group can do commands in the `BACKUP` command alias.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: Katelyn现在可以执行`STORAGE`命令别名中的所有命令，而Gunther只能使用`fdisk`来查看分区表。`backup_admins` Linux组的成员可以执行`BACKUP`命令别名中的命令。
- en: 'The last thing we''ll look at for this topic is the host aliases examples that
    you see preceding the user alias example:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在这个主题中看到的最后一件事是主机别名示例，这些示例出现在用户别名示例之前：
- en: '[PRE22]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Each host alias consists of a list of server hostnames. This is what allows
    you to create one `sudoers` file on one machine, and deploy it across the network.
    For example, you could create a `WEBSERVERS` host alias, a `WEBADMINS` user alias,
    and a `WEBCOMMANDS` command alias with the appropriate commands.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 每个主机别名由服务器主机名列表组成。这样可以让您在一台机器上创建一个`sudoers`文件，并在整个网络上部署它。例如，您可以创建一个`WEBSERVERS`主机别名，一个`WEBADMINS`用户别名，以及一个`WEBCOMMANDS`命令别名，并附带适当的命令。
- en: 'Your configuration would look something like this:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 你的配置看起来应该是这样的：
- en: '[PRE23]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Now, when a user types a command into a server on the network, sudo will first
    look at the hostname of that server. If the user is authorized to perform that
    command on that server, then sudo allows it. Otherwise, sudo denies it. In a small
    to medium-sized business, it would probably work just fine to manually copy the
    master `sudoers` file to all the servers on the network. But, in a large enterprise,
    you'll want to streamline and automate the process. For this, you could use something
    like Puppet, Chef, or Ansible. (These three technologies are beyond the scope
    of this book, but you'll find plenty of books and video courses about all three
    of them at the Packt website.)
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，当用户在网络上的服务器上键入命令时，sudo首先查看该服务器的主机名。如果用户被授权在该服务器上执行该命令，那么sudo允许它。否则，sudo拒绝它。在中小型企业中，手动将主`sudoers`文件复制到网络上的所有服务器可能会很好用。但是，在大型企业中，您需要简化和自动化这个过程。为此，您可以使用Puppet、Chef或Ansible等工具。
    （这三种技术超出了本书的范围，但您可以在Packt网站上找到关于它们三者的大量书籍和视频课程。）
- en: All of these techniques will work on your Ubuntu VM as well as on the CentOS
    VM. The only catch is, Ubuntu doesn't come with any predefined command aliases,
    so you'll have to type them in yourself.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些技术在您的Ubuntu VM上以及在CentOS VM上都可以使用。唯一的问题是，Ubuntu没有预定义的命令别名，所以你必须自己输入它们。
- en: Anyway, I know that you're tired of reading, so let's do some work.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 无论如何，我知道你已经厌倦了阅读，所以让我们开始工作吧。
- en: Hands-on lab for assigning limited sudo privileges
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分配有限sudo特权的实践实验
- en: In this lab, you'll create some users and assign them different levels of privileges.
    To simplify things, we'll use the CentOS virtual machine.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个实验中，您将创建一些用户并为他们分配不同级别的特权。为了简化，我们将使用CentOS虚拟机。
- en: 'Log in to the CentOS virtual machine and create user accounts for Lionel, Katelyn,
    and Maggie:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到CentOS虚拟机，并为Lionel、Katelyn和Maggie创建用户帐户：
- en: '[PRE24]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Open `visudo`:'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`visudo`：
- en: '[PRE25]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Find the `STORAGE` command alias and remove the comment symbol from in front
    of it.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 找到`STORAGE`命令别名，并从其前面删除注释符号。
- en: 'Add the following lines to the end of the file, using tabs to separate the
    columns:'
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文件末尾添加以下行，使用制表符分隔列：
- en: '[PRE26]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Save the file and exit `visudo`.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 保存文件并退出`visudo`。
- en: 'To save time, we''ll use `su` to log into the different user accounts. You
    won''t need to log out of your own account to perform these steps. First, log
    in to Lionel''s account and verify that he has full sudo privileges by running
    several root-level commands:'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了节省时间，我们将使用`su`来登录不同的用户账户。您不需要注销自己的帐户来执行这些步骤。首先，登录Lionel的帐户，并通过运行几个root级别的命令来验证他是否拥有完整的sudo特权：
- en: '[PRE27]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: This time, log in as Katelyn and try to run some root-level commands. (Don't
    be too disappointed if they don't all work, though.)
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这次，以Katelyn的身份登录，并尝试运行一些root级别的命令。（不过，如果它们不都起作用，也不要太失望。）
- en: '[PRE28]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Finally, log in as Maggie, and run the same set of commands that you ran for
    Katelyn.
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，以Maggie的身份登录，并运行为Katelyn运行的相同一组命令。
- en: Keep in mind that although we only had three individual users for this lab,
    you could just as easily have handled more users by setting them up in user aliases
    or Linux groups.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 请记住，尽管我们在这个实验中只有三个单独的用户，但你可以通过在用户别名或Linux组中设置它们来处理更多的用户。
- en: Since sudo is such a great security tool, you would think that everyone would
    use it, right? Sadly, that's not the case. Pretty much any time you look at either
    a Linux tutorial website or a Linux tutorial YouTube channel, you'll see the person
    who's doing the demo logged in at the root user command prompt. In some cases,
    I've seen the person remotely logged in as the root user on a cloud-based virtual
    machine. Now, if logging in as the root user is already a bad idea, then logging
    in across the internet as the root user is an even worse idea. In any case, seeing
    everybody do these tutorial demos from the root user's shell drives me absolutely
    crazy.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 由于sudo是一个很好的安全工具，你会认为每个人都会使用它，对吧？遗憾的是，情况并非如此。几乎每当你查看Linux教程网站或Linux教程YouTube频道时，你都会看到正在进行演示的人以root用户命令提示符登录。在某些情况下，我甚至看到远程登录云虚拟机时以root用户身份登录的人。现在，如果已经以root用户身份登录是一个坏主意，那么通过互联网以root用户身份登录就更糟糕了。无论如何，看到每个人都从root用户的shell进行教程演示让我非常疯狂。
- en: Having said all this, there are some things that don't work with sudo. Bash
    shell internal commands, such as `cd` don't work with it, and injecting kernel
    values into the `/proc` filesystem also doesn't work with it. For tasks such as
    these, a person would have to go to the root command prompt. Still though, make
    sure that only users who absolutely have to use the root user command prompt have
    access to it.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管说了这么多，有一些事情在sudo中是行不通的。Bash shell内部命令，比如`cd`不能使用它，将内核值注入`/proc`文件系统也不能使用它。对于这样的任务，一个人必须转到root命令提示符。尽管如此，确保只有绝对需要使用root用户命令提示符的用户才能访问它。
- en: Advanced tips and tricks for using sudo
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用sudo的高级技巧和技巧
- en: Now that we've looked at the basics of setting up a good sudo configuration,
    we're confronted with a bit of a paradox. That is, even though sudo is a security
    tool, certain things that you can do with it can make your system even more insecure
    than it was. Let's see how to avoid that.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了设置良好的sudo配置的基础知识，我们面临一个悖论。也就是说，尽管sudo是一个安全工具，但你可以用它做的某些事情可能会使你的系统比以前更不安全。让我们看看如何避免这种情况。
- en: The sudo timer
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: sudo计时器
- en: By default, the sudo timer is set for 5 minutes. This means that once a user
    performs one `sudo` command and enters a password, he or she can perform another
    `sudo` command within 5 minutes without having to enter the password again. Although
    this is obviously handy, it can also be problematic if users were to walk away
    from their desks with a command terminal still open. If the 5 minute timer hasn't
    yet expired, someone else could come along and perform some root-level task. If
    your security needs require it, you can easily disable this timer by adding a
    line to the `Defaults` section of the `sudoers` file. This way, users will have
    to enter their passwords every time they run a `sudo` command. You can make this
    a global setting for all users, or you can just set it for certain individual
    users.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，sudo计时器设置为5分钟。这意味着一旦用户执行了一个`sudo`命令并输入了密码，他或她可以在5分钟内执行另一个`sudo`命令，而无需再次输入密码。尽管这显然很方便，但如果用户离开他们的桌子时仍然保持命令终端打开，这也可能会有问题。如果5分钟计时器尚未到期，其他人可能会来执行一些根级任务。如果您的安全需求需要，您可以通过向`sudoers`文件的`Defaults`部分添加一行来轻松禁用此计时器。这样，用户每次运行`sudo`命令时都必须输入他们的密码。您可以将此设置为所有用户的全局设置，也可以仅为某些个别用户设置。
- en: Hands-on lab for disabling the sudo timer
  id: totrans-123
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 禁用sudo计时器的实践实验
- en: For this lab, you'll disable the sudo timer on your CentOS VM.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 在本实验中，您将禁用CentOS VM上的sudo计时器。
- en: Log in to the same CentOS virtual machine that you used for the previous lab.
    We'll be using the user accounts that you've already created.
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到您用于上一个实验的相同的CentOS虚拟机。我们将使用您已经创建的用户帐户。
- en: 'At your own user account command-prompt, enter the following commands:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您自己的用户帐户命令提示符下，输入以下命令：
- en: '[PRE29]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: You'll see that you only needed to enter the password once to do all three commands.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 您会发现您只需要输入一次密码就可以执行所有三个命令。
- en: 'Open `visudo` with:'
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令打开`visudo`：
- en: '[PRE30]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'In the `Defaults` specification section of the file, add the following line:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在文件的`Defaults`规范部分中，添加以下行：
- en: '[PRE31]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Save the file and exit `visudo`.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 保存文件并退出`visudo`。
- en: Perform the commands that you performed in *Step 2*. This time, you should see
    that you have to enter a password every time.
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行您在*步骤2*中执行的命令。这一次，您会发现每次都需要输入密码。
- en: 'Open `visudo` and modify the line that you added so that it looks like this:'
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`visudo`并修改您添加的行，使其看起来像这样：
- en: '[PRE32]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Save the file and exit `visudo`.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 保存文件并退出`visudo`。
- en: From your own account shell, repeat the commands that you performed in *Step
    2*. Then, log in as Lionel and perform the commands again.
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从您自己的帐户shell中，重复您在*步骤2*中执行的命令。然后，以Lionel的身份登录并再次执行命令。
- en: Note that this same procedure also works for Ubuntu.
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 请注意，这个相同的过程也适用于Ubuntu。
- en: Preventing users from having root shell access
  id: totrans-140
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 防止用户具有root shell访问权限
- en: 'Let''s say that you want to set up a user with limited sudo privileges, but
    you did so by adding a line like this:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 假设您想要为具有有限sudo特权的用户设置一个用户，但是您通过添加类似于以下内容的行来实现：
- en: '[PRE33]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: I'm sorry to say that you haven't limited Maggie's access at all. You effectively
    gave her full sudo privileges with both the Bash shell and the Zsh shell. So,
    don't add lines like this to your `sudoers` because it will get you into trouble.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 很抱歉告诉您，您根本没有限制Maggie的访问权限。您实际上给了她Bash shell和Zsh shell的完全sudo特权。因此，请不要像这样向您的`sudoers`添加行，因为这会给您带来麻烦。
- en: Preventing users from using shell escapes
  id: totrans-144
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 防止用户使用shell转义
- en: 'Certain programs, especially text editors and pagers, have a handy *shell escape*
    feature. This allows a user to run a shell command without having to exit the
    program first. For example, from the command mode of the Vi and Vim editors, someone
    could run the `ls` command by doing `:!ls`. Executing the command would look like
    this:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 某些程序，特别是文本编辑器和分页器，具有方便的*shell转义*功能。这允许用户在不必先退出程序的情况下运行shell命令。例如，在Vi和Vim编辑器的命令模式中，某人可以通过执行`:!ls`来运行`ls`命令。执行该命令将如下所示：
- en: '[PRE34]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'The output would look like this:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '[PRE35]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Now, imagine that you want Frank to be able to edit the `sshd_config` file
    and only that file. You might be tempted to add a line to your sudo configuration
    that would look like this:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，假设您希望Frank能够编辑`sshd_config`文件，仅限于该文件。您可能会诱惑添加一行到您的sudo配置，看起来像这样：
- en: '[PRE36]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'This looks like it would work, right? Well, it doesn''t because once Frank
    has opened the `sshd_config` file with his sudo privilege, he can then use Vim''s
    shell escape feature to perform other root-level commands, which would include
    being able to edit other configuration files. You can fix this problem by having
    Frank use `sudoedit` instead of vim:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 这看起来应该可以工作，对吧？但实际上不行，因为一旦Frank使用他的sudo特权打开了`sshd_config`文件，他就可以使用Vim的shell转义功能执行其他根级命令，这将包括能够编辑其他配置文件。您可以通过让Frank使用`sudoedit`而不是vim来解决这个问题：
- en: '[PRE37]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '`sudoedit` has no shell escape feature, so you can safely allow Frank to use
    it.'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '`sudoedit`没有shell转义功能，因此您可以安全地允许Frank使用它。'
- en: 'Other programs that have a shell escape feature include the following:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 其他具有shell转义功能的程序包括以下内容：
- en: emacs
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: emacs
- en: less
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: less
- en: view
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: view
- en: more
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: more
- en: Preventing users from using other dangerous programs
  id: totrans-159
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 防止用户使用其他危险程序
- en: 'Some programs that don''t have shell escapes can still be dangerous if you
    give users unrestricted privileges to use them. These include the following:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 即使没有shell转义功能的某些程序，如果您给予用户无限制的使用特权，仍然可能会很危险。这些包括以下内容：
- en: cat
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: cat
- en: cut
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: cut
- en: awk
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: awk
- en: sed
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: sed
- en: If you must give someone sudo privileges to use one of these programs, it's
    best to limit their use to only specific files. And, that brings us to our next
    tip.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您必须授予某人sudo特权以使用其中一个程序，最好将其使用限制在特定文件中。这就引出了我们的下一个提示。
- en: Limiting the user's actions with commands
  id: totrans-166
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 限制用户使用命令的操作
- en: 'Let''s say that you create a sudo rule so that Sylvester can use the `systemctl`
    command:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 假设您创建了一个sudo规则，以便Sylvester可以使用`systemctl`命令：
- en: '[PRE38]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'This allows Sylvester to have full use of the `systemctl` features. He can
    control daemons, edit service files, shutdown or reboot, and every other function
    that `systemctl` does. That''s probably not what you want. It would be better
    to specify what `systemctl` functions that Sylvester is allowed to do. Let''s
    say that you want him to be able to control just the Secure Shell service. You
    can make the line look like this:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 这使得Sylvester可以充分利用`systemctl`的功能。他可以控制守护进程，编辑服务文件，关闭或重启，以及`systemctl`的其他功能。这可能不是你想要的。最好指定Sylvester被允许执行哪些`systemctl`功能。假设你希望他只能控制安全外壳服务。你可以让这行看起来像这样：
- en: '[PRE39]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'Sylvester can now do everything he needs to do with the Secure Shell service,
    but he can''t shut down or reboot the system, edit service files, or change systemd
    targets. But, what if you want Sylvester to do only certain specific actions with
    the Secure Shell service? Then, you''ll have to omit the wild card and specify
    all of the actions that you want for Sylvester to do:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: Sylvester现在可以做所有他需要做的安全外壳服务的事情，但他不能关闭或重启系统，编辑服务文件，或更改systemd目标。但是，如果你希望Sylvester只能对安全外壳服务执行某些特定的操作呢？那么，你将不得不省略通配符，并指定你希望Sylvester执行的所有操作：
- en: '[PRE40]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Now, Sylvester can only restart the Secure Shell service or check its status.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，Sylvester只能重新启动安全外壳服务或检查其状态。
- en: When writing sudo policies, you'll want to be aware of the differences between
    the different Linux and Unix distros on your network. For example, on Red Hat
    7 and CentOS 7 systems, the `systemctl` binary file is located in the `/usr/bin`
    directory. On Debian/Ubuntu systems, it's located in the `/bin` directory. If
    you have to roll out a `sudoers` file to a large enterprise network with mixed
    operating systems, you can use host aliases to ensure that servers will only allow
    the execution of commands that are appropriate for their operating systems.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 在编写sudo策略时，你需要了解网络上不同Linux和Unix发行版之间的差异。例如，在Red Hat 7和CentOS 7系统上，`systemctl`二进制文件位于`/usr/bin`目录中。在Debian/Ubuntu系统上，它位于`/bin`目录中。如果你必须向混合操作系统的大型企业网络部署`sudoers`文件，你可以使用主机别名来确保服务器只允许执行适合其操作系统的命令。
- en: Also, be aware that some system services have different names on different Linux
    distros. On Red Hat and CentOS systems, the Secure Shell service is `sshd`. On
    Debian/Ubuntu systems, it's just plain `ssh`.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，要注意一些系统服务在不同的Linux发行版上有不同的名称。在红帽和CentOS系统上，安全外壳服务是`sshd`。在Debian/Ubuntu系统上，它只是普通的`ssh`。
- en: Letting users run as other users
  id: totrans-176
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 让用户以其他用户身份运行
- en: 'In the following line, `(ALL)` means that Sylvester can run the `systemctl`
    commands as any user:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的这行中，`(ALL)`表示Sylvester可以以任何用户身份运行`systemctl`命令：
- en: '[PRE41]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'This effectively gives Sylvester root privileges for these commands because
    the root user is definitely any user. You could, if desired, change that `(ALL)`
    to `(root)` in order to specify that Sylvester can only run these commands as
    the root user:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 这实际上给了Sylvester这些命令的root权限，因为root用户绝对是任何用户。如果需要的话，可以将`(ALL)`更改为`(root)`，以指定Sylvester只能以root用户身份运行这些命令：
- en: '[PRE42]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Okay, there''s probably not much point in that because nothing changes. Sylvester
    had root privileges for these `systemct`l commands before, and he still has them
    now. But, there are more practical uses for this feature. Let''s say that Vicky
    is a database admin, and you want her to run as the `database` user:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，可能没有太多意义，因为没有什么改变。Sylvester以前对这些`systemctl`命令拥有root权限，现在仍然拥有。但是，这个功能还有更多实际的用途。假设Vicky是数据库管理员，你希望她以`database`用户身份运行：
- en: '[PRE43]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'Vicky could then run the command as the `database` user by entering the following
    code:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 然后Vicky可以以`database`用户的身份运行该命令，输入以下代码：
- en: '[PRE44]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: This is one of those features that you might not use that often, but keep it
    in mind anyway. You never know when it might come in handy.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个你可能不经常使用的功能，但无论如何要记住。你永远不知道什么时候会派上用场。
- en: Okay, this wraps it up for our discussion of sudo. Let's now turn our attention
    to ensuring the security of our regular users.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 好了，这就结束了我们对sudo的讨论。现在让我们把注意力转向确保我们普通用户的安全。
- en: Locking down users' home directories the Red Hat or CentOS way
  id: totrans-187
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 以红帽或CentOS的方式锁定用户的主目录
- en: This is another area where different Linux distro families do business differently
    from each other. As we shall see, each distro family comes with different default
    security settings. A security administrator who oversees a mixed environment of
    different Linux distros will need to take this into account.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 这是另一个领域，不同的Linux发行版家族之间的业务方式不同。正如我们将看到的，每个发行版家族都有不同的默认安全设置。监督不同Linux发行版混合环境的安全管理员需要考虑到这一点。
- en: 'One beautiful thing about Red Hat Enterprise Linux and all of its offspring,
    such as CentOS, is that they have better out-of-the-box security than any other
    Linux distro. This makes it quicker and easier to harden Red Hat-type systems
    because much of the work has already been done. One thing that''s already been
    done for us is locking down users'' home directories:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 红帽企业Linux及其所有后代，如CentOS，有一个美好的特点，就是它们的开箱即用安全性比其他任何Linux发行版都要好。这使得加固红帽类型系统变得更快更容易，因为很多工作已经完成。其中一个已经为我们完成的工作是锁定用户的主目录：
- en: '[PRE45]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'By default, the `useradd` utility on Red Hat-type systems creates user home
    directories with a permissions setting of `700`. This means that only the user
    who owns the home directory can access it. All other normal users are locked out.
    We can see why by looking at the `/etc/login.defs` file. Scroll down towards the
    bottom of the file, and you''ll see:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 在红帽类型系统上，默认情况下，`useradd`实用程序创建权限设置为`700`的用户主目录。这意味着只有拥有主目录的用户可以访问它。所有其他普通用户都被锁定了。我们可以通过查看`/etc/login.defs`文件来了解原因。向文件底部滚动，你会看到：
- en: '[PRE46]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: The `login.defs` file is one of two files where default settings for `useradd`
    are configured. This `UMASK` line is what determines the permissions values on
    home directories as they get created. Red Hat-type distros have it configured
    with the `077` value, which removes all permissions from the *group* and *others*.
    This `UMASK` line is in the `login.defs` file for all Linux distros, but Red Hat-type
    distros are the only ones that have `UMASK` set to such a restrictive value by
    default. Non-Red Hat distros usually have a `UMASK` value of `022`, which creates
    home directories with a permissions value of `755`. This allows everybody to enter
    everybody else's home directories and access each others' files.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: '`login.defs`文件是两个文件之一，用于配置`useradd`的默认设置。这个`UMASK`行决定了在创建家目录时的权限值。红帽类型的发行版将其配置为`077`值，这将从*组*和*其他*中删除所有权限。这个`UMASK`行在所有Linux发行版的`login.defs`文件中，但是红帽类型的发行版是唯一一个默认将`UMASK`设置为如此严格值的发行版。非红帽类型的发行版通常将`UMASK`值设置为`022`，这将创建权限值为`755`的家目录。这允许每个人进入其他人的家目录并访问彼此的文件。'
- en: Locking down users' home directories the Debian/Ubuntu way
  id: totrans-194
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 以Debian/Ubuntu方式锁定用户的家目录
- en: 'Debian and its offspring, such as Ubuntu, have two user creation utilities:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: Debian及其后代，如Ubuntu，有两个用户创建实用程序：
- en: '`useradd` on Debian/Ubuntu'
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Debian/Ubuntu上的`useradd`
- en: '`adduser` on Debian/Ubuntu'
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Debian/Ubuntu上的`adduser`
- en: useradd on Debian/Ubuntu
  id: totrans-198
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Debian/Ubuntu上的useradd
- en: 'The `useradd` utility is there, but Debian and Ubuntu don''t come with the
    handy preconfigured defaults as Red Hat and CentOS do. If you were to just do
    `sudo useradd frank` on a default Debian/Ubuntu machine, Frank would have no home
    directory and would be assigned the wrong default shell. So, to create a user
    account with `useradd` on a Debian or Ubuntu system, the command would look something
    like:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: '`useradd`实用程序是存在的，但是Debian和Ubuntu没有像Red Hat和CentOS那样方便的预配置默认设置。如果您在默认的Debian/Ubuntu机器上只是执行`sudo
    useradd frank`，Frank将没有家目录，并且将被分配错误的默认shell。因此，在Debian或Ubuntu系统上使用`useradd`创建用户帐户，命令看起来会像这样：'
- en: '[PRE47]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'In this command:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个命令中：
- en: '`-m` creates the home directory.'
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-m`创建家目录。'
- en: '`-d` specifies the home directory.'
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-d`指定家目录。'
- en: '`-s` specifies Frank''s default shell. (Without the `-s`, Debian/Ubuntu would
    assign to Frank the `/bin/sh` shell.)'
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-s`指定Frank的默认shell。（如果没有`-s`，Debian/Ubuntu将为Frank分配`/bin/sh` shell。）'
- en: 'When you look at the home directories, you''ll see that they''re wide open,
    with execute and read privileges for everybody:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 当您查看家目录时，您会发现它们是完全开放的，每个人都有执行和读取权限：
- en: '[PRE48]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'As you can see, Frank and I can get into each other''s stuff. (And no, I don''t
    want Frank getting into my stuff.) Each user could change the permissions on his
    or her own directory, but how many of your users would know how to do that? So,
    let''s fix that ourselves:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所看到的，Frank和我都可以进入对方的东西。（不，我不希望Frank进入我的东西。）每个用户都可以更改自己目录的权限，但是你的用户中有多少人知道如何做到这一点呢？因此，让我们自己来解决这个问题：
- en: '[PRE49]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Let''s see what we have now:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看现在有什么：
- en: '[PRE50]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: That looks much better.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来好多了。
- en: 'To change the default permissions setting for home directories, open `/etc/login.defs`
    for editing. Look for the line:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 要更改家目录的默认权限设置，请打开`/etc/login.defs`进行编辑。查找一行，上面写着：
- en: '[PRE51]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'Change it to:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 更改为：
- en: '[PRE52]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: Now, new users' home directories will get locked down on creation, just as they
    do with Red Hat.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，新用户的家目录将在创建时被锁定，就像红帽一样。
- en: adduser on Debian/Ubuntu
  id: totrans-217
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Debian/Ubuntu上的`adduser`
- en: The `adduser` utility is an interactive way to create user accounts and passwords
    with a single command, which is unique to the Debian family of Linux distros.
    Most of the default settings that are missing from the Debian implementation of
    `useradd` are already set for `adduser`. The only thing wrong with the default
    settings is that it creates user home directories with the wide-open `755` permissions
    value. Fortunately, that's easy to change. (We'll see how in just a bit.)
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: '`adduser`实用程序是一种交互式方式，可以使用单个命令创建用户帐户和密码，这是Debian系列Linux发行版独有的。大多数缺少的默认设置已经为`adduser`设置好了。默认设置唯一的问题是它使用宽松的`755`权限值创建用户家目录。幸运的是，这很容易更改。（我们马上就会看到如何更改。）'
- en: 'Although `adduser` is handy for just casual creation of user accounts, it doesn''t
    offer the flexibility of `useradd` and it isn''t suitable for use in shell scripting.
    One thing that `adduser` will do that `useradd` won''t is to automatically encrypt
    a user''s home directory as you create the account. To make it work, you''ll first
    have to install the `ecryptfs-utils` package. So, to create an account with an
    encrypted home directory for Cleopatra, you do:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管`adduser`对于仅仅创建用户帐户很方便，但它不像`useradd`那样灵活，并且不适合在shell脚本中使用。`adduser`能做的一件事是在创建帐户时自动加密用户的家目录。要使其工作，您首先必须安装`ecryptfs-utils`软件包。因此，要为Cleopatra创建一个带加密家目录的帐户，您可以这样做：
- en: '[PRE53]'
  id: totrans-220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'The first time that Cleopatra logs in, she''ll need to run the `ecryptfs-unwrap-passphrase`
    command that''s mentioned in the preceding output. She''ll then want to write
    her passphrase down and store it in a safe place:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 第一次Cleopatra登录时，她需要运行前面输出中提到的`ecryptfs-unwrap-passphrase`命令。然后她需要把密码写下来并存放在安全的地方：
- en: '[PRE54]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: We'll look at the whole encryption thing more in detail when we get to the encryption
    chapter.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们到达加密章节时，我们将更详细地研究整个加密过程。
- en: Hands-on lab for configuring adduser
  id: totrans-224
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置adduser的实践实验
- en: 'For this lab, we''ll be working with the `adduser` utility, which is peculiar
    to Debian/Ubuntu systems:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个实验中，我们将使用`adduser`实用程序，这是Debian/Ubuntu系统特有的：
- en: 'On your Ubuntu virtual machine, open the `/etc/adduser.conf` file for editing.
    Find the line that says:'
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的Ubuntu虚拟机上，打开`/etc/adduser.conf`文件进行编辑。找到一行，上面写着：
- en: '[PRE55]'
  id: totrans-227
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'Change it to:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 更改为：
- en: '[PRE56]'
  id: totrans-229
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: Save the file and exit the text editor.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 保存文件并退出文本编辑器。
- en: 'Install the `ecryptfs-utils` package:'
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装`ecryptfs-utils`软件包：
- en: '[PRE57]'
  id: totrans-232
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'Create a user account with encrypted home directory for Cleopatra and then
    view the results:'
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为Cleopatra创建一个带加密家目录的用户帐户，然后查看结果：
- en: '[PRE58]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'Log in as Cleopatra and run the `ecryptfs-unwrap-passphrase` command:'
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以Cleopatra的身份登录并运行`ecryptfs-unwrap-passphrase`命令：
- en: '[PRE59]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: Note that some of the information that `adduser` asks for is optional, and you
    can just hit the *Enter* key for those items.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，`adduser`要求的一些信息是可选的，您可以只按*Enter*键输入这些项目。
- en: Enforcing strong password criteria
  id: totrans-238
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 强制执行强密码标准
- en: 'You wouldn''t think that a benign-sounding topic such as *strong password criteria*
    would be so controversial, but it is. The conventional wisdom that you''ve undoubtedly
    heard for your entire computer career says:'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能不会认为一个听起来无害的话题，比如*强密码标准*会如此具有争议性，但事实上是如此。您无疑已经听说过整个计算机生涯中的常识说法：
- en: Make passwords of a certain minimum length
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 制作一定最小长度的密码
- en: Make passwords that consist of a combination of uppercase letters, lowercase
    letters, numbers, and special characters
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 制作由大写字母、小写字母、数字和特殊字符组成的密码
- en: Ensure that passwords don't contain any words that are found in the dictionary
    or that are based on the users' own personal data
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保密码不包含字典中找到的任何单词，也不基于用户自己的个人数据
- en: Force users to change their passwords on a regular basis
  id: totrans-243
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 强制用户定期更改他们的密码
- en: But, using your favorite search engine, you'll see that different experts disagree
    on the details of these criteria. For example, you'll see disagreements about
    whether passwords should be changed every 30, 60, or 90 days, disagreements about
    whether all four types of characters need to be in a password, and even disagreements
    on what the minimum length of a password should be.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，使用您喜欢的搜索引擎，您会发现不同的专家对这些标准的细节存在分歧。例如，您会看到关于密码是否应该每30、60或90天更改的分歧，关于密码是否需要包含所有四种类型的字符的分歧，甚至关于密码的最小长度应该是多少的分歧。
- en: The most interesting controversy of all comes from—of all places—the guy who
    invented the preceding criteria to begin with. He now says that it's all bunk
    and regrets having come up with it. He now says that we should be using passphrases
    that are long, yet easy to remember. He also says that they should be changed
    only if they've been breached.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 最有趣的争议来自于——所有地方中最有趣的争议。他现在说，我们应该使用长而又容易记住的口令。他还说，只有在被破坏后才应该更改它们。
- en: Bill Burr, the former National Institutes of Standards and Technology engineer
    who created the strong password criteria that I've outlined earlier, shares his
    thoughts about why he now disavows his own work.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 比尔·伯尔是前国家标准与技术研究所的工程师，他创建了我之前概述的强密码标准，他分享了自己为什么现在否定自己的工作的想法。
- en: 'Refer to: [https://www.pcmag.com/news/355496/you-might-not-need-complex-alphanumeric-passwords-after-all](https://www.pcmag.com/news/355496/you-might-not-need-complex-alphanumeric-passwords-after-all).'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 参考：[https://www.pcmag.com/news/355496/you-might-not-need-complex-alphanumeric-passwords-after-all](https://www.pcmag.com/news/355496/you-might-not-need-complex-alphanumeric-passwords-after-all)。
- en: However, having said all that, there is the reality that most organizations
    are still wedded to the idea of using complex passwords that regularly expire,
    and you'll have to abide by their rules if you can't convince them otherwise.
    And besides, if you are using traditional passwords, you do want them to be strong
    enough to resist any sort of password attack. So now, we'll take a look at the
    mechanics of enforcing strong password criteria on a Linux system.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，尽管如此，现实是大多数组织仍然固守使用定期过期的复杂密码的想法，如果你无法说服他们改变想法，你就必须遵守他们的规定。而且，如果你使用传统密码，你确实希望它们足够强大，能够抵抗任何形式的密码攻击。所以现在，我们将看一下在Linux系统上强制执行强密码标准的机制。
- en: I have to confess that I had never before thought to try creating a passphrase
    to use in place of a password on a Linux system. So, I just now tried it on my
    CentOS virtual machine to see if it would work.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 我必须承认，我以前从未想过在Linux系统上尝试创建口令来替代密码。所以，我刚刚在我的CentOS虚拟机上尝试了一下，看看它是否有效。
- en: I created an account for Maggie, my black-and-white tuxedo kitty. For her password,
    I entered the passphrase, `I like other kitty cats`. You may think, "*Oh, that's
    terrible. This doesn't meet any complexity criteria, and it uses dictionary words.
    How is that secure?*" But, the fact that it's a phrase with distinct words separated
    by blank spaces does make it secure and very difficult to brute-force.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 我为我的黑白礼服猫玛吉创建了一个账户。对于她的密码，我输入了口令“我喜欢其他猫”。你可能会想，“哦，那太糟糕了。这不符合任何复杂性标准，而且使用了字典中的单词。这怎么安全？”但是，事实上，这是一个由空格分隔的短语，这使得它安全且非常难以暴力破解。
- en: Now, in real life, I would never create a passphrase that expresses my love
    for cats because it's not hard to find out that I really do love cats. Rather,
    I would choose a passphrase about some more obscure part of my life that nobody
    but me knows about.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在现实生活中，我永远不会创建一个表达我对猫的爱的口令，因为很容易发现我真的很爱猫。相反，我会选择一个关于我生活中更隐秘的部分的口令，除了我之外没有人知道。
- en: In any case, there are two advantages of passphrases over passwords. They're
    more difficult to crack than traditional passwords, yet they're easier for users
    to remember. For extra security though, just don't create passphrases about a
    fact of your life that everybody knows about.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 无论如何，与密码相比，口令有两个优点。它们比传统密码更难破解，但对用户来说更容易记住。但是为了额外的安全性，不要创建关于每个人都知道的生活事实的口令。
- en: Installing and configuring pwquality
  id: totrans-253
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装和配置pwquality
- en: 'We''ll be using the `pwquality` module for **PAM** (**Pluggable Authentication
    Module**). This is a newer technology that has replaced the old `cracklib` module.
    On a Red Hat 7 or CentOS 7 system, `pwquality` is installed by default, even if
    you do a minimal installation. If you `cd` into the `/etc/pam.d` directory, you
    can do a `grep` operation to see that the PAM configuration files are already
    set up. The `retry=3` means that a user will only have three tries to get the
    password right when logging into the system:'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用`pwquality`模块进行**PAM**（**可插拔认证模块**）的设置。这是一种较新的技术，已经取代了旧的`cracklib`模块。在Red
    Hat 7或CentOS 7系统上，默认安装了`pwquality`，即使进行了最小安装。如果你`cd`进入`/etc/pam.d`目录，你可以进行`grep`操作，查看PAM配置文件是否已经设置好。`retry=3`表示用户在登录系统时只有三次尝试输入密码的机会。
- en: '[PRE60]'
  id: totrans-255
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'For your Ubuntu system, you''ll need to install `pwquality` yourself. You''ll
    do that with the command:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 对于你的Ubuntu系统，你需要自己安装`pwquality`。你可以使用以下命令来安装：
- en: '[PRE61]'
  id: totrans-257
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'We''ll now `cd` into the `/etc/pam.d` directory and perform the same `grep`
    command that we did before. We''ll see that installing the `libpam-pwquality`
    modules automatically updates the PAM configuration files:'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们`cd`进入`/etc/pam.d`目录，并执行与之前相同的`grep`命令。我们会看到安装`libpam-pwquality`模块会自动更新PAM配置文件：
- en: '[PRE62]'
  id: totrans-259
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: The rest of the procedure is the same for both operating systems and consists
    of just editing the `/etc/security/pwquality.conf` file. When you open this file
    in your text editor, you'll see that everything is commented out, which means
    that no password complexity criteria are in effect. You'll also see that it's
    very well-documented because every setting has its own explanatory comment.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 对于两种操作系统，其余的步骤都是一样的，只需要编辑`/etc/security/pwquality.conf`文件。当你在文本编辑器中打开这个文件时，你会发现所有内容都被注释掉了，这意味着没有密码复杂性标准生效。你还会发现它有很好的文档说明，因为每个设置都有自己的解释性注释。
- en: 'You can set password complexity criteria however you want just by uncommenting
    the appropriate lines and setting the proper values. Let''s take a look at just
    one setting:'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以根据需要设置密码复杂性标准，只需取消相应行的注释并设置适当的值。让我们看看其中一个设置：
- en: '[PRE63]'
  id: totrans-262
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'The minimum length setting works on a credit system. This means that for every
    different type of character class in the password, the minimum required password
    length will be reduced by one character. For example, let''s set the `minlen`
    to a value of `19` and try to assign Katelyn the password, `turkeylips`:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 最小长度设置是基于credit系统的。这意味着对于密码中的每一种不同类型的字符类，最小要求的密码长度将减少一个字符。例如，让我们将`minlen`设置为`19`，并尝试为Katelyn分配密码`turkeylips`：
- en: '[PRE64]'
  id: totrans-264
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: 'Because the lowercase characters in `turkeylips` count as credit for one type
    of character class, we''re only required to have 18 characters instead of 19\.
    If we try this again with `TurkeyLips`, we''ll get:'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 因为`turkeylips`中的小写字符计为一个字符类的credit，所以我们只需要有18个字符而不是19个。如果我们再试一次，使用`TurkeyLips`，我们会得到：
- en: '[PRE65]'
  id: totrans-266
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: This time, the uppercase `T` and uppercase `L` count as a second character class,
    so we only need to have 17 characters in the password.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 这一次，大写的`T`和大写的`L`计为第二种字符类，所以我们只需要密码中有17个字符。
- en: 'Just below the `minlen` line, you''ll see the credit lines. Let''s say that
    you don''t want lowercase letters to count toward your credits. You would find
    this line:'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 在`minlen`行的下面，你会看到credit行。假设你不希望小写字母计入credit，你会找到这一行：
- en: '[PRE66]'
  id: totrans-269
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: 'Also, you would change the `1` to a `0`:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，你需要将`1`改为`0`：
- en: '[PRE67]'
  id: totrans-271
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: 'Then, try assigning Katelyn `turkeylips` as a password:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，尝试为Katelyn分配密码`turkeylips`：
- en: '[PRE68]'
  id: totrans-273
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: This time, the `pwquality` really does want 19 characters. If we set a credit
    value to something higher than one, we would get credit for multiple characters
    of the same class type up to that value.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 这一次，`pwquality`确实需要19个字符。如果我们将credit值设置为大于1的值，我们将得到同一类类型的多个字符的credit，直到达到该值。
- en: 'We can also set the credit values to negative numbers in order to require a
    certain number of characters types in a password. We have the following example:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 我们也可以将credit值设置为负数，以要求密码中包含一定数量的字符类型。我们有以下示例：
- en: '[PRE69]'
  id: totrans-276
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: 'This would require at least three digits in a password. However, it''s a really
    a bad idea to use this feature because someone who''s doing a password attack
    would soon find the patterns that you require, which would help the attacker to
    more precisely direct the attack. If you need to require that a password has multiple
    character types, it would be better to use the `minclass` parameter:'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 这将要求密码中至少有三个数字。然而，使用这个功能是一个非常糟糕的主意，因为试图破解密码的人很快就会发现你要求的模式，这将帮助攻击者更精确地发起攻击。如果你需要要求密码包含多种字符类型，最好使用`minclass`参数。
- en: '[PRE70]'
  id: totrans-278
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: It's already set to a value of three, which would require characters from three
    different classes. To use this value, all you have to do is to remove the comment
    symbol.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 它已经设置为3，这将要求密码中包含来自三种不同类的字符。要使用这个值，你只需要删除注释符。
- en: The rest of the parameters in `pwquality.conf` work pretty much the same way,
    and each one has a well-written comment to explain what it does.
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: '`pwquality.conf`中的其余参数基本上都是以相同的方式工作，每个参数都有一个很好的注释来解释它的作用。'
- en: If you use your sudo privilege to set someone else's password, the system will
    complain if you create a password that doesn't meet complexity criteria, but it
    will let you do it. If a normal user were to try to change his or her own password
    without sudo privileges, the system would not allow a password that doesn't meet
    complexity criteria.
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用sudo权限来设置其他人的密码，系统会抱怨如果你创建的密码不符合复杂性标准，但它会允许你这样做。如果一个普通用户试图在没有sudo权限的情况下更改自己的密码，系统将不允许设置不符合复杂性标准的密码。
- en: Hands-on lab for setting password complexity criteria
  id: totrans-282
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置密码复杂性标准的实践实验
- en: 'For this lab, you can use either the CentOS or Ubuntu virtual machine, as desired.
    The only difference is that you won''t perform *Step 1* for CentOS:'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个实验中，你可以根据需要使用CentOS或Ubuntu虚拟机。唯一的区别是你不需要为CentOS执行*步骤1*：
- en: 'For Ubuntu only, install the `libpam-pwquality` package:'
  id: totrans-284
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 仅适用于Ubuntu，安装`libpam-pwquality`包：
- en: '[PRE71]'
  id: totrans-285
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: 'Open the `/etc/security/pwquality.conf` file in your preferred text editor.
    Remove the comment symbol from in front of the `minlen` line and change the value
    to `19`. It should now look like this:'
  id: totrans-286
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您喜欢的文本编辑器中打开`/etc/security/pwquality.conf`文件。从`minlen`行前面删除注释符号，并将值更改为`19`。现在应该看起来像这样：
- en: '[PRE72]'
  id: totrans-287
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: Save the file and exit the editor.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 保存文件并退出编辑器。
- en: Create a user account for Goldie and attempt to assign her the passwords, `turkeylips`,
    `TurkeyLips`, and `Turkey93Lips`. Note the change in each warning message.
  id: totrans-289
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为Goldie创建一个用户帐户，并尝试为她分配密码，`turkeylips`，`TurkeyLips`和`Turkey93Lips`。注意每个警告消息的变化。
- en: 'In the `pwquality.conf` file, comment out the `minlen` line. Uncomment the
    `minclass` line and the `maxclassrepeat` line. Change the `maxclassrepeat` value
    to `5`. The lines should now look like:'
  id: totrans-290
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`pwquality.conf`文件中，注释掉`minlen`行。取消注释`minclass`行和`maxclassrepeat`行。将`maxclassrepeat`值更改为`5`。现在应该看起来像：
- en: '[PRE73]'
  id: totrans-291
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: Save the file and exit the text editor.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 保存文件并退出文本编辑器。
- en: Try assigning various passwords that don't meet the complexity criteria that
    you've set to Goldie's account and view the results.
  id: totrans-293
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 尝试为Goldie的帐户分配不符合您设置的复杂性标准的各种密码，并查看结果。
- en: 'In the `/etc/login.defs` file on your CentOS machine, you''ll see the line:'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的CentOS机器上的`/etc/login.defs`文件中，您会看到以下行：
- en: '`PASS_MIN_LEN    5`'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: '`PASS_MIN_LEN 5`'
- en: Supposedly, this is to set the minimum password length, but in reality, `pwquality`
    overrides it. So, you could set this value to anything at all, and it would have
    no effect.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 据说这是设置最小密码长度，但实际上，`pwquality`会覆盖它。因此，您可以将此值设置为任何值，它都不会起作用。
- en: Setting and enforcing password and account expiration
  id: totrans-297
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置和执行密码和帐户到期
- en: Something you never want is to have unused user accounts remain active. There
    have been incidents where an administrator set up user accounts for temporary
    usage, such as for a conference, and then just forgot about them after the accounts
    were no longer needed. Another example would be if your company were to hire contract
    workers whose contract expires on a specific date. Allowing those accounts to
    remain active and accessible after the temporary employees leave the company would
    be a huge security problem. In cases like these, you want a way to ensure that
    temporary user accounts aren't forgotten about when they're no longer needed.
    If your employer subscribes to the conventional wisdom that users should change
    their passwords on a regular basis, then you'll also want to ensure that it gets
    done.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 您绝对不希望未使用的用户帐户保持活动状态。曾经发生过管理员为临时使用设置用户帐户的情况，例如为会议设置用户帐户，然后在不再需要帐户后就忘记了它们。另一个例子是，如果您的公司雇佣的合同工合同在特定日期到期。允许这些帐户在临时员工离开公司后保持活动和可访问性将是一个巨大的安全问题。在这种情况下，您需要一种方法来确保在不再需要时不会忘记临时用户帐户。如果您的雇主认同用户应定期更改密码的传统智慧，那么您还需要确保这样做。
- en: Password expiration data and account expiration data are two different things.
    They can be set either separately or together. When someone's password expires,
    he or she can change it, and everything will be all good. If somebody's account
    expires, only someone with the proper admin privileges can unlock it.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 密码到期数据和帐户到期数据是两回事。它们可以分别设置，也可以一起设置。当某人的密码过期时，他或她可以更改密码，一切都会很好。如果有人的帐户到期，只有具有适当管理员权限的人才能解锁它。
- en: To get started, take a look at the expiry data for your own account. (Note that
    you won't need sudo privileges to look at your own data, but you will still need
    to specify your own username.)
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始，请查看您自己帐户的到期日期。（请注意，您不需要sudo权限来查看您自己的数据，但您仍然需要指定您自己的用户名。）
- en: '[PRE74]'
  id: totrans-301
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: 'You can see here that no expiration data have been set. Everything here is
    set according to the out-of-box system default values. Other than the obvious
    items, here''s a breakdown of what you see:'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在这里看到没有设置到期日期。这里的一切都是根据出厂默认值设置的。除了明显的项目之外，这里是您看到的内容的详细说明：
- en: '**Password inactive**: If this were set to a positive number, I would have
    that many days to change an expired password before the system would lock out
    my account.'
  id: totrans-303
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**密码无效**：如果这被设置为一个正数，我的帐户在系统锁定我的帐户之前将有那么多天时间更改过期的密码。'
- en: '**Minimum number of days between password change**: Because this is set to
    `0`, I can change my password as often as I like. If it were set to a positive
    number, I would have to wait that number of days after changing my password before
    I could change it again.'
  id: totrans-304
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 密码更改之间的最少天数：因为这被设置为`0`，我可以随意更改我的密码。如果它被设置为一个正数，我必须在更改密码后等待那么多天才能再次更改密码。
- en: '**Maximum number of days between password change**: This is set to the default
    value of `99999`, meaning that my password will never expire.'
  id: totrans-305
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**密码更改之间的最大天数**：这被设置为默认值`99999`，意味着我的密码永远不会过期。'
- en: '**Number of days warning before password expires**: The default value is `7`,
    but that''s rather meaningless when the password is set to never expire.'
  id: totrans-306
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**密码到期前的天数警告**：默认值为`7`，但当密码设置为永不过期时，这是毫无意义的。'
- en: With the `chage` utility, you can either set password and account expiration
    data for other users or you use the `-l` option to view expiration data. Any unprivileged
    user can use `chage -l` without sudo to view his or her own data. To either set
    data or view someone else's data, you need sudo. We'll take a closer look at `chage`
    a bit later.
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`chage`实用程序，您可以为其他用户设置密码和帐户到期数据，或者使用`-l`选项查看到期数据。任何非特权用户都可以使用`chage -l`而无需sudo来查看自己的数据。要设置数据或查看其他人的数据，您需要sudo。我们稍后将更仔细地看看`chage`。
- en: 'Before we look at how to change expiration data, let''s first look at where
    the default settings are stored. We''ll first look at the `/etc/login.defs` file.
    The three relevant lines are:'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们看如何更改到期日期之前，让我们首先看看默认设置存储在哪里。我们首先看看`/etc/login.defs`文件。三行相关的行是：
- en: '[PRE75]'
  id: totrans-309
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: You can edit these values to fit your organization's needs. For example, changing
    `PASS_MAX_DAYS` to a value of `30` would cause all new user passwords from that
    point on to have a 30 day expiration data. (By the way, setting the default password
    expiry data in `login.defs` works for both Red Hat or CentOS and Debian/Ubuntu.)
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以编辑这些值以适应您组织的需求。例如，将`PASS_MAX_DAYS`更改为`30`的值将导致从那时起所有新用户密码的到期日期为30天。（顺便说一句，在`login.defs`中设置默认密码到期日期对于Red
    Hat或CentOS和Debian/Ubuntu都适用。）
- en: Configuring default expiry data for useradd – for Red Hat or CentOS only
  id: totrans-311
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为useradd配置默认到期日期-仅适用于Red Hat或CentOS
- en: The `/etc/default/useradd` file has the rest of the default settings. In this
    case, we'll look at the one from the CentOS machine.
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: '`/etc/default/useradd`文件包含其余的默认设置。在这种情况下，我们将查看来自CentOS机器的设置。'
- en: Ubuntu also has this same `useradd` configuration file, but it doesn't work.
    No matter how you configure it, the Ubuntu version of `useradd` just won't read
    it. So, the write-up about this file only applies to Red Hat or CentOS.
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: Ubuntu也有相同的`useradd`配置文件，但它不起作用。无论您如何配置，Ubuntu版本的`useradd`都不会读取它。因此，关于此文件的说明仅适用于Red
    Hat或CentOS。
- en: '[PRE76]'
  id: totrans-314
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: 'The `EXPIRE=` line sets the default expiration date for new user accounts.
    By default, there is no default expiration date. `INACTIVE=-1` means that user
    accounts won''t be automatically locked out after the users'' passwords expire.
    If we set this to a positive number, then any new users will have that many days
    to change an expired password before the account gets locked. To change the defaults
    in the `useradd` file, you can either hand-edit the file or use `useradd -D` with
    the appropriate option switch for the item that you want to change. For example,
    to set a default expiration date of December 31, 2019, the command would be:'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: '`EXPIRE=`行设置了新用户帐户的默认到期日期。默认情况下，没有默认到期日期。`INACTIVE=-1`表示用户帐户在用户密码过期后不会自动锁定。如果我们将其设置为正数，那么任何新用户在帐户被锁定之前将有这么多天来更改过期密码。要更改`useradd`文件中的默认值，您可以手动编辑文件，也可以使用`useradd
    -D`和适当的选项开关来更改要更改的项目。例如，要设置默认到期日期为2019年12月31日，命令将是：'
- en: '[PRE77]'
  id: totrans-316
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: 'To see the new configuration, you can either open the `useradd` file or just
    do `sudo useradd -D`:'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看新配置，您可以打开`useradd`文件，也可以执行`sudo useradd -D`：
- en: '[PRE78]'
  id: totrans-318
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: 'You''ve now set it so that any new user accounts that get created will have
    the same expiration date. You can do the same thing with either the `INACTIVE`
    setting or the `SHELL` setting:'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在已经设置了任何新创建的用户帐户都具有相同的到期日期。您也可以使用`INACTIVE`设置或`SHELL`设置来做同样的事情：
- en: '[PRE79]'
  id: totrans-320
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: Now, any new user accounts that get created will have the Zsh shell set as the
    default shell and will have to have expired passwords changed within five days
    to prevent having the account automatically locked out.
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，任何新创建的用户帐户都将具有Zsh shell设置为默认shell，并且必须在五天内更改过期密码，以防止帐户被自动锁定。
- en: '`useradd` doesn''t do any safety checks to ensure that the default shell that
    you''ve assigned is installed on the system. In our case, Zsh isn''t installed,
    but `useradd` will still allow you to create accounts with Zsh as the default
    shell.'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: '`useradd`不会执行任何安全检查，以确保您分配的默认shell已安装在系统上。在我们的情况下，Zsh没有安装，但`useradd`仍然允许您创建具有Zsh作为默认shell的帐户。'
- en: So, just how useful is this `useradd` configuration feature in real life? Probably
    not that much, unless you need to create a whole bunch of user accounts at once
    with the same settings. Even so, a savvy admin would just automate the process
    with a shell script, rather than messing around with this configuration file.
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，这个`useradd`配置功能在现实生活中有多有用呢？可能并不那么有用，除非您需要一次性创建大量具有相同设置的用户帐户。即使如此，精明的管理员也会使用shell脚本自动化该过程，而不是在此配置文件中搞来搞去。
- en: Setting expiry data on a per-account basis, with useradd and usermod
  id: totrans-324
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用useradd和usermod为每个帐户设置到期日期
- en: You might find it useful to set the default password expiry data in `login.defs`,
    but you probably won't find it too useful to configure the `useradd` configuration
    file. Really, what are the chances that you'll want to create all user accounts
    with the same account expiration date? Setting password expiry data in `login.defs`
    is more useful because you'll just be saying that you want new passwords to expire
    within a certain number of days, rather than to have them all expire on a specific
    date.
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能会发现在`login.defs`中设置默认密码到期日期很有用，但您可能不会发现在`useradd`配置文件中配置很有用。实际上，您想要创建所有用户帐户具有相同的帐户到期日期的几率有多大呢？在`login.defs`中设置密码到期日期更有用，因为您只需说明您希望新密码在特定天数内到期，而不是让它们在特定日期到期。
- en: 'Most likely, you''ll want to set account expiry data on a per-account basis,
    depending on whether you know that the accounts will no longer be needed as of
    a specific date. There are three ways that you can do this:'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 很可能，您会根据您知道帐户将在特定日期不再需要的情况来为每个帐户设置帐户到期日期。您可以通过以下三种方式来实现这一点：
- en: Use `useradd` with the appropriate option switches to set expiry data as you
    create the accounts. (If you need to create a whole bunch of accounts at once
    with the same expiry data, you can automate the process with a shell script.)
  id: totrans-327
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`useradd`命令和适当的选项开关来在创建帐户时设置到期日期。（如果您需要一次性创建大量帐户，并且它们具有相同的到期日期，您可以使用shell脚本自动化该过程。）
- en: Use `usermod` to modify expiry data on existing accounts. (The beautiful thing
    about `usermod` is that it uses the same option switches as `useradd`.)
  id: totrans-328
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`usermod`来修改现有帐户的到期日期。（`usermod`的美妙之处在于它使用与`useradd`相同的选项开关。）
- en: Use `chage` to modify expiry data on existing accounts. (This one uses a whole
    different set of option switches.)
  id: totrans-329
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`chage`来修改现有帐户的到期日期。（这个命令使用完全不同的一组选项开关。）
- en: 'You can use `useradd` and `usermod` to set account expiry data, but not for
    setting password expiry data. The only two option switches that affect account
    expiry data are:'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用`useradd`和`usermod`来设置帐户到期日期，但不能用于设置密码到期日期。影响帐户到期日期的唯一两个选项开关是：
- en: '`-e`: Use this to set an expiration date for the account, in the form YYYY-MM-DD'
  id: totrans-331
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-e`：使用此选项为帐户设置到期日期，格式为YYYY-MM-DD'
- en: '`-f`: Use this to set the number of days after the user''s password expires
    that you want for his or her account to get locked out'
  id: totrans-332
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-f`：使用此选项设置用户密码过期后要锁定其帐户的天数'
- en: 'Let''s say that you want to create an account for Charlie that will expire
    at the end of 2020\. On a Red Hat or CentOS machine, you could enter the following:'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 假设您想为Charlie创建一个帐户，该帐户将在2020年底到期。在红帽或CentOS机器上，您可以输入以下内容：
- en: '[PRE80]'
  id: totrans-334
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: 'On a non-Red Hat or CentOS machine, you''d have to add the option switches
    that create the home directory and assign the correct default shell:'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 在非红帽或CentOS机器上，您需要添加选项开关来创建主目录并分配正确的默认shell：
- en: '[PRE81]'
  id: totrans-336
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: 'Use `chage -l` to verify what you''ve entered:'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`chage -l`验证您输入的内容：
- en: '[PRE82]'
  id: totrans-338
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: 'Now, let''s say that Charlie''s contract has been extended, and you need to
    change his account expiration to the end of January, 2021\. You''ll use `usermod`
    the same way on any Linux distro:'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，假设Charlie的合同已经延长，您需要将他的帐户到期日期更改为2021年1月底。您可以在任何Linux发行版上以相同的方式使用`usermod`：
- en: '[PRE83]'
  id: totrans-340
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: 'Again, verify that everything is correct with `chage -l`:'
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 再次使用`chage -l`验证一切是否正确：
- en: '[PRE84]'
  id: totrans-342
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: 'Optionally, you can set the number of days before an account with an expired
    password will get locked out:'
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 可选地，您可以设置带有过期密码的帐户在被锁定之前的天数：
- en: '[PRE85]'
  id: totrans-344
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: But, if you were to do that now, you wouldn't see any difference in the `chage
    -l` output because we still haven't set an expiration data for Charlie's password.
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，如果您现在这样做，您不会看到`chage -l`输出中的任何差异，因为我们仍然没有为Charlie的密码设置到期日期。
- en: Setting expiry data on a per-account basis, with chage
  id: totrans-346
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用`chage`在每个帐户上设置到期日期
- en: 'You would only use `chage` to modify existing accounts, and you would use it
    for setting either an account expiration or a password expiration. Here are the
    relevant option switches:'
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 您只能使用`chage`来修改现有帐户，并且您将用它来设置帐户到期或密码到期。以下是相关的选项开关：
- en: '| `-d` | If you use the `-d 0` option on someone''s account, you''ll force
    the user to change his or her password on their next login. |'
  id: totrans-348
  prefs: []
  type: TYPE_TB
  zh: '|`-d`|如果您在某人的帐户上使用`-d 0`选项，您将强制用户在下次登录时更改密码。'
- en: '| `-E` | This is equivalent to the lower-case `-e` for `useradd` or `usermod`.
    It sets the expiration date for the user account. |'
  id: totrans-349
  prefs: []
  type: TYPE_TB
  zh: '|`-E`|这相当于`useradd`或`usermod`的小写`-e`。它设置了用户帐户的到期日期。'
- en: '| `-I` | This is equivalent to `-f` for `useradd` or `usermod`. It sets the
    number of days before an account with an expired password will be locked out.
    |'
  id: totrans-350
  prefs: []
  type: TYPE_TB
  zh: '|`-I`|这相当于`useradd`或`usermod`的`-f`。它设置了带有过期密码的帐户在被锁定之前的天数。'
- en: '| `-m` | This sets the minimum number of days between password changes. In
    other words, if Charlie changes his password today, a `-m 5` option will force
    him to wait five days before he can change his password again. |'
  id: totrans-351
  prefs: []
  type: TYPE_TB
  zh: '|`-m`|这将设置更改密码之间的最小天数。换句话说，如果Charlie今天更改了密码，`-m 5`选项将强制他等待五天才能再次更改密码。'
- en: '| `-M` | This sets the maximum number of days before a password expires. (Be
    aware though that if Charlie last set his password 89 days ago, using a `-M 90`
    option on his account will cause his password to expire tomorrow, not 90 days
    from now.) |'
  id: totrans-352
  prefs: []
  type: TYPE_TB
  zh: '|`-M`|这将设置密码过期前的最大天数。（但要注意，如果Charlie上次设置密码是89天前，使用`-M 90`选项将导致他的密码明天过期，而不是90天后。）|'
- en: '| `-W` | This will set the number of warning days for passwords that are about
    to expire. |'
  id: totrans-353
  prefs: []
  type: TYPE_TB
  zh: '|`-W`|这将设置密码即将过期的警告天数。'
- en: 'You can set just one of these data items at a time or you can set them all
    at once. In fact, to avoid frustrating you with a different demo for each individual
    item, let''s set them all at once, except for the `-d 0`, and then we''ll see
    what we''ve got:'
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以一次设置这些数据项中的一个，也可以一次设置它们全部。实际上，为了避免让您为每个单独的项目提供不同的演示而感到沮丧，让我们一次设置它们全部，除了`-d
    0`，然后我们将看看我们得到了什么：
- en: '[PRE86]'
  id: totrans-355
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: All expiration data have now been set.
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 所有到期日期现在已经设置。
- en: 'For our final example, let''s say that you''ve just created a new account for
    Samson, and you want to force him to change his password the first time he logs
    in. There are two ways to do that. Either way, you would do it after you''ve set
    his password initially. We have the following code:'
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的最后一个示例，假设您刚刚为Samson创建了一个新帐户，并且希望在他首次登录时强制他更改密码。有两种方法可以做到这一点。无论哪种方式，您都需要在初始设置密码后执行。我们有以下代码：
- en: '[PRE87]'
  id: totrans-358
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: Hands-on lab for setting account and password expiry data
  id: totrans-359
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置帐户和密码到期日期的实践实验
- en: In this lab, you'll create a couple of new user accounts, set expiration data,
    and view the results. You can do this lab on either the CentOS or the Ubuntu virtual
    machine. (The only difference will be with the `useradd` commands.)
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个实验中，您将创建一对新的用户帐户，设置到期日期，并查看结果。您可以在CentOS或Ubuntu虚拟机上进行此实验。（唯一的区别将在`useradd`命令上。）
- en: Create a user account for Samson with the expiration date of June 30, 2023,
    and view the results.
  id: totrans-361
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为Samson创建一个带有到期日期为2023年6月30日的用户帐户，并查看结果。
- en: 'For CentOS:'
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 对于CentOS：
- en: '[PRE88]'
  id: totrans-363
  prefs: []
  type: TYPE_PRE
  zh: '[PRE88]'
- en: 'For Ubuntu:'
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Ubuntu：
- en: '[PRE89]'
  id: totrans-365
  prefs: []
  type: TYPE_PRE
  zh: '[PRE89]'
- en: 'Use `usermod` to change Samson''s account expiration date to July 31, 2023:'
  id: totrans-366
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`usermod`将Samson的帐户到期日期更改为2023年7月31日：
- en: '[PRE90]'
  id: totrans-367
  prefs: []
  type: TYPE_PRE
  zh: '[PRE90]'
- en: 'Assign a password to Samson''s account, then force him to change his password
    on his first login. Log in as Samson, change his password, then log back out to
    your own account:'
  id: totrans-368
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为Samson的帐户分配一个密码，然后强制他在首次登录时更改密码。以Samson的身份登录，更改他的密码，然后注销到您自己的帐户：
- en: '[PRE91]'
  id: totrans-369
  prefs: []
  type: TYPE_PRE
  zh: '[PRE91]'
- en: 'Use `chage` to set a 5 day waiting period for changing passwords, a password
    expiration period of 90 days, an inactivity period of 2 days, and a warning period
    of 5 days:'
  id: totrans-370
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`chage`设置更改密码的等待期为5天，密码过期期限为90天，不活动期为2天，警告期为5天：
- en: '[PRE92]'
  id: totrans-371
  prefs: []
  type: TYPE_PRE
  zh: '[PRE92]'
- en: Keep this account because you'll be using it for the lab in the next section.
  id: totrans-372
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保留此帐户，因为您将在下一节的实验中使用它。
- en: Preventing brute-force password attacks
  id: totrans-373
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 防止暴力密码攻击
- en: Amazingly enough, this is another topic that engenders a bit of controversy.
    I mean, nobody denies the wisdom of automatically locking out user accounts that
    are under attack. The controversial part concerns the number of failed login attempts
    that we should allow before locking the account.
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 令人惊讶的是，这又是一个引发一些争议的话题。我的意思是，没有人否认自动锁定遭受攻击的用户账户的智慧。有争议的部分涉及我们应该在锁定账户之前允许多少次失败的登录尝试。
- en: 'Back in the stone age of computing, so long ago that I still had a full head
    of hair, the early Unix operating systems only allowed users to create a password
    with a maximum of eight lowercase letters. So in those days, it was possible for
    early man to brute-force someone else''s password just by sitting down at the
    keyboard and typing in random passwords. That''s when the philosophy started of
    having user accounts get locked out after only three failed login attempts. Nowadays,
    with strong passwords, or better yet, a strong passphrase, setting a lockout value
    of three failed login attempts will do three things:'
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 回到计算机的石器时代，那是很久以前，我还有一头浓密的头发，早期的Unix操作系统只允许用户创建最多八个小写字母的密码。所以在那些日子里，早期人类可以通过坐在键盘前输入随机密码来暴力破解别人的密码。这就是当时开始有用户账户在只有三次登录尝试失败后被锁定的理念。如今，使用强密码，或者更好的是强大的口令，设置三次登录尝试失败后锁定账户将会有三个作用：
- en: It will unnecessarily frustrate users
  id: totrans-376
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它会不必要地让用户感到沮丧
- en: It will cause extra work for help desk personnel
  id: totrans-377
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这会给帮助台人员带来额外的工作
- en: If an account really is under attack, it will lock the account before you've
    had a chance to gather information about the attacker
  id: totrans-378
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果一个账户真的遭受攻击，它会在你有机会收集有关攻击者的信息之前锁定该账户
- en: Setting the lockout value to something more realistic, like 100 failed login
    attempts, will still provide good security, while still giving you enough time
    to gather information about the attackers. Just as importantly, you won't cause
    undue frustration to users and help desk personnel.
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 将锁定值设置为更现实的值，比如100次登录尝试失败，仍然可以提供良好的安全性，同时也给你足够的时间来收集有关攻击者的信息。同样重要的是，你不会给用户和帮助台人员带来不必要的挫败感。
- en: Anyway, regardless of how many failed login attempts your employer allows you
    to allow, you'll still need to know how to set it all up. So, let's dig in.
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 无论你的雇主允许你允许多少次登录尝试失败，你仍然需要知道如何设置它。所以，让我们开始吧。
- en: Configuring the pam_tally2 PAM module
  id: totrans-381
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置pam_tally2 PAM模块
- en: 'To make this magic work, we''ll rely on our good friend, the PAM module. The
    `pam_tally2` module comes already installed on both CentOS and Ubuntu, but it
    isn''t configured. For both of our virtual machines, we''ll be editing the `/etc/pam.d/login`
    file. Figuring out how to configure it is easy because there''s an example at
    the bottom of the `pam_tally2` man page:'
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让这个魔法生效，我们将依赖我们的好朋友PAM模块。`pam_tally2`模块已经安装在CentOS和Ubuntu上，但尚未配置。对于我们的两台虚拟机，我们将编辑`/etc/pam.d/login`文件。配置它很容易，因为在`pam_tally2`手册的底部有一个示例。
- en: '[PRE93]'
  id: totrans-383
  prefs: []
  type: TYPE_PRE
  zh: '[PRE93]'
- en: 'In the second line of the example, we see that `pam_tally2` is set with:'
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 在示例的第二行中，我们看到`pam_tally2`设置为：
- en: '`deny=4`: This means that the user account under attack will get locked out
    after only four failed login attempts'
  id: totrans-385
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`deny=4`: 这意味着在只有四次登录尝试失败后，遭受攻击的用户账户将被锁定'
- en: '`even_deny_root`: This means that even the root user account will get locked
    if it''s under attack'
  id: totrans-386
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`even_deny_root`: 这意味着即使是root用户账户在遭受攻击时也会被锁定'
- en: '`unlock_time=1200`: The account will get automatically unlocked after 1200
    seconds or 20 minutes'
  id: totrans-387
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`unlock_time=1200`: 在1200秒或20分钟后，账户将自动解锁'
- en: Now, if you look at the actual `login` file on either of your virtual machines,
    you'll see that they don't look exactly like this example login file that's in
    both of their man pages. That's okay, we'll still make it work.
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果你查看你的虚拟机上的实际`login`文件，你会发现它们看起来并不像手册中的示例`login`文件。没关系，我们仍然可以让它生效。
- en: 'Once you''ve configured the `login` file and have had a failed login, you''ll
    see a new file created in the `/var/log` directory. You''ll view information from
    that file with the `pam_tally2` utility. You can also use `pam_tally2` to manually
    unlock a locked account if you don''t want to wait for the timeout period:'
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你配置了`login`文件并且有了登录失败，你会在`/var/log`目录中看到一个新文件被创建。你可以使用`pam_tally2`工具查看该文件中的信息。你也可以使用`pam_tally2`手动解锁被锁定的账户，如果你不想等待超时期：
- en: '[PRE94]'
  id: totrans-390
  prefs: []
  type: TYPE_PRE
  zh: '[PRE94]'
- en: Note how after I did the reset on Charlie's account, I received no output from
    doing another query.
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，当我对查理的账户进行重置后，再次查询时没有输出。
- en: Hands-on lab for configuring pam_tally2
  id: totrans-392
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置pam_tally2的实践实验
- en: Configuring `pam_tally2` is super easy because it only requires adding one line
    to the `/etc/pam.d/login` file. To make things even easier, you can just copy
    and paste that line from the example in the `pam_tally2` man page. In spite of
    what I said earlier about bumping the number of failed logins up to 100, we'll
    keep that number at `4` for now. (I know that you don't want to have to do 100
    failed logins in order to demo this.)
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: 配置`pam_tally2`非常容易，因为它只需要在`/etc/pam.d/login`文件中添加一行。为了更方便，你可以直接从`pam_tally2`手册中的示例中复制并粘贴该行。尽管我之前说过将失败登录次数增加到100，但现在我们将该数字保持为`4`。（我知道你不想要做100次失败登录来演示这个。）
- en: On either the CentOS or the Ubuntu virtual machine, open the `/etc/pam.d/login` file
    for editing. Look for the line that invokes the `pam_securetty` module. (That
    should be around line 32 on Ubuntu and around line 2 on CentOS.)
  id: totrans-394
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在CentOS或Ubuntu虚拟机上，打开`/etc/pam.d/login`文件进行编辑。查找调用`pam_securetty`模块的行。（在Ubuntu上大约在第32行，在CentOS上大约在第2行。）
- en: 'Beneath that line, insert the following line:'
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: 在那一行下面，插入以下行：
- en: '[PRE95]'
  id: totrans-396
  prefs: []
  type: TYPE_PRE
  zh: '[PRE95]'
- en: Save the file and exit the editor.
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 保存文件并退出编辑器。
- en: For this step, you'll need to log out of your own account because `pam_tally2`
    doesn't work with `su`. So, log out, and while purposely using the wrong password,
    attempt to log in to the `samson` account that you created in the previous lab.
    Keep doing that until you see the message that the account is locked. Note that
    when the `deny` value is set to `4`, it will actually take five failed login attempts
    to lock Samson out.
  id: totrans-398
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这一步中，你需要退出你自己的账户，因为`pam_tally2`不能与`su`一起使用。所以，退出登录，然后故意使用错误的密码，尝试登录到你在上一个实验中创建的`samson`账户。一直这样做，直到看到账户被锁定的消息。请注意，当`deny`值设置为`4`时，实际上需要五次失败的登录尝试才能锁定Samson的账户。
- en: 'Log back in to your own user account. Run this command and note the output:'
  id: totrans-399
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重新登录你自己的用户账户。运行这个命令并注意输出：
- en: '[PRE96]'
  id: totrans-400
  prefs: []
  type: TYPE_PRE
  zh: '[PRE96]'
- en: 'For this step, you''ll simulate that you''re a help desk worker, and Samson
    has just called to request that you unlock his account. After verifying that you
    really are talking to the real Samson, enter the following line:'
  id: totrans-401
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这一步中，你将模拟自己是一个帮助台工作人员，Samson刚打电话请求你解锁他的账户。在确认你确实在和真正的Samson交谈后，输入以下命令：
- en: '[PRE97]'
  id: totrans-402
  prefs: []
  type: TYPE_PRE
  zh: '[PRE97]'
- en: Now that you've seen how this works, open the `/etc/pam.d/login` file for editing,
    and change the `deny=` parameter from `4` to `100` and save the file.  (This will
    make your configuration a bit more realistic in terms of modern security philosophy.)
  id: totrans-403
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在你已经看到了这是如何工作的，打开`/etc/pam.d/login`文件进行编辑，并将`deny=`参数从`4`更改为`100`，然后保存文件。（这将使您的配置在现代安全理念方面更加现实。）
- en: Locking user accounts
  id: totrans-404
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 锁定用户账户
- en: 'Okay, you''ve just seen how to have Linux automatically lock user accounts
    that are under attack. There will also be times when you''ll want to be able to
    manually lock out user accounts. Let us look at the following example:'
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，你刚刚看到了如何让Linux自动锁定遭受攻击的用户账户。有时候你也会想手动锁定用户账户。让我们看下面的例子：
- en: When a user goes on vacation and you want to ensure that nobody monkeys around
    with that user's account while he or she is gone
  id: totrans-406
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当用户度假时，你希望确保没有人在他离开期间对他的账户进行操作
- en: When a user is under investigation for questionable activities
  id: totrans-407
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当用户因可疑活动而受到调查时
- en: When a user leaves the company
  id: totrans-408
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当用户离开公司时
- en: In regard to the last point, you may be asking yourself, "*Why can't we just
    delete the accounts of people who are no working here?*" And, you certainly can,
    easily enough. However, before you do so, you'll need to check with your local
    laws to make sure that you don't get yourself into deep trouble. Here in the United
    States, for example, we have the Sarbanes-Oxley law, which restricts what files
    that publicly traded companies can delete from their computers. If you were to
    delete a user account, along with that user's home directory and mail spool, you
    just might be running afoul of Sarbanes-Oxley or whatever you may have as the
    equivalent law in your own home country.
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: 关于最后一点，你可能会问自己：“*为什么我们不能只删除那些不在这里工作的人的账户呢？*”当然，你当然可以很容易地这样做。但在这样做之前，你需要查看当地的法律，确保自己不会陷入麻烦。例如，在美国，我们有萨班斯-奥克斯法，限制上市公司可以从他们的计算机中删除哪些文件。如果你删除了一个用户账户，以及该用户的主目录和邮件存储，你可能会触犯萨班斯-奥克斯法或者你自己国家的等同法律。
- en: 'Anyway, there are two utilities that you can use to temporarily lock a user
    account:'
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: 无论如何，有两个工具可以用来临时锁定用户账户：
- en: Using `usermod` to lock a user account
  id: totrans-411
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`usermod`来锁定用户账户
- en: Using `passwd` to lock user accounts
  id: totrans-412
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`passwd`来锁定用户账户
- en: Using usermod to lock a user account
  id: totrans-413
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用usermod来锁定用户账户
- en: 'Let''s say that Katelyn has gone on maternity leave and will be gone for at
    least several weeks. We can lock her account with:'
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: 假设Katelyn已经休产假，至少会离开几周。我们可以通过以下方式锁定她的账户：
- en: '[PRE98]'
  id: totrans-415
  prefs: []
  type: TYPE_PRE
  zh: '[PRE98]'
- en: 'When you look at Katelyn''s entry in the `/etc/shadow` file, you''ll now see
    an exclamation point in front of her password hash, as follows:'
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: 当你查看`/etc/shadow`文件中Katelyn的条目时，你会看到她的密码哈希前面有一个感叹号，如下所示：
- en: '[PRE99]'
  id: totrans-417
  prefs: []
  type: TYPE_PRE
  zh: '[PRE99]'
- en: This exclamation point prevents the system from being able to read her password,
    which effectively locks her out of the system.
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: 这个感叹号阻止系统能够读取她的密码，从而有效地将她锁在了系统外。
- en: 'To unlock her account, just follow this:'
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: 要解锁她的账户，只需按照以下步骤：
- en: '[PRE100]'
  id: totrans-420
  prefs: []
  type: TYPE_PRE
  zh: '[PRE100]'
- en: You'll see that the exclamation point has been removed so that she can now log
    in to her account.
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: 你会看到感叹号已经被移除，这样她现在可以登录她的账户了。
- en: Using passwd to lock user accounts
  id: totrans-422
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用passwd来锁定用户账户
- en: 'You could also lock Katelyn''s account with:'
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以通过以下方式锁定Katelyn的账户：
- en: '[PRE101]'
  id: totrans-424
  prefs: []
  type: TYPE_PRE
  zh: '[PRE101]'
- en: 'This does the same job as `usermod -L`, but in a slightly different manner.
    For one thing, `passwd -l` will give you some feedback about what''s going on,
    where `usermod -L` gives you no feedback at all. On Ubuntu, the feedback looks
    like this:'
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: 这与`usermod -L`的功能相同，但方式略有不同。首先，`passwd -l`会给出一些关于正在进行的操作的反馈，而`usermod -L`则没有任何反馈。在Ubuntu上，反馈看起来像这样：
- en: '[PRE102]'
  id: totrans-426
  prefs: []
  type: TYPE_PRE
  zh: '[PRE102]'
- en: 'On CentOS, the feedback looks like this:'
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: 在CentOS上，反馈看起来像这样：
- en: '[PRE103]'
  id: totrans-428
  prefs: []
  type: TYPE_PRE
  zh: '[PRE103]'
- en: Also, on the CentOS machine, you'll see that `passwd -l` places two exclamation
    points in front of the password hash, instead of just one. Either way, the effect
    is the same.
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，在CentOS机器上，你会看到`passwd -l`在密码哈希前面放置了两个感叹号，而不是一个。无论哪种方式，效果都是一样的。
- en: 'To unlock Katelyn''s account, just do:'
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: 要解锁Katelyn的账户，只需执行以下操作：
- en: '[PRE104]'
  id: totrans-431
  prefs: []
  type: TYPE_PRE
  zh: '[PRE104]'
- en: In versions of Red Hat or CentOS prior to version 7, `usermod -U` would remove
    only one of the exclamation points that `passwd -l` places in front of the shadow
    file password hash, thus leaving the account still locked. No big deal, though,
    because running `usermod -U` again would remove the second exclamation point.
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: 在Red Hat或CentOS 7版本之前，`usermod -U`只会移除`passwd -l`在shadow文件密码哈希前面放置的一个感叹号，因此账户仍然被锁定。不过，这没什么大不了的，因为再次运行`usermod
    -U`将移除第二个感叹号。
- en: In Red Hat or CentOS 7, it has been fixed. The `passwd -l` command still places
    two exclamation points in the shadow file, but `usermod -U` now removes both of
    them. (That's a shame, really, because it ruined a perfectly good demo that I
    like to do for my students.)
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: 在Red Hat或CentOS 7中，已经修复了。`passwd -l`命令仍然会在shadow文件中放置两个感叹号，但`usermod -U`现在会将两者都删除。
    （真是遗憾，因为这破坏了我喜欢给学生做的一个完美的演示。）
- en: Locking the root user account
  id: totrans-434
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 锁定根用户账户
- en: 'The cloud is big business nowadays, and it''s now quite common to rent a virtual
    private server from companies such as Rackspace, DigitalOcean, or Microsoft Azure.
    These can serve a variety of purposes, as follows:'
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
  zh: 云现在是大生意，现在很常见租用来自Rackspace、DigitalOcean或Microsoft Azure等公司的虚拟专用服务器。这些可以用于各种用途，如下：
- en: You can run your own website, where you install your own server software instead
    of letting a hosting service do it
  id: totrans-436
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以运行自己的网站，在那里安装自己的服务器软件，而不是让托管服务来做
- en: You can set up a web-based app for other people to access
  id: totrans-437
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以为其他人设置一个基于Web的应用
- en: Recently, I saw a YouTube demo on a crypto-mining channel that showed how to
    set up a Proof of Stake master node on a rented virtual private server
  id: totrans-438
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最近，我在YouTube上看到了一个加密挖矿频道的演示，演示了如何在租用的虚拟专用服务器上设置权益证明主节点
- en: One thing that these cloud services have in common is that when you first set
    up your account and the provider sets up a virtual machine for you, they'll have
    you log in to the root user account. (It even happens with Ubuntu, even though
    the root account is disabled on a local installation of Ubuntu.)
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
  zh: 这些云服务的共同之处之一是，当你第一次设置你的账户并且提供商为你设置了一个虚拟机器时，他们会让你登录到根用户账户。（即使在Ubuntu上也会发生，尽管Ubuntu的本地安装上禁用了根账户。）
- en: I know that there are some folk who just keep logging in to the root account
    of these cloud-based servers and think nothing of it, but that's really a horrible
    idea. There are botnets, such as the Hail Mary botnet, that continuously scan
    the internet for servers that have their Secure Shell port exposed to the internet.
    When the botnets find one, they'll do a brute-force password attack against the
    root user account of that server. And yes, the botnets sometimes are successful
    in breaking in, especially if the root account is set with a weak password.
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: 我知道有些人只是不断登录到这些基于云的服务器的根账户，却毫不在意，但这真的是一个可怕的想法。有僵尸网络，比如Hail Mary僵尸网络，不断扫描互联网上暴露Secure
    Shell端口的服务器。当僵尸网络找到一个时，它们会对该服务器的根用户账户进行暴力密码攻击。是的，有时候僵尸网络会成功闯入，特别是如果根账户设置了弱密码。
- en: 'So, the first thing that you want to do when you set up a cloud-based server
    is to create a normal user account for yourself and set it up with full sudo privileges.
    Then, log out of the root user account, log into your new account, and do the
    following:'
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，当你设置基于云的服务器时，你要做的第一件事就是为自己创建一个普通用户账户，并为其设置完整的sudo权限。然后，退出根用户账户，登录到你的新账户，并执行以下操作：
- en: '[PRE105]'
  id: totrans-442
  prefs: []
  type: TYPE_PRE
  zh: '[PRE105]'
- en: I mean, really, why take the chance of getting your root account compromised?
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: 我的意思是，真的，为什么要冒险让你的根账户受到威胁？
- en: Setting up security banners
  id: totrans-444
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置安全横幅
- en: Something that you really, really don't want is to have a login banner that
    says something to the effect, "*Welcome to our network*". I say that because quite
    a few years ago, I attended a mentored SANS course on incident handling. Our instructor
    told us the story about how a company took a suspected network intruder to court,
    only to get the case thrown out. The reason? The alleged intruder said, "*Well,
    I saw the message that said 'Welcome to the network', so I thought that I really
    was welcome there.*" Yeah, supposedly, that was enough to get the case thrown
    out.
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
  zh: 有一件你真的，真的不想要的事情就是有一个登录横幅，上面写着“*欢迎来到我们的网络*”。我这么说是因为很多年前，我参加了一门关于事件处理的SANS课程。我们的导师告诉我们一个故事，讲述了一家公司将一名涉嫌入侵网络的人告上法庭，结果案子被驳回。原因是什么？据称的入侵者说，“*嗯，我看到了写着‘欢迎来到网络’的消息，所以我以为我真的是受欢迎的*。”
    是的，据说这就足以让案子被驳回。
- en: A few years later, I related that story to the students in one of my Linux admin
    classes. One student said, "*That makes no sense. We all have welcome mats at
    our front doors, but that doesn't mean that burglars are welcome to come in.*"
    I have to confess that he had a good point, and I now have to wonder about the
    veracity of the story.
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: 几年后，我在我的一堂Linux管理员课上向学生们讲述了这个故事。一名学生说，“*这毫无意义。我们所有人家门口都有欢迎地垫，但这并不意味着小偷可以随意进来*。”
    我不得不承认他说得有道理，现在我不得不怀疑这个故事的真实性。
- en: At any rate, just to be on the safe side, you do want to set up login messages
    that make clear that only authorized users are allowed to access the system.
  id: totrans-447
  prefs: []
  type: TYPE_NORMAL
  zh: 无论如何，为了安全起见，你确实希望设置登录消息，明确表示只有授权用户才能访问系统。
- en: Using the motd file
  id: totrans-448
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用motd文件
- en: 'The `/etc/motd` file will present a message banner to anyone who logs in to
    a system through Secure Shell. On your CentOS machine, an empty `motd` file is
    already there. On your Ubuntu machine, the `motd` file isn''t there, but it''s
    a simple matter to create one. Either way, open the file in your text editor and
    create your message. Save the file and test it by remotely logging in through
    Secure Shell. You should see something like:'
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
  zh: '`/etc/motd`文件将向通过Secure Shell登录系统的任何人显示消息横幅。在你的CentOS机器上，已经有一个空的`motd`文件。在你的Ubuntu机器上，`motd`文件不存在，但创建一个很简单。无论哪种方式，打开文件编辑器并创建你的消息。保存文件并通过Secure
    Shell远程登录进行测试。你应该会看到类似的东西：'
- en: '[PRE106]'
  id: totrans-450
  prefs: []
  type: TYPE_PRE
  zh: '[PRE106]'
- en: '`motd` stands for Message of the Day.'
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
  zh: '`motd`代表每日消息。'
- en: Using the issue file
  id: totrans-452
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用问题文件
- en: 'The issue file, also found in the `/etc` directory, shows a message on the
    local terminal, just above the login prompt. A default issue file would just contain
    macro code that would show information about the machine. Look at the following
    example:'
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
  zh: 问题文件，也可以在`/etc`目录中找到，在本地终端上显示一个消息，就在登录提示的上方。默认的问题文件只包含宏代码，会显示有关机器的信息。看下面的例子：
- en: '[PRE107]'
  id: totrans-454
  prefs: []
  type: TYPE_PRE
  zh: '[PRE107]'
- en: 'Or, on a CentOS machine:'
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，在CentOS机器上：
- en: '[PRE108]'
  id: totrans-456
  prefs: []
  type: TYPE_PRE
  zh: '[PRE108]'
- en: 'On an Ubuntu machine, the banner would look something like this:'
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: 在Ubuntu机器上，横幅看起来会像这样：
- en: '![](img/17b9b93c-b66b-41ee-92ab-b5c7b8d075f4.png)'
  id: totrans-458
  prefs: []
  type: TYPE_IMG
  zh: '![](img/17b9b93c-b66b-41ee-92ab-b5c7b8d075f4.png)'
- en: 'On a CentOS machine, it would look something like this:'
  id: totrans-459
  prefs: []
  type: TYPE_NORMAL
  zh: 在 CentOS 机器上，它看起来会像这样：
- en: '![](img/98ec685f-3936-4ff7-874f-d1a0f255274b.png)'
  id: totrans-460
  prefs: []
  type: TYPE_IMG
  zh: '![](img/98ec685f-3936-4ff7-874f-d1a0f255274b.png)'
- en: 'You could put a security message in the issue file, and it would show up after
    a reboot:'
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在问题文件中放置安全消息，并在重新启动后显示出来：
- en: '![](img/6f5d8a0a-0649-4a5a-81ff-edf844876f80.png)'
  id: totrans-462
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6f5d8a0a-0649-4a5a-81ff-edf844876f80.png)'
- en: In reality, is there really any point in placing a security message in the issue
    file? If your servers are properly locked away in a server room with controlled
    access, then probably not.
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，在问题文件中放置安全消息真的有意义吗？如果您的服务器被妥善锁在一个带有受控访问的服务器房间里，那可能没有。
- en: Using the issue.net file
  id: totrans-464
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 issue.net 文件
- en: Just don't. It's for telnet logins, and anyone who has telnet enabled on their
    servers is seriously screwing up. However, for some strange reason, the `issue.net`
    file still hangs around in the `/etc` directory.
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
  zh: 别这样做。这是用于 telnet 登录的，任何在其服务器上启用 telnet 的人都是严重搞砸了。然而，出于某种奇怪的原因，`issue.net` 文件仍然挂在
    `/etc` 目录中。
- en: Summary
  id: totrans-466
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: We covered a lot of ground in this chapter, and hopefully you found some suggestions
    that you can actually use. We started out with showing you the dangers of always
    logging in as the root user and how you should use sudo, instead. In addition
    to showing you the basics of sudo usage, we also looked at some good sudo tips
    and tricks. We moved on to user management, by looking at how to lock down users'
    home directories, how to enforce strong password policies, and how to enforce
    account and password expiration policies. Then, we talked about a way to prevent
    brute-force password attacks, how to manually lockout user accounts, and set up
    security banners.
  id: totrans-467
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们涵盖了很多内容，希望您找到了一些实用的建议。我们首先向您展示了始终以 root 用户身份登录的危险，以及您应该改用 sudo。除了向您展示
    sudo 的基础用法之外，我们还研究了一些不错的 sudo 提示和技巧。然后，我们转向用户管理，看看如何锁定用户的主目录，如何强制执行强密码策略，以及如何强制执行帐户和密码过期策略。接着，我们讨论了一种防止暴力密码攻击的方法，如何手动锁定用户帐户，并设置安全横幅。
- en: In the next chapter, we'll look at how to work with various firewall utilities.
    I'll see you there.
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将看看如何使用各种防火墙实用程序。我会在那里见到你。
