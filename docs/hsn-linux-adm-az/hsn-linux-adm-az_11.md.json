["```\nsudo yum groups install ''Basic Web Server''\nsudo yum install mariadbmariadb-server\nsudo yum install setroubleshoot\nsudosystemctl enable --now apache2\nsudosystemctl enable --now mariadb\n```", "```\nsudo yum list audit audit-libs\n```", "```\nsudo yum install audit audit-libs\n```", "```\nsudo systemctl start auditd\n```", "```\nsudo systemctl enable auditd\n```", "```\ntail -f /var/log/audit/audit.log\n```", "```\naz vm run-command invoke --name <vm name> \\\n\u00a0\u00a0--command-id RunShellScript \\\n\u00a0\u00a0--scripts hostnamectl \\\n\u00a0\u00a0--resource-group <resource group>\n```", "```\naz vm user update \\\n\u00a0\u00a0--resource-group myResourceGroup \\\n\u00a0\u00a0--name myVM \\\n\u00a0\u00a0--username linuxstar \\\n\u00a0\u00a0--password myP@88w@rd\n```", "```\n    sudo apt install nftables\n    ```", "```\n    apt install iptables-nftables-compat\n    ```", "```\n    sudo systemctl enable nftables.service\n    ```", "```\n    nft list ruleset\n    ```", "```\n    nft \u2013i\n    ```", "```\n    nft> list ruleset\n    ```", "```\n    nft>add table inet rule_table1\n    ```", "```\n    nft>add chain inet rule_table1 input { type filter hook input priority 0 ; policy accept; }\n    nft>add chain inet rule_table1 output { type filter hook input priority 0 ; policy accept; }\n    ```", "```\n    nft>add rule inet rule_table1 input tcpdport { ssh, telnet, https, http } accept\n    nft>add rule inet rule_table1 output tcpdport { https, http } accept\n    ```", "```\n    nft> list ruleset\n    table inet rule_table1 {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0chain input {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0type filter hook input priority 0; policy accept;\n    tcpdport { ssh, telnet, http, https } accept\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0chain output {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0type filter hook input priority 0; policy accept;\n    tcpdport { http, https } accept\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    }\n    ```", "```\naz vm boot-diagnostics enable --name <vm name>\\\n\u00a0\u00a0--resource-group <resource group> \\\n\u00a0\u00a0--storage <url>\n```", "```\naz vm boot-diagnostics get-boot-log \\\n--name <virtual machine> \\\n\u00a0\u00a0--resource-group <resource group>\n```", "```\nSudo journalctl --unit <unit>\n```", "```\nSYSTEMD_PAGER=/usr/bin/more\n```", "```\nsudo journalctl -u sshd --since yesterday --until 10:00 \\\n\u00a0\u00a0--priority err\n```", "```\nsudojournactl _\n```", "```\nsudo journalctl _UID=1000 _PID=1850\n```", "```\nsudo journalctl _KERNEL_DEVICE=+scsi:5:0:0:0 -o verbose\n```", "```\nStorage=persistent\n```", "```\nsudo systemctl force-reload systemd-journald\n```", "```\nsudo journalctl --list-boots\n```", "```\njournalctl --priority err --boot <boot id>\n```", "```\nlogger -p <facility.severity> \"Message\"\n```", "```\nsystemd-cat --identifier <identifier> --priority <severity><command>\n```", "```\nsystemd-cat --identifier CHANGE --priority info \\\n\u00a0\u00a0echo \"Start Configuration Change\"\n```", "```\nerrorlog\u00a0\u00a0\"tee -a /var/log/www/error/log\u00a0\u00a0| logger -p local6.info\"\n```", "```\n# module(load=\"imuxsock\")\nmodule(load=\"imjournal\")\n```", "```\nsudo systemctl restart rsyslog\n```", "```\n*. *\u00a0\u00a0@<remote server>:514\n```", "```\naz extension add -n application-insights\n```", "```\naz monitor app-insights component create --app myapp\n\u00a0\u00a0\u00a0--location westus1\n\u00a0\u00a0\u00a0--resource-group my-resource-grp\n```", "```\naz ml workspace list\n```", "```\naz ml workspace show -w my-workspace -g my-resource-grp\n```", "```\n$rg = \"<resource group>\"\n$loc = \"<vm location>\"\n$omsName = \"<OMS Name>\"\n$vm = \"<vm name\">\n```", "```\n$omsID = $(Get-AzOperationalInsightsWorkspace '\n -ResourceGroupName $rg -Name $omsName.CustomerId) \n$omsKey = $(Get-AzOperationalInsightsWorkspaceSharedKeys '\n -ResourceGroupName $rg -Name $omsName).PrimarySharedKey\n$PublicSettings = New-Object psobject | Add-Member '\n -PassThruNotePropertyworkspaceId $omsId | ConvertTo-Json\n$PrivateSettings = New-Object psobject | Add-Member '\n -PassThruNotePropertyworkspaceKey $omsKey | ConvertTo-Json\n```", "```\nSet-AzureVMExtension -ExtensionName \"OMS\" '\n\u00a0\u00a0-ResourceGroupName $rg -VMName $vm '\n\u00a0\u00a0-Publisher \"Microsoft.EnterpriseCloud.Monitoring\" \n\u00a0\u00a0-ExtensionType \"OmsAgentForLinux\" -TypeHandlerVersion 1.0 '\n\u00a0\u00a0-SettingString $PublicSettings\n\u00a0\u00a0-ProtectedSettingString $PrivateSettings -Location $loc\n```", "```\ncd /tmp\nwget \\\nhttps://github.com/microsoft/OMS-Agent-for-Linux \\\n/blob/master/installer/scripts/onboard_agent.sh\nsudo -s \nsh onboard_agent.sh -w <OMS id> -s <OMS key> -d \\\n\u00a0\u00a0opinsights.azure.com\n```", "```\nkern.warning @127.0.0.1:25224\nuser.warning @127.0.0.1:25224\ndaemon.warning @127.0.0.1:25224\nauth.warning @127.0.0.1:25224\nsyslog.warning @127.0.0.1:25224\nuucp.warning @127.0.0.1:25224\nauthpriv.warning @127.0.0.1:25224\nftp.warning @127.0.0.1:25224\ncron.warning @127.0.0.1:25224\nlocal0.warning @127.0.0.1:25224\nlocal1.warning @127.0.0.1:25224\nlocal2.warning @127.0.0.1:25224\nlocal3.warning @127.0.0.1:25224\nlocal4.warning @127.0.0.1:25224\nlocal5.warning @127.0.0.1:25224\nlocal6.warning @127.0.0.1:25224\nlocal7.warning @127.0.0.1:25224\n```", "```\nsearch *\n```", "```\nsearch * | where Computer == \"centos01\"\n```", "```\nlogger -t <facility>. <priority> \"message\"\n```", "```\nSyslog | sort \n```", "```\ncd /tmp\nwget --content-disposition https://aka.ms/dependencyagentlinux \\\n-O InstallDependencyAgent-Linux64.bin\nsudo sh InstallDependencyAgent-Linux64.bin -s\n```", "```\naz aks create --resource-group MyKubernetes --name myAKS --node-count 1 --enable-addons monitoring --generate-ssh-keys\n```", "```\naz aks enable-addons -a monitoring -n myAKS -g MyKubernetes\n```", "```\nNew-AzNetworkWatcher -Name <name> '\n -ResourceGroupName<resource group> -Location <location>\n```", "```\nRegister-AzResourceProvider -ProviderNamespace '\n \"Microsoft.Network\"\nRegister-AzResourceProvider -ProviderNamespaceMicrosoft.Insights\n```", "```\nnmon -f -s 60 -c 30\n```", "```\nglances --username <username> --password <password> --server \n```", "```\nglances --client @<ip address>\n```", "```\nsar -<resource> interval count\n```", "```\nsar -u 1 5\n```", "```\nsar -P 1 2 1 5\n```", "```\nsadf /var/log/sa/sa03 -- -n DEV\n```", "```\nip -s link show dev eth0\n```", "```\nss -s\n```", "```\nlnstat\u2013\u2013d\n```", "```\ntcpdump -i any \n```", "```\ntcpdump -i eth0 \n```", "```\ntcpdump -n -i eth0\n```", "```\ntcpdump -n -i eth0 -vvv\n```", "```\ntcpdump host <ip address> -n -i eth0 \n```", "```\ntcpdump src <source ip address> -n -i eth0 \ntcpdump dst <destination ip address> -n -i eth0\n```", "```\ntcpdump port 22 \ntcpdumpsrc port 22\ntcpdump not port 22\n```", "```\ntcpdump -n dst net <subnet> and not port ssh -c 5\n```", "```\ntcpdump -v -x -XX -w /tmp/capture.log\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n```", "```\ntcpdump -tttt -r /tmp/capture.log\n```"]