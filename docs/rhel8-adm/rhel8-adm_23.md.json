["```\nwget https://raw.githubusercontent.com/PacktPublishing/Red-Hat-Enterprise-Linux-8-Administration/main/chapter-19-exercise2/users.txt\n```", "```\ncat users.txt\nuser;x;1000;1000;myuser1;/home/user1; /bin/false\njohn ;x ;1001 ;1001; John; /home/john ;/bin/false\ndoe ;x ;1001 ;1001; Doe; /home/doe ; /bin/csh\nathena ;x ;1011 ;1011; Athena Jones; /home/ajones ; /bin/rsh\npilgrim ;x ;2011 ;2011; Scott Pilgrim; /home/spilgrim ; /bin/rsh\nlaverne; x ; 2020;2020; LaVerne;/home/LaVerne;/bin/bash\n```", "```\ncat users.txt|while read -r line; do echo ${line};done\n```", "```\nNEWUSERNAME=$(echo ${line}|cut -d \";\" -f 1)\nNEWUID=$(echo ${line}|cut -d \";\" -f 3)\nNEWGID=$(echo ${line}|cut -d \";\" -f 4)\nNEWNAME=$(echo ${line}|cut -d \";\" -f 5)\nNEWSHELL=$(echo ${line}|cut -d \";\" -f 6)\n```", "```\nNEWUSERNAME=$(echo ${line}|cut -d \";\" -f 1|xargs)\nNEWUID=$(echo ${line}|cut -d \";\" -f 3|xargs)\nNEWGID=$(echo ${line}|cut -d \";\" -f 4|xargs)\nNEWNAME=$(echo ${line}|cut -d \";\" -f 5|xargs)\nNEWHOME=$(echo ${line}|cut -d \";\" -f 6|xargs)\nNEWSHELL=$(echo ${line}|cut -d \";\" -f 7|xargs)\n```", "```\nuseradd --d \"${NEWHOME}\" --m --s \"${NEWSHELL}\" --u \"${NEWUID}\" --g \"${NEWGID}\" --c \"${NEWNAME}\" \"${NEWUSERNAME}\"\n```", "```\ncat users.txt| while read -r line ; do \nNEWUSERNAME=$(echo ${line}|cut -d \";\" -f 1|xargs)\nNEWUID=$(echo ${line}|cut -d \";\" -f 3|xargs)\nNEWGID=$(echo ${line}|cut -d \";\" -f 4|xargs)\nNEWNAME=$(echo ${line}|cut -d \";\" -f 5|xargs)\nNEWHOME=$(echo ${line}|cut -d \";\" -f 6|xargs)\nNEWSHELL=$(echo ${line}|cut -d \";\" -f 7|xargs)\nuseradd -d \"${NEWHOME}\" -m -s \"${NEWSHELL}\" -u \"${NEWUID}\" -g \"${NEWGID}\" -c \"${NEWNAME}\" \"${NEWUSERNAME}\"\ndone\n```", "```\ngroupadd users\ncat users.txt| while read -r line ; do \nNEWUSERNAME=$(echo ${line}|cut -d \";\" -f 1|xargs)\ngroupadd -g ${NEWGID} ${NEWUSERNAME}\nusermod -g users -G ${NEWUSERNAME} ${NEWUSERNAME}\ndone\n```", "```\ncat users.txt| while read -r line ; do \nNEWUSERNAME=$(echo ${line}|cut -d \";\" -f 1|xargs)\nNEWHOME=$(echo ${line}|cut -d \";\" -f 6|xargs)\nchown -R ${NEWUSERNAME}:users ${NEWHOME}/\ndone\n```", "```\ndnf -y install httpd\nfirewall-cmd --add-service=http --permanent\u00a0\u00a0f\nfirewall-cmd --reload\n-\ncat users.txt| while read -r line ; do \nNEWUSERNAME=$(echo ${line}|cut -d \";\" -f 1|xargs)\nNEWUID=$(echo ${line}|cut -d \";\" -f 3|xargs)\nNEWGID=$(echo ${line}|cut -d \";\" -f 4|xargs)\nNEWNAME=$(echo ${line}|cut -d \";\" -f 5|xargs)\nNEWHOME=$(echo ${line}|cut -d \";\" -f 6|xargs)\nNEWSHELL=$(echo ${line}|cut -d \";\" -f 7|xargs)\nmkdir -p ${NEWHOME}/public_html/\necho \"Hello, my name is ${NEWNAME} and I'm a user of this system\" > ${NEWHOME}/public_html/index.htm\nDone\n```", "```\nservice httpd start\n```", "```\necho \"%users ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers\n```", "```\ncat users.txt| while read -r line ; do \nNEWHOME=$(echo ${line}|cut -d \";\" -f 6|xargs)\nmkdir -p ${NEWHOME}/.ssh/\nssh-keygen -N '' -f ${NEWHOME}/.ssh/id_dsa\ncat ${NEWHOME}/.ssh/id_dsa.pub >> /root/.ssh/authorized_keys\ndone\n```", "```\ncat users.txt| while read -r line ; do \nNEWUSERNAME=$(echo ${line}|cut -d \";\" -f 1|xargs)\nNEWHOME=$(echo ${line}|cut -d \";\" -f 6|xargs)\ncp /root/.ssh/authorized_keys\u00a0\u00a0${NEWHOME}/.ssh/ >> \nchown -R ${NEWUSERNAME}:users ${NEWHOME}/.ssh/\nDone\n```", "```\nUSERS=$(cat users.txt|cut -d \";\" -f1|xargs)\nfor user in ${USERS};\ndo\nfor userloop in ${USERS};\ndo\nsu -c \"ssh ${user}@localhost\" ${userloop}\ndone\ndone\n```", "```\nsystemctl restart sshd\n```", "```\nMYPASS=$(dd if=/dev/urandom count=1024 2>&1|md5sum|awk '{print $1}')\n```", "```\ncat users.txt| while read -r line ; do \nMYPASS=$(dd if=/dev/random count=12>&1|md5sum|awk '{print $1}')\nNEWUSERNAME=$(echo ${line}|cut -d \";\" -f 1|xargs)\nNEWUID=$(echo ${line}|cut -d \";\" -f 3|xargs)\nNEWGID=$(echo ${line}|cut -d \";\" -f 4|xargs)\nNEWNAME=$(echo ${line}|cut -d \";\" -f 5|xargs)\nNEWHOME=$(echo ${line}|cut -d \";\" -f 6|xargs)\nNEWSHELL=$(echo ${line}|cut -d \";\" -f 7|xargs)\necho\u00a0\u00a0\"${NEWUSERNAME};${MYPASS};${NEWUID};${NEWGID};${NEWNAME};${NEWHOME};${NEWSHELL}\" >> newusers.txt\necho ${MYPASS} | passwd ${NEWUSERNAME} --stdin\ndone\ncp newusers.txt users.txt\n```", "```\ncat users.txt| while read -r line ; do \nNEWUSERNAME=$(echo ${line}|cut -d \";\" -f 1|xargs)\nNEWHOME=$(echo ${line}|cut -d \";\" -f 6|xargs)\nLETTERSINNAME=$(( $(echo ${NEWUSERNAME}|wc -m) - 1 ))\nif [ \"$((${LETTERSINNAME} % 2 ))\" == \"0\" ]; then\necho \"My name is multiple of 2\" >> ${NEWHOME}/public_html/index.htm\ndone\ndone\n```", "```\nFROM registry.access.redhat.com/ubi8/python-38\nMAINTAINER RHEL8 Student <student@redhat.com>\nLABEL name=\"yq image\" \\\nmaintainer=\"student _AT_ redhat.com\" \\\nvendor=\"Risu\" \\\nversion=\"1.0.0\" \\\nrelease=\"1\" \\\nsummary=\"yq execution container\" \\\ndescription=\"Runs yq\"\nENV USER_NAME=risu \\\nUSER_UID=10001 \\\nLC_ALL=en_US.utf8\nRUN pip3 install --upgrade pip --no-cache-dir && \\\npip3 install --upgrade yq --no-cache-dir\nUSER 10001\nVOLUME /data\nENTRYPOINT [\"/opt/app-root/bin/yq\"]\nCMD [\"-h\"]\n```", "```\ncat users.txt| while read -r line ; do \nNEWUSERNAME=$(echo ${line}|cut -d \";\" -f 1|xargs)\nNEWHOME=$(echo ${line}|cut -d \";\" -f 6|xargs)\nLETTERSINNAME=$(( $(echo ${NEWUSERNAME}|wc -m) - 1 ))\nif [ \"$((${LETTERSINNAME} % 2 ))\" != \"0\" ]; then\nchage -M 30 ${NEWUSERNAME}\ndone\ndone\n```", "```\ndnf -y install logrotate\n```", "```\nrotate 30\ndaily\ncompress\ndateext\n```", "```\ngrep \"$(date '+%Y-%m-%d')\" -Ri /var/log/*.log|grep -i error >\u00a0\u00a0/root/errors.log\njournalctl --since \"$(date '+%Y-%m-%d')\" >> /root/errors.log\n```", "```\ndnf upgrade *lib*\n```", "```\nyumdownloader rpm\n```", "```\nls \u2013l rpm*.rpm \n```", "```\nrpm -qip rpm*.rpm\n```", "```\nrm -fv /usr/bin/rpm\n```", "```\nrpm2cpio rpm*.rpm |cpio \u2013idv\n```", "```\nmv usr/bin/rpm /usr/bin/rpm\n```", "```\nrpm \u2013V rpm\n```", "```\nrpm -i rpm*.rpm\n```", "```\nrpm -Uvh rpm*.rpm\n```", "```\nrpm \u2013V rpm \n```", "```\ndnf \u2013y reinstall rpm\n```", "```\n*/1 * * * *\u00a0\u00a0pgrep -u doe |xargs renice +5\n*/1 * * * * pgrep -u john|xargs renice -5\n```", "```\nrenice +5 $(pgrep -u doe)\n```", "```\ndnf -y install tuned\nsystemctl enable tuned\nsystemctl start tuned\ntuned-adm profile throughput-performance\n```", "```\nnmcli con show \n```", "```\nnmcli con mod \"Wired Connection\" ipv4.addresses 10.0.0.7\nnmcli con mod \"Wired Connection\" ipv6.addresses 2001:db8:0:1::c000:207\n```", "```\nnmcli con show \"Wired Connection\"|grep address\n```", "```\nexport PATH=${PATH}:/opt/mysystem/bin\n```", "```\nchmod +x /etc/profile.d/mysystempath.sh\nmkdir -p /opt/mysystem/bin\n```", "```\necho ${PATH}\n```", "```\nman firewall-cmd\n```", "```\nman firewalld.zones\n```", "```\ncp /usr/lib/firewalld/zones/public.xml /etc/firewalld/zones/dazone.xml\n```", "```\nfirewall-cmd -reload\n```", "```\nfirewall-cmd --get-zones\n```", "```\nfirewall-cmd --set-default-zone=dazone\n```", "```\nfirewall-cmd --add-interface=ens3 --zone=dazone\n```", "```\nfirewall-cmd -remove-interface=ens3 --zone=public\nfirewall-cmd -add-interface=ens3 --zone=dazone\n```", "```\n[myserver]\nname=My server repository\nbaseurl=https://myserver.com/repo/\nenabled=1\ngpgcheck=1\ngpgkey=https://myserver.com/mygpg.key\n```", "```\nskip_if_unavailable=1\n```"]