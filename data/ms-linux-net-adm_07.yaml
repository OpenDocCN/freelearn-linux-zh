- en: Chapter 7. Hosting HTTP Content via Apache
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第7章。通过Apache托管HTTP内容
- en: '**Apache** is the most common web server used on the Internet. While there
    are other web servers available, such as Microsoft''s **Internet Information Services**
    (**IIS**), Apache rules the kingdom when it comes to serving web content. Available
    in both Linux and UNIX platforms, Apache enables you to host content and share
    it over your local intranet, as well as the Internet. There are many uses for
    an Apache server, including (but certainly not limited to) hosting a blog or company
    website, or setting up an employee portal for your company.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**Apache**是互联网上最常用的Web服务器。虽然还有其他可用的Web服务器，比如微软的**Internet Information Services**（**IIS**），但在提供Web内容方面，Apache占据着统治地位。Apache在Linux和UNIX平台上都可用，使您能够托管内容并在本地局域网以及互联网上共享。Apache服务器有许多用途，包括（但不限于）托管博客或公司网站，或为您的公司设置员工门户网站。'
- en: 'In this chapter, you''ll learn all about installing and configuring Apache.
    We will cover the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将学习有关安装和配置Apache的所有内容。我们将涵盖以下主题：
- en: Installing Apache
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装Apache
- en: Configuring Apache
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置Apache
- en: Adding modules
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加模块
- en: Setting up virtual hosts
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置虚拟主机
- en: Installing Apache
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Apache
- en: As usual, installing Apache on your system is just a matter of installing the
    proper package from your package manager. On a CentOS system, you can obtain Apache
    by installing the `httpd` package, and on Debian systems with the `apache2` package
    (`yum install httpd` or `apt-get install apache2 respectively`, as root). Once
    you install the package, Apache's daemon is now present with a default set of
    configuration files. You will be able to confirm the existence of the daemon on
    your system with `systemctl`, though the name of the daemon is different depending
    on your distribution.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 像往常一样，在系统上安装Apache只是从软件包管理器中安装适当的软件包。在CentOS系统上，您可以通过安装`httpd`软件包获取Apache，在Debian系统上则是`apache2`软件包（分别作为root执行`yum
    install httpd`或`apt-get install apache2`）。安装软件包后，Apache的守护程序现在已经存在，并带有一组默认的配置文件。您可以使用`systemctl`确认守护程序在您的系统上的存在，尽管守护程序的名称根据您的发行版而有所不同。
- en: 'Use the following command on Debian:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在Debian上使用以下命令：
- en: '[PRE0]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Use the following command on CentOS:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在CentOS上使用以下命令：
- en: '[PRE1]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'By default, Debian starts and enables the daemon for you. As is typical, CentOS
    makes no assumptions and does neither. You can start and enable the daemon easily
    with the `systemctl` command:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Debian会为您启动和启用守护程序。与此相反，CentOS不会做任何假设。您可以使用`systemctl`命令轻松启动和启用守护程序：
- en: '[PRE2]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Once you install and enable Apache, you technically already have a working
    web server on your network. It may not be particularly useful (we haven''t configured
    it yet) but at this point it exists, and it is technically working. Both the CentOS
    and Debian builds of Apache look for web content in the same directory, `/var/www/html`.
    There, Debian creates a sample web page in the form of an `index.html` file, which
    you can view via a web browser on another computer (just point it to the IP address
    of your web server). CentOS, on the other hand, does not create a sample HTML
    page for you. This is easy to rectify; all you should have to do is manually create
    the `/var/www/html/index.html` file with some sample code. It doesn''t need to
    be extravagant; we just want to make sure we have something to test with. For
    example, you could just put the following code in that file:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 安装和启用Apache后，您在网络上已经有了一个工作的Web服务器。它可能并不特别有用（因为我们还没有配置它），但在这一点上它是存在的，而且在技术上是工作的。CentOS和Debian版本的Apache都在同一个目录`/var/www/html`中寻找Web内容。在那里，Debian创建了一个样本网页，以`index.html`文件的形式存在，您可以通过另一台计算机上的Web浏览器查看（只需将其指向您的Web服务器的IP地址）。另一方面，CentOS并没有为您创建一个样本HTML页面。这很容易纠正；您只需要手动创建`/var/www/html/index.html`文件，并放入一些样本代码。它不需要很豪华；我们只是想确保我们有一些东西可以测试。例如，您可以在该文件中放入以下代码：
- en: '[PRE3]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: At this point, you should have Apache installed and its service started. You
    should also have an example `/var/www/html/index.html` file present on your system,
    whether you are using Debian's default or you manually created it on a CentOS
    system. Now, you should be able to browse to your web server and view this page
    via a web browser. If you know the IP address of your webserver, just type that
    in to the address bar in your web browser. You should see the sample page immediately.
    If you're using a web browser on your web server, you should be able to browse
    to the localhost (`http://127.0.0.1` or `http://localhost`) and view the same
    page.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，您应该已经安装了Apache并启动了其服务。您的系统上应该有一个示例的`/var/www/html/index.html`文件，无论您是使用Debian的默认设置还是在CentOS系统上手动创建的。现在，您应该能够通过Web浏览器浏览到您的Web服务器并查看此页面。如果您知道您的Web服务器的IP地址，只需在Web浏览器的地址栏中输入即可。您应该立即看到示例页面。如果您在Web服务器上使用Web浏览器，您应该能够浏览到本地主机（`http://127.0.0.1`或`http://localhost`）并查看相同的页面。
- en: Note
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'If you chose CentOS for your web server, the default firewall may get in your
    way if you are trying to browse to it from another machine. Depending on your
    configuration, you may need to allow traffic to your web server through the firewall.
    To do this, execute the following commands:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您选择了CentOS作为您的Web服务器，那么默认防火墙可能会妨碍您从另一台机器上浏览到它。根据您的配置，您可能需要通过防火墙允许流量到您的Web服务器。要做到这一点，执行以下命令：
- en: '[PRE4]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Be sure to add port 443 as well, if you plan on hosting a secure site. Just
    use the same `firewall-cmd` as before, but replace 80 with 443.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 一定要添加端口443，如果您计划托管一个安全的网站。只需使用与之前相同的`firewall-cmd`，但用443替换80。
- en: If for some reason you don't see the default page, make sure that Apache is
    running (remember the `systemctl status` commands I mentioned earlier). If the
    daemon isn't running, you'll likely get a **connection refused** error. Also,
    keep in mind that hardware-based firewalls can prevent access as well.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如果出于某种原因您看不到默认页面，请确保Apache正在运行（记住我之前提到的`systemctl status`命令）。如果守护程序没有运行，您可能会收到**连接被拒绝**的错误。另外，请记住，基于硬件的防火墙也可能阻止访问。
- en: '![Installing Apache](img/B03919_07_01.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![安装Apache](img/B03919_07_01.jpg)'
- en: The default web page served from an unconfigured Apache, running on Debian
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 从Debian上运行的未配置Apache提供的默认网页
- en: Another way of testing whether or not your server is serving web pages is via
    `lynx`, a text-based web browser you can use within a shell. This may be preferred
    in some situations, as it doesn't have the overhead of a graphical web browser
    and is very quick to launch. Once you install the lynx package on your machine,
    you can navigate to your web server from the server itself by executing `lynx
    http://localhost`, or `http://<ip address>` if you are coming from a different
    machine.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种测试服务器是否提供网页的方法是通过`lynx`，这是一个文本化的网页浏览器，您可以在shell中使用。在某些情况下，这可能是首选，因为它没有图形网页浏览器的开销，并且启动非常快。一旦在您的机器上安装了lynx软件包，您可以通过执行`lynx
    http://localhost`或`http://<ip地址>`从不同的机器访问来自服务器的网站。
- en: '![Installing Apache](img/B03919_07_02.jpg)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![安装Apache](img/B03919_07_02.jpg)'
- en: Using lynx to test web server functionality
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 使用lynx测试web服务器功能
- en: Note
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: To quit `lynx`, press *Q* for quit followed by *Y* for yes.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 要退出`lynx`，按*Q*退出，然后按*Y*确认退出。
- en: As I mentioned, both Debian and CentOS look in the same directory for files
    to share via Apache. This directory is `/var/www/html`. In order to create a web
    site, you would place your site's files into this directory. The typical process
    of setting up an Apache server is by installing Apache, then testing whether or
    not it can be reached by other computers on the network, and then finally developing
    your site and placing its files into this folder.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我所提到的，Debian和CentOS都在同一个目录中查找要通过Apache共享的文件。这个目录是`/var/www/html`。为了创建一个网站，您需要将网站的文件放入这个目录。设置Apache服务器的典型过程是先安装Apache，然后测试它是否可以被网络上的其他计算机访问，最后开发您的网站并将其文件放入这个文件夹。
- en: Configuring Apache
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置Apache
- en: Configuring Apache is done by editing its configuration file, which will be
    located in one of two places, depending on your distribution.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 配置Apache是通过编辑其配置文件来完成的，这将位于两个位置中的一个，具体取决于您的发行版。
- en: 'Use the following command on CentOS:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在CentOS上使用以下命令：
- en: '[PRE5]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Use the following command on Debian:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在Debian上使用以下命令：
- en: '[PRE6]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The default web document directory, `/var/www/html`, can be changed. While `/var/www/html`
    is fairly standard, there's nothing stopping you from changing it should you decide
    to store your web files elsewhere. If you peruse the configuration file in CentOS,
    you'll see this directory called out within a configuration block that begins
    on line 131\. If you take a look at the configuration file in Debian, you won't
    see this called out at all. Instead, you'll see a directory within `/etc/apache2`
    called `sites-available`. Within the directory, there will be two default files,
    `000-default.conf` and `default-ssl.conf`. Both of these files designate `/var/www/html`
    as the default path, but how they differ is that the `000-default.conf` file designates
    configuration for port 80, while `default-ssl.conf` is responsible for the configuration
    on port 443\. As you probably know, port 80 references standard HTTP traffic,
    while port 443 corresponds to secure traffic. So essentially, each type of traffic
    has its own configuration file on Debian systems.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 默认的网页文档目录`/var/www/html`可以更改。虽然`/var/www/html`是相当标准的，但如果您决定将网页文件存储在其他地方，也没有什么阻止您更改它。如果您查看CentOS中的配置文件，您将看到这个目录在从第131行开始的一个配置块中被调用。如果您查看Debian中的配置文件，您根本看不到这个调用。相反，您将在`/etc/apache2`中看到一个名为`sites-available`的目录。在该目录中，将有两个默认文件，`000-default.conf`和`default-ssl.conf`。这两个文件都将`/var/www/html`指定为默认路径，但它们的区别在于`000-default.conf`文件指定了端口80的配置，而`default-ssl.conf`负责端口443的配置。您可能知道，端口80是标准的HTTP流量，而端口443对应于安全流量。因此，每种类型的流量在Debian系统上都有自己的配置文件。
- en: In all those cases, the **document root** is being set to `/var/www/html`. If
    you'd like to change that to a different directory, you would change the code
    to point to the new directory. For example, if you wanted to change the path to
    something like `/srv/html`, there are a few changes you would need to make to
    the file.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有这些情况下，**文档根目录**都被设置为`/var/www/html`。如果您想将其更改为其他目录，您需要更改代码以指向新目录。例如，如果您想将路径更改为`/srv/html`之类的内容，您需要对文件进行一些更改。
- en: 'First, look for the following line:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，查找以下行：
- en: '[PRE7]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Change it to point to the new directory:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 将其更改为指向新目录：
- en: '[PRE8]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'On my test systems, I found the `DocumentRoot` callout in the following configuration
    file on Debian:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在我的测试系统上，我在Debian的以下配置文件中找到了`DocumentRoot`的调用：
- en: '[PRE9]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'On CentOS, I found that on line 119 in the default configuration file:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在CentOS上，我发现在默认配置文件的第119行：
- en: '[PRE10]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'After you change that, we have to set our options for the new directory. On
    Debian, we need to make these changes in the following file:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 更改后，我们必须为新目录设置选项。在Debian上，我们需要在以下文件中进行这些更改：
- en: '[PRE11]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'On CentOS, we need to make these changes in the following file:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在CentOS上，我们需要在以下文件中进行这些更改：
- en: '[PRE12]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Open up one of those files, depending on which distribution you''re using.
    The code we need to change looks like this:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 打开其中一个文件，具体取决于您使用的发行版。我们需要更改的代码看起来像这样：
- en: '[PRE13]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Change the following accordingly:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 相应地更改以下内容：
- en: '[PRE14]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Note
  id: totrans-55
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: There may be some comments intermixed with the code shown in the previous example,
    but the basic idea is the same. Find the line that starts with `<Directory "/var/www/html">`
    and ensure the uncommented code within that block matches the example. As long
    as you do that, you should be fine.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的示例中，代码中可能夹杂着一些注释，但基本思想是一样的。找到以`<Directory "/var/www/html">`开头的行，并确保该块中的未注释代码与示例匹配。只要你这样做，你就应该没问题。
- en: Finally, it probably goes without saying, but to save you a headache you should
    make sure that you have set the permissions to `/srv/html` such that the directory
    and contents are readable by everyone. Also, ensure you created or copied an example
    HTML file (such as `index.html`) into this directory. Once you restart Apache,
    you should be able to serve web content from this new directory.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，可能不用说，但为了避免麻烦，您应该确保已将权限设置为`/srv/html`，使得该目录和内容对所有人可读。还要确保您已经创建或复制了一个示例HTML文件（例如`index.html`）到该目录中。一旦重新启动Apache，您应该能够从这个新目录提供网络内容。
- en: 'In addition to setting up the document root, the Apache configuration file
    also allows you to configure a few very important security settings as well. For
    example, access to the entirety of the server''s file system is disabled by default.
    This is a good thing. The following code is an example taken from a CentOS system,
    and it is responsible for preventing filesystem-wide access. The code is as follows:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 除了设置文档根目录外，Apache配置文件还允许您配置一些非常重要的安全设置。例如，默认情况下禁用对服务器文件系统的访问。这是一件好事。以下代码是从CentOS系统中提取的示例，它负责防止整个文件系统的访问。代码如下：
- en: '[PRE15]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Remotely viewing the `.htaccess` files are also disabled by default with the
    following configuration block:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，通过以下配置块禁用了远程查看`.htaccess`文件：
- en: '[PRE16]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Other options, such as the default location of Apache''s log files, can also
    be set. By default, the following default line of configuration directs the log
    files to /`etc/httpd/logs`:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 还可以设置其他选项，例如Apache日志文件的默认位置。默认情况下，以下默认配置行将日志文件指向/`etc/httpd/logs`：
- en: '[PRE17]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: However, this may be misleading, as the `/etc/httpd/logs` directory on CentOS
    systems is actually a symbolic link to `/var/log/httpd`, which is where you would
    actually find the log files should you need to view them. By default, the logging
    is set to `warn`, and this can also be changed within the Apache configuration
    file and set to any one of `debug`, `info`, `notice`, `warn`, `error`, and `crit`.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这可能会误导，因为在CentOS系统上，`/etc/httpd/logs`目录实际上是一个符号链接到`/var/log/httpd`，这才是您实际上可以找到日志文件的地方。默认情况下，日志记录设置为`warn`，这也可以在Apache配置文件中更改，并设置为`debug`、`info`、`notice`、`warn`、`error`和`crit`中的任何一个。
- en: 'It''s important to note that for any change you make to Apache, you will need
    to reload or restart the daemon. If you restart the daemon, it will shut down
    Apache and start it back up again. Reload simply causes Apache to reread its configuration
    file. In most cases, reload is the better option. By doing this, you can apply
    new configuration without disrupting access to your website. As with most systemd
    units, Apache uses the following commands to manage the running state of the daemon:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的是，对于您对Apache所做的任何更改，您都需要重新加载或重新启动守护程序。如果重新启动守护程序，它将关闭Apache并重新启动。重新加载只是导致Apache重新读取其配置文件。在大多数情况下，重新加载是更好的选择。通过这样做，您可以应用新的配置而不会中断对您网站的访问。与大多数systemd单元一样，Apache使用以下命令来管理守护程序的运行状态：
- en: 'Start the Apache daemon with the following command:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令启动Apache守护程序：
- en: '[PRE18]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Stop the Apache daemon with the following command:'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令停止Apache守护程序：
- en: '[PRE19]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Enable the Apache daemon at boot time with the following command:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令在启动时启用Apache守护程序：
- en: '[PRE20]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Reload the Apache daemon while attempting to maintain its running state:'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在尝试保持其运行状态的同时重新加载Apache守护程序：
- en: '[PRE21]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Restart the Apache daemon with the following command:'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令重新启动Apache守护程序：
- en: '[PRE22]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: If you're using CentOS, replace `apache2` with `httpd` in each case. Now that
    you understand how Apache is installed and configured, we can move on to using
    modules.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您使用的是CentOS，请在每种情况下将`apache2`替换为`httpd`。现在您已经了解了Apache的安装和配置方式，我们可以继续使用模块。
- en: Adding modules
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加模块
- en: As useful as Apache is out of the box, some functionality you'll likely require
    are not built in. Apache uses **modules** to extend its feature set. Examples
    of this may include installing the `php5` module to enable your site to use PHP,
    or perhaps the Python module if you develop in that language. Once a module is
    installed and activated, the features of that module will then become available
    to you.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管Apache开箱即用非常有用，但您可能需要的一些功能并不是内置的。Apache使用**模块**来扩展其功能集。例如，安装`php5`模块以使您的站点能够使用PHP，或者如果您使用Python开发，则可能需要Python模块。一旦安装并激活了模块，该模块的功能将对您可用。
- en: The implementation of Apache between CentOS and Debian is different, and the
    ways in which modules are added between them is also different. In fact, Debian
    even includes its very own command for enabling and disabling modules, which is
    completely exclusive to Debian systems. These commands are `a2enmod` and `a2dismod`.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: CentOS和Debian之间的Apache实现是不同的，它们之间添加模块的方式也是不同的。事实上，Debian甚至包括了其专门用于启用和禁用模块的命令，这完全是Debian系统的专属。这些命令是`a2enmod`和`a2dismod`。
- en: To work through the typical process of enabling a module in Debian, we can enable
    the PHP module on our server. I'll also detail this process in CentOS, but as
    I mentioned, this process is completely different between the two.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 要通过Debian启用模块的典型过程，我们可以在服务器上启用PHP模块。我还将详细介绍CentOS中的这个过程，但是正如我提到的，这个过程在这两者之间完全不同。
- en: 'First, locate a package that contains the module you want. If you don''t know
    the exact name of the package to install, you can print a list of available Apache
    modules to your terminal with the following command:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，找到包含您想要的模块的软件包。如果您不知道要安装的软件包的确切名称，可以使用以下命令将可用的Apache模块列表打印到终端：
- en: '[PRE23]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'By default, `aptitude` is not installed on most Debian systems. If the previous
    command results in a `command not found error`, you''ll just need to install the
    `aptitude` package via `apt-get install`. The output may be too long depending
    on the size of your terminal window, so you may want to pipe the output into `less`:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，大多数Debian系统上都没有安装`aptitude`。如果上一个命令导致`command not found error`，您只需要通过`apt-get
    install`安装`aptitude`软件包。输出可能会太长，取决于您的终端窗口的大小，因此您可能需要将输出导入`less`：
- en: '[PRE24]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'The following screenshot shows the search results of aptitude on a Debian system
    searching for `libapache2-mod`:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示了在Debian系统上使用aptitude搜索`libapache2-mod`时的搜索结果：
- en: '![Adding modules](img/B03919_07_03.jpg)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![添加模块](img/B03919_07_03.jpg)'
- en: There are quite a few modules available for Apache in Debian systems
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在Debian系统中，有相当多的Apache模块可用。
- en: 'By searching that way, you can press `Enter` or the up and down arrow keys
    to scroll through the output, and then press *Q* when you''re finished. By perusing
    the output, you''ll see that the PHP package is named `libapache2-mod-php5`. So,
    let''s install it with the following command:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这种方式搜索，您可以按`Enter`或上下箭头键滚动输出，然后在完成时按*Q*。通过查看输出，您会发现PHP包的名称是`libapache2-mod-php5`。因此，让我们使用以下命令安装它：
- en: '[PRE25]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Once the package is installed, check the output. It''s very possible that Debian
    already installed the module for you, the logic being that if you specifically
    ask for a package to be installed, you''ll probably want to have it usable right
    away. If you see output similar to the following, then the PHP module in this
    example is already installed:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完包后，检查输出。很可能Debian已经为您安装了模块，逻辑是如果您明确要求安装一个包，您可能希望立即使用它。如果您看到类似以下的输出，则此示例中的PHP模块已经安装：
- en: '[PRE26]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'You can verify this by attempting to enable it anyway, by executing `a2enmod
    php5` in the shell. If it''s enabled, you''ll see output similar to the following:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以尝试启用它来验证这一点，通过在shell中执行`a2enmod php5`。如果启用了，您将看到类似以下的输出：
- en: '[PRE27]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'In essence, the `a2enmod` and `a2dismod` commands work pretty much the same.
    As you can probably gather, one enables modules and the other disables them. In
    order to use an Apache module, it must be enabled. However, if you no longer need
    a module you can disable it (or better yet, remove it). Going over all the modules
    and the features they provide is outside the scope of this book. But in practice,
    you''ll only enable modules that are required by your site, which differs from
    environment to environment. Before we move on to the same procedure when performed
    on CentOS systems, I''ll leave you with this. To see a list of all modules that
    are installed on a Debian system, issue the following command:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 实质上，`a2enmod`和`a2dismod`命令的工作方式基本相同。您可能已经了解，一个是启用模块，另一个是禁用模块。要使用Apache模块，必须启用它。但是，如果您不再需要某个模块，可以禁用它（或者更好的做法是删除它）。查看所有模块及其提供的功能超出了本书的范围。但在实践中，您只会启用站点所需的模块，这在不同的环境中会有所不同。在我们继续在CentOS系统上执行相同的过程之前，我给您留下这个提示。要查看在Debian系统上安装的所有模块的列表，请发出以下命令：
- en: '[PRE28]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Now, let''s move on to CentOS. Most modules can be listed similar to how we
    did before in the Debian section, by using the package manager to list available
    module packages. In the CentOS, we can do so via the following command:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们转到CentOS。大多数模块可以通过使用包管理器列出可用的模块包，类似于我们在Debian部分之前所做的方式。在CentOS中，我们可以通过以下命令来实现：
- en: '[PRE29]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Unfortunately, the PHP module isn't listed in this output. This is because we
    enable PHP in CentOS by simply installing the `php` package. This is where things
    start to get confusing; quite a few CentOS Apache module packages have a naming
    convention beginning with `mod_`, but not all of them do. A bit of research is
    sometimes necessary when determining which packages need to be installed to grant
    the system access to a module. If there are any other modules you may need for
    a site you're developing, such as `mod_ldap` for LDAP authentication, feel free
    to install those as well.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 很遗憾，PHP模块在这个输出中没有列出。这是因为我们在CentOS中通过简单安装`php`包来启用PHP。这就是事情开始变得混乱的地方；相当多的CentOS
    Apache模块包都遵循以`mod_`开头的命名约定，但并非所有模块都是这样。有时需要进行一些研究来确定需要安装哪些包以授予系统对模块的访问权限。如果您在开发网站时需要其他模块，比如用于LDAP认证的`mod_ldap`，也可以随意安装。
- en: 'Unlike Debian, the `yum` package manager should have already enabled the modules
    you installed for you. Now that we''ve installed PHP in our CentOS system, we
    should have PHP available to us once we restart the `httpd` daemon. To verify
    this, we should be able to create an `info.php` file and store it in `/var/www/html/info.php`.
    The contents of the file are as follows:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 与Debian不同，`yum`包管理器应该已经为您启用了安装的模块。现在我们在CentOS系统中安装了PHP，一旦重新启动`httpd`守护程序，我们应该可以使用PHP。要验证这一点，我们应该能够创建一个`info.php`文件并将其存储在`/var/www/html/info.php`中。文件的内容如下：
- en: '[PRE30]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: If you navigate to the URL `http://<your_server_IP>/info.php`, you should see
    a page containing information regarding your server's PHP implementation.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您导航到URL `http://<your_server_IP>/info.php`，您应该看到包含有关服务器PHP实现的信息的页面。
- en: '![Adding modules](img/B03919_07_04.jpg)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![添加模块](img/B03919_07_04.jpg)'
- en: Viewing PHP server information on an Apache server
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在Apache服务器上查看PHP服务器信息
- en: Note
  id: totrans-104
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Although it's perfectly fine to use an `info.php` file in order to test PHP,
    do not leave it on the server—it is a security risk. You don't want to make it
    too easy for attackers to determine specific information regarding what your server
    is running. This procedure is merely to test that PHP is running properly.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然使用`info.php`文件来测试PHP是完全可以的，但不要将其留在服务器上——这是一个安全风险。您不希望使攻击者轻而易举地确定有关服务器正在运行的具体信息。这个过程只是为了测试PHP是否正常运行。
- en: Now that we've gone through installing Apache modules, it should be easy for
    you to customize your web server as you need in order to support any websites
    or applications you plan to run.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经介绍了安装Apache模块，您应该可以轻松地根据需要定制您的Web服务器，以支持您计划运行的任何网站或应用程序。
- en: Setting up virtual hosts
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置虚拟主机
- en: It's very common for a single organization to host multiple sites. Each of these
    sites can live on their own server or virtual machine, but that's not very practical.
    Running just one site per server is very expensive and not very efficient. The
    concept of **virtual hosts** is that multiple sites can live on one web server,
    which saves infrastructure. Of course, it's always possible that you may have
    a website that generates so much traffic that sharing it with other high-traffic
    sites may not be a good idea, but when this is not the case, virtual hosts are
    recommended.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 一个组织托管多个站点是非常常见的。这些站点可以存在于自己的服务器或虚拟机上，但这并不是非常实际的。每台服务器只运行一个站点非常昂贵且效率不高。**虚拟主机**的概念是多个站点可以存在于一个Web服务器上，这样可以节省基础设施。当然，可能会有一个网站产生了大量流量，与其他高流量站点共享可能不是一个好主意，但在这种情况下，推荐使用虚拟主机。
- en: 'As mentioned before, `/var/www` is the default location where Apache looks
    for files to serve. If you''re hosting multiple sites on one server, you would
    want to create a separate directory for each of them. For example, if you are
    hosting a website for a company named `tryadtech.com` and another for `linuxpros.com`,
    you could create the following directory structure:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，`/var/www`是Apache查找要提供的文件的默认位置。如果您在一台服务器上托管多个站点，您会希望为每个站点创建一个单独的目录。例如，如果您为名为`tryadtech.com`和`linuxpros.com`的公司托管网站，您可以创建以下目录结构：
- en: '[PRE31]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: In this example, I created directories several levels deep, so you can use the
    `-p` flag with `mkdir` in order to create these directories and their parents.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我创建了几层深的目录，所以您可以使用`mkdir`命令的`-p`标志来创建这些目录及其父目录。
- en: 'This way, each site gets their own directory so you can keep their content
    separate. Everyone will need to read these files, so we''ll need to adjust permissions:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 这样，每个站点都有自己的目录，这样可以保持它们的内容分开。每个人都需要读取这些文件，因此我们需要调整权限：
- en: '[PRE32]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'To create a virtual host, we''ll need to create a configuration file from it.
    On Debian, there is a default configuration you can use as a starting point should
    you choose (I''ll detail the configuration I use in the next section, so using
    this file is not required). If you wish, you can start with the following file:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建虚拟主机，我们需要从中创建一个配置文件。在Debian上，有一个默认配置文件可以作为起点使用（我将在下一节详细介绍我使用的配置，因此不需要使用此文件）。如果您愿意，可以从以下文件开始：
- en: '[PRE33]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'This file serves as a good reference point for creating configuration for a
    virtual host. If you choose to use it, copy it to the directory you''ve created
    for your virtual host:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 这个文件可以作为创建虚拟主机配置的良好参考点。如果您选择使用它，请将其复制到为虚拟主机创建的目录中：
- en: '[PRE34]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'On CentOS, the `/etc/apache2/sites-available` directory doesn''t even exist,
    so go ahead and create that. In order to tell Apache to load sites from this directory,
    we''ll need to add the following line to the bottom of the `/etc/httpd/conf/httpd.conf`
    file:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在CentOS上，`/etc/apache2/sites-available`目录甚至不存在，所以请创建它。为了告诉Apache从这个目录加载站点，我们需要在`/etc/httpd/conf/httpd.conf`文件的底部添加以下行：
- en: '[PRE35]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Now, here''s an example virtual host configuration file. I''ve saved it as
    `/etc/apache2/sites-available/tryadtech.com.conf` on my Debian test system, but
    on CentOS just replace `apache2` with `httpd`. I took this example file from the
    `000-default.conf` file I mentioned previously, removing the commented lines for
    the sake of brevity. The first bold line was not originally present, and the second
    was modified:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，这是一个虚拟主机配置文件的示例。我在我的Debian测试系统上将其保存为`/etc/apache2/sites-available/tryadtech.com.conf`，但在CentOS上，只需将`apache2`替换为`httpd`。我从之前提到的`000-default.conf`文件中取了这个示例文件，为了简洁起见删除了注释行。第一行是原始文件中没有的，第二行被修改了：
- en: '[PRE36]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: As you can see here, we're calling out an `html` directory underneath the `tryadtech.com`
    directory. To develop your site, you would place your site's files into the `html`
    directory, and after restarting Apache, you should be able to access that directory
    from a web browser.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您在这里看到的，我们在`tryadtech.com`目录下调用了一个`html`目录。为了开发您的站点，您可以将站点文件放入`html`目录中，在重新启动Apache之后，您应该能够从Web浏览器访问该目录。
- en: So, how does the Apache server know which directory to send visitors to? Notice
    the `ServerName` line that I added to the configuration file. In this line, I'm
    calling out a specific domain name that the files within this virtual host belong
    to. This requires that you already have DNS set up and pointing to this IP. For
    example, your DNS entry at your domain name registrar would be pointing each of
    these two virtual hosts to the same IP address. When a request comes in via the
    `tryadtech.com` domain, Apache should serve the user files from the `/var/www/tryadtech.com/html`
    directory. If you configure another virtual host and domain name, the same would
    apply to that domain as well.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，Apache服务器如何知道将访问者发送到哪个目录呢？注意我添加到配置文件的`ServerName`行。在这一行中，我指定了这个虚拟主机中的文件所属的特定域名。这要求您已经设置并指向了这个IP的DNS。例如，您在域名注册商处的DNS条目将把这两个虚拟主机中的每一个指向同一个IP地址。当通过`tryadtech.com`域名发出请求时，Apache应该从`/var/www/tryadtech.com/html`目录中为用户提供文件。如果您配置了另一个虚拟主机和域名，对该域名也将适用相同的规则。
- en: Summary
  id: totrans-124
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we set up an Apache server that we can use to share information
    on a local intranet, or even the Internet if our machine is externally routable.
    We walked through installing Apache, customizing it, setting up modules, as well
    as setting up virtual hosts.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们设置了一个Apache服务器，可以用来在本地内部网络上共享信息，甚至在我们的机器可以外部路由时也可以用于互联网。我们介绍了安装Apache，自定义它，设置模块，以及设置虚拟主机。
- en: In the next chapter, we'll tackle advanced networking techniques such as subnetting,
    adding redundancy to DHCP and DNS, and routing. See you there!
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将介绍高级网络技术，如子网划分，向DHCP和DNS添加冗余性以及路由。到时见！
