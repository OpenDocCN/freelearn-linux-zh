- en: Chapter 8. Working with wget and curl
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第8章。使用wget和curl
- en: This chapter will show how to use `wget` and `curl` to gather information directly
    from the internet.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将展示如何使用`wget`和`curl`直接从互联网上收集信息。
- en: 'The topics covered in this chapter are:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章涵盖的主题有：
- en: Show how to get information using `wget`.
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 展示如何使用`wget`获取信息。
- en: Show how to get information using `curl`.
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 展示如何使用`curl`获取信息。
- en: Scripts that can gather data in this way can be very powerful tools to have
    at your disposal. As you will see from this chapter, you can get stock quotes,
    lake levels, just about anything automatically from web sites anywhere in the
    world.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 以这种方式收集数据的脚本可以是非常强大的工具。正如您从本章中所看到的，您可以从世界各地的网站自动获取股票报价、湖泊水位等等。
- en: Introducing the wget program
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍wget程序
- en: You may have already heard about or even used the `wget` program. It is a command
    line utility that can be used to download files from the Internet.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能已经听说过或者甚至使用过`wget`程序。它是一个命令行实用程序，可用于从互联网下载文件。
- en: 'Here is a screenshot showing `wget` in its most simplest form:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一张截图显示了`wget`的最简单形式：
- en: '![Introducing the wget program](img/B07040_08_01.jpg)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![介绍wget程序](img/B07040_08_01.jpg)'
- en: wget options
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: wget选项
- en: In the output you can see that `wget` downloaded the `index.html` file from
    my [jklewis.com](http://jklewis.com) website.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在输出中，您可以看到`wget`从我的[jklewis.com](http://jklewis.com)网站下载了`index.html`文件。
- en: 'This is the default behavior of `wget`. The standard usage is:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这是`wget`的默认行为。标准用法是：
- en: '[PRE0]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: where **URL** stands for **Uniform Resource Locator**, or address of the website.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 其中**URL**代表**统一资源定位符**，或者网站的地址。
- en: 'Here is just a short list of the many available options with `wget`:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 这里只是`wget`的许多可用选项的简短列表：
- en: '| Parameter | Explanation |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| 参数 | 解释 |'
- en: '| --- | --- |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `-o` | `log` file, messages will be written here instead of to `STDOUT` |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| `-o` | `log`文件，消息将被写入这里，而不是到`STDOUT` |'
- en: '| `-a` | same as `-o` excepts it appends to the `log` file |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| `-a` | 与`-o`相同，除了它附加到`log`文件 |'
- en: '| `-O` | output file, copy the file to this name |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| `-O` | 输出文件，将文件复制到这个名称 |'
- en: '| `-d` | turn debugging on |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| `-d` | 打开调试 |'
- en: '| `-q` | quiet mode |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| `-q` | 静默模式 |'
- en: '| `-v` | verbose mode |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| `-v` | 详细模式 |'
- en: '| `-r` | recursive mode |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| `-r` | 递归模式 |'
- en: 'Let''s try another example:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们试试另一个例子：
- en: '![wget options](img/B07040_08_02.jpg)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![wget选项](img/B07040_08_02.jpg)'
- en: The `-o` option was used in this case. The return code was checked and a code
    of `0` means no failure. There was no output because it was directed to the `log`
    file which was displayed by the `cat` command.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下使用了`-o`选项。检查了返回代码，代码`0`表示没有失败。没有输出，因为它被定向到`log`文件，然后由`cat`命令显示。
- en: The `-o` option, write output to file, was used in this case. There was no output
    displayed because it was directed to the `log` file which was then shown by the
    `cat` command. The return code from `wget` was checked and a code of `0` means
    no failure.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下使用了`-o`选项，将输出写入文件。没有显示输出，因为它被定向到`log`文件，然后由`cat`命令显示。检查了`wget`的返回代码，代码`0`表示没有失败。
- en: Notice that this time it named the downloaded file `index.html.1`. This is because
    `index.html` was created in the previous example. The author of this application
    did it this way to avoid overwriting a previously downloaded file. Very nice!
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这次它将下载的文件命名为`index.html.1`。这是因为`index.html`是在上一个例子中创建的。这个应用程序的作者这样做是为了避免覆盖先前下载的文件。非常好！
- en: 'Take a look at this next example:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 看看下面的例子：
- en: '![wget options](img/B07040_08_03.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![wget选项](img/B07040_08_03.jpg)'
- en: Here we are telling `wget` to download the file given (`shipfire.gif`).
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们告诉`wget`下载给定的文件（`shipfire.gif`）。
- en: 'In this next screenshot we show how `wget` will return a useful error code:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一个截图中，我们展示了`wget`如何返回一个有用的错误代码：
- en: '![wget options](img/B07040_08_04.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![wget选项](img/B07040_08_04.jpg)'
- en: wget return codes
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: wget返回代码
- en: This error occurred because there is no file named `shipfire100.gif` in the
    base directory on my website. Notice how the output shows a **404 Not Found**
    message, this is seen very often on the Web. In general, it means a requested
    resource was not available at that time. In this case the file isn't there and
    so that message appears.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这个错误发生是因为在我的网站的基本目录中没有名为`shipfire100.gif`的文件。请注意输出显示了**404 Not Found**消息，这在网络上经常看到。一般来说，这意味着在那个时间点请求的资源不可用。在这种情况下，文件不存在，所以会出现这个消息。
- en: 'Note too how `wget` returned an `8` error code. The man page for `wget` shows
    this for the possible exit codes from `wget`:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 还要注意`wget`如何返回了一个`8`错误代码。`wget`的man页面显示了可能的退出代码：
- en: '| Error codes | Explanation |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| 错误代码 | 解释 |'
- en: '| --- | --- |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `0` | No problems occurred. |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| `0` | 没有发生问题。 |'
- en: '| `1` | Generic error code. |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| `1` | 通用错误代码。 |'
- en: '| `2` | Parse error. For instance when parsing command-line options, the `.wgetrc`
    or `.netrc` files |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| `2` | 解析错误。例如在解析命令行选项时，`.wgetrc`或`.netrc`文件 |'
- en: '| `3` | File I/O error. |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| `3` | 文件I/O错误。 |'
- en: '| `4` | Network failure. |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| `4` | 网络故障。 |'
- en: '| `5` | SSL verification failure. |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| `5` | SSL验证失败。 |'
- en: '| `6` | Username/password authentication failure. |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| `6` | 用户名/密码验证失败。 |'
- en: '| `7` | Protocol errors. |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| `7` | 协议错误。 |'
- en: '| `8` | Server issued an error response. |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| `8` | 服务器发出错误响应。 |'
- en: A return of `8` makes pretty good sense. The server could not find the file
    and so returned a `404` error code.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`8`是非常合理的。服务器找不到文件，因此返回了`404`错误代码。
- en: wget configuration files
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: wget配置文件
- en: Now is a good time to mention the different `wget` configuration files. There
    are two main files, `/etc/wgetrc` is the default location of the global `wget`
    startup file. In most cases you probably should not edit this unless you really
    want to make changes that affect all users. The file `$HOME/.wgetrc` is a better
    place to put any options you would like. A good way to do this is to open both
    `/etc/wgetrc` and `$HOME/.wgetrc` in your text editor and then copy the stanzas
    you want into your `$HOME./wgetrc` file.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候提到不同的`wget`配置文件了。有两个主要文件，`/etc/wgetrc`是全局`wget`启动文件的默认位置。在大多数情况下，您可能不应该编辑这个文件，除非您真的想要进行影响所有用户的更改。文件`$HOME/.wgetrc`是放置任何您想要的选项的更好位置。一个好的方法是在文本编辑器中打开`/etc/wgetrc`和`$HOME/.wgetrc`，然后将您想要的部分复制到您的`$HOME./wgetrc`文件中。
- en: For more information on the `wget` config files consult the `man` page (`man
    wget`).
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 有关`wget`配置文件的更多信息，请参阅`man`页面（`man wget`）。
- en: 'Now let''s see `wget` in action. I wrote this a while back to keep track of
    the water level in the lake I used to go boating in:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们看看`wget`的运行情况。我写了这个脚本一段时间，以跟踪我曾经划船的湖泊的水位：
- en: Chapter 8 - Script 1
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第8章-脚本1
- en: '[PRE1]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'This output is from June 5, 2017\. It''s not much to look at but here it is:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这个输出是从2017年6月5日。它看起来不怎么样，但在这里：
- en: '![Chapter 8 - Script 1](img/B07040_08_05.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: 第8章-脚本1
- en: You can see from the script and the output that it runs once every hour. In
    case you were wondering why anyone would write something like this, I needed to
    know if the lake level went below 640 feet as I would have had to move my boat
    out of the marina. This was during a severe drought back in Texas.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从脚本和输出中看到，它每小时运行一次。如果您想知道为什么会有人写这样的东西，我需要知道湖泊水位是否低于640英尺，因为我必须把我的船移出码头。这是德克萨斯州的一次严重干旱期间。
- en: 'There are a few things to keep in mind when writing a script like this:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 编写这样的脚本时需要记住一些事情：
- en: When first writing the script perform the `wget` once manually and then work
    with the downloaded file.
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 首次编写脚本时，手动执行`wget`一次，然后使用下载的文件进行操作。
- en: Do not use `wget` several times in a short period of time or else you may get
    blocked by the site.
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不要在短时间内多次使用`wget`，否则您可能会被网站屏蔽。
- en: Keep in mind that HTML programmers like to change things all the time and so
    you may have to adjust your script accordingly.
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 请记住，HTML程序员喜欢随时更改事物，因此您可能需要相应地调整您的脚本。
- en: When you finally get the script just right be sure to activate the `wget` again.
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当您最终调整好脚本时，一定要再次激活`wget`。
- en: wget and recursion
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: wget和递归
- en: The `wget` program can also be used to download the contents of an entire website
    by using the recursive (`-r`) option.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '`wget`程序还可以使用递归（`-r`）选项下载整个网站的内容。'
- en: 'For an example look at the following screenshot:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，请查看以下屏幕截图：
- en: '![wget and recursion](img/B07040_08_06.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![wget和递归](img/B07040_08_06.jpg)'
- en: The no verbose (`-nv`) option was used to limit the output. After the `wget`
    command completed the more command was used to view the contents of the log. Depending
    on the number of files the output might be very long.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 使用无冗长（`-nv`）选项来限制输出。`wget`命令完成后，使用more命令来查看日志的内容。根据文件数量，输出可能会非常长。
- en: When using `wget` you may run into unexpected issues. It may not get any files,
    or it may get some but not all of them. It might even fail without any reasonable
    error message. If this happens check the `man` page (`man wget`) very carefully.
    There may be an option that can help get you through the problem. In particular
    look at the following.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用`wget`时，您可能会遇到意外问题。它可能不会获取任何文件，或者可能获取其中一些但不是全部。它甚至可能在没有合理错误消息的情况下失败。如果发生这种情况，请非常仔细地查看`man`页面（`man
    wget`）。可能有一个选项可以帮助您解决问题。特别是要查看以下内容。
- en: Run `wget --version` on your system. It will display a detailed listing of the
    options and features and also how `wget` was compiled.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的系统上运行`wget --version`。它将显示选项和功能的详细列表，以及`wget`的编译方式。
- en: 'Here is an example taken from my system running CentOS 6.8 64-bit:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是从我运行CentOS 6.8 64位系统中获取的示例：
- en: '![wget and recursion](img/B07040_08_07.jpg)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![wget和递归](img/B07040_08_07.jpg)'
- en: wget options
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: wget选项
- en: Normally the defaults used by `wget` are good enough for most users, however,
    you may need to tweak things from time to time to get it to work the way you want
    it to.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 通常情况下，`wget`的默认设置对大多数用户来说已经足够好，但是，您可能需要不时地进行调整，以使其按照您的意愿进行工作。
- en: 'Here is a partial list of some of the `wget` options:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些`wget`选项的部分列表：
- en: '| wget option | Explanation |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '|wget选项|解释|'
- en: '| --- | --- |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '|---|---|'
- en: '| `-o` filename | Output messages to a `log` file. This was covered earlier
    in the chapter. |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '|`-o`文件名|将输出消息输出到`log`文件。这在本章中已经介绍过了。|'
- en: '| `-t` number | Try number times before giving up on the connection. |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '|`-t`数字|在放弃连接之前尝试的次数。|'
- en: '| `-c` | Continue to download a partially downloaded file from a previous `wget`.
    |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '|`-c`|继续从以前的`wget`中下载部分下载的文件。|'
- en: '| `-S` | Display the headers sent by the server. |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '|`-S`|显示服务器发送的标头。|'
- en: '| `-Q` number | The quota, or total amount of bytes that will be downloaded.
    Number can be in bytes, kilobytes (k), or megabytes (m). Set to 0 or inf for no
    quota. |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '|`-Q`数字|下载的总字节数配额。数字可以是字节，千字节（k）或兆字节（m）。设置为0或inf表示没有配额。|'
- en: '| `-l` number | This specifies the maximum recursion level. The default is
    5. |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '|`-l`数字|这指定了最大递归级别。默认值为5。|'
- en: '| `-m` | This is good for when trying to create a mirror of a site. It is equivalent
    to using the `-r -N -l inf --no-remove-listing` options. |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '|`-m`|在尝试创建站点的镜像时很有用。相当于使用`-r -N -l inf --no-remove-listing`选项。|'
- en: 'Another thing you may try is to turn on debugging with the `-d` option. Note
    that this will only work if your version of `wget` was compiled with debug support.
    Let''s see what happens when I try it on my system:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能尝试的另一件事是使用`-d`选项打开调试。请注意，这仅在您的`wget`版本编译时带有调试支持时才有效。让我们看看当我在我的系统上尝试时会发生什么：
- en: '![wget options](img/B07040_08_08.jpg)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![wget选项](img/B07040_08_08.jpg)'
- en: I wasn't sure if debugging was turned on or not, now I know. This output might
    not be very useful unless you are a developer, however, if you ever need to send
    in a bug report on `wget` they are going to ask for the debug output.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 我不确定调试是否已打开，现在我知道了。这个输出可能不是很有用，除非你是开发人员，但是，如果你需要发送关于`wget`的错误报告，他们会要求调试输出。
- en: As you can see, `wget` is a very powerful program with several options.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所看到的，`wget`是一个非常强大的程序，有许多选项。
- en: Note
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Remember to use `wget` with care and do not forget to put a sleep of at least
    a minute in your loop. An hour would be even better.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 记得小心使用`wget`，不要忘记在循环中至少放一个睡眠。一个小时会更好。
- en: curl
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: curl
- en: Now let's look at the `curl` program as it is somewhat similar to `wget`. One
    of the main differences between `wget` and `curl` is how they handle the output.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们看一下`curl`程序，因为它与`wget`有些相似。`wget`和`curl`之间的主要区别之一是它们如何处理输出。
- en: The `wget` program by default displays some progress information on the screen
    and then downloads the `index.html` file. In contrast, `curl` normally displays
    the file itself on the screen.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '`wget`程序默认在屏幕上显示一些进度信息，然后下载`index.html`文件。相比之下，`curl`通常在屏幕上显示文件本身。'
- en: 'Here is an example of `curl` running on my system using my favorite website
    (screenshot shortened to save space):'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 这是`curl`在我的系统上运行的一个例子，使用了我最喜欢的网站（截图缩短以节省空间）：
- en: '![curl](img/B07040_08_09.jpg)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![curl](img/B07040_08_09.jpg)'
- en: 'Another way to get the output into a file is by using redirection like this:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 将输出重定向到文件的另一种方法是使用重定向，就像这样：
- en: '![curl](img/B07040_08_10.jpg)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![curl](img/B07040_08_10.jpg)'
- en: You will notice that when redirected to a file the transfer progress is displayed
    on the screen. Also note that any error output goes into the file if redirected
    and not the screen.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 当重定向到文件时，你会注意到传输进度显示在屏幕上。还要注意，如果重定向了，任何错误输出都会进入文件而不是屏幕。
- en: curl options
  id: totrans-99
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: curl选项
- en: 'Here is a very brief list of the options available in curl:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是curl中可用选项的一个非常简要的列表：
- en: '| Curl options | Explanation |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
  zh: '| Curl选项 | 说明 |'
- en: '| --- | --- |'
  id: totrans-102
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `-o` | Output filename |'
  id: totrans-103
  prefs: []
  type: TYPE_TB
  zh: '| `-o` | 输出文件名 |'
- en: '| `-s` | Silent mode. Shows nothing, not even errors |'
  id: totrans-104
  prefs: []
  type: TYPE_TB
  zh: '| `-s` | 静默模式。什么都不显示，甚至错误也不显示 |'
- en: '| `-S` | Show errors if in silent mode |'
  id: totrans-105
  prefs: []
  type: TYPE_TB
  zh: '| `-S` | 在静默模式下显示错误 |'
- en: '| `-v` | Verbose, useful for debugging |'
  id: totrans-106
  prefs: []
  type: TYPE_TB
  zh: '| `-v` | 详细模式，用于调试 |'
- en: There are many other options to `curl`, as well as several pages of return codes.
    For more information consult the `curl man` page.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '`curl`还有许多其他选项，以及几页的返回代码。要了解更多信息，请参阅`curl man`页面。'
- en: 'And now here is a script showing how curl can be used to automatically get
    the current value of the Dow Jones Industrial Average:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 现在这里有一个脚本，展示了如何使用curl自动获取道琼斯工业平均指数的当前值：
- en: Chapter 8 - Script 2
  id: totrans-109
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第8章-脚本2
- en: '[PRE2]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Here''s what it looks like on my system. Normally you would probably leave
    the progress information out of the output by using the `-s` option but I thought
    it looked cool and so left it in:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 这是在我的系统上的样子。通常情况下，你可能会使用`-s`选项将进度信息从输出中去掉，但我觉得它看起来很酷，所以留了下来：
- en: '![Chapter 8 - Script 2](img/B07040_08_11.jpg)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![第8章-脚本2](img/B07040_08_11.jpg)'
- en: You can see that `curl` and `wget` work pretty much the same way. Remember when
    writing scripts such as these to keep in mind that the format of the page will
    almost certainly change from time to time so plan accordingly.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到`curl`和`wget`基本上是以相同的方式工作的。记住，当编写这样的脚本时，要牢记页面的格式几乎肯定会不时改变，所以要做好相应的计划。
- en: Summary
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter we showed how to use `wget` and `curl` in scripts. The default
    behavior of these programs were shown as were some of the many options. Return
    codes were also discussed and a couple of example scripts were presented.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '在本章中，我们展示了如何在脚本中使用`wget`和`curl`。展示了这些程序的默认行为，以及其中的许多选项。还讨论了返回代码，并呈现了一些示例脚本。 '
- en: The following chapter will cover how to more easily debug both syntax and logic
    errors in your scripts.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 以下章节将介绍如何更轻松地调试脚本中的语法和逻辑错误。
