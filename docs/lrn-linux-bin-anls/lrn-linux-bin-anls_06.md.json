["```\n$ readelf -h bin1 | grep Entry\n  Entry point address:               0x400520\n$\n```", "```\nreadelf -S bin1 | grep 4005\n  [13] .text             PROGBITS         0000000000400520  00000520\n```", "```\n$ objdump -d --section=.text bin1\n\n 0000000000400520 <_start>:\n  400520:       31 ed                 xor    %ebp,%ebp\n  400522:       49 89 d1              mov    %rdx,%r9\n  400525:       5e                    pop    %rsi\n  400526:       48 89 e2              mov    %rsp,%rdx\n  400529:       48 83 e4 f0           and    $0xfffffffffffffff0,%rsp\n  40052d:       50                    push   %rax\n  40052e:       54                    push   %rsp\n  40052f:       49 c7 c0 20 07 40 00   mov    $0x400720,%r8 // __libc_csu_fini\n  400536:       48 c7 c1 b0 06 40 00  mov    $0x4006b0,%rcx // __libc_csu_init\n  40053d:       48 c7 c7 0d 06 40 00  mov    $0x40060d,%rdi // main()\n  400544:       e8 87 ff ff ff         callq  4004d0  // call libc_start_main()\n...\n```", "```\nlibc_start_main((void *)&main, &__libc_csu_init, &libc_csu_fini);\n```", "```\n$ readelf -h retal_virus_sample | grep Entry\n  Entry point address:        0x80f56f\n```", "```\nElf file type is EXEC (Executable file)\nEntry point 0x80f56f\nThere are 9 program headers, starting at offset 64\n\nProgram Headers:\n  Type       Offset             VirtAddr           PhysAddr\n             FileSiz            MemSiz              Flags  Align\n  PHDR       0x0000000000000040 0x0000000000400040 0x0000000000400040\n             0x00000000000001f8 0x00000000000001f8  R E    8\n  INTERP     0x0000000000000238 0x0000000000400238 0x0000000000400238\n             0x000000000000001c 0x000000000000001c  R      1\n      [Requesting program interpreter: /lib64/ld-linux-x86-64.so.2]\n  LOAD       0x0000000000000000 0x0000000000400000 0x0000000000400000\n             0x0000000000001244 0x0000000000001244  R E    200000\n  LOAD       0x0000000000001e28 0x0000000000601e28 0x0000000000601e28\n             0x0000000000000208 0x0000000000000218  RW     200000\n  DYNAMIC    0x0000000000001e50 0x0000000000601e50 0x0000000000601e50\n             0x0000000000000190 0x0000000000000190  RW     8\n  LOAD       0x0000000000003129 0x0000000000803129 0x0000000000803129\n 0x000000000000d9a3 0x000000000000f4b3  RWE    200000\n\n```", "```\n(gdb) x/12i 0x80f56f\n   0x80f56f:  push   %r11\n   0x80f571:  movswl %r15w,%r11d\n   0x80f575:  movzwq -0x20d547(%rip),%r11        # 0x602036\n   0x80f57d:  bt     $0xd,%r11w\n   0x80f583:  movabs $0x5ebe954fa,%r11\n   0x80f58d:  sbb    %dx,-0x20d563(%rip)        # 0x602031\n   0x80f594:  push   %rsi\n   0x80f595:  sete   %sil\n   0x80f599:  btr    %rbp,%r11\n   0x80f59d:  imul   -0x20d582(%rip),%esi        # 0x602022\n   0x80f5a4:  negw   -0x20d57b(%rip)        # 0x602030 <completed.6458>\n   0x80f5ab:  bswap  %rsi\n```", "```\n[12] .plt     PROGBITS        08048300 000300 000050 04  AX  0   0 16\n```", "```\nContents of section .got.plt:\n\u2026\n0x804a00c: 28860408 26830408 36830408 \u2026\n```", "```\nRelocation section '.rel.plt' at offset 0x2b0 contains 4 entries:\n Offset     Info    Type            Sym.Value  Sym. Name\n0804a00c  00000107 R_386_JUMP_SLOT   00000000   puts\n0804a010  00000207 R_386_JUMP_SLOT   00000000   __gmon_start__\n0804a014  00000307 R_386_JUMP_SLOT   00000000   exit\n0804a018  00000407 R_386_JUMP_SLOT   00000000   __libc_start_main\n```", "```\n 8048628:       55                      push   %ebp\n 8048629:       89 e5                   mov    %esp,%ebp\n 804862b:       83 ec 0c                sub    $0xc,%esp\n 804862e:       c7 44 24 08 25 00 00    movl   $0x25,0x8(%esp)\n 8048635:       00\n 8048636:       c7 44 24 04 4c 86 04    movl   $0x804864c,0x4(%esp)\n 804863d:       08\n 804863e:       c7 04 24 01 00 00 00    movl   $0x1,(%esp)\n 8048645:       e8 a6 ff ff ff          call   80485f0 <_write>\n 804864a:       c9                      leave  \n 804864b:       c3                      ret  \n```", "```\n$ ./host\nHAHA puts() has been hijacked!\n$\n```", "```\n    movl $target, %eax\n    jmp *%eax\n    ```", "```\n    push $target\n    ret\n    ```", "```\n_start:\n        jmp B\nA:\n\n        # fd = open(\"libtest.so.1.0\", O_RDONLY);\n\n        xorl %ecx, %ecx\n        movb $5, %al\n        popl %ebx\n        xorl %ecx, %ecx\n        int $0x80\n\n        subl $24, %esp\n\n        # mmap(0, 8192, PROT_READ|PROT_WRITE|PROT_EXEC, MAP_SHARED, fd, 0);\n\n        xorl %edx, %edx\n        movl %edx, (%esp)\n        movl $8192,4(%esp)\n        movl $7, 8(%esp)\n        movl $2, 12(%esp)\n        movl %eax,16(%esp)\n        movl %edx, 20(%esp)\n        movl $90, %eax\n        movl %esp, %ebx\n        int $0x80\n\n        int3\nB:\n        call A\n        .string \"/lib/libtest.so.1.0\"\n```", "```\nFor runtime analysis, the infection vectors are many, and we will cover more about parasite identification in memory when we get into Chapter 7, *Process Memory Forensics*.\n```", "```\n     typedef struct {\n               ElfN_Sxword    d_tag;\n               union {\n                   ElfN_Xword d_val;\n                   ElfN_Addr  d_ptr;\n               } d_un;\n           } ElfN_Dyn;\n```", "```\n$ readelf -d ./test\n\nDynamic section at offset 0xe28 contains 24 entries:\n  Tag        Type                         Name/Value\n 0x0000000000000001 (NEEDED)             Shared library: [libc.so.6]\n 0x000000000000000c (INIT)               0x4004c8\n 0x000000000000000d (FINI)               0x400754\n 0x0000000000000019 (INIT_ARRAY)         0x600e10\n 0x000000000000001b (INIT_ARRAYSZ)       8 (bytes)\n 0x000000000000001a (FINI_ARRAY)         0x600e18\n 0x000000000000001c (FINI_ARRAYSZ)       8 (bytes)\n 0x000000006ffffef5 (GNU_HASH)           0x400298\n 0x0000000000000005 (STRTAB)             0x400380\n 0x0000000000000006 (SYMTAB)             0x4002c0\n 0x000000000000000a (STRSZ)              87 (bytes)\n 0x000000000000000b (SYMENT)             24 (bytes)\n 0x0000000000000015 (DEBUG)              0x0\n 0x0000000000000003 (PLTGOT)             0x601000\n 0x0000000000000002 (PLTRELSZ)           144 (bytes)\n 0x0000000000000014 (PLTREL)             RELA\n 0x0000000000000017 (JMPREL)             0x400438\n 0x0000000000000007 (RELA)               0x400408\n 0x0000000000000008 (RELASZ)             48 (bytes)\n 0x0000000000000009 (RELAENT)            24 (bytes)\n 0x000000006ffffffe (VERNEED)            0x4003e8\n 0x000000006fffffff (VERNEEDNUM)         1\n 0x000000006ffffff0 (VERSYM)             0x4003d8\n 0x0000000000000000 (NULL)               0x0\n```", "```\n$ readelf -d ./test\n\nDynamic section at offset 0xe28 contains 24 entries:\n  Tag        Type                         Name/Value\n 0x0000000000000001 (NEEDED)             Shared library: [libc.so.6]\n 0x000000000000000c (INIT)               0x4004c8\n 0x000000000000000d (FINI)               0x400754\n 0x0000000000000019 (INIT_ARRAY)         0x600e10\n 0x000000000000001b (INIT_ARRAYSZ)       8 (bytes)\n 0x000000000000001a (FINI_ARRAY)         0x600e18\n 0x000000000000001c (FINI_ARRAYSZ)       8 (bytes)\n 0x000000006ffffef5 (GNU_HASH)           0x400298\n 0x0000000000000005 (STRTAB)             0x400380\n 0x0000000000000006 (SYMTAB)             0x4002c0\n 0x000000000000000a (STRSZ)              87 (bytes)\n 0x000000000000000b (SYMENT)             24 (bytes)\n 0x0000000000000015 (DEBUG)              0x0\n 0x0000000000000003 (PLTGOT)             0x601000\n 0x0000000000000002 (PLTRELSZ)           144 (bytes)\n 0x0000000000000014 (PLTREL)             RELA\n 0x0000000000000017 (JMPREL)             0x400438\n 0x0000000000000007 (RELA)               0x400408\n 0x0000000000000008 (RELASZ)             48 (bytes)\n 0x0000000000000009 (RELAENT)            24 (bytes)\n 0x000000006ffffffe (VERNEED)            0x4003e8\n 0x000000006fffffff (VERNEEDNUM)         1\n 0x000000006ffffff0 (VERSYM)             0x4003d8\n 0x0000000000000001 (NEEDED)             Shared library: [evil.so]\n 0x0000000000000000 (NULL)               0x0\n```", "```\nreadelf -l ./infected_host1\n\nElf file type is EXEC (Executable file)\nEntry point 0x3c9040\nThere are 9 program headers, starting at offset 225344\n\nProgram Headers:\n Type         Offset             VirtAddr           PhysAddr\n              FileSiz            MemSiz              Flags  Align\n PHDR         0x0000000000037040 0x0000000000400040 0x0000000000400040\n              0x00000000000001f8 0x00000000000001f8  R E    8\n INTERP       0x0000000000037238 0x0000000000400238 0x0000000000400238\n              0x000000000000001c 0x000000000000001c  R      1\n      [Requesting program interpreter: /lib64/ld-linux-x86-64.so.2]\n LOAD         0x0000000000000000 0x00000000003ff000 0x00000000003ff000\n              0x00000000000378e4 0x00000000000378e4  RWE    1000\n LOAD         0x0000000000037e10 0x0000000000600e10 0x0000000000600e10\n              0x0000000000000248 0x0000000000000250  RW     1000\n DYNAMIC      0x0000000000037e28 0x0000000000600e28 0x0000000000600e28\n              0x00000000000001d0 0x00000000000001d0  RW     8\n NOTE         0x0000000000037254 0x0000000000400254 0x0000000000400254\n              0x0000000000000044 0x0000000000000044  R      4\n GNU_EH_FRAME 0x0000000000037744 0x0000000000400744 0x0000000000400744\n              0x000000000000004c 0x000000000000004c  R      4\n  GNU_STACK   0x0000000000037000 0x0000000000000000 0x0000000000000000\n              0x0000000000000000 0x0000000000000000  RW     10\n  GNU_RELRO   0x0000000000037e10 0x0000000000600e10 0x0000000000600e10\n              0x00000000000001f0 0x00000000000001f0  R      1\n```", "```\n$ readelf -h ./infected_host1\nELF Header:\n  Magic:   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00\n  Class:                             ELF64\n  Data:                              2's complement, little endian\n  Version:                           1 (current)\n  OS/ABI:                            UNIX - System V\n  ABI Version:                       0\n  Type:                              EXEC (Executable file)\n  Machine:                           Advanced Micro Devices X86-64\n  Version:                           0x1\n Entry point address:               0x3ff040\n Start of program headers:          225344 (bytes into file)\n Start of section headers:          0 (bytes into file)\n  Flags:                             0x0\n  Size of this header:               64 (bytes)\n  Size of program headers:           56 (bytes)\n  Number of program headers:         9\n  Size of section headers:           64 (bytes)\n  Number of section headers:         0\n  Section header string table index: 0\n```", "```\n$ readelf -h infected.lpv\nELF Header:\n  Magic:   7f 45 4c 46 01 01 01 00 00 00 00 00 00 00 00 00\n  Class:                             ELF32\n  Data:                              2's complement, little endian\n  Version:                           1 (current)\n  OS/ABI:                            UNIX - System V\n  ABI Version:                       0\n  Type:                              EXEC (Executable file)\n  Machine:                           Intel 80386\n  Version:                           0x1\n Entry point address:               0x80485b8\n  Start of program headers:          52 (bytes into file)\n  Start of section headers:          8524 (bytes into file)\n  Flags:                             0x0\n  Size of this header:               52 (bytes)\n  Size of program headers:           32 (bytes)\n  Number of program headers:         9\n  Size of section headers:           40 (bytes)\n  Number of section headers:         30\n  Section header string table index: 27\n```", "```\n$ readelf -S infected.lpv\nThere are 30 section headers, starting at offset 0x214c:\n\nSection Headers:\n  [Nr] Name              Type         Addr        Off\n       Size              ES           Flg Lk Inf Al\n  [ 0]                   NULL         00000000    000000\n       000000            00           0   0  0\n  [ 1] .interp           PROGBITS     08048154    000154\n       000013            00           A   0  0   1\n  [ 2] .note.ABI-tag     NOTE         08048168    000168\n       000020            00           A   0  0   4\n  [ 3] .note.gnu.build-i NOTE         08048188    000188\n       000024            00           A   0  0   4\n  [ 4] .gnu.hash         GNU_HASH     080481ac    0001ac\n       000020            04           A   5  0   4\n  [ 5] .dynsym           DYNSYM       080481cc    0001cc\n       000050            10           A   6  1   4\n  [ 6] .dynstr           STRTAB       0804821c    00021c\n       00004a            00           A   0  0   1\n  [ 7] .gnu.version      VERSYM       08048266    000266\n       00000a            02           A   5  0   2\n  [ 8] .gnu.version_r    VERNEED      08048270    000270\n       000020            00           A   6  1   4\n  [ 9] .rel.dyn          REL          08048290    000290\n       000008            08           A   5  0   4\n  [10] .rel.plt          REL          08048298    000298\n       000018            08           A   5  12  4\n  [11] .init             PROGBITS     080482b0    0002b0\n       000023            00           AX  0  0   4\n  [12] .plt              PROGBITS     080482e0    0002e0\n       000040            04           AX  0  0   16\n\n  [13] .text             PROGBITS     08048320    000320\n       000192            00           AX  0  0   16\n  [14] .fini             PROGBITS     080484b4    0004b4\n       000014            00           AX  0  0   4\n  [15] .rodata           PROGBITS     080484c8    0004c8\n       000014            00           A   0  0   4\n  [16] .eh_frame_hdr     PROGBITS     080484dc    0004dc\n       00002c            00           A   0  0   4\n [17] .eh_frame         PROGBITS     08048508    000508\n 00083b            00           A   0  0   4\n  [18] .init_array       INIT_ARRAY   08049f08    001f08\n       000004            00           WA   0  0   4\n  [19] .fini_array       FINI_ARRAY   08049f0c    001f0c\n       000004            00           WA   0  0   4\n  [20] .jcr              PROGBITS     08049f10    001f10\n       000004            00           WA   0  0   4\n  [21] .dynamic          DYNAMIC      08049f14    001f14\n       0000e8            08           WA   6  0   4\n  [22] .got              PROGBITS     08049ffc    001ffc\n       000004            04           WA   0  0   4\n  [23] .got.plt          PROGBITS     0804a000    002000\n       000018            04           WA   0  0   4\n  [24] .data             PROGBITS     0804a018    002018\n       000008            00           WA   0  0   4\n  [25] .bss              NOBITS       0804a020    002020\n       000004            00           WA   0  0   1\n  [26] .comment          PROGBITS     00000000    002020\n       000024            01           MS   0  0   1\n  [27] .shstrtab         STRTAB       00000000    002044\n       000106            00           0   0  1\n  [28] .symtab           SYMTAB       00000000    0025fc\n       000430            10           29  45 4\n  [29] .strtab           STRTAB       00000000    002a2c\n       00024f            00           0   0  1\n```", "```\n$ readelf -l infected.lpv\n\nElf file type is EXEC (Executable file)\nEntry point 0x80485b8\nThere are 9 program headers, starting at offset 52\n\nProgram Headers:\n  Type          Offset   VirtAddr   PhysAddr   FileSiz MemSiz  Flg Align\n  PHDR          0x000034 0x08048034 0x08048034 0x00120 0x00120 R E 0x4\n  INTERP        0x000154 0x08048154 0x08048154 0x00013 0x00013 R   0x1\n      [Requesting program interpreter: /lib/ld-linux.so.2]\n LOAD          0x000000 0x08048000 0x08048000 0x00d43 0x00d43 R E 0x1000\n  LOAD          0x001f08 0x08049f08 0x08049f08 0x00118 0x0011c RW  0x1000\n  DYNAMIC       0x001f14 0x08049f14 0x08049f14 0x000e8 0x000e8 RW  0x4\n  NOTE          0x001168 0x08048168 0x08048168 0x00044 0x00044 R   0x4\n  GNU_EH_FRAME  0x0014dc 0x080484dc 0x080484dc 0x0002c 0x0002c R   0x4\n  GNU_STACK     0x001000 0x00000000 0x00000000 0x00000 0x00000 RW  0x10\n  GNU_RELRO     0x001f08 0x08049f08 0x08049f08 0x000f8 0x000f8 R   0x1\n\n Section to Segment mapping:\n  Segment Sections...\n   00     \n   01     .interp\n   02     .interp .note.ABI-tag .note.gnu.build-id .gnu.hash .dynsym .dynstr .gnu.version .gnu.version_r .rel.dyn .rel.plt .init .plt .text .fini .rodata .eh_frame_hdr .eh_frame\n   03     .init_array .fini_array .jcr .dynamic .got .got.plt .data .bss\n   04     .dynamic\n   05     \n   06     \n   07     \n   08     .init_array .fini_array .jcr .dynamic .got\n```", "```\n$ readelf -l test.elfcrypt\n\nElf file type is EXEC (Executable file)\nEntry point 0xa01136\nThere are 2 program headers, starting at offset 64\n\nProgram Headers:\n  Type           Offset             VirtAddr           PhysAddr\n                 FileSiz            MemSiz              Flags  Align\n  LOAD           0x0000000000000000 0x0000000000a00000 0x0000000000a00000\n                 0x0000000000002470 0x0000000000002470  R E    1000\n  LOAD           0x0000000000003000 0x0000000000c03000 0x0000000000c03000\n                 0x000000000003a23f 0x000000000003b4df  RW     1000\n```", "```\n7fa7e5d44000-7fa7e9d43000 rwxp 00000000 00:00 0\n7fa7e9d43000-7fa7ea146000 rw-p 00000000 00:00 0\n7fa7ea146000-7fa7ea301000 r-xp 00000000 08:01 11406096  /lib/x86_64-linux-gnu/libc-2.19.so7fa7ea301000-7fa7ea500000 ---p 001bb000 08:01 11406096  /lib/x86_64-linux-gnu/libc-2.19.so\n7fa7ea500000-7fa7ea504000 r--p 001ba000 08:01 11406096  /lib/x86_64-linux-gnu/libc-2.19.so\n7fa7ea504000-7fa7ea506000 rw-p 001be000 08:01 11406096  /lib/x86_64-linux-gnu/libc-2.19.so\n7fa7ea506000-7fa7ea50b000 rw-p 00000000 00:00 0\n7fa7ea530000-7fa7ea534000 rw-p 00000000 00:00 0\n7fa7ea535000-7fa7ea634000 rwxp 00000000 00:00 0                          [stack:8176]\n7fa7ea634000-7fa7ea657000 rwxp 00000000 00:00 0\n7fa7ea657000-7fa7ea6a1000 r--p 00000000 08:01 11406093  /lib/x86_64-linux-gnu/ld-2.19.so\n7fa7ea6a1000-7fa7ea6a5000 rw-p 00000000 00:00 0\n7fa7ea856000-7fa7ea857000 r--p 00000000 00:00 0\n```", "```\n$ readelf -l test.packed\n\nElf file type is EXEC (Executable file)\nEntry point 0xc0c500\nThere are 2 program headers, starting at offset 52\n\nProgram Headers:\n  Type          Offset   VirtAddr   PhysAddr   FileSiz MemSiz  Flg Align\n  LOAD          0x000000 0x00c01000 0x00c01000 0x0bd03 0x0bd03 R E 0x1000\n  LOAD          0x000f94 0x08063f94 0x08063f94 0x00000 0x00000 RW  0x1000\n```", "```\n$ quenya\n\nWelcome to Quenya v0.1 -- the ELF modification and analysis tool\nDesigned and maintained by ElfMaster\n\nType 'help' for a list of commands\n[Quenya v0.1@workshop] unpack test.packed test.unpacked\nText segment size: 48387 bytes\n[+] Beginning analysis for executable reconstruction of process image (pid: 2751)\n[+] Getting Loadable segment info...\n[+] Found loadable segments: text segment, data segment\n[+] text_vaddr: 0x8048000 text_offset: 0x0\n[+] data_vaddr: 0x8062ef8 data_offset: 0x19ef8\n[+] Dynamic segment location successful\n[+] PLT/GOT Location: Failed\n[+] Could not locate PLT/GOT within dynamic segment; attempting to skip PLT patches...\nOpening output file: test.unpacked\nSuccessfully created executable\n```", "```\nreadelf -l test.unpacked\n\nElf file type is EXEC (Executable file)\nEntry point 0x804c041\nThere are 9 program headers, starting at offset 52\n\nProgram Headers:\n  Type          Offset   VirtAddr   PhysAddr   FileSiz MemSiz  Flg Align\n  PHDR          0x000034 0x08048034 0x08048034 0x00120 0x00120 R E 0x4\n  INTERP        0x000154 0x08048154 0x08048154 0x00013 0x00013 R   0x1\n      [Requesting program interpreter: /lib/ld-linux.so.2]\n  LOAD          0x000000 0x08048000 0x08048000 0x19b80 0x19b80 R E 0x1000\n  LOAD          0x019ef8 0x08062ef8 0x08062ef8 0x00448 0x0109c RW  0x1000\n  DYNAMIC       0x019f04 0x08062f04 0x08062f04 0x000f8 0x000f8 RW  0x4\n  NOTE          0x000168 0x08048168 0x08048168 0x00044 0x00044 R   0x4\n  GNU_EH_FRAME  0x016508 0x0805e508 0x0805e508 0x00744 0x00744 R   0x4\n  GNU_STACK     0x000000 0x00000000 0x00000000 0x00000 0x00000 RW  0x10\n  GNU_RELRO     0x019ef8 0x08062ef8 0x08062ef8 0x00108 0x00108 R   0x1\n```"]