- en: Chapter 8. Hob, Toaster, and Autobuilder
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第8章。Hob，Toaster和Autobuilder
- en: In this chapter, you will be introduced to new tools and components used in
    the Yocto community. As the title suggests, this chapter is dedicated to another
    category of tools. I will start with **Hob** as a graphical interface, which is
    slowly dying, and in time, will be replaced by a new web interface called **Toaster**.
    A new point of discussion will also be introduced in this chapter. Here, I am
    referring to the QA and testing component that is, in most cases, absent or lacking
    from most of the projects. Yocto takes this problem very seriously and offers
    a solution for it. This solution will be presented in the last section of the
    chapter.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将被介绍Yocto社区中使用的新工具和组件。正如标题所示，本章专门介绍另一类工具。我将从Hob作为图形界面开始，它正在逐渐消失，并将被一个名为Toaster的新网络界面所取代。本章还将介绍一个新的讨论点。在这里，我指的是QA和测试组件，在大多数情况下，它是缺失或不足的。Yocto非常重视这个问题，并为其提供了解决方案。这个解决方案将在本章的最后一节中介绍。
- en: You will also be offered a more detailed presentation to components, such as
    Hob, Toaster, and Autobuilder. Each of these components will be assessed separately
    and their benefits and use cases are looked at in detail. For the first two components,
    (that is, Hob and Toaster) information regarding the build process is offered
    alongside the various setup scenarios. Hob is similar to BitBake and is tightly
    integrated with Poky and the Build Directory. Toaster, on the other hand, is a
    looser alternative that offers multiple configuration alternatives and setups,
    and a performance section that can be very useful for any developer interested
    in improving the build system's overall performance. The chapter ends with section
    on Autobuilder. This project is the cornerstone of the Yocto project that is dedicated
    to making embedded development and open source more user-friendly, in general,
    but also offers more secure and error-free projects. I hope that you enjoy this
    chapter; let's proceed to the first section.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 您还将获得有关Hob，Toaster和Autobuilder等组件的更详细的介绍。将分别评估这些组件，并详细查看它们的优势和用例。对于前两个组件（即Hob和Toaster），提供了有关构建过程的信息以及各种设置方案。Hob类似于BitBake，并与Poky和构建目录紧密集成。另一方面，Toaster是一个更松散的替代方案，提供多种配置选择和设置，并且性能部分对于任何有兴趣改进构建系统整体性能的开发人员非常有用。本章以Autobuilder部分结束。该项目是Yocto项目的基石，致力于使嵌入式开发和开源更加用户友好，但也提供了更安全和无错误的项目。希望您喜欢本章；让我们继续到第一节。
- en: Hob
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Hob
- en: The Hob project represents a GUI alternative to the BitBake build system. Its
    purpose is to execute the most common tasks in an easier and faster manner, but
    it does not make command-line interactions go away. This is because most parts
    of recipes and configurations still need to be done manually. In the previous
    chapter, the BitBake Commander extension was introduced as an alternative solution
    for the editing of recipes, but in this project, it has its limitations.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: Hob项目代表了BitBake构建系统的图形界面替代方案。它的目的是以更简单更快的方式执行最常见的任务，但并不会消除命令行交互。这是因为大多数配方和配置的部分仍然需要手动完成。在上一章中，引入了BitBake
    Commander扩展作为编辑配方的替代解决方案，但在这个项目中，它有其局限性。
- en: Hob's primary purpose is to allow interaction with the build system made easier
    for users. Of course, there are users who do not prefer the graphical user interface
    alternatives to command-line options, and I kind of agree with them, but this
    is another discussion altogether. Hob can be an option for them also; it is an
    alternative not only for people who prefer having an interface in front of them,
    but also for those who are attached to their command-line interaction.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: Hob的主要目的是使用户更容易地与构建系统进行交互。当然，有些用户不喜欢图形用户界面的替代方案，而更喜欢命令行选项，我有点同意他们，但这是另一个讨论。Hob也可以是他们的选择；它不仅是为那些喜欢在面前有界面的人提供的选择，也是为那些喜欢他们的命令行交互的人提供的选择。
- en: Hob may not be able to a lot of tasks apart from most common ones, such as building
    an image, modifying its existing recipes, running an image through a QEMU emulator,
    or even deploying it on a USB device for some live-booting operations on a target
    device. Having all these functionalities is not much, but is a lot of fun. Your
    experience with the tools in Yocto Project do not matter here. The previously
    mentioned tasks can be done very easily and in an intuitive manner, and this is
    the most interesting thing about Hob. It offers its users what they need in a
    very easy fashion. People who interact with it can learn from the lessons it has
    to offer, whether they're graphic interface enthusiasts or command-line savvy.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: Hob除了最常见的任务外，可能无法执行很多任务，例如构建图像，修改现有的配方，通过QEMU模拟器运行图像，甚至在目标设备上将其部署到USB设备以进行一些现场引导操作。拥有所有这些功能并不多，但非常有趣。您在Yocto
    Project中使用工具的经验在这里并不重要。前面提到的任务可以非常轻松和直观地完成，这是Hob最有趣的地方。它以非常简单的方式为用户提供所需的功能。与之交互的人可以从它所提供的教训中学到东西，无论他们是图形界面爱好者还是命令行专家。
- en: In this chapter, I will show you how to use the Hob project to build a Linux
    operating system image. To demonstrate this, I will use the Atmel SAMA5D3 Xplained
    machine, which is what I also used for other demonstrations in previous chapters.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我将向您展示如何使用Hob项目构建Linux操作系统图像。为了演示这一点，我将使用Atmel SAMA5D3 Xplained机器，这也是我在前几章中进行其他演示时使用的机器。
- en: 'First of all, let''s see what Hob looks like when you start it for the first
    time. The result is shown in the following screenshot:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们看看当您第一次启动Hob时它是什么样子。结果显示在以下截图中：
- en: '![Hob](img/image00343.jpeg)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![Hob](img/image00343.jpeg)'
- en: 'To retrieve the graphical interface, the user needs perform the given steps
    required for the BitBake command-line interaction. Firstly, it needs to create
    a build directory and from this build directory, the user needs to start the Hob
    graphical interface, using the Hob commands, given as follows:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 要检索图形界面，用户需要执行BitBake命令行交互所需的给定步骤。首先，需要创建一个构建目录，并从该构建目录开始，用户需要使用以下Hob命令启动Hob图形界面：
- en: '[PRE0]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The next step is to establish the layers that are required for your build. You
    can do this by selecting them in the **Layers** window. The first thing to do
    for the `meta-atmel` layer is to add it to the build. Although you may start work
    in an already existing build directory, Hob will not be able to retrieve the existing
    configurations and will create a new one over the `bblayers.conf` and `local.conf`
    configuration files. It will mark the added lines using the next `#added by hob`
    message.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是确定构建所需的层。您可以通过在**层**窗口中选择它们来完成。对于`meta-atmel`层的第一步是将其添加到构建中。尽管您可能在已经存在的构建目录中开始工作，但Hob将无法检索现有的配置，并将在`bblayers.conf`和`local.conf`配置文件上创建一个新的配置。它将使用下一个`#added
    by hob`消息标记添加的行。
- en: '![Hob](img/image00344.jpeg)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![Hob](img/image00344.jpeg)'
- en: 'After the corresponding `meta-atmel` layer is added to the build directory,
    all the supported machines are available in the **Select a machine** drop-down,
    including those that are added by the `meta-atmel` layer. From the available options,
    the **sama5d3-xplained** machine needs to be selected:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在构建目录中添加了相应的`meta-atmel`层之后，所有支持的机器都可以在**选择机器**下拉菜单中找到，包括`meta-atmel`层添加的机器。从可用选项中，需要选择**sama5d3-xplained**机器：
- en: '![Hob](img/image00345.jpeg)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![Hob](img/image00345.jpeg)'
- en: 'When the Atmel **sama5d3-xplained** machine is selected, an error, shown in
    the following screenshot, appears:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 当选择Atmel **sama5d3-xplained**机器时，会出现如下截图所示的错误：
- en: '![Hob](img/image00346.jpeg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![Hob](img/image00346.jpeg)'
- en: 'After adding the `meta-qt5` layer to the layers section, this error disappears
    and the build process can continue. To retrieve the `meta-qt5` layer, the following
    `git` command is necessary:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在将`meta-qt5`层添加到层部分后，此错误消失，构建过程可以继续。要检索`meta-qt5`层，需要以下`git`命令：
- en: '[PRE1]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Since all the available configuration files and recipes are parsed, the parsing
    process takes a while, and after this, you will see an error, as shown in the
    following screenshot:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 由于所有可用的配置文件和配方都被解析，解析过程需要一段时间，之后您会看到如下截图所示的错误：
- en: '![Hob](img/image00347.jpeg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![Hob](img/image00347.jpeg)'
- en: 'After another quick inspection, you will see the following code:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 经过快速检查后，您会看到以下代码：
- en: '[PRE2]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The only explanation is the fact the `meta-atmel` layer does not update its
    recipes but appends them. This can be overcome in two ways. The simplest one would
    be to update the recipe the `.bbappend` file and make sure that the new available
    recipe is transformed into a patch for the upstream community. A patch with the
    required changes inside the `meta-atmel` layer will be explained to you shortly,
    but first, I will present the available options and the necessary changes that
    are needed to resolve the problems existing in the build process.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 唯一的解释是`meta-atmel`层没有更新其配方，而是附加它们。这可以通过两种方式克服。最简单的方法是更新`.bbappend`文件的配方，并确保新的可用配方被转换为上游社区的补丁。稍后将向您解释在`meta-atmel`层内具有所需更改的补丁，但首先，我将介绍可用的选项和解决构建过程中存在的问题所需的必要更改。
- en: The other solution would be to include the required recipes that `meta-atmel`
    needs for the build process. The best place for it to be available would be also
    in `meta-atmel`. However, in this case, the `.bbappend` configuration file should
    be merged with the recipe, since having a recipe and its appended file in the
    same place does not make much sense.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个解决方案是包含`meta-atmel`在构建过程中所需的必要配方。最好的地方也将其放在`meta-atmel`中。然而，在这种情况下，`.bbappend`配置文件应与配方合并，因为在同一位置拥有配方及其附加文件并不太合理。
- en: 'After this problem is fixed, new options will be available to the user, as
    depicted in the following screenshot:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在解决了这个问题之后，用户将可以看到新的选项，如下截图所示：
- en: '![Hob](img/image00348.jpeg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![Hob](img/image00348.jpeg)'
- en: 'Now, the user has the chance to select the image that needs to be built, as
    well as the extra configurations that need to be added. These configurations include:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，用户有机会选择需要构建的镜像，以及需要添加的额外配置。这些配置包括：
- en: Selection of the distribution type
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择分发类型
- en: Selection of the image types
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择镜像类型
- en: A packaging format
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 打包格式
- en: Other small tweaks around the root filesystem
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 根文件系统周围的其他小调整
- en: 'Some of these are depicted in the following screenshot:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 其中一些如下图所示：
- en: '![Hob](img/image00349.jpeg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![Hob](img/image00349.jpeg)'
- en: 'I''ve chosen to change the distribution type from **poky-tiny** to **poky**,
    and the resulting root filesystem output format is visible in the following screenshot:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我选择将分发类型从**poky-tiny**更改为**poky**，并且生成的根文件系统输出格式可在下图中看到：
- en: '![Hob](img/image00350.jpeg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![Hob](img/image00350.jpeg)'
- en: 'With the tweaks made, the recipes are reparsed, and when this process is finished,
    the resulting image can be selected so that the build process can start. The image
    that is selected for this demonstration is the **atmel-xplained-demo-image** image,
    which corresponds to the recipes with the same name. This information is also
    displayed in the following screenshot:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 经过调整后，配方被重新解析，当此过程完成后，可以选择生成的镜像，从而开始构建过程。此演示中选择的镜像是**atmel-xplained-demo-image**镜像，与同名的配方相对应。这些信息也显示在下图中：
- en: '![Hob](img/image00351.jpeg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![Hob](img/image00351.jpeg)'
- en: 'The build process is started by clicking on the **Build image** button. A while
    after the build starts, an error will show up, which tells us that the **meta-atmel**
    BSP layer requires more of the dependencies that need to be defined by us:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**构建镜像**按钮开始构建过程。构建开始后一段时间，将出现一个错误，告诉我们**meta-atmel**BSP层需要我们定义更多的依赖项：
- en: '![Hob](img/image00352.jpeg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![Hob](img/image00352.jpeg)'
- en: 'This information is gathered from the `iperf` recipe, which is not available
    in the included layers; it is available inside the `meta-openembedded/meta-oe`
    layer. After a more detailed search and update process, there have been a few
    revelations. There are more layer dependencies than required for the `meta-atmel`
    BSP layer, which are given as follows:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 这些信息是从`iperf`配方中收集的，该配方不在包含的层中；它在`meta-openembedded/meta-oe`层内可用。在进行更详细的搜索和更新过程后，有一些发现。`meta-atmel`
    BSP层需要的层依赖关系比所需的更多，如下所示：
- en: The `meta-openembedded/meta-oe` layer
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`meta-openembedded/meta-oe`层'
- en: The `meta-openembedded/meta-networking` layer
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`meta-openembedded/meta-networking`层'
- en: The `meta-openembedded/meta-ruby` layer
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`meta-openembedded/meta-ruby`层'
- en: The `meta-openembedded/meta-python` layer
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`meta-openembedded/meta-python`层'
- en: The `meta-qt5` layer
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`meta-qt5`层'
- en: 'The end result is available in the `BBLAYERS` variable that is be found in
    the `bblayers.conf` file, shown as follows:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 最终结果可在`bblayers.conf`文件中找到的`BBLAYERS`变量中找到，如下所示：
- en: '[PRE3]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'There are some required changes in the `meta-atmel` layer that needs to be
    made before starting a complete build, given as follows:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始完整构建之前，`meta-atmel`层中需要进行一些必要的更改，如下所示：
- en: Replace `packagegroup-core-basic` with `packagegroup-core-full-cmdline` because
    the latest Poky has updated the `packagegroup` names.
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用`packagegroup-core-full-cmdline`替换`packagegroup-core-basic`，因为最新的Poky已更新了`packagegroup`名称。
- en: Delete `python-setuptools` because it is not available in the `meta-openembedded/meta-oe`
    layer anymore, as well as in the new `meta-openembedded/meta-python` layer, which
    is the new placeholder for all Python-related recipes. The `python-setuptools`
    tool was removed because it had the ability to download, build, install, upgrade,
    and uninstall extra Python packages, and is not a mandatory requirement for Yocto.
    This is its general purpose.
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 删除`python-setuptools`，因为它在`meta-openembedded/meta-oe`层中不再可用，也不在新的`meta-openembedded/meta-python`层中，后者是所有与Python相关的配方的新占位符。`python-setuptools`工具被删除，因为它具有下载、构建、安装、升级和卸载额外Python软件包的能力，并且不是Yocto的强制要求。这是它的一般目的。
- en: The preceding change regarding the update to `qt4-embedded-4.8.6` for `qt4-embedded-4.8.5`,
    as shown earlier, presented errors.
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关于更新到`qt4-embedded-4.8.6`的前述更改，出现了错误。
- en: 'All the changes made to the `meta-atmel` layer are available in following patch:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '`meta-atmel`层的所有更改都包含在以下补丁中：'
- en: '[PRE4]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This patch has been given in the chapter as an example for Git interaction and
    is a necessity when creating a patch that needs to be upstream to the community.
    At the time of writing this chapter, this patch had not yet been released to the
    upstream community, so this could be a gift for anyone interested in adding a
    contribution to the meta-atmel community in particular and the Yocto community
    in general.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 这个补丁在本章中作为Git交互的一个示例，并且在创建需要上游到社区的补丁时是必需的。在撰写本章时，这个补丁尚未发布到上游社区，因此这可能是一个礼物，供有兴趣向meta-atmel社区特别是Yocto社区添加贡献的人使用。
- en: 'The steps necessary to obtain this patch after the changes have been made,
    are described shortly. They define the steps needed to generate the patch, as
    shown in the following command, and is `0001-Update-suppport-for-atmel-xplained-demo-image-image.patch`.
    It can be upstream to the community or directly to the maintainer of the `meta-atmel`
    layer using the information available in the `README` file and the `git send-email`
    command:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在更改完成后获得此补丁所需的步骤被简要描述。它定义了生成补丁所需的步骤，如下命令所示，即`0001-Update-suppport-for-atmel-xplained-demo-image-image.patch`。可以通过`README`文件和`git
    send-email`命令将其上游到社区或直接发送给`meta-atmel`层的维护者：
- en: '[PRE5]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Toaster
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Toaster
- en: Toaster represents an alternative to Hob, which at a given point in time, will
    replace it completely. It is also a web-based interface for the BitBake command
    line. This tool is much more effective than Hob; it is not only able to do the
    most common tasks in a similar manner as Hob, but it also incorporates a build
    analysis component that collects data regarding the build process and the resultant
    outcome. These results are presented in a very easy-to-grasp manner, offering
    the chance to search, browse, and query the information.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: Toaster是Hob的替代品，在某个特定时间点将完全取代它。它还是BitBake命令行的基于Web的界面。这个工具比Hob更有效；它不仅能够以与Hob类似的方式执行最常见的任务，而且还包括一个构建分析组件，收集有关构建过程和结果的数据。这些结果以非常易于理解的方式呈现，提供了搜索、浏览和查询信息的机会。
- en: 'From the collected information, we can mention the following:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 从收集的信息中，我们可以提到以下内容：
- en: Structure of the image directory
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图像目录的结构
- en: The available build configurations
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可用的构建配置
- en: The outcome of a build along with the errors and registered warnings
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建的结果以及注册的错误和警告
- en: The packages present in an image recipe
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图像配方中存在的软件包
- en: Recipes and packages that are built
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建的配方和软件包
- en: Tasks that are executed
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行的任务
- en: Performance data regarding executed tasks, such as CPU usage, time, and disk
    I/O usage
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关执行任务的性能数据，如CPU使用率、时间和磁盘I/O使用情况
- en: Dependency and reverse dependencies for recipes
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配方的依赖关系和反向依赖关系
- en: There are also some drawbacks to the Hob solution. Toaster does not yet offer
    the ability to configure and launch a build. However, there are initiatives taken
    to include these functionalities that Hob has inside Toaster, which will be implemented
    in the near future.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: Hob解决方案也存在一些缺点。Toaster目前还不能配置和启动构建。但是，已经采取了措施将Hob内的这些功能包含在Toaster中，这将在不久的将来实现。
- en: 'The current status of the Toaster Project permits the execution in various
    setups and running modes. Each of them will be presented and accordingly defined
    as follows:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: Toaster项目的当前状态允许在各种设置和运行模式下执行。每个都将被呈现并相应地定义如下：
- en: '**Interactive mode**: This is the mode available and released with the Yocto
    Project 1.6 release version. It is based on a `toasterui` build recording component
    and a `toastergui` build inspection and statistics user interface.'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**交互模式**：这是在Yocto Project 1.6版本中提供的模式。它基于`toasterui`构建记录组件和`toastergui`构建检查和统计用户界面。'
- en: '**Managed mode**: In addition to the Yocto Project 1.6 release version, this
    is the mode that handles build configurations, scheduling, and executions that
    are triggered from the web interface.'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**管理模式**：除了Yocto Project 1.6版本之外，这是处理从Web界面触发的构建配置、调度和执行的模式。'
- en: '**Remote managed mode**: This is a hosted Toaster mode and is defined for production
    because it offers support for multiple users and customized installations.'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**远程管理模式**：这是托斯特主机模式，用于生产环境，因为它支持多个用户和定制安装。'
- en: '**Local managed mode or** **_local_ is**: This is the mode available after
    a Poky checkout and permits running builds using the local machine code and build
    directory. It is the also used by anyone who interacts with a Toaster project
    for the first time.'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**本地管理模式或** **_本地_模式**：这是在Poky检出后可用的模式，允许使用本地机器代码和构建目录进行构建。这也是任何第一次与Toaster项目交互的人使用的模式。'
- en: 'For the **interactive mode**, building with tools, such as AutoBuilder, BuildBot,
    or Jenkins, a set up separated from the hardware on which the Yocto Project builds
    are running will be required. Behind a normal instance of Toaster, there are three
    things that happen:'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于**交互模式**，需要与Yocto Project构建运行的硬件分开设置，例如使用AutoBuilder、BuildBot或Jenkins等工具进行构建。在普通的Toaster实例后面，有三件事情发生：
- en: A BitBake server is started
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启动BitBake服务器
- en: A Toaster UI is started and connected to the BitBake server as well as to an
    SQL database
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启动Toaster UI，并连接到BitBake服务器以及SQL数据库。
- en: A web server is started for the purpose of reading information related to a
    database and displaying it on the web interface
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启动Web服务器是为了读取与数据库相关的信息，并在Web界面上显示它
- en: There are scenarios when multiple Toaster instances are running on multiple
    remote machines, or when a single Toaster instance is shared among multiple users
    and build servers. All of them can be resolved by modifying the mode that the
    Toaster starts in and changing the SQL database and location of the web server
    accordingly. By having a common SQL database, a web server, and multiple BitBake
    servers with the Toaster user interface for each separate build directory, you
    can solve problems involved in the previously mentioned scenarios. So, each component
    in a Toaster instance can be run on a different machine, as long as communication
    is done appropriately and the components know about each other.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 有时会出现多个Toaster实例在多台远程机器上运行的情况，或者单个Toaster实例在多个用户和构建服务器之间共享的情况。所有这些情况都可以通过修改Toaster启动的模式以及相应地更改SQL数据库和Web服务器的位置来解决。通过拥有一个共同的SQL数据库、Web服务器和多个BitBake服务器，以及每个单独的构建目录的Toaster用户界面，可以解决前面提到的问题。因此，Toaster实例中的每个组件都可以在不同的机器上运行，只要适当进行通信并且各组件了解彼此。
- en: 'To set up an SQL server on a Ubuntu machine, a package needs to be installed,
    using the following command:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 要在Ubuntu机器上设置SQL服务器，需要安装一个软件包，使用以下命令：
- en: '[PRE6]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Having the necessary packages is not enough; setting them up is also required.
    Therefore, the proper username and password for the access web server is necessary,
    along with the proper administration rights for the MySQL account. Also, a clone
    of the Toaster master branch would be necessary for the web server, and after
    the sources are available, make sure that inside the `bitbake/lib/toaster/toastermain/settings.py`
    file, the `DATABASES` variable indicates the previous setup of the database. Make
    sure that you use the username and password defined for it.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 拥有必要的软件包还不够，还需要设置它们。因此，需要适当的用户名和密码来访问Web服务器，以及MySQL帐户的适当管理权限。此外，还需要Toaster主分支的克隆用于Web服务器，源代码可用后，请确保在`bitbake/lib/toaster/toastermain/settings.py`文件中，`DATABASES`变量指示了先前设置的数据库。确保使用为其定义的用户名和密码。
- en: 'With the set up done, the database synchronization can begin in the following
    way:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 设置完成后，可以按以下方式开始数据库同步：
- en: '[PRE7]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Now, the web server can be started using the `python bitbake/lib/toaster/manage.py
    runserver` command. For background execution, you can use the `nohup python bitbake/lib/toaster/manage.py
    runserver 2>toaster_web.log >toaster_web.log &` command.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，可以使用`python bitbake/lib/toaster/manage.py runserver`命令启动Web服务器。对于后台执行，可以使用`nohup
    python bitbake/lib/toaster/manage.py runserver 2>toaster_web.log >toaster_web.log
    &`命令。
- en: 'This may be enough for starters, but as case logs are required for the builds,
    some extra setup is necessary. Inside the `bitbake/lib/toaster/toastermain/settings.py`
    file, the `DATABASES` variable indicates the SQL database for the logging server.
    Inside the build directory, call the `source toaster start` command and make sure
    that the `conf/toaster.conf` file is available. Inside this file, make sure that
    the Toaster and build history `bbclasses` are enabled to record information about
    the package:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 这可能足够作为起步，但由于构建需要案例日志，因此需要一些额外的设置。在`bitbake/lib/toaster/toastermain/settings.py`文件中，`DATABASES`变量指示用于日志服务器的SQL数据库。在构建目录中，调用`source
    toaster start`命令，并确保`conf/toaster.conf`文件可用。在此文件中，请确保启用了Toaster和构建历史`bbclasses`，以记录有关软件包的信息：
- en: '[PRE8]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'After this set up is available, start the BitBake server and the logging interface
    with these commands:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 设置完成后，使用以下命令启动BitBake服务器和日志界面：
- en: '[PRE9]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'After this is done, the normal build process can be started and builds can
    begin while the build is running inside the web interface logs and data is available
    to be examined. One quick mention, though: do not forget to kill the BitBake server
    after you have finished working inside the build directory using the `bitbake
    –m` command.'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，可以启动正常的构建过程，并且在构建在Web界面内运行时，日志和数据可供检查。不过，要注意一点：在完成在构建目录内的工作后，不要忘记使用`bitbake
    –m`命令关闭BitBake服务器。
- en: 'The local is very similar to the builds of the Yocto Project presented until
    now. This is the best mode for individual usage and learning to interact with
    the tool. Before starting the setup process, a few packages are required to be
    installed, using the following command lines:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 本地与迄今为止介绍的Yocto Project构建非常相似。这是个人使用和学习与工具交互的最佳模式。在开始设置过程之前，需要安装一些软件包，使用以下命令行：
- en: '[PRE10]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'After these packages are installed, make sure that you install the components
    required by Toaster; here, I am referring to the Django and South packages:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 安装了这些软件包后，请确保安装烤面包机所需的组件；在这里，我指的是Django和South软件包：
- en: '[PRE11]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: For interaction with the web server, the `8000` and `8200` ports are necessary,
    so make sure that they are not already reserved for other interactions. With this
    in mind, we can start the interaction with Toaster. Using the Poky build directory
    available from the downloads in the previous chapters, call the `oe-init-build-env
    script` to create a new build directory. This can be done on an already existing
    build directory, but having a new one will help identify the extra configuration
    files available for interaction with Toaster.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 与Web服务器交互时，需要`8000`和`8200`端口，因此请确保它们没有被其他交互预留。考虑到这一点，我们可以开始与烤面包机交互。使用前几章节中提供的下载中可用的Poky构建目录，调用`oe-init-build-env`脚本创建一个新的构建目录。这可以在已经存在的构建目录上完成，但有一个新的构建目录将有助于识别可用于与烤面包机交互的额外配置文件。
- en: 'After the build directory is set according to your needs, the `source toaster
    start` command should be called, as mentioned previously, to start Toaster. At
    `http://localhost:8000` , you will see the following screenshot if no build is
    executed:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 根据您的需求设置构建目录后，应调用`source toaster start`命令，如前所述，启动烤面包机。在`http://localhost:8000`上，如果没有执行构建，您将看到以下屏幕截图：
- en: '![Toaster](img/image00353.jpeg)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![烤面包机](img/image00353.jpeg)'
- en: 'Run a build in the console, and it will be automatically updated in the web
    interface, as shown in the following screenshot:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在控制台中运行构建，它将自动在Web界面中更新，如下面的屏幕截图所示：
- en: '![Toaster](img/image00354.jpeg)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![烤面包机](img/image00354.jpeg)'
- en: After the build is finished, the web interface will be updated accordingly.
    I closed the header image and information to make sure that only the builds are
    visible in the web page.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 构建完成后，Web界面将相应地更新。我关闭了标题图像和信息，以确保在Web页面中只有构建可见。
- en: '![Toaster](img/image00355.jpeg)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![烤面包机](img/image00355.jpeg)'
- en: As seen in the preceding example, there are two builds that have finished in
    the preceding screenshot. Both of them are kernel builds. The first one finished
    with success, while the second has some errors and warnings. I did this as an
    example to present the user with alternative outputs for their build.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 如前面的例子所示，在前面的屏幕截图中有两个已完成的构建。它们都是内核构建。第一个成功完成，而第二个有一些错误和警告。我这样做是为了向用户展示他们构建的替代输出。
- en: 'The build that failed took place due to lack of memory and space on the host
    machine, as seen in the following screenshot:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 由于主机机器上的内存和空间不足，导致构建失败，如下面的屏幕截图所示：
- en: '![Toaster](img/image00356.jpeg)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![烤面包机](img/image00356.jpeg)'
- en: 'For the failing build, a detailed fail report is available, as displayed in
    the following screenshot:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 对于失败的构建，有一个详细的失败报告可用，如下面的屏幕截图所示：
- en: '![Toaster](img/image00357.jpeg)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![烤面包机](img/image00357.jpeg)'
- en: 'The build that finished successfully offers access to a lot of information.
    The following screenshot shows interesting features that a build should have.
    It shows, for the kernel build, all the BitBake variables used, their values,
    their location, and a short description. This information is very useful for all
    developers, not only because it offers all of this at a single location, but also
    because it offers a search option that reduces the search time spent looking for
    a troublesome variable to a minimum:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 成功完成的构建提供了大量信息的访问。以下屏幕截图显示了构建应该具有的有趣功能。对于内核构建，它显示了使用的所有BitBake变量、它们的值、它们的位置和简短描述。这些信息对所有开发人员都非常有用，不仅因为它在一个位置提供了所有这些信息，而且因为它提供了一个减少寻找麻烦变量所需的搜索时间的搜索选项：
- en: '![Toaster](img/image00358.jpeg)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![烤面包机](img/image00358.jpeg)'
- en: To stop Toaster, the `source toaster stop` command can be used after the execution
    activities are finished.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 在执行活动完成后，可以使用`source toaster stop`命令停止烤面包机。
- en: 'Inside a build directory, Toaster creates a number of files; their naming and
    purpose are presented in the following lines:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在构建目录中，烤面包机创建了许多文件；它们的命名和目的在以下行中介绍：
- en: '`bitbake-cookerdaemon.log`: This log file is necessary for the BitBake server'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`bitbake-cookerdaemon.log`：这个日志文件对于BitBake服务器是必要的'
- en: '`.toastermain.pid`: This is the file that contains `pid` of the web server'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.toastermain.pid`：这是包含Web服务器`pid`的文件'
- en: '`.toasterui.pid`: It contains the DSI data bridge, `pid`'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.toasterui.pid`：它包含DSI数据桥，`pid`'
- en: '`toaster.sqlite`: This is the database file'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`toaster.sqlite`：这是数据库文件'
- en: '`toaster_web.log`: This is the web server log file'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`toaster_web.log`：这是Web服务器日志文件'
- en: '`toaster_ui.log`: This is the log file used for components of the user interface'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`toaster_ui.log`：这是用户界面组件使用的日志文件'
- en: With all of these factors mentioned, let's move to the next component, but not
    before offering a link to some interesting videos about Toaster.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 提到了所有这些因素，让我们转到下一个组件，但在提供有关烤面包机的一些有趣视频链接之前。
- en: Note
  id: totrans-118
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Information about Toaster Manual 1.7 can be accessed at [https://www.yoctoproject.org/documentation/toaster-manual-17](https://www.yoctoproject.org/documentation/toaster-manual-17).
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 有关烤面包机手册1.7的信息可在[https://www.yoctoproject.org/documentation/toaster-manual-17](https://www.yoctoproject.org/documentation/toaster-manual-17)上访问。
- en: Autobuilder
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自动构建器
- en: Autobuilder is the project responsible for QA, and a testing build is available
    inside the Yocto Project. It is based on the BuildBot project. Although this topic
    isn't dealt with in this book, for those of you interested in the BuildBot project,
    you can find more information about it in the following information box.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: Autobuilder是负责QA的项目，在Yocto Project内部提供了一个测试构建。它基于BuildBot项目。虽然这本书没有涉及这个主题，但对于那些对BuildBot项目感兴趣的人，可以在以下信息框中找到更多信息。
- en: Note
  id: totrans-122
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The starting page of Buildbot can be accssed at [http://trac.buildbot.net/](http://trac.buildbot.net/).
    You can find a guide on quick starting BuildBot at [http://docs.buildbot.net/0.8.5/tutorial/tour.html](http://docs.buildbot.net/0.8.5/tutorial/tour.html),
    and its concepts can be found at [http://docs.buildbot.net/latest/manual/concepts.html](http://docs.buildbot.net/latest/manual/concepts.html).
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: Buildbot的起始页面可以在[http://trac.buildbot.net/](http://trac.buildbot.net/)上访问。您可以在[http://docs.buildbot.net/0.8.5/tutorial/tour.html](http://docs.buildbot.net/0.8.5/tutorial/tour.html)找到有关快速启动BuildBot的指南，其概念可以在[http://docs.buildbot.net/latest/manual/concepts.html](http://docs.buildbot.net/latest/manual/concepts.html)找到。
- en: We are now going to address a software area that is very poorly treated by developers
    in general. Here, I am referring to the testing and quality assurance of a development
    process. This is, in fact, an area that requires more attention from us, including
    me as well. The Yocto Project through the AutoBuilder initiative tries to bring
    more attention to this area. Also, in the past few years, there has been a shift
    toward QA and **Continuous Integration** (**CI**) of available open source projects,
    and this can primarily be seen in the Linux Foundation umbrella projects.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在要讨论的是一个在一般开发人员中受到非常糟糕对待的软件领域。我指的是开发过程的测试和质量保证。事实上，这是一个需要我们更多关注的领域，包括我自己在内。Yocto
    Project通过AutoBuilder倡议试图引起更多对这一领域的关注。此外，在过去几年中，开源项目的QA和持续集成（CI）出现了转变，这主要可以在Linux
    Foundation的伞下项目中看到。
- en: 'The Yocto Project is actively involved in the following activities as part
    of the AutoBuilder project:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: Yocto Project积极参与AutoBuilder项目的以下活动：
- en: Publishing the testing and QA plans using Bugzilla test cases and plans ([https://bugzilla.yoctoproject.org](https://bugzilla.yoctoproject.org)).
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Bugzilla测试用例和计划发布测试和QA计划([https://bugzilla.yoctoproject.org](https://bugzilla.yoctoproject.org))。
- en: Demonstrating these plans and making them accessible for everyone to see. Of
    course, for this, you will need a corresponding account.
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 展示这些计划并使它们对所有人可见。当然，为此，您将需要相应的帐户。
- en: Developing tools, tests, and QA procedures for everyone to use.
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为所有人开发工具、测试和QA程序。
- en: Having the preceding activities as a foundation, they offer access to a public
    AutoBuilder that shows the current status of the Poky master branch. Nightly builds
    and test sets are executed for all the supported targets and architectures and
    are all available for everyone at [http://autobuilder.yoctoproject.org/](http://autobuilder.yoctoproject.org/).
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述活动作为基础的基础上，他们提供了对Poky主分支当前状态的公共AutoBuilder的访问。每晚为所有支持的目标和架构执行构建和测试集，并且所有人都可以在[http://autobuilder.yoctoproject.org/](http://autobuilder.yoctoproject.org/)上找到。
- en: Note
  id: totrans-130
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you do not have a Bugzilla account to access the QA activities done within
    the Yocto Project, refer to [https://wiki.yoctoproject.org/wiki/QA](https://wiki.yoctoproject.org/wiki/QA).
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您没有Bugzilla帐户来访问Yocto Project内部完成的QA活动，请参阅[https://wiki.yoctoproject.org/wiki/QA](https://wiki.yoctoproject.org/wiki/QA)。
- en: 'To interact with the AutoBuilder Project, the setup is defined in the `README-QUICKSTART`
    file as a four-step procedure:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 与AutoBuilder项目互动，设置在`README-QUICKSTART`文件中定义为一个四步程序：
- en: '[PRE12]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: The configuration files for this project are available inside the `config` directory.
    The `autobuilder.conf` file is used to define the parameters for the project,
    such as `DL_DIR`, `SSTATE_DIR`, and other build artifacts are very useful for
    a production setup, though not so useful for a local one. The next configuration
    file to inspect is `yoctoABConfig.py`, available in the `yocto-controller` directory
    where it defines the properties for the executed builds.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 该项目的配置文件位于`config`目录中。`autobuilder.conf`文件用于定义项目的参数，例如`DL_DIR`，`SSTATE_DIR`，以及其他构建工件对于生产设置非常有用，但对于本地设置则不太有用。要检查的下一个配置文件是`yoctoABConfig.py`，它位于`yocto-controller`目录中，用于定义执行构建的属性。
- en: 'At this point, the AutoBuilder should be running. If it is started inside a
    web interface, the result should look similar to the following screenshot:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，AutoBuilder应该正在运行。如果它在Web界面内启动，结果应该类似于以下截图：
- en: '![Autobuilder](img/image00359.jpeg)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![自动构建](img/image00359.jpeg)'
- en: 'As it can be visible from the header of the web page, there are multiple options
    available not only for the executed builds, but also for a different view and
    perspective of them. Here is one of the visualization perspectives:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 从网页标题中可以看出，不仅可以执行构建，还可以以不同的视图和角度查看它们。以下是其中一种可视化视角：
- en: '![Autobuilder](img/image00360.jpeg)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![自动构建](img/image00360.jpeg)'
- en: This project has more to offer to its users, but I will let the rest be discovered
    through trial and error and a reading of the README file. Keep in mind that this
    project was built with Buildbot, so the workflow is very similar to it.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 这个项目对其用户有更多的提供，但我会让其余的通过试验和阅读README文件来发现。请记住，这个项目是基于Buildbot构建的，因此工作流程与它非常相似。
- en: Summary
  id: totrans-140
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, you were presented with a new set of components that are available
    in the Yocto Project. Here, I am referring to the Hob, Toaster, and AutoBuilder
    projects. The chapter first introduced Hob as a BitBake alternative. It was followed
    by the Toaster alternative to Hob, which also comes with a lot of interesting
    features, and although it is not at its best now, over time, it will become a
    real solution for developers who are not interested in learning a new technology.
    Instead, they only interact with a tool to get what they want in a quick and easy
    manner. This chapter finished with the AutoBuilder project that offers a QA and
    testing platform for the Yocto Project community and can be transformed in a continuous
    integration tool.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将了解到Yocto Project中提供的一组新组件。在这里，我指的是Hob、Toaster和AutoBuilder项目。本章首先介绍了Hob作为BitBake的替代方案。接着介绍了Toaster作为Hob的替代方案，它也具有许多有趣的功能，尽管现在还不是最好的，但随着时间的推移，它将成为开发人员的真正解决方案，他们不想学习新技术，而是只需与工具交互，以快速简便的方式获得他们想要的东西。本章最后介绍了AutoBuilder项目，为Yocto
    Project社区提供了一个质量保证和测试平台，并可以转变为一个持续集成工具。
- en: In the next chapter, some of the other tools will be presented, but this time,
    the focus will move a little towards the exterior of the community and also its
    small tools. We will also cover projects and tools, such as Swabber, a project
    that is continuously in a developing stage. We will also take a look at Wic, a
    little tool with great personality, and the new sensation from Linaro called LAVA.
    I hope you enjoy learning all of them.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，将介绍一些其他工具，但这次重点将稍微转向社区以及其小工具的外部。我们还将涵盖项目和工具，例如Swabber，这是一个不断发展的项目。我们还将看看Wic，一个性格鲜明的小工具，以及来自Linaro的新感觉LAVA。希望您喜欢学习它们。
