- en: Chapter 6. Intrusion Detection with IPCop
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第6章。使用IPCop进行入侵检测
- en: Now that we have a working firewall with most of the basic features set up,
    we are feeling pretty secure. Surely no malicious intruder could get past these
    defenses on our network. What if they did though? How would we know? What would
    we do?
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有一个功能齐全的防火墙，大多数基本功能都已设置好，我们感到非常安全。但如果有恶意入侵者呢？如果他们真的进来了，我们怎么知道？我们该怎么办？
- en: These are questions that an **Intrusion Detection System** (**IDS**) tries to
    answer; it detects when things don't go entirely to plan in regards to network
    security and logs any suspicious activity that it recognizes, so that we can effectively
    deal with a security incident.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是**入侵检测系统**（**IDS**）试图回答的问题；它会检测网络安全方面的问题，并记录任何它识别出的可疑活动，以便我们能够有效地处理安全事件。
- en: Introduction to IDS
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: IDS简介
- en: There are a variety of Intrusion Detection Systems in the market ranging from
    the enterprise-level managed-network monitoring solution to a simple on-the-host
    logging system. There is also a distinction between an **Intrusion Prevention
    System** (**IPS**) and an IDS. An IPS goes one better than the IDS and attempts
    to block an attack in progress whereas the IDS attempts to log the attack and
    optionally notify a responsible party to employ an incident response plan.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 市场上有各种各样的入侵检测系统，从企业级的托管网络监控解决方案到简单的主机日志记录系统。入侵检测系统和IDS之间也有区别。IPS比IDS更进一步，试图阻止正在进行的攻击，而IDS试图记录攻击并在必要时通知负责人采取安全事件响应计划。
- en: IDSs can be further categorized as **NIDS** or **HIDS**, the difference being
    that the former watches the *network* and the latter monitors the *host*. This
    is important when choosing an IDS as we have to be sure of what exactly we are
    monitoring.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: IDS可以进一步分类为**NIDS**或**HIDS**，区别在于前者监视*网络*，后者监视*主机*。在选择IDS时，这一点很重要，因为我们必须确定我们究竟在监视什么。
- en: For example, many administrators won't employ a HIDS on Windows or Unix boxes
    due to their built-in abilities to log extensively (event logs/syslog), and therefore
    prefer to monitor the traffic on the network for signs of malicious behavior.
    This can also be more reliable than host monitoring as it's hard to trust the
    logs of a compromised host.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，许多管理员不会在Windows或Unix系统上使用HIDS，因为它们内置了大量日志记录的能力（事件日志/系统日志），因此更喜欢监视网络上的流量以寻找恶意行为的迹象。这也比主机监控更可靠，因为很难相信受到威胁的主机的日志。
- en: In the case of IPCop what we have is a built-in NIDS on our firewall, pre-configured
    and ready to use with the absolute minimal configuration, the **Snort** intrusion
    detection system.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在IPCop的情况下，我们的防火墙上内置了一个NIDS，预先配置并准备好使用的**Snort**入侵检测系统。
- en: Introduction to Snort
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Snort简介
- en: Snort is the IDS included with IPCop, and is one of the best-known and commonly
    used **sniffers** available today and used by networks large and small the world
    over. It has continually updated signatures for a massive number of vulnerabilities,
    a massive user base, commercial support, and excellent documentation available
    online as well as in print. Snort was initially developed by Martin Roesch in
    the late 1990's and was destined to be a sniffer and possibly a little more, hence
    the name Snort.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: Snort是包含在IPCop中的IDS，是当今最知名和常用的**sniffers**之一，被世界各地的大大小小网络所使用。它不断更新的签名覆盖了大量的漏洞，拥有庞大的用户群，商业支持以及在线和印刷版的优秀文档。Snort最初是由Martin
    Roesch在20世纪90年代末开发的，最初被设计为一个sniffer，可能还有一些其他功能，因此得名Snort。
- en: Initially as a sniffer Snort was quite good and was linked to its slightly older
    relative TCPDUMP. Eventually Snort was expanded and become known as more of a
    NIDS than a sniffer (many of Snort's users are unaware of its sniffing capabilities
    and use it purely as an IDS).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 最初作为sniffer，Snort相当不错，并与稍老一点的亲戚TCPDUMP有关。最终，Snort被扩展并被认为更像是NIDS而不是sniffer（许多Snort的用户并不知道它的sniffing能力，并纯粹将其用作IDS）。
- en: As Snort became very popular, Martin Roesch decided to start a company based
    on Snort to offer security services based on the expertise that he had as a Snort
    developer. This led to the creation of Sourcefire ([http://www.sourcefire.com](http://www.sourcefire.com)).
    Sourcefire now offers commercial support and other services based on Snort. Though
    it also employs full time developers for Snort, it still remains an open-source
    product, and hence can be provided with IPCop. The IPCop developers add to this
    a pre-configured Snort system with very easy-to-use and simple management options
    in the IPCop interface.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 随着Snort的广泛应用，Martin Roesch决定成立一家以Snort为基础的公司，提供他作为Snort开发者所拥有的安全服务专业知识。这导致了Sourcefire（[http://www.sourcefire.com](http://www.sourcefire.com)）的创建。Sourcefire现在提供基于Snort的商业支持和其他服务。尽管它也雇佣了全职开发人员来开发Snort，但它仍然是一个开源产品，因此可以与IPCop一起提供。IPCop开发人员为此添加了一个预配置的Snort系统，在IPCop界面中提供了非常易于使用和简单的管理选项。
- en: Do We Need an IDS?
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 我们需要IDS吗？
- en: The need of an IDS depends entirely on the network and what we want to do. Generally
    I'd say that we need it, unless we can think of a good reason not to have it.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: IDS的需求完全取决于网络和我们想要做什么。一般来说，我会说我们需要它，除非我们能想到一个不需要它的充分理由。
- en: 'The added benefit of an IDS is that we can see what is passing through our
    network and attempt to isolate any traffic that appears malicious. This is important
    as it''s a function many firewalls lack (except those with layer-seven support,
    which are termed application-layer firewalls). Since firewalls work at the lower
    layers of network communication their filtering rules are generally limited to
    IP addresses, ports, time of day, and only a few other criteria. If we have a
    firewall that isn''t looking into the payload of a packet and only making decisions
    based on packet headers, it''s far from inconceivable to say that these devices
    may allow some malicious traffic to pass. The role of our IDS is to do deep inspection
    of these packets looking at the data contained within and make decisions such
    as: "Does this look like the Code Red worm?", "Is this an attempt at a buffer
    overflow in our sendmail server?", or "Has one of our users just been exploited
    by the latest 0-day WMF exploit?". It''s quite valuable for an administrator to
    be notified of any packets that throw up these warning signs in the IDS, as we
    can then use this information to look further into the status of our network to
    see if we have a major issue to contend with, although often these warnings are
    false alarms. We can think of an IDS as an early warning system that something
    might be going on that requires our attention. In an attempt to protect our network,
    this is very valuable information to have!'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: IDS的附加好处是我们可以看到通过我们的网络的流量，并尝试隔离任何看起来恶意的流量。这很重要，因为许多防火墙缺乏这一功能（除了具有第七层支持的防火墙，被称为应用层防火墙）。由于防火墙在网络通信的较低层工作，它们的过滤规则通常仅限于IP地址、端口、时间以及少数其他标准。如果我们的防火墙不检查数据包的有效载荷，而只是根据数据包标头做出决定，那么这些设备可能会允许一些恶意流量通过，这并非不可想象。我们的IDS的作用是对这些数据包进行深度检查，查看其中包含的数据，并做出决定，比如：“这看起来像Code
    Red蠕虫吗？”，“这是对我们sendmail服务器的缓冲区溢出的尝试吗？”，或者“我们的用户刚刚受到了最新的0-day WMF漏洞的利用吗？”。对于管理员来说，被通知任何引起IDS警告的数据包是非常有价值的，因为我们可以利用这些信息进一步了解我们的网络状态，看看我们是否有重大问题需要处理，尽管这些警告通常是误报。我们可以把IDS看作是一个早期警报系统，提示可能有需要我们关注的事情发生。为了保护我们的网络，这是非常有价值的信息！
- en: Note
  id: totrans-15
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 附注
- en: '**Layer-7 Filtering (Application Layer)**'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**第七层过滤（应用层）**'
- en: There are options for IPCop that provide filtering at this layer, but they are
    not provided by default and require the installation of third-party add-ons.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 对于IPCop，有提供在这一层进行过滤的选项，但这些选项不是默认提供的，需要安装第三方附件。
- en: How Does an IDS Work?
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: IDS是如何工作的？
- en: NIDS in general, and Snort specifically, are run on devices that have the ability
    to monitor as much of the network as possible, generally on or near a gateway
    device, (as in the case of IPCop) or on some sort of monitoring port on a switch
    (SPAN/Mirror ports). The NIDS then sets up the network card or cards on the device
    to work in **promiscuous mode** meaning they will pass packets up through the
    network stack whether or not they are destined for the machine. This is important
    as a NIDS will often be monitoring machines other than itself. The NIDS on the
    host will then take these packets and have a look at the data payload (and sometimes
    the headers as well) to see if it notices anything malicious. This may sound like
    artificial intelligence as the NIDS just sits there thinking to itself about packets
    passing by; it's actually quite a lot simpler than that!
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: NIDS通常在具有尽可能多网络监控能力的设备上运行，通常在网关设备上或附近运行（如IPCop的情况），或者在交换机的某种监控端口上（SPAN/Mirror端口）。然后，NIDS设置设备上的网络卡以工作在**混杂模式**，这意味着它们会将数据包通过网络堆栈传递，无论这些数据包是否是发送给该设备的。这很重要，因为NIDS通常会监视除自身以外的其他机器。然后主机上的NIDS会接收这些数据包，并查看数据负载（有时也包括标头），以查看是否有任何恶意行为。这可能听起来像人工智能，因为NIDS只是坐在那里思考经过的数据包；实际上比那要简单得多！
- en: Every day exploits, viruses, worms, spyware, and other malicious software generate
    network traffic, and this traffic often has patterns specific to the piece of
    software in use, a specific string in an exploit, specific hosts it contacts,
    and specific options in the TCP/IP headers. There are many people watching their
    networks and as they notice something that looks strange they document it and
    generally seek advice from their peers to see if anyone notices something similar.
    Quite shortly afterwards, if malicious activity is detected, someone will write
    a signature for their favorite IDS and in many cases for a few IDSs all at once.
    Based on these signatures the IDS detection engine will decide whether to flag
    a packet as possibly malicious. These are rarely 100% accurate as they can and
    will provide false positives or negatives. This detection is designed as an extra
    layer of defense and cannot say for sure that a network has or has not been compromised.
    What can be done is alerting of an administrator that something is up. Snort on
    an IPCop box is placed in an excellent position to alert on any malicious behavior
    attempting to pass through the firewall to protected interfaces—or even between
    protected interfaces.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 每天都会有利用漏洞、病毒、蠕虫、间谍软件和其他恶意软件生成网络流量，这些流量通常具有特定于所使用软件的模式，利用漏洞中的特定字符串，它联系的特定主机以及TCP/IP标头中的特定选项。有许多人在监视他们的网络，当他们注意到看起来很奇怪的东西时，他们会记录下来，并通常向同行寻求建议，看看是否有人注意到类似的情况。很快，如果检测到恶意活动，有人会为他们喜欢的IDS编写签名，而且在许多情况下会同时为几个IDS编写签名。基于这些签名，IDS检测引擎将决定是否将数据包标记为可能恶意。这些很少是100%准确的，因为它们可能会产生误报或漏报。这种检测被设计为额外的防御层，不能确定网络是否已经遭到入侵。可以做的是提醒管理员有异常情况发生。在IPCop上的Snort处于一个很好的位置，可以警告任何试图通过防火墙到受保护接口的恶意行为，甚至在受保护接口之间。
- en: Using Snort with IPCop
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Snort与IPCop
- en: Setting up Snort with IPCop is a very straightforward process. SourceFire require
    users to register if they want to download updated signatures. We really do want
    to have updated rules, and so we should ensure we register with SourceFire. This
    can be done by following the instruction on the following screen for registering
    on the Snort website and generating an Oink code.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 使用IPCop设置Snort是一个非常简单的过程。SourceFire要求用户注册，如果他们想下载更新的签名。我们确实希望有更新的规则，所以我们应该确保注册SourceFire。可以通过按照在Snort网站上注册并生成Oink代码的屏幕上的说明来完成。
- en: '![Using Snort with IPCop](img/1361_06_01.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![使用Snort与IPCop](img/1361_06_01.jpg)'
- en: Once registered, we fill in the form on the previous screen. We select each
    interface we want to monitor by marking the corresponding checkbox. The author's
    preference is to monitor all interfaces at this point and filter later when monitoring
    the logs. We should also choose **SourceFire VRT rules for registered users**
    unless we have a paid for subscription that allows us access to the subscription
    rules. Then we enter our **Oink Code** as obtained from the Snort website. We
    can now download the most up-to-date rules. That's it! We have now, by filling
    in a very simple form, configured a NIDS for our network. Now surely we are secure!
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 注册后，我们填写上一个屏幕上的表格。我们通过选中相应的复选框来选择要监视的每个接口。作者的偏好是在此时监视所有接口，然后在监视日志时进行过滤。除非我们有一个允许访问订阅规则的付费订阅，否则我们应该选择**SourceFire
    VRT rules for registered users**，然后输入从Snort网站获取的**Oink Code**。现在我们可以下载最新的规则。就是这样！通过填写一个非常简单的表格，我们现在为我们的网络配置了一个NIDS。现在我们肯定是安全的！
- en: Monitoring the Logs
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 监视日志
- en: An intrusion detection system on its own isn't any good whatsoever; it needs
    a set of eyes to look over the logs and take action or some sort of automated
    notification system. IPCop's web interface provides a primitive first look at
    what is going on in the network.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 单独的入侵检测系统毫无用处；它需要一双眼睛来查看日志并采取行动，或者一些自动通知系统。IPCop的Web界面提供了对网络中发生的情况的原始第一印象。
- en: 'This can be found under the **Logs IDS Logs** menu option as shown in the following
    figure:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 这可以在**Logs IDS Logs**菜单选项下找到，如下图所示：
- en: '![Monitoring the Logs](img/1361_06_02.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![监视日志](img/1361_06_02.jpg)'
- en: The log screen defaults to today's date and gives us some interesting information.
    Today on December 20^(th) 381 rules were activated, meaning that Snort noticed
    381 possible attacks on the network. This number is abnormally high as the data
    was generated artificially by the author, but generally you would expect to see
    a few rules activated per day depending on the size of your network. Home users
    should expect to see a lot of port scans and automated worm attacks for example.
    If we take a closer look at one of the rules, we can see what Snort has shown
    us in the logs.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 日志屏幕默认显示今天的日期，并提供了一些有趣的信息。今天是12月20日，激活了381条规则，这意味着Snort注意到网络上发生了381次可能的攻击。这个数字是异常高的，因为数据是作者人为生成的，但通常情况下，你会预期每天激活几条规则，具体取决于你的网络规模。家庭用户应该预期看到很多端口扫描和自动蠕虫攻击。如果我们更仔细地查看其中一条规则，我们可以看到Snort在日志中向我们展示了什么。
- en: '**Date:12/20 12:51:41 Name:SNMP request udp**'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**日期：12/20 12:51:41 名称：SNMP请求udp**'
- en: '**Priority:2 Type:Attempted Information Leak**'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**优先级：2 类型：尝试信息泄漏**'
- en: '**IP info: 10.0.0.102:32833 -> 10.0.0.200:161**'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**IP信息：10.0.0.102:32833 -> 10.0.0.200:161**'
- en: '**References: none found SID: 1417**'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**参考资料：未找到 SID：1417**'
- en: We can see that someone from the computer at IP address **10.0.0.102** attempted
    to gain information on our network using a **UDP**-based **SNMP** request from
    port **32833** on the attacker to port **161** on **10.0.0.200**. We also have
    a **SID** value of **1417**. This is good basic information to let us know what
    is going on. We can see who, what, where, and when—which are very important for
    intrusion detection. The only value we don't have an obvious explanation for here
    is the SID.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，来自IP地址**10.0.0.102**的计算机尝试使用攻击者的端口**32833**向**10.0.0.200**的端口**161**发出基于**UDP**的**SNMP**请求，试图获取我们网络的信息。我们还有一个**SID**值为**1417**。这是让我们知道发生了什么的基本信息。我们可以看到谁、什么、在哪里以及何时——这对入侵检测非常重要。这里唯一没有明显解释的值是SID。
- en: The SID is the the Snort Signature ID and the number itself is a link to the
    online database of SIDs, which contains more information about this event.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: SID是Snort签名ID，数字本身是指向SID在线数据库的链接，其中包含有关此事件的更多信息。
- en: '![Monitoring the Logs](img/1361_06_03.jpg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![监视日志](img/1361_06_03.jpg)'
- en: This gives us a lot of information and lets us narrow down exactly what happened
    in this case. In the false positives section we can see that this event can occur
    when the system is scanned by security scanning software, which in this case is
    entirely correct, as the author scanned the IPCop box with OpenVAS, ([http://www.openvas.org](http://www.openvas.org))
    an open-source vulnerability scanner.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 这为我们提供了大量信息，并让我们准确地缩小了在这种情况下发生了什么。在虚警部分，我们可以看到当系统被安全扫描软件扫描时，这个事件可能发生，而在这种情况下是完全正确的，因为作者使用OpenVAS（[http://www.openvas.org](http://www.openvas.org)）对IPCop盒进行了扫描，这是一个开源漏洞扫描仪。
- en: Note
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '**OpenVAS**'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**OpenVAS**'
- en: OpenVAS is a fork of the Nessus security scanner, now being developed as a separate
    project in order to give an alternative to the latest non-GPL version of Nessus.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: OpenVAS是Nessus安全扫描仪的一个分支，现在作为一个独立项目进行开发，以提供对Nessus最新的非GPL版本的替代方案。
- en: Priority
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 优先级
- en: 'Another very important field is the priority, which in this case is **2**.
    Snort has the following three levels by default:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个非常重要的字段是优先级，在这种情况下是**2**。Snort默认有以下三个级别：
- en: 'Level 1:'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 级别1：
- en: Executable code detected
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检测到可执行代码
- en: Attempt or success in gaining administrative privilege
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尝试或成功获取管理特权
- en: Trojan signatures
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 特洛伊木马签名
- en: 'Level 2:'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 级别2：
- en: Attempted/Successful Denial of Service
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尝试/成功的拒绝服务
- en: Attempted/Successful Information Leak
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尝试/成功信息泄漏
- en: Unusual client port connection
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 异常的客户端端口连接
- en: 'Level 3:'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 级别3：
- en: Port Scanning
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 端口扫描
- en: Suspicious string detection
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可疑字符串检测
- en: Whenever an attack is detected, the rule it matches has a priority level that
    is referenced in order to give the event its priority number. These numbers are
    part of the rule and can be modified if necessary by manually altering the Snort
    rules. Manual alteration of Snort's configuration will not be covered here; however,
    there are many books and a lot of online documentation available on the subject
    of Snort.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 每当检测到攻击时，匹配规则的优先级将被引用，以为事件赋予其优先级编号。这些数字是规则的一部分，如果必要，可以通过手动修改Snort规则来进行修改。这里不会涵盖手动修改Snort配置；但是，关于Snort的主题有许多书籍和大量在线文档可供使用。
- en: Log Analysis Options
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 日志分析选项
- en: Snort, being such a well-used project, has a variety of analysis products available.
    We will take a quick look at some of the most commonly used products and the features
    they provide. The IPCop logging system is not entirely adequate for most analysis,
    and definitely cannot be used to provide reports, which are commonly required
    whenever there is an intrusion attempt. Many projects have been created in order
    to analyze and report on these logs. In order to use these tools you may have
    to configure IPCop to log to a remote syslog server or in some cases you can install
    and add on to IPCop.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 由于Snort是一个被广泛使用的项目，因此有各种分析产品可用。我们将快速浏览一些最常用的产品以及它们提供的功能。IPCop的日志记录系统对于大多数分析来说并不完全足够，并且绝对不能用于提供通常在入侵尝试时所需的报告。已经创建了许多项目，以便分析和报告这些日志。为了使用这些工具，您可能需要配置IPCop以将日志记录到远程syslog服务器，或者在某些情况下，您可以安装并添加到IPCop中。
- en: Perl Scripts
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Perl脚本
- en: One of the easiest install-and-use products for Snort log analysis is the excellent
    SnortALog. It offers some excellent features, the most useful being the abilities
    it has for report generation—you can have reports in ASCII, PDF, or HTML format
    with images represented as GIF, PNG, or JPEG. This makes for excellent reporting
    as you can be provided with a variety of graphs and statistics that can then be
    used in presentations or other reports, on the security status of the network.
    SnortALog works with all output options available with Snort and has an easy-to-use
    GUI for generating reports. There is also the option of SnortSnarf, which offers
    features similar to those of SnortALog; however SnortALog is fairly easy to use,
    and apparently SnortSnarf is no longer being developed. SnortALog also provides
    more report options and has a more polished look.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Snort日志分析来说，最简单的安装和使用产品之一是出色的SnortALog。它提供了一些出色的功能，最有用的是它用于报告生成的能力 - 您可以获得ASCII、PDF或HTML格式的报告，其中的图像表示为GIF、PNG或JPEG。这使得报告非常出色，因为您可以获得各种图表和统计数据，然后可以在演示文稿或其他报告中使用，用于网络安全状态的报告。SnortALog与Snort提供的所有输出选项兼容，并且具有易于使用的GUI用于生成报告。还有SnortSnarf的选项，它提供了与SnortALog类似的功能；但是SnortALog相对容易使用，而且显然SnortSnarf已不再开发。SnortALog还提供了更多的报告选项，并且外观更加精致。
- en: ACID and BASE
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 酸和碱
- en: There are also some more full-featured and complicated systems that can be used
    for monitoring and analyzing Snort logs. **ACID** for example is PHP-based, requires
    the use of a web server, and provides real-time monitoring and statistics of the
    Snort log. Moreover with the statistics generated with the above PERL scripts,
    you have very powerful options for further analysis. For example, you can query
    quite extensively to be provided with only the events of most interest for your
    current analysis, you can view the packet contents that generated the event, and
    closely analyze the packet data to fully determine the extent of the attack and
    whether it was a false positive. **BASE** is an alternative (forked from ACID)
    to ACID, provides similar features, and it is worth comparing the two to find
    the product preferred for our monitoring of the intrusion detection system.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一些更全面和复杂的系统可用于监视和分析Snort日志。例如，基于PHP的ACID需要使用Web服务器，并提供Snort日志的实时监控和统计信息。此外，通过上述PERL脚本生成的统计信息，您可以进行非常强大的进一步分析。例如，您可以进行相当广泛的查询，以仅提供您当前分析最感兴趣的事件，您可以查看生成事件的数据包内容，并仔细分析数据包数据，以充分确定攻击的程度以及它是否是误报。BASE是ACID的替代品（从ACID分叉出来），提供类似的功能，值得比较这两者，以找到我们监视入侵检测系统的首选产品。
- en: What to Do Next?
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下一步该怎么办？
- en: Once you have identified that an incident has occurred, it is important to quickly
    act on the incident. Although Snort itself provides nothing more than a few ideas
    on looking further at a specific event, it's the responsibility of the administrator
    to decide how to handle an event.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦确定发生了事件，迅速采取行动是非常重要的。尽管Snort本身只提供了一些关于进一步查看特定事件的想法，但管理员有责任决定如何处理事件。
- en: 'In a smaller network a formalized incident response plan isn''t always necessary,
    but it does help in maintaining system security if we have an idea of what to
    do if subjected to a specific attack. Some good examples would be port scans,
    denial of service, and exploitation attempts. We can then decide on things like:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在较小的网络中，正式的事件响应计划并不总是必要的，但是如果我们知道如何处理特定攻击，可以帮助维护系统安全。一些很好的例子包括端口扫描、拒绝服务和利用尝试。然后我们可以决定诸如：
- en: Do we want to report these?
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们是否想要报告这些？
- en: Do we want to analyze other protection systems if they occur?
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果发生其他保护系统，我们是否想要分析它们？
- en: Do we have to notify someone?
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们需要通知某人吗？
- en: Answering a few basic questions like these as you set up your IDS gives the
    IDS much more value as it becomes part of a valid plan for network protection.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在设置IDS时回答一些基本问题，可以使IDS在成为网络保护有效计划的一部分时具有更多的价值。
- en: Summary
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter we have covered the basics of what an IDS is, how it works,
    how to use Snort with IPCop, and additional tools for use with Snort.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们已经介绍了什么是IDS的基础知识，它是如何工作的，如何在IPCop中使用Snort，以及与Snort一起使用的其他工具。
- en: At this point we have knowledge of network protection, network monitoring, and
    at least a basic idea of what we would do if an attack attempt occurs. This puts
    us in a good situation on our network and ensures we are fully aware of what is
    going on. As mentioned in the introduction to this chapter, an IDS is supposed
    to give us a basic overview of the security status of the network—are we being
    attacked, where is it coming from, and what are the targets.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，我们已经了解了网络保护、网络监控，至少对如果发生攻击尝试我们会做些什么有一个基本的想法。这使我们在网络上处于一个良好的状态，并确保我们完全了解正在发生的事情。正如在本章的介绍中提到的，入侵检测系统（IDS）应该给我们一个网络安全状态的基本概述——我们是否受到攻击，攻击来自何处，以及攻击目标是什么。
- en: Armed with this information we can effectively increase the security of our
    network. Using an automated tool such as this means it is much easier for us to
    monitor these activities daily and ensure that we are always aware of our surroundings.
    Knowing how our network functions and what sort of data passes through it daily
    is an important measure in spotting network intrusions. We cannot be aware that
    something is going wrong if we don't have a baseline to compare this against;
    constantly monitoring our IDS gives us that baseline.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 凭借这些信息，我们可以有效地增加网络的安全性。使用这样的自动化工具意味着我们可以更容易地每天监控这些活动，并确保我们始终了解我们的周围环境。了解我们的网络如何运作以及每天通过它的数据类型是发现网络入侵的重要措施。如果我们没有基线来进行比较，我们就无法意识到出了问题；不断监控我们的IDS给了我们这个基线。
