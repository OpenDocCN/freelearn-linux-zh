- en: Security Tips and Tricks for the Busy Bee
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 对于繁忙的用户的安全提示和技巧
- en: In this, our final chapter, I'd like to do a round-up of quick tips and tricks
    that don't necessarily fit in with the previous chapters. Think of these tips
    as time savers for the busy administrator.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的最后一章中，我想对之前章节中不一定适合的一些快速提示和技巧进行总结。把这些提示看作是繁忙管理员的时间节省者。
- en: 'We''ll cover the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将涵盖以下主题：
- en: Quick ways to audit which system services are running
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 快速审计系统服务的方法
- en: Password-protecting the GRUB2 configuration
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对GRUB2配置进行密码保护
- en: Securely configuring and then password-protecting UEFI/BIOS
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全配置然后对UEFI/BIOS进行密码保护
- en: Use a security checklist when setting up your system
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在设置系统时使用安全检查表
- en: Auditing system services
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 审计系统服务
- en: A basic tenet of server administration, regardless of which operating system
    we're talking about, is to never have anything that you don't absolutely need
    installed on a server. You especially don't want any unnecessary network services
    running because that would give the bad guys extra ways to get into your system.
    And, there's always a chance that some evil hacker might have planted something
    that acts as a network service, and you'd definitely want to know about that.
    In this chapter, we'll look at a few different ways to audit your system to ensure
    that no unnecessary network services are running on it.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器管理的一个基本原则，无论我们谈论哪个操作系统，都是在服务器上永远不要安装任何你绝对不需要的东西。特别是你不希望任何不必要的网络服务在运行，因为这会给坏人额外的进入系统的途径。而且，总是有可能一些邪恶的黑客可能已经植入了一些充当网络服务的东西，你肯定想知道这件事。在本章中，我们将看一些审计系统的不同方法，以确保系统上没有不必要的网络服务在运行。
- en: Auditing system services with systemctl
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用systemctl审计系统服务
- en: 'On Linux systems that come with systemd, the `systemctl` command is pretty
    much a universal command that does many things for you. In addition to controlling
    your system''s services, it can also show you the status of those services. We
    have the following code:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在带有systemd的Linux系统中，`systemctl`命令几乎是一个为您执行许多操作的通用命令。除了控制系统的服务，它还可以显示这些服务的状态。我们有以下代码：
- en: '[PRE0]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Here''s the breakdown of the preceding command:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是前述命令的分解：
- en: '`-t service`: We want to view information about the services—or, what used
    to be called **daemons**—on the system'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-t service`：我们想要查看关于系统上服务或者以前称为**守护进程**的信息'
- en: '`--state=active`: This specifies that we want to view information about all
    the system services that are actually running'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--state=active`：这指定我们想要查看实际正在运行的所有系统服务的信息'
- en: 'A partial output of this command looks something like this:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令的部分输出看起来像这样：
- en: '[PRE1]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: You generally won't want to see quite this much information, although you might
    at times. This command shows the status of every service that's running on your
    system. What really interests us now is just the network services that can allow
    someone to connect to your system. So, let's look at how to narrow things down
    a bit.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 通常你不会想看到这么多信息，尽管有时可能会需要。这个命令显示了系统上运行的每个服务的状态。现在真正让我们感兴趣的是可以允许某人连接到你的系统的网络服务。所以，让我们看看如何缩小范围。
- en: Auditing network services with netstat
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用netstat审计网络服务
- en: 'The following are two reasons why you would want to keep track of what network
    services are running on your system:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是你想要跟踪系统上正在运行的网络服务的两个原因：
- en: To ensure that no legitimate network services that you don't need are running
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保没有不需要的合法网络服务正在运行
- en: To ensure that you don't have any malware that's listening for network connections
    from its master
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保你没有任何恶意软件在监听来自其主机的网络连接
- en: 'The `netstat` command is both handy and easy to use for these instances. First,
    let''s say that you want to see a list of network services that are listening,
    waiting for someone to connect to them:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '`netstat`命令对于这些情况既方便又易于使用。首先，假设你想要查看正在监听并等待有人连接的网络服务列表：'
- en: '[PRE2]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The breakdown is as follows:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 分解如下：
- en: '`-lp`: The `l` means that we want to see which network ports are listening.
    In other words, we want to see which network ports are waiting for someone to
    connect to them. The `p` means that we want to see the name and process ID number
    of the program or service that is listening on each port.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-lp`：`l`表示我们想要查看哪些网络端口正在监听。换句话说，我们想要查看哪些网络端口正在等待连接。`p`表示我们想要查看每个端口上正在监听的程序或服务的名称和进程ID号。'
- en: '`-A inet`: This means that we only want to see information about the network
    protocols that are members of the `inet` family. In other words, we want to see
    information about the `raw`, `tcp`, and `udp` network sockets, but we don''t want
    to see anything about the Unix sockets that only deal with interprocess communications
    within the operating system.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-A inet`：这意味着我们只想要查看属于`inet`系列的网络协议的信息。换句话说，我们想要查看关于`raw`、`tcp`和`udp`网络套接字的信息，但我们不想看到任何关于仅处理操作系统内部进程通信的Unix套接字的信息。'
- en: 'Since this output is from the OpenSUSE workstation that I just happen to be
    using at the moment, you won''t see any of the usual server-type services here.
    However, you do see a few things that you likely won''t want to see on your servers.
    For example, let''s look at the very first item:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这个输出来自我目前正在使用的OpenSUSE工作站，你在这里看不到通常的服务器类型服务。但是，你会看到一些你可能不想在你的服务器上看到的东西。例如，让我们看看第一项：
- en: '[PRE3]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The `Local Address` column specifies the local address and port of this listening
    socket. The asterisk means that this socket is on the local network, and `ideafarm-door`
    is the name of the network port that is listening. (By default, `netstat` will
    show you the names of ports whenever possible, by pulling the port information
    out of the `/etc/services` file.)
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '`本地地址`列指定了这个监听套接字的本地地址和端口。星号表示这个套接字在本地网络上，`ideafarm-door`是正在监听的网络端口的名称。（默认情况下，`netstat`会尽可能地显示端口的名称，通过从`/etc/services`文件中提取端口信息。）'
- en: 'Now, because I didn''t know what the `ideafarm-door` service is, I used my
    favorite search engine to find out. By plugging the term `ideafarm-door` into
    DuckDuckGo, I found the answer:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，因为我不知道`ideafarm-door`服务是什么，我使用了我最喜欢的搜索引擎来找出答案。通过将术语`ideafarm-door`输入DuckDuckGo，我找到了答案：
- en: '![](img/c01aa891-62dd-4b2c-8758-2883e24819a9.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c01aa891-62dd-4b2c-8758-2883e24819a9.png)'
- en: The top search result took me to a site named *WhatPortIs*. According to this,
    the `ideafarm-door` is in reality port `902`, which belongs to the VMware Server
    Console. Okay, that makes sense because I do have VMware Player installed on this
    machine. So, that's all good.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 顶部搜索结果将我带到了一个名为*WhatPortIs*的网站。根据这个网站，`ideafarm-door`实际上是端口`902`，属于VMware Server
    Console。好的，这很合理，因为我确实在这台机器上安装了VMware Player。所以，一切都很好。
- en: You can check out the *WhatPortIs* site here: [http://whatportis.com/](http://whatportis.com/).
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在*WhatPortIs*网站上查看：[http://whatportis.com/](http://whatportis.com/)。
- en: 'Next on the list is:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来是：
- en: '[PRE4]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This item shows the local address as `localhost` and that the listening port
    is port `40432`.  This time, the `PID/Program Name` column actually tells us what
    this is. *SpiderOak ONE* is a cloud-based backup service that you might or might
    not want to see running on your server.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 此项目显示本地地址为`localhost`，监听端口为端口`40432`。这次，`PID/Program Name`列实际上告诉了我们这是什么。*SpiderOak
    ONE*是一个基于云的备份服务，您可能希望在服务器上运行它，也可能不希望。
- en: 'Now, let''s look at a few more items:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们再看几个项目：
- en: '[PRE5]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Here, we see that Dropbox and SpiderOak ONE are both listed with the asterisk
    for the local address. So, they're both using the local network address. The name
    of the port for Dropbox is `db-lsp`, which stands for *Dropbox LAN Sync Protocol*.
    The SpiderOak ONE port doesn't have an official name, so it's just listed as port
    `37468`. The bottom two lines show that Dropbox also uses the local machine's
    address, on ports `17600` and `17603`.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们看到Dropbox和SpiderOak ONE都在本地地址上带有星号。因此，它们都在使用本地网络地址。Dropbox的端口名称是`db-lsp`，代表*Dropbox
    LAN Sync Protocol*。SpiderOak ONE端口没有官方名称，所以只列为端口`37468`。最后两行显示Dropbox还使用本地机器的地址，端口为`17600`和`17603`。
- en: 'So far we''ve looked at nothing but TCP network sockets. Let''s see how they
    differ from UDP sockets:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们只看了TCP网络套接字。让我们看看它们与UDP套接字有何不同：
- en: '[PRE6]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The first thing to note is that there's nothing under the `State` column. That's
    because with UDP, there are no states. They actually are listening for data packets
    to come in, and they're ready to send data packets out. But since that's about
    all that UDP sockets can do, there was really no sense in defining different states
    for them.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 首先要注意的是`State`列下面没有任何内容。这是因为在UDP中，没有状态。它们实际上是在等待数据包进来，并准备发送数据包出去。但由于这几乎是UDP套接字所能做的全部，所以没有必要为它们定义不同的状态。
- en: In the first two lines, we see some strange local addresses. That's because
    I have both VMware Player and VirtualBox installed on this workstation. The local
    addresses of these two sockets are for the VMware and VirtualBox virtual network
    adapters. The last line shows the hostname of my OpenSUSE workstation as the local
    address. In all three cases, the port is the Network Time Protocol port, for time
    synchronization.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在前两行中，我们看到一些奇怪的本地地址。这是因为我在这台工作站上安装了VMware Player和VirtualBox。这两个套接字的本地地址是VMware和VirtualBox虚拟网络适配器的地址。最后一行显示了我的OpenSUSE工作站的主机名作为本地地址。在这三种情况下，端口都是用于时间同步的网络时间协议端口。
- en: 'Let''s now look at one last set of UDP items:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们看一下最后一组UDP项目：
- en: '[PRE7]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Here, we see that my Chromium web browser is ready to accept network packets
    on a few different ports. We also see that Dropbox uses UDP to accept discovery
    requests from other local machines that have Dropbox installed. I assume that
    port `21327` performs the same function for SpiderOak ONE.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们看到我的Chromium网络浏览器已准备好在几个不同的端口上接受网络数据包。我们还看到Dropbox使用UDP来接受其他安装了Dropbox的本地机器的发现请求。我猜端口`21327`对SpiderOak
    ONE执行相同的功能。
- en: Of course, since this machine is my workhorse workstation, Dropbox and SpiderOak
    ONE are almost indispensable to me. I installed them myself, so I've always know
    that they were there. However, if you see anything like this on a server, you'll
    want to investigate to see if the server admins know that these programs are installed,
    and then find out why they're installed. It could be that they're performing a
    legitimate function, and it could be that they're not.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，由于这台机器是我的主力工作站，Dropbox和SpiderOak ONE对我来说几乎是必不可少的。我自己安装了它们，所以我一直知道它们在那里。但是，如果您在服务器上看到类似的情况，您将希望调查一下服务器管理员是否知道这些程序已安装，然后找出它们为什么安装。可能它们正在执行合法的功能，也可能它们没有。
- en: A difference between Dropbox and SpiderOak ONE is that with Dropbox, your files
    don't get encrypted until they've been uploaded to the Dropbox servers. So, the
    Dropbox folk have the encryption keys to your files. On the other hand, SpiderOak
    ONE encrypts your files on your local machine, and the encryption keys never leave
    your possession. So, if you really do need a cloud-based backup service and you're
    dealing with sensitive files, something like SpiderOak ONE would definitely be
    better than Dropbox. (And no, the SpiderOak ONE folk aren't paying me to say that.)
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: Dropbox和SpiderOak ONE之间的一个区别是，使用Dropbox时，您的文件直到上传到Dropbox服务器后才会被加密。因此，Dropbox的人员拥有您文件的加密密钥。另一方面，SpiderOak
    ONE在本地机器上对文件进行加密，加密密钥永远不会离开您的手中。因此，如果您确实需要云备份服务并且正在处理敏感文件，像SpiderOak ONE这样的服务肯定比Dropbox更好。
    （不，SpiderOak ONE的人员并没有付我来说这些话。）
- en: 'If you want to see port numbers and IP addresses instead of network names,
    add the `n` option. We have the following code:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想查看端口号和IP地址而不是网络名称，请添加`n`选项。我们有以下代码：
- en: '[PRE8]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'All you have to do to view the established TCP connections is to leave out
    the `l` option. On my workstation, this makes for a very long list, so I''ll only
    show a few items:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 只需省略`l`选项即可查看已建立的TCP连接。在我的工作站上，这会生成一个非常长的列表，所以我只会显示一些项目：
- en: '[PRE9]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The `Foreign Address` column shows the address and port number of the machine
    at the remote end of the connection. The first item shows that the connection
    with a Dropbox server is in a `CLOSE_WAIT` state. This means that the Dropbox
    server has closed the connection, and we're now waiting on the local machine to
    close the socket.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '`Foreign Address`列显示了连接远程端的机器的地址和端口号。第一项显示与Dropbox服务器的连接处于`CLOSE_WAIT`状态。这意味着Dropbox服务器已关闭连接，现在我们正在等待本地机器关闭套接字。'
- en: 'Because the names of those foreign addresses don''t make much sense, let''s
    add the `n` option to see IP addresses instead:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 因为那些外国地址的名称没有太多意义，让我们添加`n`选项以查看IP地址：
- en: '[PRE10]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: This time we see something new. The first item shows a `SYN_SENT` state for
    the Firefox connection. This means that the local machine is trying to establish
    a connection to the foreign IP address. Also, under `Local Address`, we see the
    static IP address for my OpenSUSE workstation.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这次我们看到了一些新的东西。第一项显示了Firefox连接的`SYN_SENT`状态。这意味着本地机器正在尝试与外国IP地址建立连接。此外，在`Local
    Address`下，我们看到了我OpenSUSE工作站的静态IP地址。
- en: If I had space to display the entire `netstat` output here, you'd see nothing
    but `tcp` under the `Proto` column. That's because the UDP protocol doesn't establish
    connections in the same way that the TCP protocol does.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我有空间在这里显示整个`netstat`输出，您将看到`Proto`列下只有`tcp`。这是因为UDP协议不像TCP协议那样建立连接。
- en: Something to keep in mind is that rootkits can replace legitimate Linux utilities
    with their own trojaned versions. For example, a rootkit could have its own trojaned
    version of `netstat` that would show all network processes except for those that
    are associated with the rootkit. That's why you want something like Rootkit Hunter
    in your toolbox.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 需要记住的一点是，rootkit可以用它们自己的木马版本替换合法的Linux实用程序。例如，rootkit可以有自己的`netstat`的木马版本，它将显示除与rootkit相关的所有网络进程之外的所有网络进程。这就是为什么您需要像Rootkit
    Hunter这样的工具。
- en: If you need more information about `netstat`, see the `netstat` man page.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您需要有关`netstat`的更多信息，请参阅`netstat`手册页。
- en: Auditing network services with Nmap
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Nmap审计网络服务
- en: The `netstat` tool is very good, and it can give you lots of good information
    about what's going on with your network services. The slight downside is that
    you have to log in to every individual host on your network in order to use it.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '`netstat`工具非常好，可以为您提供有关网络服务情况的大量信息。稍微不足的是，您必须登录到网络上的每个主机才能使用它。'
- en: If you'd like to remotely audit your network to see what services are running
    on each computer, without having to log in to each and every one, then you need
    a tool like Nmap. It's available for all the major operating systems, so even
    if you're stuck having to use Windows on your workstation, you're in luck. An
    up-to-date version is built into Kali Linux, if that's what you're using. It's
    also in the repositories of every major Linux distro, but the version that's in
    the Linux repositories is usually quite old. So if you're using something other
    than Kali, your best bet is just to download Nmap from its creator's website.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想远程审计您的网络，查看每台计算机上运行的服务，而无需登录到每台计算机，那么您需要像Nmap这样的工具。它适用于所有主要操作系统，因此即使您被迫在工作站上使用Windows，您也很幸运。如果您使用的是Kali
    Linux，则内置了最新版本。它还在每个主要Linux发行版的存储库中，但通常存储库中的版本非常旧。因此，如果您使用的不是Kali，最好的选择就是从创建者的网站下载Nmap。
- en: You can download Nmap for all of the major operating systems from [https://nmap.org/download.html.](https://nmap.org/download.html)
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从[https://nmap.org/download.html](https://nmap.org/download.html)下载所有主要操作系统的Nmap。
- en: In all cases, you'll also find instructions for installation.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有情况下，您还会找到安装说明。
- en: 'You''ll use Nmap the same way on all operating systems, with only one exception.
    On Linux and Mac machines, you''ll preface certain Nmap commands with sudo, and
    on Windows machines, you won''t. Since I just happen to be working on my trusty
    OpenSUSE workstation, I''ll show you how it works on Linux. Let''s start by doing
    a SYN packet scan:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 您将在所有操作系统上以相同的方式使用Nmap，只有一个例外。在Linux和Mac机器上，您将在某些Nmap命令之前加上sudo，在Windows机器上则不需要。由于我碰巧正在使用我值得信赖的OpenSUSE工作站，我将向您展示在Linux上的工作原理。让我们首先进行SYN数据包扫描：
- en: '[PRE11]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Here''s the breakdown:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是详细信息：
- en: '`-sS`: The lower-case `s` denotes the type of scan that we want to perform.
    The uppercase `S` denotes that we''re doing an SYN packet scan. (More on that
    in a moment.)'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-sS`：小写`s`表示我们要执行的扫描类型。大写`S`表示我们正在进行SYN数据包扫描。（稍后详细介绍。）'
- en: '`192.168.0.37`: In this case, I''m only scanning a single machine. But, I could
    also scan either a group of machines, or an entire network.'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`192.168.0.37`：在这种情况下，我只扫描了一台机器。但是，我也可以扫描一组机器或整个网络。'
- en: '`Not shown:  996 closed ports`: The fact that it''s showing all of these closed
    ports instead of `filtered` ports tells me that there''s no firewall on this machine.
    (Again, more on that in a moment.)'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Not shown: 996 closed ports`：显示所有这些关闭的端口而不是`filtered`端口的事实告诉我这台机器上没有防火墙。（稍后详细介绍。）'
- en: Next, we see a list of ports that are open. (And, more on that in a moment.)
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们看到了一系列打开的端口。（稍后详细介绍。）
- en: The MAC address of this machine indicates that it's an Apple product of some
    sort. In a moment, I'll show you how to get more details about what kind of Apple
    product that it might be.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 这台机器的MAC地址表明它是某种苹果产品。稍后，我将向您展示如何获取有关它可能是什么类型的苹果产品的更多详细信息。
- en: Let's now look at this more in detail.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们更详细地看一下。
- en: Port states
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 端口状态
- en: 'An Nmap scan will show the target machine''s ports in one of three states:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: Nmap扫描将显示目标机器的端口处于三种状态之一：
- en: '`filtered`: This means that the port is blocked by a firewall'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`filtered`：这意味着该端口被防火墙阻止'
- en: '`open`: This means that the port is not blocked by a firewall and that the
    service that''s associated with that port is running'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`open`：这意味着该端口未被防火墙阻止，并且与该端口关联的服务正在运行'
- en: '`closed`: This means that the port is not blocked by a firewall, and that the
    service that''s associated with that port is not running'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`closed`：这意味着该端口没有被防火墙阻塞，并且与该端口相关的服务未运行'
- en: So, in our scan of the Apple machine, we see that the Secure Shell service is
    ready to accept connections on port `22`, that the print service is ready to accept
    connections on ports `515` and `631`, and that the **Virtual Network Computing**
    (**VNC**) service is ready to accept connections on port `5900`. All of these
    ports would be of interest to a security-minded administrator. If Secure Shell
    is running, it would be interesting to know if it's configured securely. The fact
    that the print service is running means that this machine is set up to use the
    **Internet Printing Protocol** (**IPP**). It would be interesting to know why
    we're using IPP instead of just regular network printing, and it would also be
    interesting to know if there are any security concerns with this version of IPP.
    And of course, we already know that VNC isn't a secure protocol, so we would want
    to know why it's even running at all. We also saw that no ports are listed as
    `filtered`, so we would also want to know why there's no firewall on this machine.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在我们对苹果机器的扫描中，我们看到Secure Shell服务准备在端口`22`上接受连接，打印服务准备在端口`515`和`631`上接受连接，以及**虚拟网络计算**（**VNC**）服务准备在端口`5900`上接受连接。所有这些端口对于注重安全的管理员来说都是感兴趣的。如果Secure
    Shell正在运行，了解它是否配置安全是很有趣的。打印服务正在运行意味着这台机器设置为使用**Internet Printing Protocol**（**IPP**）。了解为什么我们使用IPP而不是普通的网络打印是很有趣的，也很有趣的是了解这个版本的IPP是否存在任何安全问题。当然，我们已经知道VNC不是一个安全的协议，所以我们想知道为什么它会运行。我们还看到没有端口被列为`filtered`，所以我们也想知道为什么这台机器上没有防火墙。
- en: One little secret that I'll finally reveal, is that this machine is the same
    one that I used for the OpenVAS scan demos. So, we already have some of the needed
    information. The OpenVAS scan told us that Secure Shell on this machine uses weak
    encryption algorithms and that there's a security vulnerability with the print
    service. In just a bit, I'll show you how to get some of that information with
    Nmap.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 有一个小秘密，我终于要揭露了，就是这台机器和我用来进行OpenVAS扫描演示的是同一台。所以，我们已经有了一些所需的信息。OpenVAS扫描告诉我们，这台机器上的Secure
    Shell使用了弱加密算法，并且打印服务存在安全漏洞。马上，我会向你展示如何使用Nmap获取一些信息。
- en: Scan types
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 扫描类型
- en: There are lots of different scanning options, each with its own purpose. The
    SYN packet scan that we're using here is considered a stealthy type of scan because
    it generates less network traffic and fewer system log entries than certain other
    types of scans. With this type of scan, Nmap sends a SYN packet to a port on the
    target machine, as if it were trying to create a TCP connection to that machine.
    If the target machine responds with a SYN/ACK packet, it means that the port is
    in an `open` state and ready to create the TCP connection. If the target machine
    responds with an RST packet, it means that the port is in a `closed` state. If
    there's no response at all, it means that the port is `filtered`, blocked by a
    firewall. As a normal Linux administrator, this is one of the types of scans that
    you would do most of the time.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 有很多不同的扫描选项，每个选项都有自己的目的。我们在这里使用的SYN数据包扫描被认为是一种隐秘的扫描类型，因为它产生的网络流量和系统日志条目比某些其他类型的扫描要少。使用这种类型的扫描，Nmap向目标机器的一个端口发送一个SYN数据包，就好像它试图创建一个TCP连接到该机器。如果目标机器用一个SYN/ACK数据包回应，这意味着该端口处于`open`状态，准备好创建TCP连接。如果目标机器用一个RST数据包回应，这意味着该端口处于`closed`状态。如果根本没有响应，这意味着该端口是`filtered`，被防火墙阻塞。作为一个普通的Linux管理员，这是你大部分时间会做的扫描类型之一。
- en: 'The `-sS` scan shows you the state of TCP ports, but it doesn''t show you the
    state of UDP ports. To see the UDP ports, use the `-sU` option:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '`-sS`扫描显示TCP端口的状态，但不显示UDP端口的状态。要查看UDP端口，使用`-sU`选项：'
- en: '[PRE12]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Here, you see something a bit different. You see two ports listed as `open|filtered`.
    That's because, due to the way that UDP ports respond to Nmap scans, Nmap can't
    always tell whether a UDP port is `open` or `filtered`. In this case, we know
    that these two ports are probably open because we've already seen that their corresponding
    TCP ports are open.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，你看到了一些不同的东西。你看到两个端口被列为`open|filtered`。这是因为由于UDP端口对Nmap扫描的响应方式，Nmap并不能总是确定UDP端口是`open`还是`filtered`。在这种情况下，我们知道这两个端口可能是打开的，因为我们已经看到它们对应的TCP端口是打开的。
- en: 'ACK packet scans can also be useful, but not to see the state of the target
    machine''s network services. Rather, it''s a good option for when you need to
    see if there might be a firewall blocking the way between you and the target machine.
    An ACK scan command looks like this:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: ACK数据包扫描也可能是有用的，但不是为了查看目标机器的网络服务状态。相反，它是一个很好的选项，当你需要查看是否有防火墙阻挡你和目标机器之间的通路时。ACK扫描命令看起来像这样：
- en: '[PRE13]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'You''re not limited to scanning just a single machine at a time. You can scan
    either a group of machines or an entire subnet at once:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 你不仅限于一次只扫描一台机器。你可以一次扫描一组机器或整个子网：
- en: '[PRE14]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The first command scans only the first 128 hosts on this network segment. The
    second command scans all 254 hosts on a subnet that's using a 24 bit netmask.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个命令只扫描了这个网络段上的前128个主机。第二个命令扫描了使用24位子网掩码的子网上的所有254个主机。
- en: 'A discovery scan is useful for when you need to just see what devices are on
    the network:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 发现扫描对于只想看看网络上有哪些设备是有用的：
- en: '[PRE15]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'With the `-sn` option, Nmap will first detect whether you''re scanning the
    local subnet or a remote subnet. If the subnet is local, Nmap will send out an
    **Address Resolution Protocol** (**ARP**) broadcast that requests the IPv4 addresses
    of every device on the subnet. That''s a reliable way of discovering devices because
    ARP isn''t something that will ever be blocked by a device''s firewall. (I mean,
    without ARP, the network would cease to function.) However, ARP broadcasts can''t
    go across a router, which means that you can''t use ARP to discover hosts on a
    remote subnet. So, if Nmap detects that you''re doing a discovery scan on a remote
    subnet, it will send out ping packets instead of ARP broadcasts. Using ping packets
    for discovery isn''t as reliable as using ARP because some network devices can
    be configured to ignore ping packets. Anyway, here''s an example from my own home
    network:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`-sn`选项，Nmap将首先检测您是在扫描本地子网还是远程子网。如果子网是本地的，Nmap将发送一个**地址解析协议**（**ARP**）广播，请求子网上每个设备的IPv4地址。这是一种可靠的发现设备的方式，因为ARP不会被设备的防火墙阻止。然而，ARP广播无法跨越路由器，这意味着您无法使用ARP来发现远程子网上的主机。因此，如果Nmap检测到您正在对远程子网进行发现扫描，它将发送ping数据包而不是ARP广播。使用ping数据包进行发现不像使用ARP那样可靠，因为一些网络设备可以配置为忽略ping数据包。无论如何，这是我自己家庭网络的一个例子：
- en: '[PRE16]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: We see four hosts in this snippet, and there are three lines of output for each
    host. The first line shows the IP address, the second shows whether the host is
    up, and the third shows the MAC address of the host's network adapter. The first
    three pairs of characters in each MAC address denote the manufacturer of that
    network adapter. (For the record, that unknown network adapter is on a recent
    model Gigabyte motherboard. I have no idea why it's not in the Nmap database.)
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这段代码中看到了四个主机，每个主机有三行输出。第一行显示IP地址，第二行显示主机是否在线，第三行显示主机网络适配器的MAC地址。每个MAC地址的前三对字符表示该网络适配器的制造商。（记录上，未知的网络适配器是最近型号的技嘉主板上的。我不知道为什么它不在Nmap数据库中。）
- en: 'The final scan that we''ll look at does four things for us:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将要看的最后一个扫描为我们做了四件事：
- en: It identifies `open`, `closed`, and `filtered` TCP ports
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它识别`open`、`closed`和`filtered`的TCP端口
- en: It identifies the versions of the running services
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它识别正在运行的服务的版本
- en: It runs a set of vulnerability-scanning scripts that come with Nmap
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它运行一组随Nmap提供的漏洞扫描脚本
- en: It attempts to identify the operating system of the target host
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它试图识别目标主机的操作系统
- en: 'The scan command that does all of these things looks like this:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 执行所有这些操作的扫描命令如下：
- en: '[PRE17]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'I guess that you could think of the `-A` option as the *all* option, since
    it really does do it all. (Well, almost all, since it doesn''t scan UDP ports.)
    Here are the results of the scan that I did against my target:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 我猜您可以将`-A`选项看作是*all*选项，因为它确实做了所有的事情。（嗯，几乎所有，因为它不扫描UDP端口。）这是我针对目标进行的扫描的结果：
- en: '[PRE18]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'There are several interesting things here. First, there''s the Secure Shell
    information:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有几件有趣的事情。首先是安全外壳信息：
- en: '[PRE19]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Version 5.1 is a really old version of OpenSSH. (At the time of writing, the
    current version is version 7.6.) What's worse is that this OpenSSH server supports
    version 1 of the Secure Shell protocol. Version 1 is seriously flawed and is easily
    exploitable, so you never want to see this on your network.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 版本5.1是一个非常古老的OpenSSH版本。（在撰写本文时，当前版本是7.6。）更糟糕的是，这个OpenSSH服务器支持安全外壳协议的第一个版本。第一个版本存在严重缺陷，很容易被利用，所以您绝不希望在您的网络上看到这个。
- en: 'Next, we have amplifying information on the print service vulnerability that
    we found with the OpenVAS scan:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们对使用OpenVAS扫描发现的打印服务漏洞进行了详细说明：
- en: '[PRE20]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: In the `631/tcp` line, we see that the associated service is `ipp`, which stands
    for **Internet Printing Protocol**. This protocol is based on the same **Hypertext
    Transfer Protocol** (**HTTP**) that we use to look at web pages. The two methods
    that HTTP uses to send data from a client to a server are **POST** and **PUT**.
    What we really want is for every HTTP server to use the POST method because the
    PUT method makes it very easy for someone to compromise a server by manipulating
    a URL. So, if you scan a server and find that it allows using the PUT method for
    any kind of HTTP communications, you have a potential problem. In this case, the
    solution would be to update the operating system and hope that the updates fix
    the problem. If this were a web server, you'd want to have a chat with the web
    server administrators to let them know what you found.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在`631/tcp`行中，我们看到相关服务是`ipp`，代表**Internet Printing Protocol**。这个协议基于我们用来查看网页的**超文本传输协议**（**HTTP**）。HTTP用于从客户端向服务器发送数据的两种方法是**POST**和**PUT**。我们真正希望的是每个HTTP服务器都使用POST方法，因为PUT方法使得有人通过操纵URL很容易就能破坏服务器。因此，如果您扫描一个服务器并发现它允许使用PUT方法进行任何类型的HTTP通信，那么您就有了一个潜在的问题。在这种情况下，解决方案将是更新操作系统，并希望更新修复问题。如果这是一个Web服务器，您会想与Web服务器管理员交谈，让他们知道您发现了什么。
- en: 'Finally, let''s see what Nmap found out about the operating system of our target
    machine:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，让我们看看Nmap发现的目标机器的操作系统信息：
- en: '[PRE21]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Wait, what?  Mac OS X 10.4?  Isn't that really, really ancient? Well yeah, it
    is. The secret that I've been guarding for the past couple of chapters is that
    the target machine for my OpenVAS and Nmap scan demos has been my ancient, collectible
    Apple eMac from the year 2003\. I figured that scanning it would give us some
    interesting results to look at, and it would appear that I was right. (And yes,
    that is eMac, not iMac.)
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 等等，什么？Mac OS X 10.4？那不是非常古老吗？是的，确实如此。在过去的几章中我一直保密的秘密是，我OpenVAS和Nmap扫描演示的目标机器是我2003年的古老的、收藏价值的苹果eMac。我想扫描它会给我们一些有趣的结果看，看来我是对的。（是的，是eMac，不是iMac。）
- en: Password-protecting the GRUB 2 bootloader
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保护GRUB 2引导加载程序的密码
- en: People sometimes forget passwords, even if they're administrators. And sometimes,
    people buy used computers but forget to ask the seller what the password is. (Yes,
    I've done that.) That's okay, though, because all of the major operating systems
    have ways to let you either reset or recover a lost administrator password. That's
    handy, except that it does kind of make the whole idea of having login passwords
    a rather moot point when someone has physical access to the machine. Let's say
    that your laptop has just been stolen. If you haven't encrypted the hard drive,
    it would only take a few minutes for the thief to reset the password and to steal
    your data. If you have encrypted the drive, the level of protection would depend
    on which operating system you're running. With standard Windows folder encryption,
    the thief would be able to access the encrypted folders just by resetting the
    password. With LUKS whole-disk encryption on a Linux machine, the thief wouldn't
    be able to get past the point of having to enter the encryption passphrase.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 有时人们会忘记密码，即使他们是管理员。有时，人们购买了二手电脑，但忘记询问卖家密码是什么。（是的，我曾经这样做过。）不过，这没关系，因为所有主要操作系统都有办法让您重置或恢复丢失的管理员密码。这很方便，但是当有人可以物理访问机器时，登录密码的整个概念似乎就没有什么意义了。假设您的笔记本电脑刚刚被盗。如果您没有加密硬盘，窃贼只需要几分钟就可以重置密码并窃取您的数据。如果您已经加密了硬盘，保护级别将取决于您使用的操作系统。使用标准的Windows文件夹加密，窃贼可以通过重置密码来访问加密文件夹。在Linux机器上使用LUKS整盘加密，窃贼将无法绕过输入加密密码的步骤。
- en: With Linux, we have a way to safeguard against unauthorized password resets,
    even if we're not using whole-disk encryption. All we have to do is to password-protect
    the **Grand Unified Bootloader** (**GRUB**), which would prevent a thief from
    booting into emergency mode to do the password reset.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在Linux中，我们有一种方法来防止未经授权的密码重置，即使我们没有使用整盘加密。我们所要做的就是对**Grand Unified Bootloader**
    (**GRUB**)进行密码保护，这将阻止窃贼进入紧急模式进行密码重置。
- en: Whether or not you need the advice in this section depends on your organization's
    physical security setup. That's because booting a Linux machine into emergency
    mode requires physical access to the machine. It's not something that you can
    do remotely. In an organization with proper physical security, servers—especially
    ones that hold sensitive data—are locked away in a room that's locked within another
    room. Only a very few trusted personnel are allowed to enter, and they have to
    present their credentials at both access points. So, setting a password on the
    bootloader of those servers would be rather pointless, unless you're dealing with
    a regulatory agency that dictates otherwise.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 无论您是否需要本节中的建议取决于您组织的物理安全设置。这是因为将Linux机器引导到紧急模式需要物理访问该机器。这不是您可以远程执行的操作。在具有适当物理安全措施的组织中，服务器，尤其是保存敏感数据的服务器，都被锁在一个房间里，而这个房间又被锁在另一个房间里。只有极少数信任的人被允许进入，并且他们必须在两个访问点出示自己的凭据。因此，在这些服务器的引导加载程序上设置密码将是毫无意义的，除非您正在处理一个规定不同的监管机构。
- en: On the other hand, password-protecting the bootloaders of workstations and laptops
    that are out in the open could be quite useful. But, that alone won't protect
    your data. Someone could still boot the machine from a live disk or a USB memory
    stick, mount the machine's hard drive, and obtain the sensitive data. That's why
    you also want to encrypt your sensitive data, as I showed you in [Chapter 4](081f4a65-5141-48fb-a865-0c23c96019c3.xhtml),
    *Encrypting and SSH Hardening*.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，对于摆放在公开场所的工作站和笔记本电脑的引导加载程序进行密码保护可能非常有用。但是，仅仅这样做并不能保护您的数据。某人仍然可以从活动光盘或USB存储设备引导机器，挂载机器的硬盘，并获取敏感数据。这就是为什么您还需要加密您的敏感数据，就像我在[第4章](081f4a65-5141-48fb-a865-0c23c96019c3.xhtml)中向您展示的那样，*加密和SSH加固*。
- en: To reset a password, all you have to do is to interrupt the boot process when
    the boot menu comes up and change a couple of kernel parameters. However, resetting
    passwords isn't the only thing you can do from the boot menu. If your machine
    has multiple operating systems installed—for example, Windows on one partition
    and Linux on another partition—the boot menu allows you to choose which operating
    system to boot up. With the old-style legacy GRUB, you could prevent people from
    editing kernel parameters, but you couldn't prevent them from choosing an alternate
    operating system on multiboot machines. With the new GRUB 2 that's in newer versions
    of Linux, you can choose which users you want to be able to boot from any particular
    operating system.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 要重置密码，您所要做的就是在引导菜单出现时中断引导过程，并更改一些内核参数。然而，重置密码并不是您可以从引导菜单中做的唯一事情。如果您的机器安装了多个操作系统，例如一个分区上安装了Windows，另一个分区上安装了Linux，引导菜单允许您选择要引导的操作系统。使用旧式的传统GRUB，您可以防止人们编辑内核参数，但无法阻止他们选择多重引导机器上的另一个操作系统。在较新版本的Linux中使用的新GRUB
    2中，您可以选择您希望能够从任何特定操作系统引导的用户。
- en: Now, just so you'll know what I'm talking about when I say that you can edit
    kernel parameters from the GRUB 2 boot menu, let me show you how to perform a
    password reset.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，为了让您知道我所说的您可以从GRUB 2引导菜单中编辑内核参数，让我向您展示如何执行密码重置。
- en: Resetting the password for Red Hat/CentOS
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 重置Red Hat/CentOS的密码
- en: 'When the boot menu comes up, interrupt the boot process by hitting the down-arrow
    key once. Then, hit the up-arrow key once to select the default boot option:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 当引导菜单出现时，按下箭头键一次中断引导过程。然后，按上箭头键一次选择默认的引导选项：
- en: '![](img/25af8418-ee03-4da1-a179-07d01dfb4b3c.png)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![](img/25af8418-ee03-4da1-a179-07d01dfb4b3c.png)'
- en: 'Hit the *E* key to edit the kernel parameters. When the GRUB 2 configuration
    comes up, cursor down until you see this line:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 按下*E*键编辑内核参数。当GRUB 2配置出现时，光标下移，直到看到这一行：
- en: '![](img/eba3931e-5e0d-43b9-b3a0-4abfeeb1a274.png)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![](img/eba3931e-5e0d-43b9-b3a0-4abfeeb1a274.png)'
- en: 'Delete the words `rhgb quiet` from this line and then add `rd.break enforcing=0` to
    the end of the line. Here''s what these two new options do for you:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 从此行中删除`rhgb quiet`，然后在行末添加`rd.break enforcing=0`。以下是这两个新选项为您做的事情：
- en: '`rd.break`: This will cause the machine to boot into emergency mode, which
    gives you root user privileges without you having to enter a root user password. 
    Even if the root user password hasn''t been set, this still works.'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rd.break`：这将导致机器进入紧急模式，从而使您无需输入root用户密码即可获得root用户特权。即使root用户密码尚未设置，这仍然有效。'
- en: '`enforcing=0`: When you do a password reset on an SELinux-enabled system, the
    security context for the `/etc/shadow` file will change to the wrong type. If
    the system is in enforcing mode when you do this, SELinux will prevent you from
    logging in until the `shadow` file gets relabeled. But, relabeling during the
    boot process can take a very long time, especially with a large drive. By setting
    SELinux to permissive mode, you can wait until after you''ve rebooted to restore
    the proper security context on just the `shadow` file.'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`enforcing=0`：在启用SELinux的系统上重置密码时，`/etc/shadow`文件的安全上下文将更改为错误类型。如果系统在执行模式下执行此操作，SELinux将阻止您登录，直到`shadow`文件重新标记。但是，在引导过程中重新标记可能需要很长时间，特别是对于大容量驱动器。通过将SELinux设置为宽松模式，您可以等到重启后再恢复`shadow`文件的正确安全上下文。'
- en: 'When you''ve finished editing the kernel parameters, hit *Ctrl* + *X* to continue
    the boot process. This will take you to the emergency mode with the `switch_root` command
    prompt:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑内核参数后，按下*Ctrl* + *X*继续引导过程。这将带您到带有`switch_root`命令提示符的紧急模式：
- en: '![](img/b50df375-e63a-45f5-a4ba-8ad2752188ea.png)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b50df375-e63a-45f5-a4ba-8ad2752188ea.png)'
- en: 'In emergency mode, the filesystem is mounted as read-only. You''ll need to
    remount it as read-write and enter a `chroot` mode before you reset the password:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在紧急模式下，文件系统以只读方式挂载。您需要将其重新挂载为读写模式，并在重置密码之前进入`chroot`模式：
- en: '[PRE22]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'After you enter these two commands, the command prompt will change to that
    of a normal bash shell:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 输入这两个命令后，命令提示符将更改为普通的bash shell：
- en: '![](img/7d25c842-5b18-4c02-adc8-bc8f080c9539.png)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7d25c842-5b18-4c02-adc8-bc8f080c9539.png)'
- en: Now that you've reached this stage, you're finally ready to reset the password.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经到达这个阶段，终于可以重置密码了。
- en: 'If you want to reset the root user password, or even if you want to create
    a root password where none previously existed, just enter:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 如果要重置root用户密码，甚至是在以前不存在密码的情况下创建root密码，只需输入：
- en: '[PRE23]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Then, enter the new desired password.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，输入新的所需密码。
- en: 'If the system has never had a root user password and you still don''t want
    it to have one, you can reset the password for an account that has full sudo privileges.
    For example, on my system, the command would look like this:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 如果系统从未设置过root用户密码，而您仍然不希望设置密码，您可以重置具有完整sudo特权的帐户的密码。例如，在我的系统上，命令如下：
- en: '[PRE24]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Next, remount the filesystem as read-only. Then, enter `exit` twice to resume
    rebooting:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，将文件系统重新挂载为只读。然后，输入两次`exit`以恢复重启：
- en: '[PRE25]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'The first thing you need to do after rebooting is to restore the proper SELinux
    security context on the `/etc/shadow` file. Then, put SELinux back into enforcing
    mode:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 重启后，您需要做的第一件事是恢复`/etc/shadow`文件的正确SELinux安全上下文。然后，将SELinux恢复为强制模式：
- en: '[PRE26]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Here''s a before and after screenshot of the context settings for my `shadow`
    file:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我`shadow`文件上下文设置的之前和之后的屏幕截图：
- en: '![](img/e161c85f-8bc6-4d57-a845-fc94e93e9825.png)'
  id: totrans-146
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e161c85f-8bc6-4d57-a845-fc94e93e9825.png)'
- en: You can see that resetting the password changed the type of the file to `unlabeled_t`.
    Running the `restorecon` command changed the type back to `shadow_t`.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以看到重置密码将文件类型更改为`unlabeled_t`。运行`restorecon`命令将类型更改回`shadow_t`。
- en: Resetting the password for Ubuntu
  id: totrans-148
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Ubuntu上重置密码
- en: 'The procedure for resetting a password on an Ubuntu system is quite a bit different
    and quite a bit simpler. Start out the same as you did with the CentOS machine,
    by pressing the down-arrow key once to interrupt the boot process. Then, press
    the up-arrow key once to select the default boot option. Hit the *E* key to edit
    the kernel parameters:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 在Ubuntu系统上重置密码的过程有很大不同，也更简单。首先，按下向下箭头键一次以中断引导过程，然后按一次向上箭头键以选择默认引导选项。按下*E*键编辑内核参数：
- en: '![](img/6a52090c-1f47-44be-9d94-7372ed34d00e.png)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6a52090c-1f47-44be-9d94-7372ed34d00e.png)'
- en: 'When the GRUB 2 configuration comes up, cursor down until you see the `linux`
    line:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 当GRUB 2配置出现时，光标下移，直到看到`linux`行：
- en: '![](img/0d9a3652-b616-489f-b92e-c44db5d8ea70.png)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0d9a3652-b616-489f-b92e-c44db5d8ea70.png)'
- en: 'Change the `ro` to `rw` and add `init=/bin/bash`:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 将`ro`更改为`rw`并添加`init=/bin/bash`：
- en: '![](img/2bf6dabd-d488-44fd-a727-d3c76a4a8c38.png)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2bf6dabd-d488-44fd-a727-d3c76a4a8c38.png)'
- en: 'Press *Ctrl* + *X* to continue booting. This will take you to a root shell:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 按下*Ctrl* + *X*继续引导。这将带您到一个root shell：
- en: '![](img/09c55698-6c2d-4062-b025-0d8815aa790f.png)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![](img/09c55698-6c2d-4062-b025-0d8815aa790f.png)'
- en: 'Since Ubuntu doesn''t normally have a password assigned to the root user, you
    would most likely just reset the password of whoever had full sudo privileges.
    See the following example:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 由于Ubuntu通常不会为root用户分配密码，因此您很可能只会重置具有完整sudo特权的用户的密码。请参阅以下示例：
- en: '[PRE27]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'When you''re in this mode, the normal reboot commands won''t work. So, once
    you''ve finished with the password reset operation, reboot by entering:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 在此模式下，常规的重启命令将无效。因此，在完成密码重置操作后，输入以下命令进行重启：
- en: '[PRE28]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: The machine will now boot up for normal operation.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 机器现在将正常启动。
- en: Preventing kernel parameter edits on Red Hat/CentOS
  id: totrans-162
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Red Hat/CentOS上防止内核参数编辑
- en: 'Ever since the introduction of Red Hat/CentOS 7.2, setting a GRUB 2 password
    to prevent kernel parameter edits is easy. All you have to do is to run one command
    and choose a password:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 自从引入Red Hat/CentOS 7.2以来，设置GRUB 2密码以防止内核参数编辑变得很容易。您只需运行一个命令并选择一个密码：
- en: '[PRE29]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: That's all there is to it. The password hash will be stored in the `/boot/grub2/user.cfg` file.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 就是这样。密码哈希将存储在`/boot/grub2/user.cfg`文件中。
- en: 'Now, when you reboot the machine and try to do a kernel parameter edit, you''ll
    be prompted to enter a username and password:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，当您重新启动机器并尝试编辑内核参数时，您将被提示输入用户名和密码：
- en: '![](img/818bcdff-425e-4676-8e2e-671022bed7b3.png)'
  id: totrans-167
  prefs: []
  type: TYPE_IMG
  zh: '![](img/818bcdff-425e-4676-8e2e-671022bed7b3.png)'
- en: Note that you'll enter `root` as the username, even if the root user's password
    hasn't been set on the system. The `root` user, in this case, is just the superuser
    for GRUB 2.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，即使系统上尚未设置root用户的密码，您也将输入`root`作为用户名。在这种情况下，`root`用户只是GRUB 2的超级用户。
- en: Preventing kernel parameter edits on Ubuntu
  id: totrans-169
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 防止在Ubuntu上编辑内核参数
- en: Ubuntu doesn't have that cool utility that Red Hat and CentOS have, so you'll
    have to set a GRUB 2 password by hand-editing a configuration file.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: Ubuntu没有Red Hat和CentOS拥有的那种很酷的实用程序，因此您必须手动编辑配置文件来设置GRUB 2密码。
- en: 'In the `/etc/grub.d/` directory, you''ll see the files that make up the GRUB
    2 configuration:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 在`/etc/grub.d/`目录中，您将看到组成GRUB 2配置的文件：
- en: '[PRE30]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'The file you want to edit is the `40_custom` file. However, before you edit
    the file, you''ll need to create the password hash. Do that with the `grub-mkpasswd-pbkdf2` utility:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 您要编辑的文件是`40_custom`文件。但是，在编辑文件之前，您需要使用`grub-mkpasswd-pbkdf2`实用程序创建密码哈希。：
- en: '[PRE31]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Open the file `40_custom` file in your favorite editor and add a line that
    defines who the superuser(s) will be. Add another line for the password hash.
    In my case, the file now looks like this:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 在您喜欢的编辑器中打开`40_custom`文件，并添加一行来定义超级用户是谁。再添加一行密码哈希。在我的情况下，文件现在看起来像这样：
- en: '[PRE32]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: The string of text that begins with `password_pbkdf2` is all one line that wraps
    around on the printed page.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 以`password_pbkdf2`开头的文本字符串是一页上环绕的一行。
- en: 'After you save the file, the last step is to generate a new `grub.cfg` file:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 保存文件后，最后一步是生成新的`grub.cfg`文件：
- en: '[PRE33]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Now when I reboot this machine, I have to enter my password before editing
    the kernel parameters:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，当我重新启动这台机器时，我必须输入密码才能编辑内核参数：
- en: '![](img/cf540a8a-3608-481f-9b0d-2dcb2f783b2f.png)'
  id: totrans-181
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cf540a8a-3608-481f-9b0d-2dcb2f783b2f.png)'
- en: There's only one problem with this. Not only does this prevent anyone except
    the superuser from editing the kernel parameters, it also prevents anyone except
    for the superuser from booting normally. Yes, that's right. Even for normal booting,
    Ubuntu will now require you to enter the username and password of the authorized
    superuser. The fix is easy, although not at all elegant.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 这只有一个问题。这不仅阻止除超级用户之外的任何人编辑内核参数，还阻止除超级用户之外的任何人正常启动。是的，没错。即使是正常启动，Ubuntu现在也需要您输入授权超级用户的用户名和密码。修复很容易，尽管一点也不优雅。
- en: 'The fix requires inserting a single word into the `/boot/grub/grub.cfg` file.
    Easy enough, right? But, it''s not an elegant solution because you''re not really
    supposed to hand-edit the `grub.cfg` file. At the top of the file, we see this:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 修复需要在`/boot/grub/grub.cfg`文件中插入一个单词。很容易，对吧？但是，这不是一个优雅的解决方案，因为您实际上不应该手动编辑`grub.cfg`文件。在文件顶部，我们看到这样的内容：
- en: '[PRE34]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: This means that every time we do something that will update the `grub.cfg` file,
    any hand-edits that we've made to the file will be lost. This includes when we
    do a system update that installs a new kernel, or when we do a `sudo apt autoremove` that
    removes any old kernels that we no longer need. The supreme irony though is that
    the official GRUB 2 documentation tells us to hand-edit the `grub.cfg` file to
    deal with these sorts of problems.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着每当我们做一些会更新`grub.cfg`文件的操作时，我们对文件所做的手动编辑都将丢失。这包括当我们进行安装新内核的系统更新，或者当我们运行`sudo
    apt autoremove`删除不再需要的旧内核时。然而，最讽刺的是，官方的GRUB 2文档告诉我们手动编辑`grub.cfg`文件来处理这些问题。
- en: 'Anyway, to fix things so that you no longer need to enter the password to boot
    normally, open the `/boot/grub/grub.cfg` file in your favorite text editor. Look
    for the first line that begins with `menuentry`, which should look something like
    this:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 无论如何，为了修复这个问题，使您不再需要输入密码来正常启动，请在您喜欢的文本编辑器中打开`/boot/grub/grub.cfg`文件。查找以`menuentry`开头的第一行，应该看起来像这样：
- en: '[PRE35]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Before the opening curly brace at the end of the line, add the text string,
    `--unrestricted`. The `menuentry` should now look like this:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 在该行的末尾的左花括号之前，添加文本字符串`--unrestricted`。现在`menuentry`应该看起来像这样：
- en: '[PRE36]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: Save the file and test it by rebooting the machine. You should see that the
    machine now boots up normally on the default boot option. But, you'll also see
    that a password will still be required to access the Advanced options for Ubuntu submenu.
    We'll fix that in just a bit.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 保存文件并通过重新启动机器进行测试。您应该看到机器现在会正常启动默认的启动选项。但是，您还会看到访问Ubuntu高级选项子菜单仍然需要密码。我们稍后会解决这个问题。
- en: Password-protecting boot options
  id: totrans-191
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保护密码启动选项
- en: For any given Linux system, you'll have at least two boot options. You'll have
    the option to boot normally and the option to boot into recovery mode. Red Hat-type
    and Ubuntu-type operating systems are unique, in that they don't overwrite the
    old kernel when you do an operating system update. Instead, they install the new
    kernel along with the old one, and all the installed kernels have their own boot
    menu entries. On Red Hat-type systems, you'll never have more than five installed
    kernels because once you have five kernels installed, the oldest kernel will automatically
    get deleted the next time a new kernel is available in a system update. With Ubuntu-type
    systems, you'll need to manually delete the old kernels by running `sudo apt autoremove`.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 对于任何给定的Linux系统，您至少会有两个启动选项。您将有正常启动和恢复模式启动的选项。红帽类型和Ubuntu类型的操作系统是独特的，因为当您进行操作系统更新时，它们不会覆盖旧内核。相反，它们会安装新内核以及旧内核，并且所有安装的内核都有自己的启动菜单条目。在红帽类型的系统上，您永远不会安装超过五个内核，因为一旦安装了五个内核，下次系统更新时最旧的内核将自动被删除。对于Ubuntu类型的系统，您需要通过运行`sudo
    apt autoremove`手动删除旧内核。
- en: You might also have a dual-boot or a multiboot configuration, and you might
    want for only certain users to use certain boot options. Let's say that you have
    a system with both Windows and Linux installed, and you want to prevent certain
    users from booting into either one or the other. You can do that by configuring
    GRUB 2, but you probably won't. I mean, a password and user account are required
    for logging in to an operating system anyway, so why bother?
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能还有一个双重引导或多重引导配置，并且你可能只希望某些用户使用某些引导选项。假设你的系统上安装了Windows和Linux，并且你希望阻止某些用户引导到其中一个。你可以通过配置GRUB
    2来做到这一点，但你可能不会。我的意思是，无论如何登录操作系统都需要密码和用户帐户，那么为什么要麻烦呢？
- en: The most realistic scenario I can think of where this would be useful would
    be if you have a computer set up in a publicly accessible kiosk. You would surely
    not want for the general public to boot the machine into recovery mode, and this
    technique would help prevent that.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 我能想到的最现实的情景是，如果你在一个公共可访问的信息亭上设置了一台计算机。你肯定不希望普通公众将机器引导到恢复模式，这种技术将有助于防止这种情况发生。
- en: This technique works mostly the same on both Red Hat-type and Ubuntu-type distros,
    with only a few exceptions. The major one is that we need to disable the submenu
    on the Ubuntu machine.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 这种技术在红帽类型和Ubuntu类型的发行版上基本相同，只有少数例外。最主要的例外是我们需要在Ubuntu机器上禁用子菜单。
- en: Disabling the submenu for Ubuntu
  id: totrans-196
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 禁用Ubuntu的子菜单
- en: Theoretically, you can disable the Ubuntu submenu by placing `GRUB_DISABLE_SUBMENU=true` into
    the `/etc/default/grub` file and then by running `sudo update-grub`. However,
    I couldn't get that to work, and according to the results of my DuckDuckGo searches,
    neither can anyone else. So, we'll manually edit the `/boot/grub/grub.cfg` file
    to fix that.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 理论上，你可以通过将`GRUB_DISABLE_SUBMENU=true`放入`/etc/default/grub`文件中，然后运行`sudo update-grub`来禁用Ubuntu子菜单。然而，我无法让它起作用，根据我的DuckDuckGo搜索结果，其他人也无法。因此，我们将手动编辑`/boot/grub/grub.cfg`文件来修复它。
- en: 'Look for the `submenu` line that appears just after the first `menuentry` item.
    It should look like this:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 查找出现在第一个`menuentry`项后面的`submenu`行。它应该看起来像这样：
- en: '[PRE37]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Comment out that line to make it look like this:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 将该行注释掉，使其看起来像这样：
- en: '[PRE38]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Scroll down until you see this line:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 向下滚动，直到你看到这行：
- en: '[PRE39]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'Just above this line, you''ll see the closing curly brace for the submenu stanza.
    Comment out that curly brace so that it looks like this:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 就在这行上面，你会看到子菜单段的闭合大括号。注释掉这个大括号，使其看起来像这样：
- en: '[PRE40]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Now when you reboot the machine, you'll see the whole list of boot options instead
    of the just the default boot option and a submenu. However, as things now stand,
    only the designated superuser can boot into anything except the default option.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 现在当你重新启动机器时，你将看到整个引导选项列表，而不仅仅是默认的引导选项和一个子菜单。然而，按目前的情况，只有指定的超级用户才能引导到除默认选项以外的任何东西。
- en: Password-protecting boot option steps for both Ubuntu and Red Hat
  id: totrans-207
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保护引导选项的步骤，适用于Ubuntu和Red Hat。
- en: 'From here on out, the steps are the same for both the CentOS and the Ubuntu
    virtual machines, except for the following:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 从这里开始，对于CentOS和Ubuntu虚拟机，步骤都是一样的，除了以下几点：
- en: On your Ubuntu machine, the `grub.cfg` file is in the `/boot/grub/` directory. 
    On your CentOS machine, it's in the `/boot/grub2/` directory.
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在你的Ubuntu机器上，`grub.cfg`文件在`/boot/grub/`目录中。在你的CentOS机器上，它在`/boot/grub2/`目录中。
- en: On Ubuntu, the `/boot/grub/` and `/etc/grub.d/` directories are world-readable.
    So, you can `cd` into them as a normal user.
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Ubuntu上，`/boot/grub/`和`/etc/grub.d/`目录是可读的。因此，你可以像普通用户一样进入它们。
- en: On CentOS, the `/boot/grub2/` and `/etc/grub.d/` directories are restricted
    to the root user. So, to `cd` into them, you'll need to log in to the root user's
    shell. Alternatively, you can list the contents from your normal user shell with
    `sudo ls -l`, and you can edit the files you need to edit with `sudo vim /boot/grub2/grub.cfg` or
    `sudo vim /etc/grub.d/40_custom`. (Substitute your favorite editor for vim.)
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在CentOS上，`/boot/grub2/`和`/etc/grub.d/`目录只对root用户有限制。因此，要进入这些目录，你需要登录到root用户的shell。或者，你可以在你的普通用户shell中使用`sudo
    ls -l`列出内容，并使用`sudo vim /boot/grub2/grub.cfg`或`sudo vim /etc/grub.d/40_custom`编辑你需要编辑的文件。（用你喜欢的编辑器替换vim。）
- en: On Ubuntu, the command to create a password hash is `grub-mkpasswd-pbkdf2`.
    On CentOS, the command is `grub2-mkpasswd-pbkdf2`.
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Ubuntu上，创建密码哈希的命令是`grub-mkpasswd-pbkdf2`。在CentOS上，命令是`grub2-mkpasswd-pbkdf2`。
- en: With these slight differences in mind, let's get started.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到这些细微差别，让我们开始吧。
- en: If you're working with a server that's just running with a text-mode interface,
    you'll definitely want to log in remotely from a workstation that has a GUI-type
    interface. If your workstation is running Windows, you can use Cygwin, as I showed
    you in [Chapter 1](366f0919-598d-4648-8873-b4dbe636d171.xhtml), *Running Linux
    in a Virtual Environment*.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在使用只有文本模式界面的服务器，你肯定会想从具有图形界面的工作站远程登录。如果你的工作站正在运行Windows，你可以使用Cygwin，就像我在[第1章](366f0919-598d-4648-8873-b4dbe636d171.xhtml)中向你展示的那样，*在虚拟环境中运行Linux*。
- en: The reason for this is that you'll want a way to copy and paste the password
    hashes into the two files that you need to edit.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 这是因为你需要一种方法来复制和粘贴密码哈希到你需要编辑的两个文件中。
- en: 'The first thing you''ll do is to create a password hash for your new users:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 你要做的第一件事是为你的新用户创建一个密码哈希：
- en: 'On Ubuntu:'
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Ubuntu上：
- en: '[PRE41]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'On CentOS:'
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在CentOS上：
- en: '[PRE42]'
  id: totrans-220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Next, open the `/etc/grub.d/40_custom` file in your text editor and add a line
    for your new user, along with the password hash that you just created. The line
    should look something like this:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，打开你的文本编辑器中的`/etc/grub.d/40_custom`文件，并为你的新用户添加一行，以及你刚刚创建的密码哈希。该行应该看起来像这样：
- en: '[PRE43]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: Note that this is all one line that wraps around on the printed page.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这是一页上环绕的一行。
- en: What you're supposed to do next is to run a utility that will read all of the
    files in the `/etc/grub.d/` directory along with the `/etc/default/grub` file
    and that will then rebuild the `grub.cfg` file. But, on CentOS, that utility doesn't
    work correctly. On Ubuntu, it does work correctly, but it will overwrite any changes
    that you might have already made to the `grub.cfg` file. So, we're going to cheat.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来您应该运行一个实用程序，该实用程序将读取`/etc/grub.d/`目录中的所有文件以及`/etc/default/grub`文件，然后重新构建`grub.cfg`文件。但是，在CentOS上，该实用程序无法正常工作。在Ubuntu上，它可以正常工作，但它将覆盖您可能已经对`grub.cfg`文件进行的任何更改。因此，我们将采取欺骗手段。
- en: 'Open the `grub.cfg` file in your text editor:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 在文本编辑器中打开`grub.cfg`文件：
- en: 'On Ubuntu:'
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Ubuntu上：
- en: '[PRE44]'
  id: totrans-227
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'On CentOS:'
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在CentOS上：
- en: '[PRE45]'
  id: totrans-229
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'Scroll down until you see the `### BEGIN /etc/grub.d/40_custom ###` section.
    In this section, copy and paste the line that you just added to the `40_custom` file.
    This section should now look something like this:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: '向下滚动直到看到`### BEGIN /etc/grub.d/40_custom ###`部分。在此部分，复制并粘贴刚刚添加到`40_custom`文件的行。此部分现在应该看起来像这样：'
- en: '[PRE46]'
  id: totrans-231
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: Finally, you're ready to password-protect the individual menu entries. And here,
    I've discovered yet another difference between Ubuntu and CentOS.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，您已经准备好为各个菜单项添加密码保护。在这里，我发现Ubuntu和CentOS之间又有一个不同之处。
- en: 'In all of the menu entries for CentOS, you''ll see that the `--unrestricted` option
    is already there for all menu entries. This means that by default, all users are
    allowed to boot every menu option, even if you''ve set a superuser password:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 在CentOS的所有菜单项中，您将看到`--unrestricted`选项已经存在于所有菜单项中。这意味着默认情况下，所有用户都被允许启动每个菜单选项，即使您设置了超级用户密码：
- en: '[PRE47]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: So on CentOS, you don't have to do anything if you want all users to be able
    to use all available boot options.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在CentOS上，如果您希望所有用户都能够使用所有可用的引导选项，则无需进行任何操作。
- en: 'Now, let''s say that you have a `menuentry` that you want to be accessible
    to everybody. On CentOS, as I just pointed out, you don''t have to do anything.
    On Ubuntu, add `--unrestricted` to the `menuentry`, as you did previously:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，假设您有一个`menuentry`，您希望所有人都能访问。在CentOS上，就像我刚指出的那样，您无需做任何事情。在Ubuntu上，添加`--unrestricted`到`menuentry`，就像您之前所做的那样：
- en: '[PRE48]'
  id: totrans-237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: If you want for nobody but the superuser to boot from a particular option, add `--users
    ""`. (On CentOS, be sure to remove the `--unrestricted` option first.)
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您希望除超级用户之外没有其他用户能够从特定选项启动，请添加`--users ""`。（在CentOS上，请务必首先删除`--unrestricted`选项。）
- en: '[PRE49]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'If you want for only the superuser and some other particular user to boot from
    a certain option, add `--users`, followed by the username. (Again, on CentOS,
    remove the `--unrestricted` option first.):'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您只希望超级用户和其他特定用户能够从某个选项启动，请添加`--users`，后跟用户名。（同样，在CentOS上，首先删除`--unrestricted`选项。）：
- en: '[PRE50]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'If you have more than one user that you want to access a boot option, add an
    entry for the new user in the `### BEGIN /etc/grub.d/40_custom ###` section. Then,
    add the new user to the `menuentry` that you want for him or her to access. Separate
    the usernames with a comma:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: '如果您有多个用户希望访问引导选项，请在`### BEGIN /etc/grub.d/40_custom ###`部分为新用户添加条目。然后，将新用户添加到您希望其访问的`menuentry`中。使用逗号分隔用户名：'
- en: '[PRE51]'
  id: totrans-243
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: Save the file and reboot to try out the different options.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 保存文件并重新启动以尝试不同的选项。
- en: Now that we've gone through all this work, I need to remind you again that any
    manual edits that you've made to the `grub.cfg` file will be lost any time that
    a new `grub.cfg` gets generated. So, any time you do a system update that includes
    either installing or removing a kernel, you'll need to manually edit this file
    again to add back the password protection. (In fact, the only real reason I had
    you add the users and their passwords to the `/etc/grub.d/40_custom` file is so
    that you'll always have that information available to copy and paste into `grub.cfg`.)
    I wish that there were a more elegant way of doing this, but according to the
    official GRUB 2 documentation, there isn't.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们已经做了这么多工作，我需要再次提醒您，您对`grub.cfg`文件所做的任何手动编辑都将在生成新的`grub.cfg`时丢失。因此，每当您进行包括安装或删除内核的系统更新时，您都需要手动编辑此文件，以重新添加密码保护。（事实上，我让您将用户及其密码添加到`/etc/grub.d/40_custom`文件的唯一真正原因是，这样您将始终可以将该信息复制并粘贴到`grub.cfg`中。）我希望有一种更加优雅的方法来做到这一点，但根据官方GRUB
    2文档，这是不可能的。
- en: You'll find the security section of the official GRUB 2 documentation at [http://www.gnu.org/software/grub/manual/grub/grub.html#Security](http://www.gnu.org/software/grub/manual/grub/grub.html#Security).
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 您将在官方GRUB 2文档的安全部分找到[http://www.gnu.org/software/grub/manual/grub/grub.html#Security](http://www.gnu.org/software/grub/manual/grub/grub.html#Security)。
- en: Before we leave this topic, I'd like to share my personal thoughts about GRUB
    2.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们离开这个话题之前，我想分享一下我对GRUB 2的个人看法。
- en: It was necessary to create a new version of GRUB because the old legacy version
    doesn't work with the new UEFI-based motherboards. However, there are things about
    GRUB 2 that are very disappointing.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 由于旧的传统版本无法与新的基于UEFI的主板配合使用，因此有必要创建一个新版本的GRUB。但是，GRUB 2也有一些令人失望的地方。
- en: In the first place, unlike legacy GRUB, GRUB 2 isn't implemented consistently
    across all Linux distros. In fact, we've just seen in our demos how we have to
    do things differently when we go from CentOS to Ubuntu.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，与传统的GRUB不同，GRUB 2在所有Linux发行版上的实现并不一致。事实上，我们在演示中刚刚看到，当我们从CentOS切换到Ubuntu时，我们必须以不同的方式进行操作。
- en: Next is the fact that the GRUB 2 developers gave us some good security options,
    but they haven't given us an elegant way of implementing them. I mean, really.
    The whole idea of telling us to implement security features by hand-editing a
    file that will get overwritten every time we do an operating system update just
    doesn't seem right.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来是GRUB 2开发人员给我们提供了一些良好的安全选项，但他们并没有给我们提供一种优雅的实现方式。我是说，真的。通过手动编辑一个在每次操作系统更新时都会被覆盖的文件来实现安全功能的整个想法似乎并不正确。
- en: And finally, there's the sad state of GRUB 2 documentation. I don't mean to
    sound like I'm tooting my own horn because I know that that's unbecoming. However,
    I think it's safe to say that this is the only comprehensive write-up you'll find
    anywhere for using the password-protection features of GRUB 2.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，还有GRUB 2文档的可悲状态。我并不是要自吹自擂，因为我知道那是不合适的。然而，我认为可以肯定地说，这是你在任何地方找到的唯一全面的GRUB 2密码保护功能的写作。
- en: Securely configuring BIOS/UEFI
  id: totrans-252
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安全配置BIOS/UEFI
- en: This topic is different from anything we've looked at thus far because it has
    nothing to do with the operating system. Rather, we're now going to talk about
    the computer hardware.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 这个主题与我们迄今为止看到的任何内容都不同，因为它与操作系统无关。相反，我们现在要谈论的是计算机硬件。
- en: Every computer motherboard has either a BIOS or a UEFI chip, which stores both
    the hardware configuration for the computer, and the bootstrap instructions that
    are needed to start the boot process after the power is turned on. UEFI has replaced
    the old-style BIOS on newer motherboards, and it has more security features than
    what the old BIOS had.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 每个计算机主板都有一个BIOS或UEFI芯片，它存储了计算机的硬件配置和启动引导指令，这些指令在打开电源后启动引导过程所需。UEFI已经取代了较新主板上的老式BIOS，并且它比老式BIOS具有更多的安全功能。
- en: I can't give you any specific information about BIOS/UEFI setup because every
    model of the motherboard has a different way of doing things. What I can give
    you is some more generalized information.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 关于BIOS/UEFI设置，我无法给你任何具体的信息，因为每个主板型号的操作方式都不同。我可以给你一些更一般化的信息。
- en: 'When you think about BIOS/UEFI security, you might be thinking about disabling
    the ability to boot from anything other than the normal system drive. In the following
    screenshot, you can see that I''ve disabled all SATA drive ports except for the
    one to which the system drive is connected:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 当你考虑BIOS/UEFI安全时，你可能会考虑禁用从除了正常系统驱动器以外的任何引导设备引导的能力。在下面的截图中，你可以看到我已经禁用了除了连接系统驱动器的SATA驱动器端口之外的所有SATA驱动器端口：
- en: '![](img/bc13e849-eebf-4750-8694-d50766666987.png)'
  id: totrans-257
  prefs: []
  type: TYPE_IMG
  zh: '![](img/bc13e849-eebf-4750-8694-d50766666987.png)'
- en: When computers are out in the open where the general public can have easy physical
    access to them, this might be a consideration. For servers that are locked away
    in their own secure room with limited access, there's no real reason to worry
    about it, unless the security requirements of some regulatory body dictate otherwise.
    For machines that are out in the open, having whole disk encryption would prevent
    someone from stealing data after booting from either an optical disk or a USB
    device. However, you might still have other reasons to prevent anyone from booting
    the machine from these alternate boot devices.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 当计算机放在公众可以轻易物理接触的地方时，这可能需要考虑。对于被锁在安全房间并且访问受限的服务器，除非某个监管机构的安全要求另有规定，否则没有真正的理由担心。对于放在公开场所的机器，整个磁盘加密可以防止有人在从光盘或USB设备引导后窃取数据。然而，你可能仍有其他原因阻止任何人从这些备用引导设备引导机器。
- en: 'Another consideration might be if you work in a secure environment where supersensitive
    data are handled. If you''re worried about unauthorized exfiltration of sensitive
    data, you might consider disabling the ability to write to USB devices. This will
    also prevent people from booting the machine from USB devices:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个考虑因素可能是，如果你在处理超敏感数据的安全环境中工作。如果你担心未经授权的敏感数据外泄，你可能考虑禁用写入USB设备的能力。这也将阻止人们从USB设备引导机器：
- en: '![](img/6c8bdae5-cfa5-4774-9fef-d42a672537e1.png)'
  id: totrans-260
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6c8bdae5-cfa5-4774-9fef-d42a672537e1.png)'
- en: 'However, there''s more than just this to BIOS/UEFI security. Today''s modern
    server CPUs come with a variety of security features to help prevent data breaches.
    For example, let''s look at a list of security features that are implemented in
    Intel Xeon CPUs:'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，BIOS/UEFI安全不仅仅是这些。今天的现代服务器CPU配备了各种安全功能，以帮助防止数据泄露。例如，让我们看一下实现在Intel Xeon CPU中的安全功能清单：
- en: Identity-protection technology
  id: totrans-262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 身份保护技术
- en: Advanced Encryption Standard New Instructions
  id: totrans-263
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高级加密标准新指令
- en: Trusted Execution Technology
  id: totrans-264
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可信执行技术
- en: Hardware-assisted virtualization technology
  id: totrans-265
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 硬件辅助虚拟化技术
- en: 'AMD, that plucky underdog in the CPU market, have their own new security features
    in their new line of EPYC server CPUs. These features are:'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: AMD，在CPU市场上的勇敢的小角色，他们在他们的新一代EPYC服务器CPU中有自己的新安全功能。这些功能包括：
- en: Secure Memory Encryption
  id: totrans-267
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全内存加密
- en: Secure Encrypted Virtualization
  id: totrans-268
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全加密虚拟化
- en: In any case, you would configure these CPU security options in your server's
    UEFI setup utility.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 无论如何，你都会在服务器的UEFI设置实用程序中配置这些CPU安全选项。
- en: You can read about Intel Xeon security features at: [https://www.intel.com/content/www/us/en/data-security/security-overview-general-technology.html](https://www.intel.com/content/www/us/en/data-security/security-overview-general-technology.html).
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在[https://www.intel.com/content/www/us/en/data-security/security-overview-general-technology.html](https://www.intel.com/content/www/us/en/data-security/security-overview-general-technology.html)上阅读关于Intel
    Xeon安全功能的信息。
- en: And, you can read about AMD EPYC security features at [https://semiaccurate.com/2017/06/22/amds-epyc-major-advance-security/](https://semiaccurate.com/2017/06/22/amds-epyc-major-advance-security/).
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 而且，你可以在[https://semiaccurate.com/2017/06/22/amds-epyc-major-advance-security/](https://semiaccurate.com/2017/06/22/amds-epyc-major-advance-security/)上阅读关于AMD
    EPYC安全功能的信息。
- en: 'And of course, for any machines that are out in the open, it''s a good idea
    to password-protect the BIOS or UEFI:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，对于任何放在公开场所的机器，密码保护BIOS或UEFI是个好主意：
- en: '![](img/0f6702b0-cb20-4bf5-9d15-e62a624adaff.png)'
  id: totrans-273
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0f6702b0-cb20-4bf5-9d15-e62a624adaff.png)'
- en: If for no other reason, do it to keep people from monkeying around with your
    settings.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 即使没有其他原因，也要这样做以防止人们对你的设置进行篡改。
- en: Using a security checklist for system setup
  id: totrans-275
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用系统设置的安全检查表
- en: I've previously told you about OpenSCAP, which is a really useful tool to lock
    down your system with just a minimum amount of effort. OpenSCAP comes with various
    profiles that you can apply to help bring your systems into compliance with the
    standards of different regulatory agencies. However, there are certain things
    that OpenSCAP can't do for you. For example, certain regulatory agencies require
    that your server's hard drive be partitioned in a certain way, with certain directories
    separated out into their own partitions. If you've already set up your server
    with everything under one big partition, you can't fix that just by doing a remediation
    procedure with OpenSCAP. The process of locking down your server to ensure that
    it's compliant with any applicable security regulations has to begin before you
    even install the operating system. For this, you need the appropriate checklist.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 我之前告诉过您OpenSCAP，这是一个非常有用的工具，可以通过最少的努力来锁定您的系统。OpenSCAP带有各种配置文件，您可以应用这些配置文件来帮助使您的系统符合不同监管机构的标准。但是，OpenSCAP无法为您做某些事情。例如，某些监管机构要求您的服务器硬盘以特定方式分区，将某些目录分隔到自己的分区中。如果您已经将服务器设置为一个大分区下的所有内容，您无法通过使用OpenSCAP的修复程序来解决这个问题。确保服务器符合任何适用安全法规的程序必须在安装操作系统之前开始。为此，您需要适当的清单。
- en: 'There are a few different places where you can obtain a generic security checklist
    if that''s all you need. The University of Texas at Austin publishes a generic
    checklist for Red Hat Enterprise 7, which you can adjust if you need to use it
    with CentOS 7, Oracle Linux 7, or Scientific Linux 7\. You might find that some
    checklist items don''t apply to your situation, and you can adjust them as required:'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您只需要通用安全清单，有几个地方可以获取。德克萨斯大学奥斯汀分校发布了适用于Red Hat Enterprise 7的通用清单，您可以根据需要将其调整为适用于CentOS
    7、Oracle Linux 7或Scientific Linux 7。您可能会发现某些清单项目不适用于您的情况，您可以根据需要进行调整：
- en: '![](img/b39cd887-9904-46c2-837e-3112238c1106.png)'
  id: totrans-278
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b39cd887-9904-46c2-837e-3112238c1106.png)'
- en: 'For specific business fields, you''ll need to get a checklist from the applicable
    regulatory body. If you work in the financial sector or with a business that accepts
    credit card payments, you''ll need a checklist from the Payment Card Industry
    Security Standards Council:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 对于特定的业务领域，您需要从适用的监管机构获取清单。如果您在金融领域工作或与接受信用卡支付的企业合作，您将需要来自支付卡行业安全标准委员会的清单：
- en: '![](img/a43c0b90-2003-4f78-9896-4ad1c464a50a.png)'
  id: totrans-280
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a43c0b90-2003-4f78-9896-4ad1c464a50a.png)'
- en: 'And, for healthcare organizations here in the U.S., there''s HIPAA with its
    requirements. For publicly-traded companies here in the U.S., there''s Sarbanes-Oxley
    with its requirements:'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 而对于美国的医疗保健机构，有其要求的HIPAA。对于美国的上市公司，有其要求的萨班斯-奥克斯利法：
- en: You can get the University of Texas checklist from at: [https://wikis.utexas.edu/display/ISO/Operating+System+Hardening+Checklists](https://wikis.utexas.edu/display/ISO/Operating+System+Hardening+Checklists).
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在以下网址获取德克萨斯大学的清单：[https://wikis.utexas.edu/display/ISO/Operating+System+Hardening+Checklists](https://wikis.utexas.edu/display/ISO/Operating+System+Hardening+Checklists)。
- en: You can get a PCI-DSS checklist at: [https://www.pcisecuritystandards.org/](https://www.pcisecuritystandards.org/).
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在以下网址获取PCI-DSS清单：[https://www.pcisecuritystandards.org/](https://www.pcisecuritystandards.org/).
- en: You can get a HIPAA checklist at: [https://www.hipaainstitute.com/security-checklist.](https://www.hipaainstitute.com/security-checklist)
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在以下网址获取HIPAA清单：[https://www.hipaainstitute.com/security-checklist.](https://www.hipaainstitute.com/security-checklist)
- en: And, you can get a Sarbanes-Oxley checklist at: [http://www.sarbanes-oxley-101.com/sarbanes-oxley-checklist.htm](http://www.sarbanes-oxley-101.com/sarbanes-oxley-checklist.htm).
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 而且，您可以在以下网址获取萨班斯-奥克斯利清单：[http://www.sarbanes-oxley-101.com/sarbanes-oxley-checklist.htm](http://www.sarbanes-oxley-101.com/sarbanes-oxley-checklist.htm)。
- en: Other regulatory bodies may also have their own checklists. If you know that
    you have to deal with any of them, be sure to get the appropriate checklist.
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 其他监管机构可能也有他们自己的清单。如果您知道您必须处理其中任何一个，请务必获取适当的清单。
- en: Summary
  id: totrans-287
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: Once again, we've come to the conclusion of another chapter, and we covered
    a lot of cool topics. We started by looking at various ways to audit which services
    are running on your systems, and we saw some examples of what you probably don't
    want to see. We then saw how to use the password-protection features of GRUB 2,
    and we saw the little quirks that we have to deal with when using those features.
    Next, we had a change of pace by looking at how to further lock down a system
    by properly setting up a system's BIOS/UEFI. Finally, we looked at why we need
    to properly begin preparations to set up a hardened system by obtaining and following
    the proper checklist.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，我们已经结束了另一个章节，并涵盖了许多有趣的话题。我们首先看了一些审计系统上运行的各种服务的方法，并看到了一些您可能不想看到的示例。然后，我们看到了如何使用GRUB
    2的密码保护功能，以及在使用这些功能时我们必须处理的一些小问题。接下来，我们通过正确设置系统的BIOS/UEFI来改变步调，进一步锁定系统。最后，我们看了为什么我们需要通过获取和遵循适当的清单来正确开始准备建立一个强化系统。
- en: Not only does this conclude another chapter, it also concludes the book. But,
    it doesn't conclude your journey into the land of *Mastering Linux Security and
    Hardening*. Oh, no. As you continue this journey, you'll find that there's still
    more to learn, and still more that won't fit into the confines of a 300-page book.
    Where you go from here mainly depends on the particular area of IT administration
    in which you work. Different types of Linux servers, whether they be web servers,
    DNS servers, or whatever else, have their own special security requirements, and
    you'll want to follow the learning path that best fits your needs.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 这不仅结束了另一个章节，也结束了这本书。但是，这并不意味着您在*掌握Linux安全和强化*的旅程结束了。当您继续这个旅程时，您会发现还有更多需要学习的内容，还有更多内容无法适应300页书的范围。您未来的方向主要取决于您所在的IT管理领域。不同类型的Linux服务器，无论是Web服务器、DNS服务器还是其他类型，都有自己特殊的安全要求，您将希望按照最适合您需求的学习路径。
- en: I've enjoyed the part of the journey on which I've been able to accompany you.
    I hope that you've enjoyed it as much as I have.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 我很享受能够陪伴你一起走过的旅程。希望你和我一样享受这段旅程。
