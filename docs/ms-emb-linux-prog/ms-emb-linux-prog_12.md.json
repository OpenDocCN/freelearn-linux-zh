["```\nIMAGE_INSTALL_append = \" gdbserver\"\n```", "```\nEXTRA_IMAGE_FEATURES = \"debug-tweaks tools-debug\"\n```", "```\n# gdbserver :10000 ./hello-world\nProcess hello-world created; pid = 103\nListening on port 10000\n\n```", "```\n$ arm-poky-linux-gnueabi-gdb hello-world\n\n```", "```\n(gdb) target remote 192.168.1.101:10000\n\n```", "```\nRemote debugging from host 192.168.1.1\n\n```", "```\n# gdbserver /dev/ttyO0 ./hello-world\n\n```", "```\n# stty -F /dev/ttyO1 115200\n\n```", "```\n(gdb) set remotebaud 115200\n(gdb) target remote /dev/ttyUSB0\n\n```", "```\n$ mkdir ~/rootfs\n$ cd ~/rootfs\n$ sudo tar xf ~/poky/build/tmp/deploy/images/beaglebone/core-image-minimal-beaglebone.tar.bz2Then you can point sysroot to the root of the unpacked files:\n(gdb) set sysroot /home/chris/MELP/rootfs\n\n```", "```\nadd-auto-load-safe-path /home/chris/myprog/.gdbinit\n\n```", "```\nset auto-load safe-path /\n\n```", "```\nset sysroot /home/chris/buildroot/output/host/usr/arm-buildroot-linux-gnueabi/sysroot\n\n```", "```\nCannot find bounds of current function\n\n```", "```\n(gdb) break main\nBreakpoint 1, main (argc=1, argv=0xbefffe24) at helloworld.c:8\n8 printf(\"Hello, world!\\n\");\n\n```", "```\nwarning: Could not load shared library symbols for 2 libraries, e.g. /lib/libc.so.6.\n\n```", "```\nbuild/tmp/deploy/rpm/armv5e/libc6-dbg-2.21-r0.armv5e.rpm\n\n```", "```\nPACKAGE_DEBUG_SPLIT_STYLE = \"debug-without-src\"\n\n```", "```\n(gdb) show directories\nSource directories searched: $cdir:$cwd\n\n```", "```\n(gdb) dir /home/chris/MELP/src/lib_mylib\nSource directories searched: /home/chris/MELP/src/lib_mylib:$cdir:$cwd\n\n```", "```\n# gdbserver --attach :10000 109\nAttached; pid = 109\nListening on port 10000\n\n```", "```\n(gdb) detach\nDetaching from program: /home/chris/MELP/helloworld/helloworld, process 109\nEnding remote debugging.\n\n```", "```\n$ ulimit -c unlimited\n\n```", "```\n# echo /corefiles/core.%e.%t > /proc/sys/kernel/core_pattern\n\n```", "```\n$ ls /corefiles/\ncore.sort-debug.1431425613\n\n```", "```\n|/usr/share/apport/apport %p %s %c %P\n\n```", "```\n$ arm-poky-linux-gnueabi-gdb sort-debug /home/chris/MELP/rootdirs/rootfs/corefiles/core.sort-debug.1431425613\n[...]\nCore was generated by `./sort-debug'.\nProgram terminated with signal SIGSEGV, Segmentation fault.\n#0  0x000085c8 in addtree (p=0x0, w=0xbeac4c60 \"the\") at sort-debug.c:41\n41     p->word = strdup (w);\n\n```", "```\n(gdb) list\n37    static struct tnode *addtree (struct tnode *p, char *w)\n38    {\n39        int cond;\n40\n41        p->word = strdup (w);\n42        p->count = 1;\n43        p->left = NULL;\n44        p->right = NULL;\n45\n\n```", "```\n(gdb) bt\n#0  0x000085c8 in addtree (p=0x0, w=0xbeac4c60 \"the\") at sort-debug.c:41\n#1  0x00008798 in main (argc=1, argv=0xbeac4e24) at sort-debug.c:89\n\n```", "```\n$ ddd --debugger arm-poky-linux-gnueabi-gdb -x gdbinit sort-debug\n\n```", "```\nboot/vmlinux-3.14.26ltsi-yocto-standard\n\n```", "```\nkgdboc=ttyO0,115200\n\n```", "```\n# echo ttyO0 > /sys/module/kgdboc/parameters/kgdboc\n\n```", "```\n$ arm-poky-linux-gnueabi-gdb ~/linux/vmlinux\n\n```", "```\n(gdb) set remotebaud 115200\n(gdb) target remote /dev/ttyUSB0\nRemote debugging using /dev/ttyUSB0\nBogus trace status reply from target: qTStatus\n\n```", "```\n# echo g > /proc/sysrq-trigger\n\n```", "```\n(gdb) set remotebaud 115200\n(gdb) target remote /dev/ttyUSB0\nRemote debugging using /dev/ttyUSB0\n0xc009a59c in arch_kgdb_breakpoint ()\n\n```", "```\n(gdb) break sys_sync\nBreakpoint 1 at 0xc0128a88: file fs/sync.c, line 103.\n(gdb) c\nContinuing.\n\n```", "```\n[New Thread 87]\n[Switching to Thread 87]\n\nBreakpoint 1, sys_sync () at fs/sync.c:103\n\n```", "```\n# echo \"\" >  /sys/module/kgdboc/parameters/kgdboc\n\n```", "```\nkgdboc=ttyO0,115200 kgdbwait\n\n```", "```\n 1.103415] console [ttyO0] enabled\n[    1.108216] kgdb: Registered I/O driver kgdboc.\n[    1.113071] kgdb: Waiting for connection from remote gdb...\n\n```", "```\n# cat /sys/module/mbx/sections/.text\n0xbf000000\n# cat /sys/module/mbx/sections/.data\n0xbf0003e8\n# cat /sys/module/mbx/sections/.bss\n0xbf0005c0\n\n```", "```\n(gdb) add-symbol-file /home/chris/mbx-driver/mbx.ko 0xbf000000 \\\n-s .data 0xbf0003e8 -s .bss 0xbf0005c0\nadd symbol table from file \"/home/chris/mbx-driver/mbx.ko\" at\n .text_addr = 0xbf000000\n .data_addr = 0xbf0003e8\n .bss_addr = 0xbf0005c0\n\n```", "```\n(gdb) break mbx_write\n\nBreakpoint 1 at 0xbf00009c: file /home/chris/mbx-driver/mbx.c, line 93.\n\n(gdb) c\nContinuing.\n\n```", "```\nBreakpoint 1, mbx_write (file=0xde7a71c0, buffer=0xadf40 \"hello\\n\\n\",\n length=6, offset=0xde73df80)\n at /home/chris/mbx-driver/mbx.c:93\n\n```", "```\n# echo g > /proc/sysrq-trigger\n[   42.971126] SysRq : DEBUG\n\nEntering kdb (current=0xdf36c080, pid 83) due to Keyboard Entry\nkdb>\n\n```", "```\nkdb> bp sys_sync\nInstruction(i) BP #0 at 0xc01304ec (sys_sync)\n is enabled  addr at 00000000c01304ec, hardtype=0 installed=0\n\nkdb> go\n\n```", "```\nEntering kdb (current=0xdf388a80, pid 88) due to Breakpoint @ 0xc01304ec\n\n```", "```\n[   56.225868] Unable to handle kernel NULL pointer dereference at virtual address 00000400[   56.229038] pgd = cb624000[   56.229454] [00000400] *pgd=6b715831, *pte=00000000, *ppte=00000000[   56.231768] Internal error: Oops: 817 [#1] SMP ARM[   56.232443] Modules linked in: mbx(O)[   56.233556] CPU: 0 PID: 98 Comm: sh Tainted: G   O  4.1.10 #1[   56.234234] Hardware name: ARM-Versatile Express[   56.234810] task: cb709c80 ti: cb71a000 task.ti: cb71a000[   56.236801] PC is at mbx_write+0x14/0x98 [mbx][   56.237303] LR is at __vfs_write+0x20/0xd8[   56.237559] pc : [<bf0000a0>]    lr : [<c0307154>]  psr: 800f0013[   56.237559] sp : cb71bef8  ip : bf00008c  fp : 00000000[   56.238183] r10: 00000000  r9 : cb71a000  r8 : c02107c4[   56.238485] r7 : cb71bf88  r6 : 000afb98  r5 : 00000006  r4 : 00000000[   56.238857] r3 : cb71bf88  r2 : 00000006  r1 : 000afb98  r0 : cb61d600\n[   56.239276] Flags: Nzcv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment user[   56.239685] Control: 10c5387d  Table: 6b624059  DAC: 00000015[   56.240019] Process sh (pid: 98, stack limit = 0xcb71a220)\n\n```", "```\n[   56.240363] Stack: (0xcb71bef8 to 0xcb71c000)[   56.240745] bee0:                                                       cb71bf88 cb61d600[   56.241331] bf00: 00000006 c0307154 00000000 c020a308 cb619d88 00000301 00000000 00000042[   56.241775] bf20: 00000000 cb61d608 cb709c80 cb709c78 cb71bf60 c0250a54 00000000 cb709ee0[   56.242190] bf40: 00000003 bef4f658 00000000 cb61d600 cb61d600 00000006 000afb98 cb71bf88[   56.242605] bf60: c02107c4 c030794c 00000000 00000000 cb61d600 cb61d600 00000006 000afb98[   56.243025] bf80: c02107c4 c0308174 00000000 00000000 00000000 000ada10 00000001 000afb98[   56.243493] bfa0: 00000004 c0210640 000ada10 00000001 00000001 000afb98 00000006 00000000[   56.243952] bfc0: 000ada10 00000001 000afb98 00000004 00000001 00000020 000ae274 00000000[   56.244420] bfe0: 00000000 bef4f49c 0000fcdc b6f1aedc 600f0010 00000001 00000000 00000000[   56.245653] [<bf0000a0>] (mbx_write [mbx]) from [<c0307154>] (__vfs_write+0x20/0xd8)[   56.246368] [<c0307154>] (__vfs_write) from [<c030794c>] (vfs_write+0x90/0x164)[   56.246843] [<c030794c>] (vfs_write) from [<c0308174>] (SyS_write+0x44/0x9c)[   56.247265] [<c0308174>] (SyS_write) from [<c0210640>] (ret_fast_syscall+0x0/0x3c)[   56.247737] Code: e5904090 e3520b01 23a02b01 e1a05002 (e5842400)[   56.248372] ---[ end trace 999c378e4df13d74 ]---\n\n```", "```\n$ arm-poky-linux-gnueabi-objdump -S mbx.kostatic ssize_t mbx_write(struct file *file,const char *buffer, size_t length, loff_t * offset){  8c:   e92d4038        push    {r3, r4, r5, lr}  struct mbx_data *m = (struct mbx_data *)file->private_data;  90:   e5904090        ldr     r4, [r0, #144]  ; 0x90  94:   e3520b01        cmp     r2, #1024       ; 0x400  98:   23a02b01        movcs   r2, #1024       ; 0x400  if (length > MBX_LEN)    length = MBX_LEN;    m->mbx_len = length;  9c:   e1a05002        mov     r5, r2  a0:   e5842400        str     r2, [r4, #1024] ; 0x400\n\n```", "```\nm->mbx_len = length;\n\n```", "```\n#define MBX_LEN 1024 struct mbx_data {  char mbx[MBX_LEN];  int mbx_len;};\n```", "```\n$ grep __log_buf System.mapc0f72428 b __log_buf\n\n```", "```\nU-Boot# md 80f7242880f72428: 00000000 00000000 00210034 c6000000    ........4.!.....80f72438: 746f6f42 20676e69 756e694c 6e6f2078    Booting Linux on80f72448: 79687020 61636973 5043206c 78302055     physical CPU 0x80f72458: 00000030 00000000 00000000 00730084    0.............s.80f72468: a6000000 756e694c 65762078 6f697372    ....Linux versio80f72478: 2e34206e 30312e31 68632820 40736972    n 4.1.10 (chris@80f72488: 6c697562 29726564 63672820 65762063    builder) (gcc ve80f72498: 6f697372 2e34206e 20312e39 6f726328    rsion 4.9.1 (cro80f724a8: 6f747373 4e2d6c6f 2e312047 302e3032    sstool-NG 1.20.080f724b8: 20292029 53203123 5720504d 4f206465    ) ) #1 SMP Wed O\n80f724c8: 32207463 37312038 3a31353a 47203335    ct 28 17:51:53 G\n\n```"]