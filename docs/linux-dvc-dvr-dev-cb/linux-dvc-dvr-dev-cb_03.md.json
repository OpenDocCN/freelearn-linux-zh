["```\n#define pr_fmt(fmt) \"%s:%s: \" fmt, KBUILD_MODNAME, __func__\n#include <linux/kernel.h>\n#include <linux/module.h>\n#include <linux/fs.h>\n\n/* Device major umber */\nstatic int major;\n```", "```\nstatic int __init chrdev_init(void)\n{\n    int ret;\n\n    ret = register_chrdev(0, \"chrdev\", &chrdev_fops);\n    if (ret < 0) {\n        pr_err(\"unable to register char device! Error %d\\n\", ret);\n        return ret;\n    }\n    major = ret;\n    pr_info(\"got major %d\\n\", major);\n\n    return 0;\n}\n```", "```\nstatic void __exit chrdev_exit(void)\n{\n    unregister_chrdev(major, \"chrdev\");\n}\n\nmodule_init(chrdev_init);\nmodule_exit(chrdev_exit);\n```", "```\nstatic struct file_operations chrdev_fops = {\n    .owner    = THIS_MODULE,\n    .read     = chrdev_read,\n    .write    = chrdev_write,\n    .open     = chrdev_open,\n    .release  = chrdev_release\n};\n```", "```\nstatic ssize_t chrdev_read(struct file *filp,\n                           char __user *buf, size_t count,\n                           loff_t *ppos)\n{\n    pr_info(\"return EOF\\n\");\n\n    return 0;\n}\n\nstatic ssize_t chrdev_write(struct file *filp,\n                            const char __user *buf, size_t count,\n                            loff_t *ppos)\n{\n    pr_info(\"got %ld bytes\\n\", count);\n\n    return count;\n}\n```", "```\nstatic int chrdev_open(struct inode *inode, struct file *filp)\n{\n    pr_info(\"chrdev opened\\n\");\n\n    return 0;\n}\n\nstatic int chrdev_release(struct inode *inode, struct file *filp)\n{\n    pr_info(\"chrdev released\\n\");\n\n    return 0;\n}\n```", "```\n$ make KERNEL_DIR=../../../linux/\nmake -C ../../../linux/ \\\n            ARCH=arm64 \\\n            CROSS_COMPILE=aarch64-linux-gnu- \\\n            SUBDIRS=/home/giometti/Projects/ldddc/github/chapter_3/chrdev_legacy modules\nmake[1]: Entering directory '/home/giometti/Projects/ldddc/linux'\n  CC [M] /home/giometti/Projects/ldddc/github/chapter_3/chrdev_legacy/chrdev_legacy.o\n  Building modules, stage 2.\n  MODPOST 1 modules\n  CC /home/giometti/Projects/ldddc/github/chapter_3/chrdev_legacy/chrdev_legacy.mod.o\n  LD [M] /home/giometti/Projects/ldddc/github/chapter_3/chrdev_legacy/chrdev_legacy.ko\nmake[1]: Leaving directory '/home/giometti/Projects/ldddc/linux'\n```", "```\n# insmod chrdev_legacy.ko \nchrdev_legacy: loading out-of-tree module taints kernel.\nchrdev_legacy:chrdev_init: got major 239\n```", "```\n# grep chrdev /proc/devices \n239 chrdev\n```", "```\nint main(int argc, char *argv[])\n{\n    int fd;\n    char buf[] = \"DUMMY DATA\";\n    int n, c;\n    int ret;\n\n    if (argc < 2) {\n        fprintf(stderr, \"usage: %s <dev>\\n\", argv[0]);\n        exit(EXIT_FAILURE);\n    }\n\n    ret = open(argv[1], O_RDWR);\n    if (ret < 0) {\n        perror(\"open\");\n        exit(EXIT_FAILURE);\n    }\n    printf(\"file %s opened\\n\", argv[1]);\n    fd = ret;\n```", "```\n    for (c = 0; c < sizeof(buf); c += n) {\n        ret = write(fd, buf + c, sizeof(buf) - c);\n        if (ret < 0) {\n            perror(\"write\");\n            exit(EXIT_FAILURE);\n        }\n        n = ret;\n\n        printf(\"wrote %d bytes into file %s\\n\", n, argv[1]);\n        dump(\"data written are: \", buf + c, n);\n    }\n```", "```\n    for (c = 0; c < sizeof(buf); c += n) {\n        ret = read(fd, buf, sizeof(buf));\n        if (ret == 0) { \n            printf(\"read EOF\\n\");\n            break;\n        } else if (ret < 0) {\n            perror(\"read\");\n            exit(EXIT_FAILURE);\n        }\n        n = ret;\n\n        printf(\"read %d bytes from file %s\\n\", n, argv[1]);\n        dump(\"data read are: \", buf, n);\n    }\n```", "```\n    close(fd);\n\n    return 0;\n}\n```", "```\n# make CFLAGS=\"-Wall -O2\" chrdev_test\ncc -Wall -O2 chrdev_test.c -o chrdev_test\n```", "```\n# ./chrdev_test \nusage: ./chrdev_test <dev>\n```", "```\n# mknod chrdev c 239 0\n```", "```\n# ls -l chrdev\ncrw-r--r-- 1 root root 239, 0 Feb 7 14:30 chrdev\n```", "```\n# ./chrdev_test chrdev\nfile chrdev opened\nwrote 11 bytes into file chrdev\ndata written are: 44 55 4d 4d 59 20 44 41 54 41 00 \nread EOF\n```", "```\nchrdev_legacy:chrdev_open: chrdev opened\nchrdev_legacy:chrdev_write: got 11 bytes\nchrdev_legacy:chrdev_read: return EOF\nchrdev_legacy:chrdev_release: chrdev released\n```", "```\n#define pr_fmt(fmt) \"%s:%s: \" fmt, KBUILD_MODNAME, __func__\n#include <linux/kernel.h>\n#include <linux/module.h>\n#include <linux/fs.h>\n#include <linux/uaccess.h>\n\n/* Device major umber */\nstatic int major;\n\n/* Device data */\n#define BUF_LEN 300\nstatic char chrdev_buf[BUF_LEN];\n```", "```\nstatic ssize_t chrdev_read(struct file *filp,\n                char __user *buf, size_t count, loff_t *ppos)\n{\n    int ret;\n\n    pr_info(\"should read %ld bytes (*ppos=%lld)\\n\", \n                                     count, *ppos);\n\n    /* Check for end-of-buffer */\n    if (*ppos + count >= BUF_LEN)\n        count = BUF_LEN - *ppos;\n\n    /* Return data to the user space */\n    ret = copy_to_user(buf, chrdev_buf + *ppos, count);\n    if (ret < 0)\n        return -EFAULT;\n\n    *ppos += count;\n    pr_info(\"return %ld bytes (*ppos=%lld)\\n\", count, *ppos);\n\n    return count;\n}\n```", "```\nstatic ssize_t chrdev_write(struct file *filp,\n             const char __user *buf, size_t count, loff_t *ppos)\n{\n    int ret;\n\n    pr_info(\"should write %ld bytes (*ppos=%lld)\\n\", count, *ppos);\n\n    /* Check for end-of-buffer */\n    if (*ppos + count >= BUF_LEN)\n        count = BUF_LEN - *ppos;\n\n    /* Get data from the user space */\n    ret = copy_from_user(chrdev_buf + *ppos, buf, count);\n    if (ret < 0)\n        return -EFAULT;\n\n    *ppos += count;\n    pr_info(\"got %ld bytes (*ppos=%lld)\\n\", count, *ppos);\n\n    return count;\n}\n```", "```\n# ./chrdev_test chrdev\nfile chrdev opened\nwrote 11 bytes into file chrdev\ndata written are: 44 55 4d 4d 59 20 44 41 54 41 00 \nread 11 bytes from file chrdev\ndata read are: 00 00 00 00 00 00 00 00 00 00 00 \n```", "```\nchrdev_legacy:chrdev_open: chrdev opened\nchrdev_legacy:chrdev_write: should write 11 bytes (*ppos=0)\nchrdev_legacy:chrdev_write: got 11 bytes (*ppos=11)\nchrdev_legacy:chrdev_read: should read 11 bytes (*ppos=11)\nchrdev_legacy:chrdev_read: return 11 bytes (*ppos=22)\nchrdev_legacy:chrdev_release: chrdev released\n```", "```\n# ./chrdev_test chrdev\nfile chrdev opened\nwrote 11 bytes into file chrdev\ndata written are: 44 55 4d 4d 59 20 44 41 54 41 00 \nread 11 bytes from file chrdev\ndata read are: 00 00 00 00 00 00 00 00 00 00 00\n```", "```\nchrdev_legacy:chrdev_open: chrdev opened\nchrdev_legacy:chrdev_write: should write 11 bytes (*ppos=0)\nchrdev_legacy:chrdev_write: got 11 bytes (*ppos=11)\nchrdev_legacy:chrdev_read: should read 11 bytes (*ppos=11)\nchrdev_legacy:chrdev_read: return 11 bytes (*ppos=22)\nchrdev_legacy:chrdev_release: chrdev released\n```", "```\n...\n        printf(\"wrote %d bytes into file %s\\n\", n, argv[1]);\n        dump(\"data written are: \", buf, n);\n    }\n\n    close(fd);\n\n    ret = open(argv[1], O_RDWR);\n    if (ret < 0) {\n        perror(\"open\");\n        exit(EXIT_FAILURE);\n    }\n    printf(\"file %s reopened\\n\", argv[1]);\n    fd = ret;\n\n    for (c = 0; c < sizeof(buf); c += n) {\n        ret = read(fd, buf, sizeof(buf));\n...\n```", "```\n# ./chrdev_test chrdev\nfile chrdev opened\nwrote 11 bytes into file chrdev\ndata written are: 44 55 4d 4d 59 20 44 41 54 41 00 \nfile chrdev reopened\nread 11 bytes from file chrdev\ndata read are: 44 55 4d 4d 59 20 44 41 54 41 00\n```", "```\nchrdev_legacy:chrdev_open: chrdev opened\nchrdev_legacy:chrdev_write: should write 11 bytes (*ppos=0)\nchrdev_legacy:chrdev_write: got 11 bytes (*ppos=11)\nchrdev_legacy:chrdev_release: chrdev released\nchrdev_legacy:chrdev_open: chrdev opened\nchrdev_legacy:chrdev_read: should read 11 bytes (*ppos=0)\nchrdev_legacy:chrdev_read: return 11 bytes (*ppos=11)\nchrdev_legacy:chrdev_release: chrdev released\n```", "```\nNAME\n       cat - concatenate files and print on the standard output\n\nSYNOPSIS\n       cat [OPTION]... [FILE]...\n\nDESCRIPTION\n       Concatenate FILE(s) to standard output.\n```", "```\nNAME\n       dd - convert and copy a file\n\nSYNOPSIS\n       dd [OPERAND]...\n       dd OPTION\n\nDESCRIPTION\n       Copy a file, converting and formatting according to the operands.\n```", "```\n# dd if=/dev/zero bs=100 count=3 of=chrdev\n3+0 records in\n3+0 records out\n300 bytes copied, 0.0524863 s, 5.7 kB/s\n```", "```\n# cat chrdev | tr '\\000' '0'\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n```", "```\n# ls -lh /etc/passwd\n-rw-r--r-- 1 root root 1.3K Jan 10 14:16 /etc/passwd\n```", "```\n# cat /etc/passwd > chrdev\ncat: write error: No space left on device\n```", "```\nchrdev_legacy:chrdev_open: chrdev opened\nchrdev_legacy:chrdev_write: should write 1285 bytes (*ppos=0)\nchrdev_legacy:chrdev_write: got 300 bytes (*ppos=300)\nchrdev_legacy:chrdev_write: should write 985 bytes (*ppos=300)\nchrdev_legacy:chrdev_write: got 0 bytes (*ppos=300)\nchrdev_legacy:chrdev_release: chrdev released\n```", "```\n# grep root chrdev\nroot:x:0:0:root:/root:/bin/bash\n```", "```\nchrdev_legacy:chrdev_open: chrdev opened\nchrdev_legacy:chrdev_read: should read 32768 bytes (*ppos=0)\nchrdev_legacy:chrdev_read: return 300 bytes (*ppos=300)\nchrdev_legacy:chrdev_read: should read 32768 bytes (*ppos=300)\nchrdev_legacy:chrdev_read: return 0 bytes (*ppos=300)\nchrdev_legacy:chrdev_release: chrdev released\n```", "```\nchrdev_legacy:chrdev_open: chrdev opened\nchrdev_legacy:chrdev_write: should write 100 bytes (*ppos=0)\nchrdev_legacy:chrdev_write: got 100 bytes (*ppos=100)\nchrdev_legacy:chrdev_write: should write 100 bytes (*ppos=100)\nchrdev_legacy:chrdev_write: got 100 bytes (*ppos=200)\nchrdev_legacy:chrdev_write: should write 100 bytes (*ppos=200)\nchrdev_legacy:chrdev_write: got 100 bytes (*ppos=300)\nchrdev_legacy:chrdev_release: chrdev released\n```", "```\nchrdev_legacy:chrdev_open: chrdev opened\nchrdev_legacy:chrdev_read: should read 131072 bytes (*ppos=0)\nchrdev_legacy:chrdev_read: return 300 bytes (*ppos=300)\nchrdev_legacy:chrdev_read: should read 131072 bytes (*ppos=300)\nchrdev_legacy:chrdev_read: return 0 bytes (*ppos=300)\nchrdev_legacy:chrdev_release: chrdev released\n```", "```\nchrdev_legacy:chrdev_open: chrdev opened\nchrdev_legacy:chrdev_write: should write 1285 bytes (*ppos=0)\nchrdev_legacy:chrdev_write: got 300 bytes (*ppos=300)\nchrdev_legacy:chrdev_write: should write 985 bytes (*ppos=300)\nchrdev_legacy:chrdev_write: got 0 bytes (*ppos=300)\nchrdev_legacy:chrdev_release: chrdev released\n```", "```\nchrdev_legacy:chrdev_open: chrdev opened\nchrdev_legacy:chrdev_read: should read 32768 bytes (*ppos=0)\nchrdev_legacy:chrdev_read: return 300 bytes (*ppos=300)\nchrdev_legacy:chrdev_read: should read 32768 bytes (*ppos=300)\nchrdev_legacy:chrdev_read: return 0 bytes (*ppos=300)\nchrdev_legacy:chrdev_release: chrdev released\n```"]