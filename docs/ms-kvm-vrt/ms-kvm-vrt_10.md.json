["```\nvirt-v2v -i ova v2v.ova -of qcow2 -o libvirt -n default\n```", "```\nvirt-v2v -i disk /location/of/virtualmachinedisk.vhdx -o local -of qcow2 -os /var/lib/libvirt/images\n```", "```\n    yum -y update\n    yum -y install httpd httpd-tools mod_ssl\n    systemctl start httpd\n    systemctl enable httpd\n    yum -y install mariadb-server mariadb\n    yum install -y php php-fpm php-mysqlnd php-opcache php-gd php-xml php-mbstring libguestfs*\n    ```", "```\n    systemctl start mariadb\n    systemctl enable mariadb\n    systemctl start php-fpm\n    systemctl enable php-fpm\n    firewall-cmd --permanent --zone=public --add-service=http\n    firewall-cmd --permanent --zone=public --add-service=https\n    systemctl reload firewalld\n    ```", "```\n    chown apache:apache /var/www/html -R\n    semanage fcontext -a -t httpd_sys_content_t \"/var/www/html(/.*)?\"\n    restorecon -vvFR /var/www/html\n    setsebool -P httpd_execmem 1\n    ```", "```\n    mysql_secure_installation script, it is going to ask us a series of questions, as illustrated in the following screenshot:![Figure 8.9 \u2013 First part of MariaDB setup: assigning a root password that is empty after installation\n    ](img/B14834_08_09.jpg)Figure 8.9 \u2013 First part of MariaDB setup: assigning a root password that is empty after installationAfter assigning a root password for the MariaDB database, the next steps are more related to housekeeping\u2014removing anonymous users, disallowing remote login, and so on. Here's what that part of wizard looks like:![Figure 8.10 \u2013 Housekeeping: anonymous users, root login setup, test database data removal\n    ](img/B14834_08_10.jpg)Figure 8.10 \u2013 Housekeeping: anonymous users, root login setup, test database data removalWe installed all the necessary services\u2014Apache, MariaDB\u2014and all the necessary additional packages (PHP, `sample index.html` file and place it in `/var/www/html`), but we're not going to do that right now. In production environments, we'd just copy web page contents to that directory and be done with it.\n    ```", "```\n    passwd --expire root\n    ```", "```\nvirsh shutdown LAMP; sleep 10; virsh list\n```", "```\n# virsh domrename LAMP LAMP-Template\n```", "```\n# virsh dominfo LAMP-Template\n```", "```\n    # virsh domrename WS2019SQL WS2019SQL-Template\n    ```", "```\n# virsh dominfo WS2019SQL-Template\n```", "```\n    # qemu-img create -b /var/lib/libvirt/images/WS2019SQL.qcow2 -f qcow2 /var/lib/libvirt/images/LinkedVM1.qcow2\n    # qemu-img create -b /var/lib/libvirt/images/WS2019SQL.qcow2 -f qcow2 /var/lib/libvirt/images/LinkedVM2.qcow2\n    ```", "```\n    virsh dumpxml WS2019SQL-Template > /root/SQL1.xml\n    virsh dumpxml WS2019SQL-Template > /root/SQL2.xml\n    ```", "```\n[local]\nuri=file:///root/virt-builder/index\n```", "```\n[Packt01]\nname=PacktCentOS8\nosinfo=centos8.0\narch=x86_64\nfile=centos-8.0.img.xz\nchecksum=ccb4d840f5eb77d7d0ffbc4241fbf4d21fcc1acdd3679 c13174194810b17dc472566f6a29dba3a8992c1958b4698b6197e6a1689882 b67c1bc4d7de6738e947f\nformat=raw\nsize=8589934592\ncompressed_size=1220175252\nnotes=CentOS8 with KVM and SSH\n```", "```\n# virsh snapshot-list LAMP01\nName Creation Time State\n-------------------------------------------------\n```", "```\n# virsh snapshot-create LAMP01\nDomain snapshot 1439949985 created\n```", "```\n# virsh snapshot-create-as LAMP01 --name \"Snapshot 1\" --description \"First snapshot\" --atomic\n```", "```\n# virsh snapshot-list LAMP01\nName Creation Time State\n----------------------------------------------------\nSnapshot1 2020-02-05 09:00:13 +0230 running\n```", "```\n# virsh snapshot-list LAMP01 --parent\nName Creation Time State Parent\n--------------------------------------------------------------------\nSnapshot1 2020-02-05 09:00:13 +0230 running (null)\nSnapshot2 2020-02-05 09:00:43 +0230 running Snapshot1\nSnapshot3 2020-02-05 09:01:00 +0230 shutoff Snapshot2\n```", "```\n# virsh snapshot-list LAMP01 --tree\nSnapshot1\n\u00a0\u00a0\u00a0|\n\u00a0\u00a0+- Snapshot2\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0|\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0+- Snapshot3\n```", "```\n# qemu-img info /var/lib/libvirt/qemu/LAMP01.qcow2\nimage: /var/lib/libvirt/qemu/LAMP01.qcow2\nfile format: qcow2\nvirtual size: 8.0G (8589934592 bytes)\ndisk size: 1.6G\ncluster_size: 65536\nSnapshot list:\nID TAG VM SIZE DATE VM CLOCK\n1 1439951249 220M 2020-02-05 09:57:29 00:09:36.885\n2 Snapshot1 204M 2020-02-05 09:00:13 00:01:21.284\n3 Snapshot2 204M 2020-02-05 09:00:43 00:01:47.308\n4 Snapshot3 0 2020-02-05 09:01:00 00:00:00.000\n```", "```\n# qemu-img check /var/lib/libvirt/qemu/LAMP01.qcow2\nNo errors were found on the image.\n```", "```\n# virsh snapshot-revert <vm-name> --snapshotname \"Snapshot1\"\n```", "```\n# virsh snapshot-list LAMP01\nName Creation Time State\n------------------------------------------------------\nSnapshot1 2020-02-05 09:00:13 +0230 running\nSnapshot2 2020-02-05 09:00:43 +0230 running\nSnapshot3 2020-02-05 09:01:00 +0230 shutoff\nSnapshot4 2020-02-18 03:28:36 +0230 shutoff\n# virsh snapshot-delete LAMP01 Snapshot 2\nDomain snapshot Snapshot2 deleted\n# virsh snapshot-list LAMP01\nName Creation Time State\n------------------------------------------------------\nSnapshot1 2020-02-05 09:00:13 +0230 running\nSnapshot3 2020-02-05 09:00:43 +0230 running\nSnapshot4 2020-02-05 10:17:00 +0230 shutoff\n```", "```\n# virsh domblklist WS2019SQL-Template --details\nType Device Target Source\n------------------------------------------------\nfile disk vda /var/lib/libvirt/images/WS2019SQL-Template.img\n```", "```\n    # virsh list\n    Id Name State\n    -----------------------------------------\n    4 WS2019SQL-Template running\n    ```", "```\n    --disk-only parameter creates a disk snapshot. This is used for integrity and to avoid any possible corruption.\n    ```", "```\n    # virsh snapshot-list WS2019SQL-Template\n    Name Creation Time State\n    ----------------------------------------------------------\n    snapshot1 2020-02-10 10:21:38 +0230 disk-snapshot\n    ```", "```\n    # virsh snapshot-info WS2019SQL-Template snapshot1\n    Name: snapshot1\n    Domain: WS2019SQL-Template\n    Current: no\n    State: disk-snapshot\n    Location: external <<\n    Parent: -\n    Children: 1\n    Descendants: 1\n    Metadata: yes\n    ```", "```\n    image /var/lib/libvirt/images/WS2019SQL-Template.snapshot1 snapshot, as follows:\n\n    ```", "```\n\n    ```", "```\n    # virsh snapshot-create-as WS2019SQL-Template snapshot2 --description \"Second Snapshot\" --disk-only --atomic\n    Domain snapshot snapshot2 created\n    # virsh domblklist WS2019SQL-Template --details\n    Type Device Target Source\n    ------------------------------------------------\n    file disk vda /snapshot_store/WS2019SQL-Template.snapshot2\n    ```", "```\n# virsh snapshot-create-as WS2019SQL-Template snapshot3 --description \"Third Snapshot\" --disk-only --quiesce\nDomain snapshot snapshot3 created\n```", "```\nerror: Guest agent is not responding: Guest agent not available for now\n```", "```\n    # virsh snapshot-list WS2019SQL-Template\n    Name Creation Time State\n    ----------------------------------------------------------\n    snapshot1 2020-02-10 10:21:38 +0230 disk-snapshot\n    snapshot2 2020-02-10 11:51:04 +0230 disk-snapshot\n    snapshot3 2020-02-10 11:55:23 +0230 disk-snapshot\n    ```", "```\n    # virsh domblklist WS2019SQL-Template\n    Target Source\n    ------------------------------------------------\n    vda /snapshot_store/WS2019SQL-Template.snapshot3\n    ```", "```\n    # qemu-img info --backing-chain /snapshot_store/WS2019SQL-Template.snapshot3|grep backing\n    backing file: /snapshot_store/WS2019SQL-Template.snapshot2\n    backing file format: qcow2\n    backing file: /var/lib/libvirt/images/WS2019SQL-Template.snapshot1\n    backing file format: qcow2\n    backing file: /var/lib/libvirt/images/WS2019SQL-Template.img\n    backing file format: raw\n    ```", "```\n# virsh snapshot-revert WS2019SQL-Template --snapshotname \"snapshot3\"\nerror: unsupported configuration: revert to external snapshot not supported yet\n```", "```\nvirsh snapshot-list WS2019SQL-Template\nName Creation Time State\n------------------------------------------------------------\nsnapshot1 2020-02-10 10:21:38 +0230 disk-snapshot\nsnapshot2 2020-02-10 11:51:04 +0230 disk-snapshot\nsnapshot3 2020-02-10 11:55:23 +0230 disk-snapshot\n```", "```\n    # virsh snapshot-dumpxml WS2019SQL-Template --snapshotname snapshot2 | grep\n    'source file' | head -1\n    <source file='/snapshot_store/WS2019SQL-Template.snapshot2'/>\n    ```", "```\n    backing_file is correctly pointing to the snapshot1 disk. All good. If an error is detected in the qcow2 image, use the -r leaks/all parameter. It may help repair the inconsistencies, but this isn't guaranteed. Check this excerpt from the qemu-img man page:\n    ```", "```\n    # qemu-img info /snapshot_store/WS2019SQL-Template.snapshot2 | grep backing\n    backing file: /var/lib/libvirt/images/WS2019SQL-Template.snapshot1\n    backing file format: qcow2\n    ```", "```\n    WS2019SQL-Template.snapshot2 as the boot disk for the VM; you can verify that by executing the following command:\n\n    ```", "```\n\n    ```", "```\n    the /var/lib/libvirt/images/vm1.snap4 image is the currently active image on which all writes are occurring.\n    ```", "```\n    # qemu-img info --backing-chain /var/lib/libvirt/images/vm1.snap4 | grep backing\n    backing file: /var/lib/libvirt/images/vm1.snap3\n    backing file format: qcow2\n    backing file: /var/lib/libvirt/images/vm1.snap2\n    backing file format: qcow2\n    backing file: /var/lib/libvirt/images/vm1.snap1\n    backing file format: qcow2\n    backing file: /var/lib/libvirt/images/vm1.img\n    backing file format: raw\n    ```", "```\n    # virsh blockcommit VM1 hda --verbose --pivot --active\n    Block Commit: [100 %]\n    Successfully pivoted\n    4\\. Now, check the current active block device in use:\n    # virsh domblklist VM1\n    Target Source\n    --------------------------\n    hda /var/lib/libvirt/images/vm1.img\n    ```", "```\n# virsh snapshot-list VM1\nName Creation Time State\n-----------------------------------------------------\nsnap1 2020-02-12 09:10:56 +0230 shutoff\nsnap2 2020-02-12 09:11:03 +0230 shutoff\nsnap3 2020-02-12 09:11:09 +0230 shutoff\nsnap4 2020-02-12 09:11:17 +0230 shutoff\n```", "```\n# virsh snapshot-delete VM1 snap1 --children --metadata\n# virsh snapshot-list VM1\nName Creation Time State\n```", "```\n    /var/lib/libvirt/images/vm2.snap1 image is the currently active image on which all writes are occurring.\n    ```", "```\n    # qemu-img info --backing-chain /var/lib/libvirt/images/vm2.snap1 | grep backing\n    backing file: /var/lib/libvirt/images/vm1.img\n    backing file format: raw\n    ```", "```\n    /var/lib/libvirt/images/vm2.snap1. It got considerably larger because we pulled the base_image and merged it into the snapshot image to get a single file.\n    ```", "```\n    # virsh snapshot-delete VM2 snap1 --metadata\n    ```"]