- en: '*Chapter 6*: Enabling Network Connectivity'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第6章*：启用网络连接'
- en: When we installed our system in the first chapter, we enabled the network interface.
    However, network configuration is, or can be, even more than that.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们在第一章安装系统时，我们启用了网络接口。然而，网络配置是，或者可以是，更多的。
- en: A server connected to a network might require additional interfaces for configuring
    other networks; for example, for reaching backup servers, performing internal
    services from other servers, or even accessing storage that is not presented directly
    via a Storage Array Network (SAN) as local drives but as, for example, **Internet
    Small Computer System Interface** (**iSCSI**) drives.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 连接到网络的服务器可能需要额外的接口来配置其他网络；例如，用于访问备份服务器，从其他服务器执行内部服务，甚至访问存储，该存储不是直接通过存储阵列网络（SAN）呈现为本地驱动器，而是作为例如**Internet
    Small Computer System Interface** (**iSCSI**) 驱动器。
- en: Additionally, a server might use redundant network capabilities to ensure that,
    in the event of a failure in one of the cards, switches, and so on, the server
    can still be reached and perform properly.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，服务器可能使用冗余网络功能，以确保在卡片、交换机等出现故障时，服务器仍然可以被访问并正常运行。
- en: In this chapter, we will learn about how to define network configuration for
    our RHEL machine using different methods and perform some basic network troubleshooting.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习如何使用不同方法为我们的RHEL机器定义网络配置，并进行一些基本的网络故障排除。
- en: This knowledge will be key since servers are commonly used to provide services
    to other systems, and we need networking for that purpose.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 这些知识将是关键的，因为服务器通常用于向其他系统提供服务，我们需要网络来实现这一目的。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Exploring network configuration in RHEL
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索RHEL中的网络配置
- en: Config files and NetworkManager
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置文件和NetworkManager
- en: Configuring network interfaces with IPv4 and IPv6
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用IPv4和IPv6配置网络接口
- en: Configuring hostname and hostname resolutions (DNS)
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置主机名和主机名解析（DNS）
- en: Overview of firewall configuration
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 防火墙配置概述
- en: Testing connectivity
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试连通性
- en: Let's get hands-on with networking!
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始网络实践吧！
- en: Technical requirements
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: You can continue using the virtual machine we created at the beginning of this
    book in [*Chapter 1*](B16799_01_Final_SK_ePub.xhtml#_idTextAnchor014), *Installing
    RHEL8*. Additionally, to test network communication, it might be useful to create
    a second virtual machine or reuse the one we created in the previous chapters
    for testing the **Network Time Protocol** (**NTP**) configuration as we will use
    it to check for connectivity. Any additional packages that are required will be
    indicated in the text. Any additional files that are required for this chapter
    can be downloaded from [https://github.com/PacktPublishing/Red-Hat-Enterprise-Linux-8-Administration](https://github.com/PacktPublishing/Red-Hat-Enterprise-Linux-8-Administration).
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以继续使用我们在本书开头创建的虚拟机[*第1章*](B16799_01_Final_SK_ePub.xhtml#_idTextAnchor014)，*安装RHEL8*。此外，为了测试网络通信，创建第二个虚拟机或重用我们在前几章中创建的虚拟机以测试**Network
    Time Protocol** (**NTP**) 配置可能会很有用，因为我们将使用它来检查连通性。文本中将指示所需的任何附加软件包。本章所需的任何附加文件可以从[https://github.com/PacktPublishing/Red-Hat-Enterprise-Linux-8-Administration](https://github.com/PacktPublishing/Red-Hat-Enterprise-Linux-8-Administration)下载。
- en: Exploring network configuration in RHEL
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索RHEL中的网络配置
- en: A network is made of different devices that have been interconnected so that
    information and resources can be shared among them; for example, internet access,
    printers, files, and more.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 网络由不同的设备组成，它们被互联起来，以便信息和资源可以在它们之间共享；例如，互联网访问、打印机、文件等。
- en: Networks have been present since the beginning computing. Initially, the most
    common were non-IP-based ones, which were generally used for sharing data across
    computers in the local network, but with the expansion of internet services and
    the requirement for applications or remote services, IP networks were expanded
    and the concept of intranet was introduced, where the **Transmission Control Protocol/Internet
    Protocol** (**TCP**/**IP**) was used as transport, and the applications started
    to be more like internet services (or even be based on them).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 网络自计算机诞生以来就一直存在。最初，最常见的是非IP-based网络，通常用于在本地网络中共享数据，但随着互联网服务的扩展和对应用程序或远程服务的需求，IP网络得到了扩展，并引入了内部网的概念，其中使用**Transmission
    Control Protocol/Internet Protocol** (**TCP**/**IP**)作为传输，应用程序开始更像互联网服务（甚至基于互联网服务）。
- en: The migration to IP-based networks has also adapted other protocols such as
    **Network Basic Input/Output System** (**NetBIOS**) so that they can run on top
    of it (it was working on top of **NetBIOS Extended User Interface** (**NetBEUI**),
    and even if other networks such as **InfiniBand** or **Remote Direct Memory Access**
    (**RDMA**) are still in use, they are not as common as TCP/IP).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 基于IP的网络迁移还使其他协议（如**Network Basic Input/Output System** (**NetBIOS**)）适应了它，以便它们可以在其上运行（它曾经在**NetBIOS
    Extended User Interface** (**NetBEUI**)上运行，即使其他网络如**InfiniBand**或**Remote Direct
    Memory Access** (**RDMA**)仍在使用，但它们不像TCP/IP那样常见）。
- en: TCP/IP, of course, is built on top of other protocols. You can check the OSI
    layer definition at [https://www.redhat.com/sysadmin/osi-model-bean-dip](https://www.redhat.com/sysadmin/osi-model-bean-dip).
    However, some concepts are still involved. We will cover these when we become
    familiar with TCP/IP and networks.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，TCP/IP是建立在其他协议之上的。您可以在[https://www.redhat.com/sysadmin/osi-model-bean-dip](https://www.redhat.com/sysadmin/osi-model-bean-dip)检查OSI层定义。然而，仍涉及一些概念。当我们熟悉TCP/IP和网络时，我们将涵盖这些内容。
- en: 'Before we get into the actual details, we need to clarify a few common TCP/IP
    and networking keywords we''ll be using from now on:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们进入实际细节之前，我们需要澄清一些我们从现在开始将使用的常见TCP/IP和网络关键词：
- en: '**IP address**: This is the address that''s used for interacting with other
    devices on the network.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**IP地址**：这是用于与网络上其他设备交互的地址。'
- en: '`255.255.255.0` or `/24`.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`255.255.255.0`或`/24`。'
- en: '**Gateway**: This the IP address of the device that will get all our traffic
    when the target device is outside our netmask, so that we cannot reach it directly.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网关：这是设备的IP地址，当目标设备在我们的网络掩码之外时，它将获取我们所有的流量，以便我们无法直接到达它。
- en: '**DNS**: This is the IP address of a server or servers that translate **domain
    names** into IP addresses so that the hosts can connect to them.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DNS：这是服务器或服务器的IP地址，用于将域名转换为IP地址，以便主机可以连接到它们。
- en: '**MAC address**: This is the physical interface address. It is unique for each
    card and helps identify the card in the network so that the proper traffic is
    sent to it.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MAC地址：这是物理接口地址。它对于每张卡是唯一的，并帮助在网络中识别卡，以便将适当的流量发送到它。
- en: '**Network Interface Card (NIC)**: This card allows our device to connect to
    the network. It might be wireless, wired, and so on.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络接口卡（NIC）：这张卡允许我们的设备连接到网络。它可能是无线的、有线的等等。
- en: '**Extended Service Set Identification (ESSID)**: This is how a wireless network
    is named.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 扩展服务集识别（ESSID）：这是无线网络的名称。
- en: '**Virtual Private Network (VPN)**: This is a virtual network that is created
    between the client and the server. Once established, it allows you to direct connection
    to the services as if they were local, even if the client and the server are in
    different places. For example, a VPN network is used to allow remote workers to
    connect to their corporate network using their private internet connection.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 虚拟专用网络（VPN）：这是在客户端和服务器之间创建的虚拟网络。一旦建立，它允许您直接连接到服务，就好像它们是本地的，即使客户端和服务器在不同的地方。例如，VPN网络用于允许远程工作者使用他们的私人互联网连接连接到公司网络。
- en: '**Virtual Local Area Network (VLAN)**: This allows us to define virtual networks
    on top of the actual wiring. We can then use a specific header field to have them
    correctly understood and processed by the network equipment.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 虚拟局域网（VLAN）：这允许我们在实际布线之上定义虚拟网络。然后，我们可以使用特定的头字段来使它们被网络设备正确理解和处理。
- en: '**IPv6**: This is the replacement protocol for **IPv4**, which is still the
    predominant protocol in networks today.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: IPv6：这是IPv4的替代协议，而IPv4仍然是今天网络中主要的协议。
- en: In the following sections, we will use some of these terms when we explain how
    a network is set up and defined in **Red Hat Enterprise Linux** (**RHEL**) systems.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的部分中，当我们解释在Red Hat Enterprise Linux（RHEL）系统中如何设置和定义网络时，我们将使用其中一些术语。
- en: In general, when systems are connected, some relationships between the devices
    on the network are established. Sometimes, some hosts are providers of services,
    often called servers, and the consumers are known as clients. When the systems
    in the network perform roles, these networks are known as **Peer-To-Peer** (**p2p**)
    networks.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，当系统连接时，网络上的设备之间建立了一些关系。有时，一些主机是服务提供者，通常被称为服务器，而消费者被称为客户端。当网络中的系统扮演角色时，这些网络被称为点对点（P2P）网络。
- en: In the next section, we'll become familiar with the configuration files and
    the different approaches for configuring networking in our system.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的部分，我们将熟悉配置文件和在系统中配置网络的不同方法。
- en: Getting to know the configuration files and NetworkManager
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解配置文件和NetworkManager
- en: Now that we have learned about some of the keywords and concepts of networking,
    it's the time to look at where we can use them to get our system networked.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了一些网络的关键词和概念，是时候看看我们可以在哪里使用它们来使我们的系统联网了。
- en: Traditionally, network interfaces were configured via text files in the system,
    under the `/etc/sysconfig/network-scripts/` folder. Those scripts were processed
    via the utilities provided via the `network-scripts` package, which took care
    of getting the networking stack up and running with the defined configuration.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 传统上，网络接口是通过系统中的文本文件进行配置的，在`/etc/sysconfig/network-scripts/`文件夹下。这些脚本是通过`network-scripts`包提供的实用程序处理的，该包负责使用定义的配置使网络堆栈正常运行。
- en: Important note
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: Although the `network-scripts` package is available and can be installed, it
    is considered to be **deprecated**, which means that the package is provided and
    available but might disappear in future major versions of the operating system,
    so they will only be provided to ease the transition toward the updated methods.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管`network-scripts`包是可用的并且可以安装，但它被认为是已弃用的，这意味着该包是提供和可用的，但在未来的操作系统的主要版本中可能会消失，因此它们只会被提供以便过渡到更新的方法。
- en: '*NetworkManager* is a utility that was created in 2004 to make network configuration
    and its usage easier for desktop users. At that point, all configuration was done
    via text files and it was more or less static. Once a system was connected to
    a network, the information barely changed at all. With the adoption of wireless
    networks, more flexibility was required to automate and ease the connection to
    different networks via different profiles, VPNs, and more.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: NetworkManager是一个实用程序，于2004年创建，旨在使桌面用户的网络配置和使用更加简单。在那时，所有的配置都是通过文本文件完成的，而且更多或更少是静态的。一旦系统连接到网络，信息几乎没有变化。随着无线网络的采用，需要更多的灵活性来自动化和简化连接到不同网络、不同配置文件、VPN等。
- en: NetworkManager was created to cover those gaps and aimed to be a component that
    would be used in many distributions but from a new standpoint, for example, it
    queries the **Hardware Abstraction Layer** (**HAL**) at startup to learn about
    available network devices and their changes.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: NetworkManager是为了填补这些空白而创建的，旨在成为许多发行版中使用的组件，但从一个新的角度来看，例如，它在启动时查询硬件抽象层（HAL）以了解可用的网络设备及其更改。
- en: Imagine a laptop system; it can be connected to a wired cable, disconnected
    when you're moving it to another location or cubicle, can connect to a wireless
    network, and so on. All those events are relayed to NetworkManager, which takes
    care of reconfiguring network interfaces, routes, authenticating with the wireless
    network, and making the user's life a lot easier than it traditionally was.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一台笔记本电脑系统；它可以连接到有线电缆，当您将其移动到另一个位置或小隔间时断开连接，可以连接到无线网络等等。所有这些事件都会传递给NetworkManager，它会重新配置网络接口、路由、与无线网络进行身份验证，并使用户的生活比传统方式更加轻松。
- en: Tip
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: The hardware that is connected to the system can be queried with several commands,
    depending on how the hardware is connected; for example, via utilities such as
    `lsusb`, `lspci`, or `lshw` (provided by installing the `usbutils`, `pciutils`,
    and `lshw` packages, respectively).
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用几个命令查询连接到系统的硬件，具体取决于硬件的连接方式；例如，通过诸如`lsusb`、`lspci`或`lshw`（分别通过安装`usbutils`、`pciutils`和`lshw`软件包提供）等实用程序。
- en: 'In the following screenshot, we can see the available packages related to NetworkManager,
    as obtained via the `dnf search network manager` command:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的屏幕截图中，我们可以看到与NetworkManager相关的可用软件包，通过`dnf search network manager`命令获取：
- en: '![Figure 6.1 – NetworkManagermanager-related packages available for installation'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.1-可用于安装的NetworkManagermanager相关软件包'
- en: in a Red Hat Enterprise Linux 8 system
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在Red Hat Enterprise Linux 8系统中
- en: '](img/B16799_06_001.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_06_001.jpg)'
- en: Figure 6.1 – NetworkManagermanager-related packages available for installation
    in a Red Hat Enterprise Linux 8 system
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.1-在Red Hat Enterprise Linux 8系统中可用于安装的NetworkManagermanager相关软件包
- en: '`NetworkManagermanager` is configured with the files located in the `/etc/NetworkManager`
    folder, especially `NetworkManager.conf` and the files available in that folder:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '`NetworkManagermanager`配置在`/etc/NetworkManager`文件夹中的文件中，特别是`NetworkManager.conf`和该文件夹中可用的文件：'
- en: '`conf.d`'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`conf.d`'
- en: '`dispatcher.d`'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dispatcher.d`'
- en: '`dnsmasq-shared.d`'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dnsmasq-shared.d`'
- en: '`dnsmasq.d`'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dnsmasq.d`'
- en: '`system-connections`'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`system-connections`'
- en: Can't remember what a dispatcher is? Remember to use `man networkmanager` to
    get details on this!
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 不记得dispatcher是什么？记得使用`man networkmanager`获取详细信息！
- en: 'The man page of NetworkManager explains that those scripts are executed in
    alphabetical order based on network events and will receive two arguments: the
    name of the device for the event and the action.'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: NetworkManager的man页面解释了这些脚本是根据网络事件按字母顺序执行的，并将接收两个参数：事件的设备名称和操作。
- en: 'There are several actions you can perform, as follows:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以执行以下几种操作：
- en: '`pre-up`: The interface gets connected to a network but is not activated yet.
    The script must be executed before the connection can be notified as activated.'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pre-up`：接口已连接到网络，但尚未激活。必须在连接被通知为已激活之前执行脚本。'
- en: '`up`: The interface has been activated.'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`up`：接口已激活。'
- en: '`pre-down`: The interface is being deactivated but hasn''t been disconnected
    from the network yet. In the case of forced disconnections (lost wireless connection
    or lost carrier), this will not be executed.'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pre-down`：接口正在停用，但尚未从网络断开连接。在强制断开连接的情况下（丢失无线连接或丢失载波），这不会被执行。'
- en: '`down`: The interface has been deactivated.'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`down`：接口已停用。'
- en: '`vpn-up`/`vpn-down`/`vpn-pre-up`/`vpn-pre-down`: Similar to the preceding interfaces
    but for VPN connections.'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`vpn-up`/`vpn-down`/`vpn-pre-up`/`vpn-pre-down`：类似于前面的接口，但用于VPN连接。'
- en: '`hostname`: Hostname has been changed.'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`hostname`：主机名已更改。'
- en: '`dhcp4-change`/`dhcp6-change`: The DHCP lease has changed (renewed, rebounded,
    and so on).'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dhcp4-change`/`dhcp6-change`：DHCP租约已更改（已续订、已重新绑定等）。'
- en: '`connectivity-change`: Connectivity transitions such as no connection, system
    went online, and so on.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`connectivity-change`：连接转换，如无连接，系统上线等。'
- en: Now that we have learned a bit about NetworkManager and how it works and was
    designed, let's learn how to configure network interfaces.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了一些关于NetworkManager及其工作和设计的知识，让我们学习如何配置网络接口。
- en: Configuring network interfaces with IPv4 and IPv6
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用IPv4和IPv6配置网络接口
- en: There are several approaches to configuring network interfaces and several network
    configurations. These will help us determine what we need to do and the required
    parameters and settings.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种配置网络接口和几种网络配置的方法。这将帮助我们确定我们需要做什么以及所需的参数和设置。
- en: 'Let''s look at some examples:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一些例子：
- en: A server might have two or more **Network Interface Cards** (**NIC**) for redundancy,
    but only one of them is active at a time.
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器可能有两个或更多的**网络接口卡**（**NIC**）以实现冗余，但一次只有一个处于活动状态。
- en: A server might use a trunk network and require that we define VLANs on top for
    accessing or providing the different services in the networks.
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器可能使用干线网络，并要求我们在其上定义VLAN以访问或提供网络中的不同服务。
- en: Two or more NICS might be combined to provide increased output and redundancy
    via teaming.
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 两个或更多个NIC可能会组合在一起，通过组队提供增加的输出和冗余。
- en: 'Configuration can be performed in several ways, too:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 也可以通过几种方式进行配置：
- en: '`nmtui`: Text-based interface for configuring a network'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nmtui`：用于配置网络的基于文本的界面'
- en: '`nmcli`: The command-line interface for NetworkManager'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nmcli`：NetworkManager的命令行界面'
- en: '`nm-connection-editor`: The graphical tool available for graphical environments'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nm-connection-editor`：可用于图形环境的图形工具'
- en: Via text configuration files
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过文本配置文件
- en: Important note
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: Before editing your network configuration, ensure that you can reach the system
    being configured in another way. In the case of a server, this can be done via
    a remote management card or physical console access. A mistake in the configuration
    might leave the system unreachable.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在编辑网络配置之前，请确保可以以其他方式访问正在配置的系统。对于服务器，可以通过远程管理卡或物理控制台访问。配置错误可能导致系统无法访问。
- en: Before we move on, let's learn a bit about IPv4 and IPv6
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们继续之前，让我们了解一些关于IPv4和IPv6的知识
- en: IPv4 and IPv6... what does that mean?
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: IPv4和IPv6...这是什么意思？
- en: IPv4 was created in 1983 and uses a 32-bit address space, which provides 2³²
    unique addresses (`4,294,967,296`), but from those possible ones, large blocks
    are reserved for special usage. IPv6, ratified as Internet Standard in 2017, is
    the latest version at the time of writing and uses a 128-bit address space instead;
    that is, 2¹²⁸ (3.4 x 10³⁸ addresses).
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: IPv4是在1983年创建的，使用32位地址空间，提供2³²个唯一地址（`4,294,967,296`），但在这些可能的地址中，有大块保留用于特殊用途。IPv6在2017年被批准为互联网标准，是我写作时的最新版本，它使用128位地址空间，即2¹²⁸（3.4
    x 10³⁸个地址）。
- en: Long story short, the number of IPv4 addresses seemed huge at the time, but
    today, where phones, tablets, computers, laptops, servers, lightbulbs, smart plugs,
    and all of the other **Internet of Things** (**IoT**) devices require an IP address,
    that number has been depleted for public IP addresses, meaning that it's not possible
    to assign more. This has caused some **Internet Service Providers** (**ISP**)
    to use techniques such as **Carrier-Grade Network Address Translation** (**CGNAT**),
    similar to what private networks do, which causes all the traffic from several
    devices to appear as coming from only one IP, and having the device interacting
    on both networks (a router), to do the proper routing from outgoing and incoming
    packages to the original requestors.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 长话短说，当时IPv4地址数量似乎很大，但今天，手机、平板电脑、计算机、笔记本电脑、服务器、灯泡、智能插座和所有其他**物联网**（**IoT**）设备都需要IP地址，公共IP地址的数量已经用尽，这意味着无法再分配更多。这导致一些**互联网服务提供商**（**ISP**）使用诸如**运营商级网络地址转换**（**CGNAT**）之类的技术，类似于私人网络所做的，这使得来自多个设备的所有流量看起来都来自同一个IP，并且设备在两个网络上进行交互（路由器），以便对原始请求者的出站和入站数据包进行正确路由。
- en: Why no IPv6, then? The main problem is that IPv4 and IPv6 are not interoperable,
    and even if IPv6 was a draft in 1998, not all network equipment is compatible
    with it and might not have been yet tested. Check out [https://www.ripe.net/support/training/videos/ipv6/transition-mechanisms](https://www.ripe.net/support/training/videos/ipv6/transition-mechanisms)
    for more details.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 那为什么没有IPv6呢？主要问题是IPv4和IPv6不兼容，即使IPv6在1998年是一个草案，也并非所有网络设备都兼容它，可能尚未经过测试。请查看[https://www.ripe.net/support/training/videos/ipv6/transition-mechanisms](https://www.ripe.net/support/training/videos/ipv6/transition-mechanisms)获取更多详细信息。
- en: In the next section, we will learn about how to configure network interfaces
    using a text-based user interface to NetworkManager named `nmtui`.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将学习如何使用名为`nmtui`的NetworkManager的基于文本的用户界面来配置网络接口。
- en: Configuring interfaces with nmtui
  id: totrans-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用nmtui配置接口
- en: '`nmtui` provides a text-based interface for configuration. This is the initial
    screen you''ll see when it is executed by running `nmtui` on a Terminal:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '`nmtui`提供了一个基于文本的配置界面。这是在终端上运行`nmtui`时会看到的初始屏幕：'
- en: '![Figure 6.2 – The nmtui welcome screen showing a menu of possible actions
    that can be performed'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.2 - nmtui欢迎屏幕显示可以执行的操作菜单'
- en: '](img/B16799_06_002.jpg)'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_06_002.jpg)'
- en: Figure 6.2 – The nmtui welcome screen showing a menu of possible actions that
    can be performed
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.2 - nmtui欢迎屏幕显示可以执行的操作菜单
- en: 'Let''s explore the available options for our interface. In this case, let''s
    select **Edit a connection**. On the screen that appears, move down and edit the
    **Wired Connection** option that we have in our system to get to the following
    screen:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们探索接口的可用选项。在这种情况下，让我们选择**编辑连接**。在出现的屏幕上，向下移动并编辑我们系统中的**有线连接**选项，以进入以下屏幕：
- en: '![Figure 6.3 – The Edit Connection page with the IPv4 options expanded'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.3 - 编辑连接页面，IPv4选项已展开'
- en: '](img/B16799_06_003.jpg)'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_06_003.jpg)'
- en: Figure 6.3 – The Edit Connection page with the IPv4 options expanded
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.3 - 编辑连接页面，IPv4选项已展开
- en: 'It will be hard to show screenshots for each step, as one of the advantages
    of the text interface is that we can condense a lot of options into a simple screen.
    However, the preceding screenshot makes it easy to understand each of the required
    parameters:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 很难为每个步骤展示截图，因为文本界面的优势之一是我们可以将许多选项压缩成一个简单的屏幕。然而，前面的截图使我们能够轻松理解每个所需参数：
- en: IP address
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: IP地址
- en: Netmask
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 子网掩码
- en: Gateway
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网关
- en: Search domain
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 搜索域
- en: Routing
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 路由
- en: 'As you can see, there are checkboxes for ignoring routes or DNS parameters
    that are obtained when the connection is set to `Automatic`. Additionally, there
    are other options for interfaces: `Disabled`, `Link-Local`, `Manual`, and `Shared`.'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，有复选框可用于忽略路由或在连接设置为“自动”时获取的DNS参数。此外，还有其他接口选项：“禁用”，“链路本地”，“手动”和“共享”。
- en: Let's discuss the `Automatic` option, which means that the interface will be
    set to autoconfiguration. This is one of the most common settings for configuration.
    It does not mean that everything is done magically, though. Let's dig into this
    a bit more.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们讨论“自动”选项，这意味着接口将被设置为自动配置。这是配置的最常见设置之一。不过，这并不意味着一切都是自动完成的。让我们深入了解一下。
- en: In a network (corporate, private, and others), it is typical to have a special
    service or server doing **Dynamic Host Routing Protocol** (**DHCP**). DHCP is
    a protocol that runs on top of TCP/IP that allows you to configure hosts dynamically,
    using the configuration that was made previously either by the network administrator
    or some appliance and its default settings.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个网络（企业、私人等）中，通常会有一个专门的服务或服务器执行**动态主机路由协议**（**DHCP**）。DHCP是在TCP/IP之上运行的协议，允许您动态配置主机，使用之前由网络管理员或某个设备及其默认设置进行的配置。
- en: DHCP allows you to autoconfigure (from the client side) many aspects of network
    configuration, such as IP, netmask, gateway, DNS, search domain, time server,
    and so on. The configuration that's received is given a lease that is valid for
    a period of time. After that, the system attempts to renew it or if the system
    is being powered off or disconnected, the lease is released.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: DHCP允许您自动配置（从客户端）网络配置的许多方面，如IP、子网掩码、网关、DNS、搜索域、时间服务器等。接收到的配置将被分配一个在一段时间内有效的租约。之后，系统会尝试更新它，或者如果系统被关闭或断开连接，租约将被释放。
- en: 'Usually, the DHCP configuration is considered to be tied to dynamic IPs, but
    keep in mind that a DHCP server can use two different approaches: a pool of IPs
    that can be reused by different systems connecting and fixed mappings of MAC addresses
    to static IPs.'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，DHCP配置被认为与动态IP绑定在一起，但请记住，DHCP服务器可以使用两种不同的方法：可以重复使用不同系统连接的IP池，也可以将MAC地址固定映射到静态IP。
- en: Let's, for example, think about a `192.168.1.0/24` subnet.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，让我们考虑一个`192.168.1.0/24`子网。
- en: We can define our ISP router to be at IP `192.168.1.1` because of the subnet
    (`/24`), which means that the last part of the IPv4 address can range from 0 to
    255.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将ISP路由器定义为IP`192.168.1.1`，因为子网（`/24`）的原因，这意味着IPv4地址的最后一部分可以从0到255范围。
- en: Using that IP range, we can set up hosts to get dynamic configuration and a
    dynamic IP from a pool in the last 100 IPs and leave the ones at the beginning
    for fixed equipment (even if they get the configuration dynamically), such as
    printers, storage devices, and more.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 利用该IP范围，我们可以设置主机从最后100个IP中的动态配置和动态IP中获取，将前面的IP留给固定设备（即使它们动态获取配置），如打印机、存储设备等。
- en: As we mentioned previously, we can create reservations for servers, but in general,
    for devices that are always going to have the same address, it is also common
    practice to configure static addressing. In this way, if the DHCP server becomes
    unavailable, the servers will be still reachable from other services with either
    a valid lease or other servers/devices with static addresses configured.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前提到的，我们可以为服务器创建预留，但通常对于总是使用相同地址的设备，配置静态地址也是常见做法。这样，如果DHCP服务器不可用，服务器仍然可以从其他服务或配置了静态地址的其他服务器/设备中访问。
- en: Tip
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: Just to get familiar with this concept, IP addresses are represented in IPv4
    with a dotted notation separating four groups of numbers, such as `192.168.2.12`,
    while in IPv6, numbers are separated with `:`; for example, `2001:db8:0:1::c000:207`.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 只是为了熟悉这个概念，IP地址在IPv4中以点分隔四组数字表示，例如`192.168.2.12`，而在IPv6中，数字以`:`分隔；例如`2001:db8:0:1::c000:207`。
- en: Configuring interfaces with nm-connection-editor
  id: totrans-113
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用nm-connection-editor配置接口
- en: If our system has the graphical environment installed, which is not the case
    for our test system, we can use the graphical configuration tool instead. If it
    is not installed, proceed to execute `dnf install nm-connection-editor` in a shell
    console inside your graphical session.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们的系统已安装了图形环境，而我们的测试系统没有安装图形环境，我们可以使用图形配置工具。如果没有安装，请在图形会话内的shell控制台中执行`dnf
    install nm-connection-editor`。
- en: Tip
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: To install the graphical interface, you can run the `dnf groupinstall "Server
    with GUI" -y` command or select it during installation.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装图形界面，您可以运行`dnf groupinstall "Server with GUI" -y`命令，或者在安装过程中选择它。
- en: 'In the following screenshot, we can see the window that was opened by executing
    `nm-connection-editor`. It''s similar to the text interface shown by `nmtui` earlier
    in this chapter:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的屏幕截图中，我们可以看到通过执行`nm-connection-editor`打开的窗口。它类似于本章前面显示的`nmtui`的文本界面：
- en: '![Figure 6.4 –  Initial screen for nm-connection-editor'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.4 - nm-connection-editor的初始屏幕'
- en: '](img/B16799_06_004.jpg)'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_06_004.jpg)'
- en: Figure 6.4 – Initial screen for nm-connection-editor
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.4 - nm-connection-editor的初始屏幕
- en: Here, we can see the **+**, **-**, and *gear* buttons, which are used to add/remove
    or configure the connection that's highlighted, respectively.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们可以看到**+**、**-**和*齿轮*按钮，分别用于添加/删除或配置突出显示的连接。
- en: 'Let''s click on our **Wired Connection** option and then click on the **gear**
    icon to open the details:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们点击**有线连接**选项，然后点击**齿轮**图标打开详细信息：
- en: '![Figure 6.5 – Dialog for editing a network connection'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.5 - 编辑网络连接的对话框'
- en: '](img/B16799_06_005.jpg)'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_06_005.jpg)'
- en: Figure 6.5 – Dialog for editing a network connection
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.5 - 编辑网络连接的对话框
- en: In the dialog, we can see the fields we had in the simpler command-line configuration
    tool, plus extra fields and different tabs for each group of options.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在对话框中，我们可以看到简单命令行配置工具中的字段，以及每个选项组的额外字段和不同的选项卡。
- en: The important fields to remember are those that are used to **Connect automatically
    with priority** in the **General** tab. This enables our system to automatically
    enable that NIC when a connection is available.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 要记住的重要字段是**在**通用**选项卡中用于**自动连接优先**的字段。这使我们的系统在有连接可用时自动启用该网卡。
- en: As you can find by examining the different tabs, there are lots of choices,
    such as marking a connection to be metered. This means that, for example, if a
    connection is made via a mobile phone, extra charges may be specified if network
    usage is not controlled.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 通过检查不同的选项卡，您会发现有很多选择，比如标记连接为计量。这意味着，例如，如果通过手机进行连接，如果网络使用没有受到控制，可能会有额外的费用。
- en: 'When we''re creating extra networks, we can define physical or virtual devices
    based on the packages we have installed in our system (if you recall the list
    of packages we saw when searching for NetworkManager, we had packages for different
    VPNs, Wi-Fi, and others), as we can see in the following screenshot:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们创建额外的网络时，我们可以根据系统中安装的软件包定义物理或虚拟设备（如果您还记得我们在搜索NetworkManager时看到的软件包列表，我们有不同VPN、Wi-Fi等软件包），如下面的屏幕截图所示：
- en: '![Figure 6.6 – nm-connection-editor with plugins for Wi-Fi, OpenVPN, PPTP,'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.6 - 带有Wi-Fi、OpenVPN、PPTP插件的nm-connection-editor'
- en: Bluetooth, and more installed
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 蓝牙等已安装
- en: '](img/B16799_06_006.jpg)'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_06_006.jpg)'
- en: Figure 6.6 – nm-connection-editor with plugins for Wi-Fi, OpenVPN, PPTP, Bluetooth,
    and more installed
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.6 – 带有Wi-Fi、OpenVPN、PPTP、蓝牙等插件的nm-connection-editor已安装
- en: For server environments, the most common network types are **Bonds**, **Bridge**,
    and **Team** (a part of **Ethernet**), while for desktops, the most common network
    types are **Ethernet**, **Wi-Fi**, and **Broadband**.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 对于服务器环境，最常见的网络类型是**绑定**、**桥接**和**团队**（**以太网**的一部分），而对于桌面电脑，最常见的网络类型是**以太网**、**Wi-Fi**和**宽带**。
- en: Each type of connection has some requirements. For example, for bonds, bridges,
    and teams, we need more than one network interface that can be combined.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 每种类型的连接都有一些要求。例如，对于绑定、桥接和团队，我们需要多个可以组合的网络接口。
- en: Now, let's move on a review `nmcli` usage in the next section.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们继续在下一节中审查`nmcli`的用法。
- en: Configuring interfaces with nmcli
  id: totrans-137
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用nmcli配置接口
- en: '`nmcli` is the command-line interface for NetworkManager. It allows us to not
    only check but also configure the network interfaces in our system, and even if
    using it might require more memory skills than what `nmtui` required, it empowers
    users and administrators with scripting capabilities to automate the network setup
    of our system.'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '`nmcli`是NetworkManager的命令行界面。它不仅允许我们检查，还允许我们配置系统中的网络接口，即使使用它可能需要比`nmtui`需要更多的记忆技巧，但它赋予用户和管理员脚本能力来自动设置系统的网络。'
- en: Tip
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: Most commands allow us to use autocompletion; that is, pressing the *Tab* key
    will use the autocompletion lists on the command line to suggest the syntax. For
    example, typing `nmcli dev` on the command line and pressing *Tab* will autocomplete
    the command to `nmcli device`. In this case, it might not be as critical as `nmcli`
    takes both arguments as valid, but for others, it's mandatory to spell it properly
    for the code to work.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数命令允许我们使用自动补全；也就是说，按下*Tab*键将在命令行上使用自动补全列表来建议语法。例如，在命令行上输入`nmcli dev`并按下*Tab*将自动补全命令为`nmcli
    device`。在这种情况下，这可能并不像`nmcli`接受两个参数都有效那样重要，但对于其他命令来说，正确拼写是必须的才能使代码正常工作。
- en: 'Let''s start checking the available connections in our system with `nmcli dev`,
    and then use `nmcli con show` to check out its details:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从使用`nmcli dev`检查系统中可用的连接开始，然后使用`nmcli con show`查看其详细信息：
- en: '![Figure 6.7 –  nmcli dev and nmcli con show'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.7 – nmcli dev和nmcli con show'
- en: '](img/B16799_06_007.jpg)'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_06_007.jpg)'
- en: Figure 6.7 – nmcli dev and nmcli con show
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.7 – nmcli dev和nmcli con show
- en: 'When controlling a network connection, for example, when using `nmcli con up
    "Wired Connection"` or when disabling it with `nmcli con down ens3`, we should
    bear in mind what we explained about NetworkManager: if the connection is available
    in the system, NetworkManager might reactivate it just after being disconnected
    because the connection and the devices required are available in our system.'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，当控制网络连接时，例如使用`nmcli con up "Wired Connection"`或使用`nmcli con down ens3`禁用它时，我们应该记住我们关于NetworkManager的解释：如果连接在系统中可用，NetworkManager可能会在断开连接后立即重新激活它，因为连接和所需的设备在我们的系统中是可用的。
- en: 'Now, let''s create a new interface to illustrate the process of adding a new
    connection via IPv4:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们创建一个新接口来说明通过IPv4添加新连接的过程：
- en: '[PRE0]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'We can do the same with IPv6:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 我们也可以使用IPv6：
- en: '[PRE1]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Once the preceding commands have been executed, we can check the network connections
    that have been defined with `nmcli connection show eth0` and validate that the
    proper settings were applied (or, of course, via `nmtui`, `nm-connection-editor`,
    or the text files that were created on disk as the information is shared and stored
    in the system).
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 执行了上述命令后，我们可以使用`nmcli connection show eth0`检查已定义的网络连接，并验证是否应用了正确的设置（或者当然也可以通过`nmtui`、`nm-connection-editor`或在磁盘上创建的文本文件来验证，因为信息是共享和存储在系统中的）。
- en: 'When we reviewed the output of `nmcli connection show interface`, the output
    contained some keys separated by dots, such as the following:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们审查`nmcli connection show interface`的输出时，输出包含一些用点分隔的键，例如以下内容：
- en: '`ipv4.address`'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ipv4.address
- en: '`ipv4.gateway`'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ipv4.gateway
- en: '`ipv6.address`'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ipv6.address
- en: '`ipv6.gateway`'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ipv6.gateway
- en: '`connection.id`'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: connection.id
- en: 'We can use these keys to define new values via `nmcli con mod $key $value`,
    as shown in the following example:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用这些键通过`nmcli con mod $key $value`来定义新的值，如下例所示：
- en: '![Figure 6.8 – Example of modifying a network connection to change the name'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.8 – 修改网络连接名称的示例'
- en: of the connection ID and IP address
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 连接ID和IP地址的
- en: '](img/B16799_06_008.jpg)'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_06_008.jpg)'
- en: Figure 6.8 – Example of modifying a network connection to change the name of
    the connection ID and IP address
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.8 – 修改网络连接名称和IP地址的示例
- en: Of course, after doing the preceding tests, we can also remove the connection
    to avoid problems in our system with `nmcli con del datacenter`.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，在进行了上述测试后，我们也可以使用`nmcli con del datacenter`来删除连接以避免系统中的问题。
- en: 'The following commands can be used to modify connections with the `nmcli` tool:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令可用于使用`nmcli`工具修改连接：
- en: '`nmcli con show`: Shows the status of the connections.'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nmcli con show`: 显示连接的状态。'
- en: '`nmcli con show NAME`: Shows the details of the connection named `NAME`.'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nmcli con show NAME`: 显示名为`NAME`的连接的详细信息。'
- en: '`nmcli dev status`: Shows the statuses of the devices in the system. Note that
    this means **devices**, not connections that might be using those devices.'
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nmcli dev status`: 显示系统中设备的状态。请注意，这意味着**设备**，而不是可能正在使用这些设备的连接。'
- en: '`nmcli con add con-NAME`: Adds a new connection.'
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nmcli con add con-NAME`: 添加新连接。'
- en: '`nmci con mod NAME`: Modifies a connection.'
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nmci con mod NAME`: 修改连接。'
- en: '`nmcli con up NAME`: Brings up a connection.'
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nmcli con up NAME`: 启动连接。'
- en: '`nmcli con down NAME`: Brings down a connection (that can still be reenabled
    by NetworkManager).'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nmcli con down NAME`: 断开连接（仍然可以通过NetworkManager重新启用）。'
- en: '`nmcli con del NAME`: Removes a connection definition from the system.'
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nmcli con del NAME`: 从系统中删除连接定义。'
- en: Tip
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: Check `man nmcli-examples` to find more examples that are included in the documentation
    for the system.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 查看`man nmcli-examples`以找到包含在系统文档中的更多示例。
- en: Configuring interfaces with text files
  id: totrans-174
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用文本文件配置接口
- en: In prior subsections, we explored how to configure the network using different
    approaches, but in the end, all those configurations end up being written to disk
    as interface definition files (which also provides backward compatibility with
    the previously mentioned `network-scripts`).
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的小节中，我们探讨了如何使用不同的方法配置网络，但最终，所有这些配置最终都会被写入磁盘作为接口定义文件（这也提供了与先前提到的`network-scripts`的向后兼容性）。
- en: 'Instead of starting with creating an interface definition from scratch, let''s
    examine what `nmcli` did when we created the interface with the following command:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 与其从头开始创建接口定义，不如看看当我们用以下命令创建接口时`nmcli`做了什么：
- en: '[PRE2]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The preceding command will generate the `/etc/sysconfig/network-scripts/ifcfg-eth0`
    file, which we can see in the following screenshot:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令将生成`/etc/sysconfig/network-scripts/ifcfg-eth0`文件，我们可以在下面的截图中看到：
- en: '![Figure 6.9 – Contents of the /etc/sysconfig/network-scripts/ifcfg-eth0 connection
    definition'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.9-/etc/sysconfig/network-scripts/ifcfg-eth0连接定义的内容'
- en: '](img/B16799_06_009.jpg)'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_06_009.jpg)'
- en: Figure 6.9 – Contents of the /etc/sysconfig/network-scripts/ifcfg-eth0 connection
    definition
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.9-/etc/sysconfig/network-scripts/ifcfg-eth0连接定义的内容
- en: As we can see, by default, we have specified a network interface of the `Ethernet`
    (`TYPE`) type using the `eth0` device, along with the provided values for IPv4
    and IPv6 addressing and gateways. The names of the keys differ from the ones defined
    with `nmcli`, and the reason for this is that we have backward compatibility.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所看到的，默认情况下，我们指定了一个以`Ethernet`（`TYPE`）类型的网络接口，使用`eth0`设备，以及提供的IPv4和IPv6地址和网关。键的名称与使用`nmcli`定义的键不同，原因是我们具有向后兼容性。
- en: Note that in the preceding example, the `ONBOOT` field has already been set
    to `yes`, which means that the interface will be enabled automatically when the
    system is booting. If we're using `nmcli`, we can check the status via the `connection.autoconnect`
    configuration key, which will also, by default, make the connection automatically
    enabled at boot.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在上面的例子中，`ONBOOT`字段已经设置为`yes`，这意味着当系统启动时，接口将自动启用。如果我们使用`nmcli`，我们可以通过`connection.autoconnect`配置键来检查状态，这也将默认情况下使连接在启动时自动启用。
- en: We can edit those files directly, but to let NetworkManager be aware of the
    changes that will be introduced, `nmcli con reload` must be executed. This will
    sync the changes that are made to the individual files.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以直接编辑这些文件，但是为了让NetworkManager意识到将要引入的更改，必须执行`nmcli con reload`。这将同步对各个文件所做的更改。
- en: For example, we can correct one of the settings in the preceding file because
    for statically defined IPs, it is a common practice to define `BOOTPROTO=none`.
    Use your preferred method to modify the `/etc/sysconfig/network-scripts/ifcfg-eth0`
    file (`vim`, `nano`, `sed`, or others). To get other details we can check with
    `nmcli` and also change the IP address.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们可以更正上述文件中的一个设置，因为对于静态定义的IP，通常会定义`BOOTPROTO=none`。使用你喜欢的方法修改`/etc/sysconfig/network-scripts/ifcfg-eth0`文件（`vim`，`nano`，`sed`或其他）。要获取其他细节，我们可以使用`nmcli`进行检查，并且也可以更改IP地址。
- en: 'Note how, in the following screenshot, the changes don''t appear in `nmcli`
    until we issue the `reload` command:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在下面的截图中，更改在发出`reload`命令之前不会出现在`nmcli`中：
- en: '![Figure 6.10 – The process of editing an interface definition doesn''t show
    up on nmcli until we reload the connections'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.10-编辑接口定义的过程在重新加载连接之前不会显示在nmcli上'
- en: '](img/B16799_06_010.jpg)'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_06_010.jpg)'
- en: Figure 6.10 – The process of editing an interface definition doesn't show up
    on nmcli until we reload the connections
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.10-编辑接口定义的过程在重新加载连接之前不会显示在nmcli上
- en: Of course, we can also create network definitions from scratch, and until the
    arrival and spread of NetworkManager, this method was used in scripting, including
    Anaconda automated installations via kickstart files.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，我们也可以从头开始创建网络定义，直到NetworkManager的到来和传播，这种方法在脚本编写中被使用，包括通过kickstart文件进行的Anaconda自动安装。
- en: 'Let''s create a simple network definition in IPv4 with the commands show in
    the following screenshot:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们用IPv4中的命令创建一个简单的网络定义，如下面截图中所示：
- en: '![Figure 6.11 – Creating a connection using a configuration file (that can
    be part of a script)'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.11-使用配置文件创建连接（可以作为脚本的一部分）'
- en: '](img/B16799_06_011.jpg)'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_06_011.jpg)'
- en: Figure 6.11 – Creating a connection using a configuration file (that can be
    part of a script)
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.11-使用配置文件创建连接（可以作为脚本的一部分）
- en: Here, you can see not only the creation of the connection but the previous status,
    the interface definition, the NetworkManager view of the system, and a comparison
    of the configuration files that were reloaded. Note that the device column is
    empty as we have defined an interface for that connection that is not present
    in our system.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，你不仅可以看到连接的创建，还可以看到之前的状态，接口定义，系统的NetworkManager视图，以及重新加载的配置文件的比较。请注意，设备列为空，因为我们为该连接定义了一个在我们系统中不存在的接口。
- en: Important note
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: The network interface definition can become a nightmare as the interface name
    itself is subject to several rules, such as the location of the interface in the
    bus, if it was previously seen, and so on. Generally, once the network cards have
    been detected in the system, a custom rule is written that matches the MAC address
    of the interface to a custom naming convention. This happens so that it does not
    change across reboots or if a new software update changes the way we must enumerate
    the cards. You can read more about this topic by looking at the official RHEL8
    manual at [https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_and_managing_networking/consistent-network-interface-device-naming_configuring-and-managing-networking](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_and_managing_networking/consistent-network-interface-device-naming_configuring-and-managing-networking).
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 网络接口定义可能会变成一场噩梦，因为接口名称本身受到几条规则的约束，比如接口在总线上的位置，以前是否曾见过等。一般来说，一旦系统检测到网络卡，就会编写一个自定义规则，将接口的MAC地址与自定义命名约定进行匹配。这样做是为了在重新启动或新软件更新改变我们必须枚举卡的方式时不会发生变化。您可以通过查看官方RHEL8手册了解更多信息[https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_and_managing_networking/consistent-network-interface-device-naming_configuring-and_managing-networking](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_and_managing_networking/consistent-network-interface-device-naming_configuring-and_managing-networking)。
- en: Now that we have reviewed the different ways to configure networking in our
    system, let's learn about naming resolutions.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经回顾了在我们的系统中配置网络的不同方法，让我们了解一下命名解析。
- en: Configuring hostname and hostname resolutions (DNS)
  id: totrans-199
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置主机名和主机名解析（DNS）
- en: Remembering IP addresses, whether they are IPv4 or IPv6 addresses, can become
    a nightmare. To make things easier, a more human approach was used for the hostnames
    and the DNS, in that we can translate those easier-to-remember names into the
    IP addresses that systems use for connecting.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 记住IP地址，无论是IPv4还是IPv6地址，都可能变成一场噩梦。为了简化事情，对主机名和DNS采用了更加人性化的方法，我们可以将这些更容易记住的名称转换为系统用于连接的IP地址。
- en: Hostnames are the names we assign to a host to have them identified, but when
    they're used in addition to a DNS server, we must have other hosts that can *resolve*
    them into IP addresses they can connect to.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 主机名是我们分配给主机以便它们被识别的名称，但当它们与DNS服务器一起使用时，我们必须有其他主机能够将它们解析为可以连接的IP地址。
- en: 'We can use the `hostname` command to see or to temporarily modify the current
    hostname, as shown in the following screenshot:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`hostname`命令查看或临时修改当前主机名，如下面的屏幕截图所示：
- en: '![Figure 6.12 – Querying and changing the hostname for our host'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.12 - 查询和更改主机的主机名'
- en: '](img/B16799_06_012.jpg)'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_06_012.jpg)'
- en: Figure 6.12 – Querying and changing the hostname for our host
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.12 - 查询和更改主机的主机名
- en: Bear in mind that this change is only temporary; as long as we restart the server,
    it will use the configured one.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，这种更改只是暂时的；只要我们重新启动服务器，它就会使用配置的更改。
- en: 'To define a new configured hostname, we will use the `hostnamectl set-hostname`
    command, as shown in the following screenshot:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 要定义一个新的配置主机名，我们将使用`hostnamectl set-hostname`命令，如下面的屏幕截图所示：
- en: '![Figure 6.13 – Checking the previously configured hostname and the definition'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.13 - 检查先前配置的主机名和定义'
- en: of a new one via hostnamectl
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 通过hostnamectl定义新主机名
- en: '](img/B16799_06_013.jpg)'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_06_013.jpg)'
- en: Figure 6.13 – Checking the previously configured hostname and the definition
    of a new one via hostnamectl
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.13 - 检查先前配置的主机名和通过hostnamectl定义新主机名
- en: Note in the preceding example how we have `Transient hostname` versus `Static
    hostname`, which refers to the temporary status of the name that was defined with
    `hostname` instead of `hostnamectl`.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意在上面的示例中，我们有`临时主机名`与`静态主机名`，这指的是使用`hostname`而不是`hostnamectl`定义的名称的临时状态。
- en: When it comes to name resolution, there are several approaches we can take.
    One, of course, is to use DNS servers, which we will explain later in this section,
    but there are other ways.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 在名称解析方面，我们可以采取几种方法。当然，一种方法是使用DNS服务器，我们将在本节稍后解释，但还有其他方法。
- en: 'In general, systems have several resolvers, and those are defined in the `/etc/nsswitch.conf`
    configuration file. Those resolvers are not only for network naming, but, for
    example, for resolving users, where, for example, a corporate `nsswitch.conf`
    instructs our system to use, for hosts resolving this entry: `hosts: files dns
    myhostname`.'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: '一般来说，系统有几个解析器，并且这些解析器在`/etc/nsswitch.conf`配置文件中定义。这些解析器不仅用于网络命名，还用于解析用户，例如，企业`nsswitch.conf`指示我们的系统使用以下条目进行主机解析：`hosts:
    files dns myhostname`。'
- en: This means that we are using the files in our `/etc/` directory as our first
    source. In the case of hostnames, this refers to the `/etc/hosts` file. If an
    entry is defined in that file, the value that was specified will be used; if not,
    the `/etc/resolv.conf` file will determine how to proceed with its resolution.
    Those files, and especially `resolv.conf`, are configured when the system is deployed
    and when a connection is activated. NetworkManager takes care of updating the
    values that were obtained via DHCP if autoconfiguration was used, or the specified
    DNS servers if manual configuration was performed.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着我们将我们的`/etc/`目录中的文件作为我们的第一个来源。在主机名的情况下，这指的是`/etc/hosts`文件。如果在该文件中定义了条目，将使用指定的值；如果没有，则`/etc/resolv.conf`文件将确定如何进行解析。这些文件，特别是`resolv.conf`，在系统部署和连接激活时进行配置。NetworkManager负责更新通过DHCP获得的值（如果使用了自动配置），或者如果执行了手动配置，则使用指定的DNS服务器。
- en: 'In the following screenshot, we can see the entries that have been defined
    in our `/etc/hosts` file, how pinging a host fails because the name does not exist,
    and how, after manually adding an entry to the `/etc/hosts` file, our system is
    able to reach it:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的屏幕截图中，我们可以看到在我们的`/etc/hosts`文件中定义的条目，如何因为名称不存在而无法ping主机，以及在手动向`/etc/hosts`文件添加条目后，我们的系统能够到达它：
- en: '![Figure 6.14 – Adding a static host entry to our local system'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.14 - 向我们的本地系统添加静态主机条目'
- en: '](img/B16799_06_014.jpg)'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_06_014.jpg)'
- en: Figure 6.14 – Adding a static host entry to our local system
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.14 - 向我们的本地系统添加静态主机条目
- en: 'As we mentioned previously, DNS resolution is done via the configuration at
    `/etc/resolv.conf`, which, by default, contains a `search` parameter and a `nameserver`
    parameter. If we check the man page of `resolv.conf`, we can obtain descriptions
    for the common parameters:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前提到的，DNS解析是通过`/etc/resolv.conf`中的配置完成的，默认情况下包含`search`参数和`nameserver`参数。如果我们查看`resolv.conf`的man页面，我们可以获得常见参数的描述：
- en: '`nameserver`: Contains the IP of the nameserver to use. Currently, only a maximum
    of three entries (each on its own line) will be used by the `resolv` library in
    the system. The resolution is performed in order each time, so if one server fails,
    it will time out, try with the next one, and so on.'
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nameserver`：包含要使用的名称服务器的IP。目前，`resolv`库在系统中每次最多使用三个条目（每个占一行）进行解析。每次解析都是按顺序进行的，因此如果一个服务器失败，它将超时，尝试下一个，依此类推。'
- en: '`domain`: The local domain name. It allows us to use short names to hosts that
    are relative to the local domain in our host. If it''s not listed, it''s calculated
    based on the hostname of our system (everything after the first "`.`").'
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`domain`：本地域名。它允许我们使用相对于我们主机的本地域的短名称。如果未列出，它将基于我们系统的主机名进行计算（第一个“.”之后的所有内容）。'
- en: '`search`: By default, this contains the local domain name, and it''s the list
    of domains we can attempt to use to resolve the short name that''s provided. It''s
    limited to 6 domains and 256 characters. Domain and search are mutually exclusive,
    since the last one in the file is the one to be used.'
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`search`：默认情况下，这包含本地域名，它是我们可以尝试使用以解析提供的短名称的域名列表。它限制为6个域和256个字符。域和搜索是互斥的，因为文件中的最后一个将被使用。'
- en: Tip
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: DNS resolution works by asking special servers (DNS) for the relevant data for
    a domain. This happens in a hierarchical way, with the top-most general servers
    being called **root servers**. DNS servers contain not only registers or entries
    for converting hostnames into IPs, but also information about the mail server
    to use when sending an email, verification details for security, reverse entries,
    and more. Also, DNS servers can be used to block access to services by returning
    invalid IPs for some domains, or to speed up internet navigation by using faster
    DNS servers than the ones provided by the ISP. When a domain name is registered,
    a new entry is created in the root tables for the domain pointing to the DNS server.
    This will take care of that domain resolution, and later, those entries will be
    populated and cached across the internet for faster resolution.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: DNS解析通过向特殊服务器（DNS）请求域的相关数据来实现。这是以分层方式进行的，顶层通用服务器被称为**根服务器**。DNS服务器不仅包含将主机名转换为IP的注册表或条目，还包括有关发送电子邮件时要使用的邮件服务器、安全验证详细信息、反向条目等信息。此外，DNS服务器还可以通过为某些域返回无效IP来阻止对服务的访问，或者通过使用比ISP提供的更快的DNS服务器来加快互联网导航速度。当域名注册时，在根表中为该域创建一个新条目，指向DNS服务器。这将负责该域的解析，并且稍后，这些条目将在互联网上进行填充和缓存，以加快解析速度。
- en: If we want to modify the DNS servers defined for a connection, remember to use
    `nmcli con mod NAME ipv4.dns IP` (or IPv6 equivalent) and use a `+` symbol beforehand,
    as in `+ipv4.dns`, to add a new entry to the list of DNS servers. Any manual changes
    that are to `resolv.conf` might be overwritten.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想修改连接定义的DNS服务器，记得使用`nmcli con mod NAME ipv4.dns IP`（或IPv6等效），并在之前使用`+`符号，如`+ipv4.dns`，以将新条目添加到DNS服务器列表中。对`resolv.conf`的任何手动更改可能会被覆盖。
- en: Now that we have learned about how DNS works and how our system uses it, let's
    look at how to secure system network access.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了DNS的工作原理以及我们的系统如何使用它，让我们看看如何保护系统网络访问。
- en: Overview of firewall configuration
  id: totrans-228
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 防火墙配置概述
- en: When a system is connected to a network, many of the services running can be
    reached from other systems. That is the goal behind having systems connected.
    However, we also want to keep systems secure and away from unauthorized usage.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 当系统连接到网络时，许多正在运行的服务可以从其他系统访问。这是连接系统的目标。然而，我们也希望保持系统安全，远离未经授权的使用。
- en: A **firewall** is a software layer that sits between the network cards and the
    services and allows us to fine-tune what is allowed or not.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: '**防火墙**是一种软件层，位于网络卡和服务之间，允许我们对允许或不允许的内容进行微调。'
- en: We cannot completely block all the incoming connections to our system as often,
    the incoming connection is a response from a request that our system made.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 我们无法完全阻止所有传入连接到我们的系统，因为经常传入连接是我们的系统发出的请求的响应。
- en: The connections are blocked via a kernel framework named `iptables`, `ip6tables`,
    `ebtables`, and `arptables`.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 连接是通过名为`iptables`、`ip6tables`、`ebtables`和`arptables`的内核框架来阻止的。
- en: Important note
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 重要说明
- en: As we explained earlier in regard to network configuration, a bad configuration
    in a firewall can lock you out of the system, so be extremely careful when you're
    setting some restrictive rules so that you can log into the system again if you
    are remotely accessing it.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前在网络配置方面解释的那样，防火墙中的错误配置可能会将您锁在系统外，因此在设置一些限制性规则时一定要非常小心，以便在远程访问系统时可以重新登录系统。
- en: '`firewalld` package, which should be included in a base installation. It will
    provide the `firewall-cmd` command once installed for interacting with the service.'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: '`firewalld`软件包应该包含在基本安装中。一旦安装，它将提供`firewall-cmd`命令与服务进行交互。'
- en: firewalld uses the concept of zones, which allows us to predefine a set of rules
    for each of those zones. These can also be assigned to network connections. This
    is more relevant, for example, for laptops that might be roaming across connections,
    and they might have some default settings for when you're using home or corporate
    connections. However, they will default to a more secure one when you're using
    Wi-Fi from a cafeteria.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: firewalld使用区域的概念，允许我们为每个区域预定义一组规则。这些也可以分配给网络连接。例如，对于可能在连接之间漫游的笔记本电脑，当您使用家庭或公司连接时，可能更相关，而当您使用来自咖啡厅的Wi-Fi时，它们将默认为更安全的设置。
- en: firewalld also uses predefined services so that the firewall knows what ports
    and protocols should enable based on the services and zones they have been enabled
    on.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: firewalld还使用预定义的服务，以便防火墙知道应该基于已启用的服务和区域来启用哪些端口和协议。
- en: 'Let''s check out the available zones and some more details about the home zone:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看可用的区域以及有关家庭区域的更多详细信息：
- en: '![Figure 6.15 – Available zones and configuration for the zone home'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.15 - 可用区域和家庭区域的配置'
- en: '](img/B16799_06_015.jpg)'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_06_015.jpg)'
- en: Figure 6.15 – Available zones and configuration for the zone home
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.15 - 可用区域和家庭区域的配置
- en: 'As we can see, several zones have been defined:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，已定义了几个区域：
- en: '`public`: This is the default zone for newly added interfaces. It allows us
    to cockpit SSH and DHCP clients and rejects all incoming traffic not related to
    the outgoing traffic.'
  id: totrans-243
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`public`：这是新添加接口的默认区域。它允许我们使用cockpit SSH和DHCP客户端，并拒绝与传出流量无关的所有传入流量。'
- en: '`block`: Rejects all incoming traffic unless it''s related to outgoing traffic.'
  id: totrans-244
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`block`：拒绝所有传入流量，除非与传出流量相关。'
- en: '`dmz`: Rejects all incoming traffic unless it''s related to outgoing or SSH
    connections.'
  id: totrans-245
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dmz`：拒绝所有传入流量，除非与传出或SSH连接相关。'
- en: '`drop`: Drops all incoming packets that are not related to outgoing ones (not
    even ping).'
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`drop`：丢弃所有与传出流量无关的传入数据包（甚至不是ping）。'
- en: '`external`: Blocks all incoming traffic except that related to outgoing traffic.
    It also allows SSH and it masquerades traffic as originating from this interface.'
  id: totrans-247
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`external`：阻止所有传入流量，除了与传出流量相关的流量。它还允许SSH，并将流量伪装为来自此接口的流量。'
- en: '`home`: In addition to public, its allows `smb` and `mdns`.'
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`home`：除了public，还允许`smb`和`mdns`。'
- en: '`internal`: Based on the home zone.'
  id: totrans-249
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`internal`：基于家庭区域。'
- en: '`trusted`: Allows all incoming traffic.'
  id: totrans-250
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`trusted`：允许所有传入流量。'
- en: '`work`: Blocks all incoming traffic except that related to outgoing or SSH/cockpit/DHCP
    traffic.'
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`work`：阻止所有传入流量，除了与传出或SSH/cockpit/DHCP流量相关的流量。'
- en: Next, we'll learn how to use those zones when we're configuring the firewall.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将学习如何在配置防火墙时使用这些区域。
- en: Configuring the firewall
  id: totrans-253
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置防火墙
- en: 'As shown in the introduction to this section, a firewall can be configured
    via the `firewall-cmd` command (as well as the cockpit web interface, which was
    described earlier in this book on [*Chapter 4*](B16799_04_Final_Sk_ePub.xhtml#_idTextAnchor059),
    *Tools for Regular Operations*). The most common command options that are used
    are as follows:'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 正如本节介绍中所示，防火墙可以通过`firewall-cmd`命令进行配置（以及在[*第4章*](B16799_04_Final_Sk_ePub.xhtml#_idTextAnchor059)中早些时候在本书中描述的cockpit
    web界面）。最常用的命令选项如下：
- en: '`firewall-cmd --get-zones`: Lists the available zones.'
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`firewall-cmd --get-zones`：列出可用的区域。'
- en: '`firewall-cmd --get-active-zones`: List the active zones and interfaces that
    have been assigned.'
  id: totrans-256
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`firewall-cmd --get-active-zones`：列出已分配的活动区域和接口。'
- en: '`firewall-cmd --list-all`: Dumps the current configuration.'
  id: totrans-257
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`firewall-cmd --list-all`：转储当前配置。'
- en: '`firewall-cmd --add-service`: Adds a service to the current zone.'
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`firewall-cmd --add-service`：将服务添加到当前区域。'
- en: '`firewall-cmd --add-port`: Adds a port/protocol to the current zone.'
  id: totrans-259
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`firewall-cmd --add-port`：将端口/协议添加到当前区域。'
- en: '`firewall-cmd --remove-service`: Removes the service from the current zone.'
  id: totrans-260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`firewall-cmd --remove-service`：从当前区域中移除服务。'
- en: '`firewall-cmd --remove-port`: Removes the port/protocol from the current zone.'
  id: totrans-261
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`firewall-cmd --remove-port`：从当前区域中移除端口/协议。'
- en: Important note
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: Note that you need to mention the port number and service name after the preceding
    commands to add or remove a service/port.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在上述命令之后，您需要提到端口号和服务名称以添加或删除服务/端口。
- en: '`firewall-cmd --reload`: Reloads the configuration from the saved data, thus
    discarding the runtime configuration.'
  id: totrans-264
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`firewall-cmd --reload`：从保存的数据重新加载配置，从而丢弃运行时配置。'
- en: '`firewall-cmd –get-default-zone`: Gets the default zone.'
  id: totrans-265
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`firewall-cmd –get-default-zone`：获取默认区域。'
- en: '`firewall-cmd --set-default-zone`: Defines the default zone to use.'
  id: totrans-266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`firewall-cmd --set-default-zone`：定义要使用的默认区域。'
- en: For example, when we install an HTTP server in our system (for serving web pages),
    port `80` on TCP must be enabled.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，当我们在系统中安装HTTP服务器（用于提供网页）时，必须启用TCP端口`80`。
- en: 'Let''s try this in our sample system by installing, running, and opening the
    HTTP port:'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在示例系统中尝试安装、运行和打开HTTP端口：
- en: '[PRE3]'
  id: totrans-269
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The last command will make a petition to the local `http` server to grab the
    results. If you have access to an additional system, you can try to connect to
    the IP of the server that we have been using to watch the default web page be
    served by the system.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一个命令将向本地`http`服务器发出请求以获取结果。如果您可以访问其他系统，可以尝试连接到我们一直在使用的服务器的IP，以查看系统提供的默认网页。
- en: 'In the following screenshot, we can see the output of the `curl localhost`
    command:'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的屏幕截图中，我们可以看到`curl localhost`命令的输出：
- en: '![Figure 6.16 – Output of curl when requesting the web page hosted by our system'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.16 - 请求由我们的系统托管的网页的curl输出'
- en: '](img/B16799_06_016.jpg)'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_06_016.jpg)'
- en: Figure 6.16 – Output of curl when requesting the web page hosted by our system
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.16 - 请求由我们的系统托管的网页的curl输出
- en: At this point, we have reviewed how to configure some basic firewall rules,
    so we are ready to check the network's connectivity.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经审查了如何配置一些基本的防火墙规则，所以我们准备检查网络的连通性。
- en: Testing network connectivity
  id: totrans-276
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试网络连通性
- en: In the previous sections, we were interacting with network interfaces, addresses,
    and firewall rules that define, limit, or allow connections to our system. In
    this section, we will review some of the basic tools that can be used to validate
    that network connectivity exists.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的章节中，我们正在与网络接口、地址和防火墙规则进行交互，这些规则定义、限制或允许连接到我们的系统。在本节中，我们将回顾一些基本工具，用于验证网络连接是否存在。
- en: Note that the following commands assume that the firewall is not set to strict
    mode and that we can use the **Internet Control Message Protocol** (**ICMP**)
    to reach the servers hosting the service. In secured networks, the service might
    be working but not answering to ping – it may only be answering the service queries
    themselves.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，以下命令假定防火墙未设置为严格模式，并且我们可以使用**Internet控制消息协议**（**ICMP**）来访问托管服务的服务器。在安全网络中，服务可能正在运行，但不会回答ping
    - 它可能只会回答服务查询本身。
- en: 'There are several commands that we can use here, so consider these suggestions
    for diagnosing issues:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在这里使用几个命令，因此请考虑以下建议来诊断问题：
- en: Check the local interface's IP address, netmask, and gateway.
  id: totrans-280
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查本地接口的IP地址、子网掩码和网关。
- en: Use the `ping` command with the IP address of the gateway to validate the proper
    network configuration.
  id: totrans-281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`ping`命令和网关的IP地址验证正确的网络配置。
- en: Use the `ping` command to ping the DNS servers in `/etc/resolv.conf` to see
    if those are reachable. Alternatively, use the `host` or `dig` command to query
    the DNS servers.
  id: totrans-282
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`ping`命令对`/etc/resolv.conf`中的DNS服务器进行ping，以查看是否可达。或者，使用`host`或`dig`命令查询DNS服务器。
- en: If there's supposedly external network connectivity, try to reach external DNS
    servers such as `8.8.8.8` or `1.1.1.1` or use `curl` or `wget` to request some
    of the web pages of known services; for example, `curl nasa.gov`.
  id: totrans-283
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果据说有外部网络连接，请尝试访问外部DNS服务器，如`8.8.8.8`或`1.1.1.1`，或使用`curl`或`wget`请求一些已知服务的网页；例如，`curl
    nasa.gov`。
- en: This should give you a rough idea of where a problem might be, based on how
    far you reach into the tests. Remember that there are other tools, such as `tracepath`,
    that will show the hops a TCP packet does before reaching the destination. The
    man pages for each command will give you hints and examples on their usage.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该让您对问题可能出在哪有一个大概的想法，根据您在测试中达到的距离。请记住，还有其他工具，比如`tracepath`，它将显示TCP数据包在到达目的地之前经过的跳数。每个命令的man页面将为您提供有关其用法的提示和示例。
- en: 'In the following screenshot, you can see the output of `tracepath` against
    one web server:'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的屏幕截图中，您可以看到针对一个Web服务器的`tracepath`的输出：
- en: '![Figure 6.17 – The output of the tracepath command against the University
    of Valencia, Spain web server'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.17 - 对西班牙瓦伦西亚大学网站的tracepath命令的输出'
- en: '](img/B16799_06_17.jpg)'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_06_17.jpg)'
- en: Figure 6.17 – The output of the tracepath command against the University of
    Valencia, Spain web server
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.17 - 对西班牙瓦伦西亚大学网站的tracepath命令的输出
- en: As we can see, there were 11 steps that were performed across different servers
    until our data package reached the destination host. This allowed us to learn
    about how a package traverses the internet to reach target systems.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所看到的，跨越不同服务器执行了11个步骤，直到我们的数据包到达目的地主机。这使我们了解了数据包如何穿越互联网到达目标系统。
- en: Summary
  id: totrans-290
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we learned about configuring network interfaces using different
    approaches, either via manual interaction or via methods that allow us to script
    or automate the configuration.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了使用不同方法配置网络接口，可以通过手动交互或通过允许我们脚本或自动配置的方法。
- en: Some troubleshooting for network issues was also introduced to help us find
    some of the basic errors that might occur.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 还介绍了一些用于帮助我们找到一些基本错误的网络问题的故障排除方法。
- en: As we mentioned in this chapter's introduction, networking is the basis for
    our system to reach other services and to provide services to other systems. We
    also introduced the idea of more complex network setups that fall outside the
    scope of this RHCSA level, but it's interesting to at least be familiar with the
    keywords that we'll be using in our career.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在本章的介绍中提到的，网络是我们的系统到达其他服务并向其他系统提供服务的基础。我们还介绍了更复杂的网络设置的概念，超出了RHCSA级别的范围，但至少熟悉我们职业生涯中将要使用的关键词是有趣的。
- en: In the next chapter, we will cover some important topics related to security
    such as adding, patching, and managing the software in our systems.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将涵盖一些与安全相关的重要主题，例如在我们的系统中添加、打补丁和管理软件。
