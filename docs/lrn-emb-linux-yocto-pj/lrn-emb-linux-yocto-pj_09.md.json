["```\ngit clone http://git.yoctoproject.org/git/swabber\n\n```", "```\ntree swabber/\nswabber/\n\u251c\u2500\u2500 BUGS\n\u251c\u2500\u2500 canonicalize.c\n\u251c\u2500\u2500 canonicalize.h\n\u251c\u2500\u2500 COPYING\n\u251c\u2500\u2500 detect_distro\n\u251c\u2500\u2500 distros\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 Fedora\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 whitelist\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 generic\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 blacklist\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 filters\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 whitelist\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 Ubuntu\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 blacklist\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 filters\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 whitelist\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 Windriver\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 whitelist\n\u251c\u2500\u2500 dump_blob.c\n\u251c\u2500\u2500 lists.c\n\u251c\u2500\u2500 lists.h\n\u251c\u2500\u2500 load_distro.c\n\u251c\u2500\u2500 Makefile\n\u251c\u2500\u2500 packages.h\n\u251c\u2500\u2500 README\n\u251c\u2500\u2500 swabber.c\n\u251c\u2500\u2500 swabber.h\n\u251c\u2500\u2500 swabprof.c\n\u251c\u2500\u2500 swabprof.in\n\u251c\u2500\u2500 swab_testf.c\n\u251c\u2500\u2500 update_distro\n\u251c\u2500\u2500 wandering.c\n\u2514\u2500\u2500 wandering.h\n\n5 directories, 28 files\n\n```", "```\nUbuntu-distro-test/\n\u251c\u2500\u2500 distro\n\u251c\u2500\u2500 distro.blob\n\u251c\u2500\u2500 md5\n\u2514\u2500\u2500 packages\n\n```", "```\nstrace -o logs/Ubuntu-distro-test-logs.log -e trace=open,execve -f pwd\n./swabber -v -v -c all -l logs/ -o required.txt -r extra.txt -d Ubuntu-distro-test/ ~ /tmp/\n\n```", "```\nUsage: swabber [-v] [-v] [-a] [-e]\n -l <logpath> ] -o <outputfile> <filter dir 1> <filter dir 2> ...\n\n Options:\n -v: verbose, use -v -v for more detail\n -a: print progress (not implemented)\n -l <logfile>: strace logfile or directory of log files to read\n -d <distro_dir>: distro directory\n -n <distro_name>: force the name of the distribution\n -r <report filename>: where to dump extra data (leave empty for stdout)\n -t <global_tag>: use one tag for all packages\n -o <outputfile>: file to write output to\n -p <project_dir>: directory were the build is being done\n -f <filter_dir>: directory where to find filters for whitelist,\n blacklist, filters\n -c <task1>,<task2>...: perform various tasks, choose from:\n error_codes: show report of files whose access returned an error\n whitelist: remove packages that are in the whitelist\n blacklist: highlight packages that are in the blacklist as\n being dangerous\n file_detail: add file-level detail when listing packages\n not_in_distro: list host files that are not in the package\n database\n wandering: check for the case where the build searches for a\n file on the host, then finds it in the project.\n all: all the above\n\n```", "```\ngenext2fs -b $ROOTFS_SIZE ... ${IMAGE_NAME}.rootfs.ext3\ntune2fs -j ${DEPLOY_DIR_IMAGE}/${IMAGE_NAME}.rootfs.ext3\n\n```", "```\nimage_types_foo.bbclass:\n  IMAGE_CMD_bar = \"some shell commands\"\n  IMAGE_CMD_baz = \"some more shell commands\"\n```", "```\nfoo-default-settings.inc\n  IMAGE_CLASSES += \"image_types_foo\"\n```", "```\nmeta-fsl-arm/imx23evk.conf\n  include conf/machine/include/mxs-base.inc\n  SDCARD_ROOTFS ?= \"${DEPLOY_DIR_IMAGE}/${IMAGE_NAME}.rootfs.ext3\"\n  IMAGE_FSTYPES ?= \"tar.bz2 ext3 uboot.mxsboot-sdcard sdcard\"\n```", "```\ninherit image_types\n  IMAGE_CMD_uboot.mxsboot-sdcard = \"mxsboot sd ${DEPLOY_DIR_IMAGE}/u-boot-${MACHINE}.${UBOOT_SUFFIX} \\\n${DEPLOY_DIR_IMAGE}/${IMAGE_NAME}.rootfs.uboot.mxsboot-sdcard\"\n```", "```\ndef pre():\n    free-form python or named 'plugin' commands\n\n  clearpart commands\n  part commands\n  bootloader commands\n  named 'plugin' commands\n\n  def post():\n    free-form python or named 'plugin' commands  \n```", "```\ntree scripts/lib/image/canned-wks/\nscripts/lib/image/canned-wks/\n\u251c\u2500\u2500 directdisk.wks\n\u251c\u2500\u2500 mkefidisk.wks\n\u251c\u2500\u2500 mkgummidisk.wks\n\u2514\u2500\u2500 sdimage-bootpart.wks\n```", "```\n               +-------------+\n               |web interface|\n               +-------------+\n                      |\n                      v\n                  +--------+\n            +---->|database|\n            |     +--------+\n            |\n+-----------+------[worker]-------------+\n|           |                           |\n|  +----------------+     +----------+  |\n|  |scheduler daemon|---\u2192 |dispatcher|  |\n|  +----------------+     +----------+  |\n|                              |        |\n+------------------------------+--------+\n                               |\n                               V\n                     +-------------------+\n                     | device under test |\n                     +-------------------+\n```", "```\nsudo apt-get install lava-dev\ngit clone http://git.linaro.org/git/lava/lava-server.git\ncd lava-server\n/usr/share/lava-server/debian-dev-build.sh lava-server\n\ngit clone http://git.linaro.org/git/lava/lava-dispatcher.git\ncd lava-dispatcher\n/usr/share/lava-server/debian-dev-build.sh lava-dispatcher\n\n```", "```\nsudo add-apt-repository \"deb http://archive.ubuntu.com/ubuntu $(lsb_release -sc) universe\"\nsudo apt-get update\nsudo add-apt-repository \"deb http://people.linaro.org/~neil.williams/lava jessie main\"\nsudo apt-get update\n\nsudo apt-get install postgresql\nsudo apt-get install lava\nsudo a2dissite 000-default\nsudo a2ensite lava-server.conf\nsudo service apache2 restart\n\n```"]