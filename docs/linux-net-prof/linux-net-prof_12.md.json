["```\nsudo apt-get install freeradius\n```", "```\nclient sw-core01 {\n\u00a0\u00a0\u00a0ipaddr=192.168.122.9\n\u00a0\u00a0\u00a0nastype = cisco\n\u00a0\u00a0\u00a0secret = 7HdRRTP8qE9T3Mte\n}\nclient sw-office01 {\n\u00a0\u00a0\u00a0ipaddr=192.168.122.5\n\u00a0\u00a0\u00a0nastype = cisco\n\u00a0\u00a0\u00a0secret = SzMjFGX956VF85Mf\n}\nclient sw-floor0 {\n\u00a0\u00a0\u00a0ipaddr = 192.168.122.6\n\u00a0\u00a0\u00a0nastype = cisco\n\u00a0\u00a0\u00a0secret = Rb3x5QW9W6ge6nsR\n}\nclient vwlc01 {\n\u00a0\u00a0\u00a0ipaddr = 192.168.122.8\n\u00a0\u00a0\u00a0nastype = cisco\n\u00a0\u00a0\u00a0secret = uKFJjaBbk2uBytmD\n}\n```", "```\nClient 192.168.0.0/16 {\n```", "```\ntestaccount\u00a0\u00a0Cleartext-Password := \"Test123\"\n```", "```\nsudo service freeradius restart\n```", "```\nsudo freeradius \u2013CX\n```", "```\n$ echo \"User-Name=testaccount,User-Password=Test123\" | radclient localhost:1812 auth testing123\nSent Access-Request Id 31 from 0.0.0.0:34027 to 127.0.0.1:1812 length 44\nReceived Access-Accept Id 31 from 127.0.0.1:1812 to 127.0.0.1:34027 length 20\n```", "```\n$ sudo apt-get install freeradius-ldap\n```", "```\n$ sudo mkdir /usr/share/ca-certificates/extra\n```", "```\n$ sudo cp publiccert.crt /usr/share/ca-certifiates/extra\n```", "```\n$ sudo dpkg-reconfigure ca-certificates\n```", "```\nldap {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0server = 'dc01.coherentsecurity.com'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0port = 636\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0# Login credentials for a special user for FreeRADIUS which has the required permissions\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0identity = ldapuser@coherentsecurity.com\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0password = <password>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0base_dn = 'DC=coherentsecurity,DC=com'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0user {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0# Comment out the default filter which uses uid and replace that with samaccountname\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0#filter = \"(uid=%{%{Stripped-User-Name}:-%{User-Name}})\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0filter = \"(samaccountname=%{%{Stripped-User-Name}:-%{User-Name}})\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0tls {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ca_file = /usr/share/ca-certificates/extra/publiccert.crt\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0pap\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (noop && User-Password) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0update control {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Auth-Type := LDAP\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n```", "```\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ldap\n```", "```\n$ sudo freeradius -cx\n```", "```\n$ sudo freeradius \u2013X\n```", "```\n$ sudo service freeradius restart\n```", "```\n$ echo \"User-Name=test,User-Password=P@ssw0rd!\" | radclient localhost:1812 auth testing123\n```", "```\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0group {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0base_dn = \"${..base_dn}\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0filter = '(objectClass=Group)'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name_attribute = cn\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0membership_filter = \"(|(member=%{control:${..user_dn}})(memberUid=%{%{Stripped-User-Name}:-%{User-Name}}))\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0membership_attribute = 'memberOf'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cacheable_name = 'no'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cacheable_dn = 'no'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n```", "```\n$ sudo apt list --installed | grep samba\nWARNING: apt does not have a stable CLI interface. Use with caution in scripts.\nsamba-libs/focal-security,now 2:4.11.6+dfsg-0ubuntu1.6 amd64 [installed,upgradable to: 2:4.11.6+dfsg-0ubuntu1.8]\n```", "```\n sudo apt-get install samba\n```", "```\nwinbind with sudo apt-get install winbind.\n```", "```\n[global]\n\u00a0\u00a0\u00a0workgroup = COHERENTSEC\n\u00a0\u00a0\u00a0\u00a0security = ADS\n\u00a0\u00a0\u00a0\u00a0realm = COHERENTSECURITY.COM\n\u00a0\u00a0\u00a0\u00a0winbind refresh tickets = Yes\n\u00a0\u00a0\u00a0\u00a0winbind use default domain = yes\n\u00a0\u00a0\u00a0\u00a0vfs objects = acl_xattr\n\u00a0\u00a0\u00a0\u00a0map acl inherit = Yes\n\u00a0\u00a0\u00a0\u00a0store dos attributes = Yes \n\u00a0\u00a0\u00a0\u00a0dedicated keytab file = /etc/krb5.keytab\n\u00a0\u00a0\u00a0\u00a0kerberos method = secrets and keytab\n[homes]\n\u00a0\u00a0\u00a0\u00a0comment = Home Directories\n\u00a0\u00a0\u00a0\u00a0browseable = no\n\u00a0\u00a0\u00a0\u00a0writeable=yes\n```", "```\n[logging]\n default = FILE:/var/log/krb5libs.log\n kdc = FILE:/var/log/krb5kdc.log\n admin_server = FILE:/var/log/kadmind.log\n[libdefaults]\n default_realm = COHERENTSECURITY.COM\n dns_lookup_realm = false\n dns_lookup_kdc = false\n[realms]\n COHERENTSECURITY.COM = {\n\u00a0\u00a0kdc = dc01.coherentsecurity.com:88\n\u00a0\u00a0admin_server = dc01.coherentsecurity.com:749\n\u00a0\u00a0kpaswordserver = dc01.coherentsecurity.com\n\u00a0\u00a0default_domain = COHERENTSECURITY.COM\n }\n[domain_realm]\n .coherentsecurity.com = coherentsecurity.com\n[kdc]\n\u00a0\u00a0profile = /var/kerberos/krb5kdc/kdc.conf\n[appdefaults]\n pam = {\n\u00a0\u00a0debug = false\n\u00a0\u00a0ticket_lifetime = 36000\n\u00a0\u00a0renew_lifetime = 36000\n\u00a0\u00a0forwardable = true\n\u00a0\u00a0krb4_convert = false\n }\n```", "```\npasswd:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0files systemd winbind\ngroup:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0files systemd winbind\nshadow:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0files winbind\nprotocols:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0db files winbind\nservices:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0db files winbind\nnetgroup:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0nis winbind\nautomount:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0files winbind\n```", "```\n# net ads join \u2013U Administrator\n```", "```\n# systemctl restart smbd windbind\n```", "```\n$ sudo ps \u2013e | grep smbd\n$ sudo ps \u2013e | grep nmbd\n```", "```\n$ sudo service smbd status\n$ sudo service nmbd status\n```", "```\n$ wbinfo -u\nCOHERENTSEC\\administrator\nCOHERENTSEC\\guest\nCOHERENTSEC\\ldapuser\nCOHERENTSEC\\test\n\u2026.\n$ wbinfo -g\nCOHERENTSEC\\domain computers\nCOHERENTSEC\\domain controllers\nCOHERENTSEC\\schema admins\nCOHERENTSEC\\enterprise admins\nCOHERENTSEC\\cert publishers\nCOHERENTSEC\\domain admins\n\u2026\n```", "```\ndig +short _ldap._tcp.coherentsecurity.com SRV\n0 100 389 dc01.coherentsecurity.com.\n```", "```\nwbinfo -a administrator%Passw0rd!\nplaintext password authentication failed\n# ntlm_auth \u2013-request-nt-key \u2013-domain=coherentsecurity.com --username=Administrator\nPassword:\nNT_STATUS_OK: The operation completed successfully. (0x0)\n```", "```\nchap {\n\u00a0\u00a0\u00a0\u00a0with_ntdomain_hack = yes\n}\n```", "```\nntlm_auth = \"/usr/bin/ntlm_auth --request-nt-key --username=%{%{Stripped-User-Name}:-%{%{User-Name}:-None}} --challenge=%{%{mschap:Challenge}:-00} --nt-response=%{%{mschap:NT-Response}:-00} --domain=%{mschap:NT-Domain}\"\n```", "```\n--username=%{%{mschap:User-Name}:-00}\n```", "```\neap {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0default_eap_type = peap\n}\ntls-config tls-common {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0random_file = /dev/urandom\n}\n```", "```\nif(&NAS-IP-Address == \"192.168.122.20\") {\n\u00a0\u00a0\u00a0\u00a0if(Service-Type == Administrative && LDAP-Group == \"Network Admins\") {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0update reply {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Cisco-AVPair = \"shell:priv-lvl=15\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0} \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0accept\n\u00a0\u00a0\u00a0\u00a0} \n\u00a0\u00a0\u00a0\u00a0elsif (Service-Type == \"Authenticate-Only\" && LDAP-Group == \"VPN Users\" ) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0accept\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0elsif {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0reject\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```\nclient hqfw01 {\n\u00a0\u00a0ipaddr = 192.168.122.1\n\u00a0\u00a0vendor = cisco\n\u00a0\u00a0secret = pzg64yr43njm5eu\n}\n```", "```\n! create a AAA Group called \"RADIUS\" that uses the protocol RADIUS\naaa-server RADIUS protocol radius\n! next, create servers that are members of this group\naaa-server RADIUS (inside) host <RADIUS Server IP 01>\n key <some key 01>\n radius-common-pw <some key 01>\n no mschapv2-capable\n acl-netmask-convert auto-detect\naaa-server RADIUS (inside) host <RADIUS Server IP 02>\n key <some key 02>\n radius-common-pw <some key 02>\n no mschapv2-capable\n acl-netmask-convert auto-detect\n```", "```\ntunnel-group VPNTUNNELNAME general-attributes\n authentication-server-group RADIUS\n default-group-policy VPNPOLICY\n```", "```\naaa authentication enable console RADIUS LOCAL\naaa authentication http console RADIUS LOCAL\naaa authentication ssh console RADIUS LOCAL\naaa accounting enable console RADIUS\naaa accounting ssh console RADIUS\naaa authentication login-history\n```", "```\nradius server RADIUS01\n\u00a0\u00a0\u00a0\u00a0address ipv4 <radius server ip 01> auth-port 1812 acct-port 1813\n\u00a0\u00a0\u00a0\u00a0key <some key>\nradius server RADIUS02\n\u00a0\u00a0\u00a0\u00a0address ipv4 <radius server ip 02> auth-port 1812 acct-port 1813\n\u00a0\u00a0\u00a0\u00a0key <some key>\naaa group server radius RADIUSGROUP\n\u00a0\u00a0\u00a0\u00a0server name RADIUS01\n\u00a0\u00a0\u00a0\u00a0server name RADIUS02\nip radius source-interface <Layer 3 interface name>\naaa new-model\naaa authentication login RADIUSGROUP group radius local\naaa authorization exec RADIUSGROUP group radius local\naaa authorization network RADIUSGROUP group radius local\nline vty 0 97\n ! restricts access to a set of trusted workstations or subnets\n access-class ACL-MGT in\n login authentication RADIUSG1\n transport input ssh\n```", "```\nradius-server host <server ip> key <some key 01>\naaa server-group radius \"RADIUSG1\" host <server ip 01>\n! optional RADIUS and AAA parameters\nradius-server dead-time 5\nradius-server timeout 3\nradius-server retransmit 2\naaa authentication num-attempts 3\naaa authentication ssh login radius server-group \"RADIUSG1\" local\naaa authentication ssh enable radius server-group \"RADIUSG1\" local\n```", "```\nradius server RADIUS01\n\u00a0\u00a0\u00a0\u00a0address ipv4 <radius server ip 01> auth-port 1812 acct-port 1813\n\u00a0\u00a0\u00a0\u00a0key <some key>\nradius server RADIUS02\n\u00a0\u00a0\u00a0\u00a0address ipv4 <radius server ip 02> auth-port 1812 acct-port 1813\n\u00a0\u00a0\u00a0\u00a0key <some key>\naaa group server radius RADIUSGROUP\n\u00a0\u00a0\u00a0\u00a0server name RADIUS01\n\u00a0\u00a0\u00a0\u00a0server name RADIUS02\n! enable dot1x authentication for all ports by default\ndot1x system-auth-control\n! set up RADIUS Authentication and Accounting for Network Access\naaa authentication dot1x default group RADIUSGROUP\naaa accounting dot1x default start-stop group RADIUSGROUP\n```", "```\n$ sudo apt-get install libpam-google-authenticator -y\n```", "```\n# Instruct FreeRADIUS to use PAM to authenticate users\nDEFAULT Auth-Type := PAM\n$ sudo vi /etc/freeradius/3.0/sites-enabled/default\n```", "```\n#\u00a0\u00a0Pluggable Authentication Modules.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0pam\n```", "```\n#@include common-auth\n#@include common-account\n#@include common-password\n#@include common-session\nauth requisite pam_google_authenticator.so forward_pass secret=/etc/freeradius/${USER}/.google_authenticator user=<freeraduser>\nauth required pam_unix.so use_first_pass\n```"]