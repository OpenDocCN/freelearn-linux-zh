["```\n#!/bin/sh\n#\n# 5/23/2017\n#\necho \"script1 - Linux Scripting Book\"\nwhile [ true ]\ndo\n  date\n  sleep 1d\ndone\necho \"End of script1\"\nexit 0\n```", "```\n#!/bin/sh\n#\n# 5/23/2017\n#\necho \"script2 - Linux Scripting Book\"\nwhile [ true ]\ndo\n # Run at 3 am\n date | grep -q 03:00:\n rc=$?\n if [ $rc -eq 0 ] ; then\n  echo \"Run commands here.\"\n  date\n fi\n sleep 60                   # sleep 60 seconds\ndone\necho \"End of script2\"\nexit 0\n```", "```\n  guest1 $ date\n  Fri May 19 15:11:54 HST 2017\n```", "```\n#!/bin/sh\n#\n# 5/23/2017\n#\necho \"script3 - Linux Scripting Book\"\nFN=/tmp/log1.txt             # log file\nwhile [ true ]\ndo\n  echo Pinging $PROVIDER\n  ping -c 1 $PROVIDER\n  rc=$?\n  if [ $rc -ne 0 ] ; then\n    echo Cannot ping $PROVIDER\n    date >> $FN\n    echo Cannot ping $PROVIDER >> $FN\n  fi\n  sleep 60\ndone\necho \"End of script3\"        # 60 seconds\nexit 0\n```", "```\n export PROVIDER=twc.com\n```", "```\n#!/bin/sh\n#\n# 5/23/2017\n#\necho \"Chapter 6 - Script 4\"\nnumusers=`who | wc -l`\nwhile [ true ]\ndo\n  currusers=`who | wc -l`           # get current number of users\n  if [ $currusers -gt $numusers ] ; then\n    echo \"Someone new has logged on!!!!!!!!!!!\"\n    date\n    who\n#   beep\n    numusers=$currusers\n  elif [ $currusers -lt $numusers ] ; then\n    echo \"Someone logged off.\"\n    date\n    numusers=$currusers\n  fi\n  sleep 1                    # sleep 1 second\ndone\n```", "```\n  currusers=`who | wc -l`           # get current number of users\n```", "```\nguest1 $ crontab -l\nno crontab for guest1\nguest1 $\n```", "```\n# this is the crontab file for guest1\n# min   hour   day of month  month  day of week       command\n# 0-59  0-23    1-31          1-12   0-6\n#                                    Sun=0 Mon=1 Tue=2 Wed=3 Thu=4 Fri=5 Sat=6\n```", "```\n  *     *      *      *      *                 date > /dev/pts/31\n```", "```\nguest1 $ crontab -e\ncrontab: installing new crontab\nguest1 $\n```", "```\n0   0    *   *   *   command            # run every day at midnight\n0   3    *   *   *   command            # run every day at 3 am\n30  9    1   *   *   command            # run at 9:30 am on the first of the month\n45  14   *   *   0   command            # run at 2:45 pm on Sundays\n0   0    25  12  *   command            # run at midnight on my birthday\n```", "```\n*   *    *   *   *   echo $PATH > /dev/pts/31    # check the PATH\n```", "```\n/usr/bin:/bin\n```", "```\n*   *    *   *   *    source $HOME/.bashrc;  echo $PATH > /dev/pts/31    # check the PATH\n```", "```\nexport EDITOR=/home/guest1/bin/kw\n```", "```\nguest1 ~/LinuxScriptingBook $ mkdir work\n```", "```\nguest1 ~/LinuxScriptingBook $ cd work\n```", "```\nguest1 ~/LinuxScriptingBook/work $ route > route.txt\nguest1 ~/LinuxScriptingBook/work $ ifconfig > ifconfig.txt\nguest1 ~/LinuxScriptingBook/work $ ls -la /usr > usr.txt\nguest1 ~/LinuxScriptingBook/work $ cp /etc/motd .      \n```", "```\nguest1 ~/LinuxScriptingBook/work $ ls -la\ntotal 24\ndrwxrwxr-x 2 guest1 guest1 4096 May 23 09:44 .\ndrwxr-xr-x 8 guest1 guest1 4096 May 22 15:18 ..\n-rw-rw-r-- 1 guest1 guest1 1732 May 23 09:44 ifconfig.txt\n-rw-r--r-- 1 guest1 guest1 1227 May 23 09:44 motd\n-rw-rw-r-- 1 guest1 guest1  335 May 23 09:44 route.txt\n-rw-rw-r-- 1 guest1 guest1  724 May 23 09:44 usr.txt\n```", "```\nguest1 ~/LinuxScriptingBook/work $ zip work1.zip *\n  adding: ifconfig.txt (deflated 69%)\n  adding: motd (deflated 49%)\n  adding: route.txt (deflated 52%)\n  adding: usr.txt (deflated 66%)\n```", "```\nguest1 ~/LinuxScriptingBook/work $ ls -la\ntotal 28\ndrwxrwxr-x 2 guest1 guest1 4096 May 23 09:45 .\ndrwxr-xr-x 8 guest1 guest1 4096 May 22 15:18 ..\n-rw-rw-r-- 1 guest1 guest1 1732 May 23 09:44 ifconfig.txt\n-rw-r--r-- 1 guest1 guest1 1227 May 23 09:44 motd\n-rw-rw-r-- 1 guest1 guest1  335 May 23 09:44 route.txt\n-rw-rw-r-- 1 guest1 guest1  724 May 23 09:44 usr.txt\n-rw-rw-r-- 1 guest1 guest1 2172 May 23 09:45 work1.zip\n```", "```\n zip [optional parameters] filename.zip list-of-files-to-include\n```", "```\n unzip filename.zip\n```", "```\n unzip -l filename.zip\n```", "```\n#!/bin/sh\n#\n# 5/23/2017\n#\necho \"script5 - Linux Scripting Book\"\nFN=work1.zip\ncd /tmp\nmkdir work 2> /dev/null      # suppress message if directory already exists\ncd work\ncp /etc/motd .\ncp /etc/issue .\nls -la /tmp > tmp.txt\nls -la /usr > usr.txt\nrm $FN 2> /dev/null          # remove any previous file\nzip $FN *\necho File \"$FN\" created.\n# cp to an external drive, and/or scp to another computer\necho \"End of script5\"\nexit 0\n```", "```\nguest1 /tmp/work $ crontab -l\n# this is the crontab file for guest1\n\n# min   hour   day of month  month  day of week       command\n# 0-59  0-23    1-31          1-12   0-6  Sun=0\n#                                Sun=0 Mon=1 Tue=2 Wed=3 Thu=4 Fri=5 Sat=6\n\n0 0 * * * /tmp/script5\n```", "```\nguest1 /tmp $ tar cvzf work1.gz work/\nwork/\nwork/motd\nwork/tmp.txt\nwork/issue\nwork/work1.zip\nwork/usr.txt\nguest1 /tmp $\n```", "```\nguest1 /home/guest1 $ tar xvzf /tmp/work1.gz\nwork/\nwork/motd\nwork/tmp.txt\nwork/issue\nwork/work1.zip\nwork/usr.txt\nguest1 /home/guest1 $\n```", "```\n /home/guest1\n /lewis\n /temp\n /root\n```", "```\nguest1 $ crontab -l\n# this is the crontab file for guest1\n# min   hour   day of month  month  day of week       command\n# 0-59  0-23    1-31          1-12   0-6  Sun=0\n#                                Sun=0 Mon=1 Tue=2 Wed=3 Thu=4 Fri=5 Sat=6\nTTY=/dev/pts/31\n\n 0  3   *  *  *  touch /tmp/runbackup-cron.txt\n```", "```\n#!/bin/sh\n#\n# runbackup1 - this version watches for file from crontab\n#\n# 6/3/2017 - mainlogs now under /data/mainlogs\n#\nVER=\"runbackup1 6/4/2017 A\"\nFN=/tmp/runbackup-cron.txt\nDR=/wd1                      # symbolic link to external drive\n\ntput clear\necho $VER\n\n# Insure backup drive is mounted\nfile $DR | grep broken\nrc=$?\nif [ $rc -eq 0  ] ; then\n echo \"ERROR: USB drive $DR is not mounted!!!!!!!!!!!!!!\"\n beep\n exit 255\nfi\n\ncd $LDIR/backup\n\nwhile [ true ]\ndo\n # crontab creates the file at 3 am\n\n if [ -f $FN ] ; then\n  rm $FN\n  echo Running backup1 ...\n  backup1 | tee /data/mainlogs/mainlog`date '+%Y%m%d'`.txt\n  echo $VER\n fi\n\n sleep 60                    # check every minute\ndone\n```", "```\n#!/bin/sh\n#   Jim's backup program\n#   Runs standalone\n#   Copies to /data/backups first, then to USB backup drive\nVER=\"File backup by Jim Lewis 5/27/2017 A\"\nTDIR=/data/backups\nRUNDIR=$LDIR/backup\nDR=/wd1\necho $VER\ncd $RUNDIR\n# Insure backup drive is mounted\nfile $DR | grep broken\na=$?\nif [ \"$a\" != \"1\" ] ; then\n echo \"ERROR: USB drive $DR is not mounted!!!!!!!!!!!!!!\"\n beep\n exit 255\nfi\ndate >> datelog.txt\ndate\necho \"Removing files from $TDIR\"\ncd \"$TDIR\"\nrc=$?\nif [ $rc -ne 0 ] ; then\n echo \"backup1: Error cannot change to $TDIR!\"\n exit 250\nfi\nrm *.gz\necho \"Backing up files to $TDIR\"\nX=`date '+%Y%m%d'`\ncd /\ntar cvzf \"$TDIR/lewis$X.gz\"  lewis\ntar cvzf \"$TDIR/temp$X.gz\"   temp\ntar cvzf \"$TDIR/root$X.gz\"   root\ncd /home\ntar cvzf \"$TDIR/guest$X.gz\" --exclude=Cache --exclude=.cache --exclude=.evolution --exclude=vmware --exclude=.thumbnails  --exclude=.gconf --exclude=.kde --exclude=.adobe  --exclude=.mozilla  --exclude=.gconf  --exclude=thunderbird  --exclude=.local --exclude=.macromedia  --exclude=.config   guest1\ncd $RUNDIR\nT=`cat filenum1`\nBACKDIR=$DR/backups/$T\nrm $BACKDIR/*.gz\ncd \"$TDIR\"\ncp *.gz $BACKDIR\necho $VER\ncd $BACKDIR\npwd\nls -lah\ncd $RUNDIR\nlet T++\nif [ $T -gt 7 ] ; then\n T=1\nfi\necho $T > filenum1\n```"]