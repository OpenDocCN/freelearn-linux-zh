["```\nchmod permissions filename/directory\n```", "```\nchmod -v u+x external.png\n```", "```\nchmod -v g+wx external.png\n```", "```\nchmod -v o-r external.png\n```", "```\nchmod -v a=rwx external.png\n```", "```\nchmod -v u=rw,g=r,o=x external.png\n```", "```\nchmod -v 761 new-file\n```", "```\nchown user:group filename/directory\n```", "```\nchown user filename/directory\n```", "```\nchgrp group filename/directory\n```", "```\n#\u00a0\u00a0This file controls the state of SELinux on the system.\n#\u00a0\u00a0SELINUX= can take one of these three values:\n#\u00a0\u00a0enforcing - SELinux security policy is enforced.\n#\u00a0\u00a0permissive - SELinux prints warnings instead of enforcing.\n#\u00a0\u00a0disabled - No SELinux policy is loaded.\nSELINUX=enforcing\n```", "```\n#\u00a0\u00a0SELINUXTYPE= can take one of these three values:\n#\u00a0\u00a0targeted - Targeted processes are protected,\n#\u00a0\u00a0minimum - Modification of targeted policy.\n#\u00a0\u00a0Only selected processes are protected.\n#\u00a0\u00a0mls - Multi Level Security protection.\nSELINUXTYPE=targeted\n```", "```\nsudo yum install setroubleshoot\n```", "```\nsudo systemctl reboot\n```", "```\nSELinux context on ports\n```", "```\nsystemctl status sshd | grep PID\n```", "```\nps -q <PID> -Z\n```", "```\nss -ltn sport eq 22 -Z\n```", "```\nsed -i 's/#Port 22/Port 44/' /etc/ssh/sshd_config\n```", "```\nsudo systemctl restart sshd\n```", "```\nJob for sshd.service failed because the control process exited with error code.\nSee systemctl status sshd.service and journalctl -xe for details.\n```", "```\nSELinux is preventing /usr/sbin/sshd from name_bind access\u00a0\u00a0\non the tcp_socket port 44.\n```", "```\njournalctl --identifier setroubleshoot\n```", "```\nFor complete SELinux messages run: sealert -l <audit id>\n```", "```\nIf you want to allow /usr/sbin/sshd to bind to network port 44\nThen you need to modify the port type.\nDo \n# semanage port -a -t PORT_TYPE -p tcp 44 \nwhere PORT_TYPE is one of the following: ssh_port_t, vnc_port_t, xserver_port_t.\n```", "```\nsepolicy network -a /usr/sbin/sshd \n```", "```\nsepolicy network -p 22 \n```", "```\nsepolicy manpage -a -p /usr/share/man/man8/ \nmandb\u00a0\u00a0\n```", "```\nsemanage port -a -t ssh_port_t -p tcp 44 \n```", "```\nIf you want to change the port on a SELinux system, you have to tell:\n# SELinux about this change. \n# semanage port -a -t ssh_port_t -p tcp #PORTNUMBER \n```", "```\nsudo yum install vsftpd ftp \n```", "```\nsudo mkdir -p /srv/ftp/pub \nchown -R ftp:ftp /srv/ftp \n```", "```\necho WELCOME > /srv/ftp/README \n```", "```\nanon_root=/srv/ftp \n```", "```\nsudo systemctl start vsftpd.service\nsudo systemctl status vsftpd.service\n```", "```\nftp localhost \n\nTrying ::1... \nConnected to localhost (::1). \n220 (vsFTPd 3.0.2) \nName (localhost:root): anonymous \n331 Please specify the password. \nPassword: \n230 Login successful. \nRemote system type is UNIX. \nUsing binary mode to transfer files. \nftp> ls \n229 Entering Extended Passive Mode (|||57280|). \n150 Here comes the directory listing. \n-rw-r--r-- 1 14 50 8 Jul 16 09:47 README \ndrwxr-xr-x 2 14 50 6 Jul 16 09:44 pub \n226 Directory send OK. \nTry to get the file:\u00a0\u00a0\nget README \n```", "```\nsemanage fcontext -l | grep /srv\u00a0\u00a0\n```", "```\n/srv/([^/]*/)?ftp(/.*)? all files system_u:object_r:public_content_t:s0 \n```", "```\nstat -c %C /srv/ftp/README \nls -Z /srv/ftp/README \n```", "```\nmkdir -m 2770 /srv/ftp/incoming \n\nchown -R ftp:ftp /srv/ftp/incoming \n```", "```\nls -dZ /srv/ftp/incoming \n\nsemanage fcontext -a -t public_content_rw_t \"/srv/ftp/incoming(/.*)?\" \n\nrestorecon -rv /srv/ftp/incoming \n\nls -dZ /srv/ftp/incoming \n```", "```\nftp> cd /incoming \n250 Directory successfully changed. \nftp> put /etc/hosts hosts \nlocal: /etc/hosts remote: hosts \n229 Entering Extended Passive Mode (|||12830|). \n550 Permission denied. \n```", "```\nSELinux is preventing vsftpd from write access on the directory ftp.\u00a0\u00a0\u00a0\n```", "```\nsetsebool -P allow_ftpd_anon_write 1 \n```", "```\nsemanage boolean --list | grep \"ftpd_anon_write\" \nsemanage boolean --modify ftpd_anon_write --on \n```", "```\nsudo apt install apparmor-utils apparmor-easyprof \\ \n\u00a0\u00a0apparmor-profiles apparmor-profiles-extra apparmor-easyprof \n```", "```\nsudo systemctl status apparmor \n```", "```\nsudo aa-enabled \n```", "```\nsudo apparmor_status \n```", "```\nsudo aa-status \n```", "```\nsudo apt install nginx \n```", "```\nsudo aa-autodep nginx \n```", "```\n/usr/sbin/nginx mr, \n```", "```\nsudo aa-enforce /usr/sbin/nginx \nsudo systemctl restart nginx \n```", "```\nsudo journalctl --identifier audit \n```", "```\nsudo journalctl -k | grep audit \n```", "```\nsudo aa-complain /usr/sbin/nginx \nsudo systemctl start nginx \n```", "```\ncurl http://127.0.0.1 \n```", "```\nsudo aa-logprof \n```", "```\nsudo aa-enforce /usr/sbin/nginx \nsudo systemctl restart nginx\ncurl http://127.0.0.1 \n```", "```\n#include <tunables/global> \n```", "```\n#include <abstractions/nameservice \n```", "```\n/usr/sbin/nginx flags=(complain) { \n #include <abstractions/base> \n #include <abstractions/nameservice> \n #include <abstractions/openssl> \n #include <abstractions/web-data> \n```", "```\ncapability dac_override, \n```", "```\n/var/log/nginx/error.log w, \n owner /etc/nginx/modules-enabled/ r, \n owner /etc/nginx/nginx.conf r, \n owner /run/nginx.pid w, \n owner /usr/lib/nginx/modules/ngx_http_geoip_module.so mr, \n owner /usr/share/nginx/modules-available/mod-http-geoip.conf r, \n owner /usr/share/nginx/modules-available/mod-http-image-filter.conf r, \n owner /var/log/nginx/access.log w, \n} \n```", "```\nsudo apt remove ufw \nsudo apt install firewalld \n```", "```\nsudo zypper install susefirewall2-to-firewalld \nsudo susefirewall2-to-firewalld -c \n```", "```\nsudo systemd-run --on-calendar='2018-08-20 13:00:00' \\ \n\u00a0\u00a0firewall-cmd --reload\u00a0\u00a0\n\nsudo systemctl list-timers \n```", "```\nsudo journalctl | grep \"Azure fabric firewall\"\n```", "```\nsudo nft list ruleset\n```", "```\nsudo firewall-cmd --get-zones\n```", "```\nsudo firewall-cmd --get-default-zone\n```", "```\nsudo firewall-cmd --zone public --list-all\n```", "```\npublic \n\u00a0\u00a0target: default \n\u00a0\u00a0icmp-block-inversion: no \n\u00a0\u00a0interfaces: \n\u00a0\u00a0sources: \n\u00a0\u00a0services: ssh dhcpv6-client \n\u00a0\u00a0ports: \n\u00a0\u00a0protocols: \n\u00a0\u00a0masquerade: no \n\u00a0\u00a0forward-ports: \n\u00a0\u00a0source-ports: \n\u00a0\u00a0icmp-blocks: \n\u00a0\u00a0rich rules: \n```", "```\n<?xml version=\"1.0\" encoding=\"utf-8\"?> \n<zone> \n <short>Public</short> \n <description>For use in public areas. You do not trust the other computers on networks to not harm your computer. Only selected incoming connections are accepted.</description> \n <service name=\"ssh\"/> \n <service name=\"dhcpv6-client\"/> \n</zone> \n```", "```\nsudo firewall-cmd --add-interface=eth0 --zone=public \n\nsudo firewall-cmd --add-interface=eth0 --zone=public --permanent \n\nsudo firewall-cmd --zone=public --list-all \n```", "```\nsudo firewall-cmd --get-services \n```", "```\nsudo firewall-cmd --add-service=mysql --zone=public \n\nsudo firewall-cmd --add-service=mysql --zone=public \\ \n\u00a0\u00a0--permanent \n```", "```\n<?xml version=\"1.0\" encoding=\"utf-8\"?> \n<service> \n <short>PPtP</short> \n <description>Microsoft VPN</description> \n <port protocol=\"tcp\" port=\"1723\"/> \n</service> \n```", "```\n<port protocol=\"tcp\" port=\"1724\" /> \n```", "```\nsudo firewall-cmd --service=pptp --add-protocol=gre \\ \n\u00a0\u00a0--permanent \n\nsudo firewall-cmd --reload \n```", "```\n<protocol value=\"gre\"/>\u00a0\u00a0\n```", "```\ncd /tmp \nwget http://www.ipdeny.com/ipblocks/data/countries/bm.zone \n```", "```\nsudo firewall-cmd --get-ipset-types \n```", "```\nsudo firewall-cmd --new-ipset=block_bermuda --type=hash:net --permanent \nsudo firewall-cmd --reload \n```", "```\nsudo firewall-cmd --ipset=block_bermuda --add-entries-from-file=/tmp/bm.zone \nsudo firewall-cmd --ipset=block_bermuda --add-entries-from-file=/tmp/bm.zone \\ \n\u00a0\u00a0--permanent \nsudo firewall-cmd --reload \n```", "```\nsudo firewall-cmd --zone=drop --add-source=ipset:block_bermuda \nsudo firewall-cmd --zone=drop --add-source=ipset:block_bermuda --permanent \nsudo firewall-cmd --reload \n```", "```\nsudo firewall-cmd --get-active-zones \ndrop \n sources: ipset:block_bermuda \npublic \n interfaces: eth0 \n```", "```\nsudo systemctl edit sshd \n```", "```\n[Service] \nProtectHome=read-only \n```", "```\nsudo systemctl daemon-reload \nsudo systemctl restart sshd \n```", "```\nsystemctl show <service name> -p IPIngressBytes \\ \n -p IPIngressPackets \\ \n -p IPEgressBytes -p IPEgressPackets \n```", "```\nsudo systemctl set-property sshd.service IPAddressAllow=any \nsudo systemctl set-property waagent.service IPAddressAllow=10.0.0.1 \n```", "```\nsudo systemctl set-property system.slice IPAddressAllow=localhost\u00a0\u00a0\nsudo systemctl set-property system.slice IPAddressAllow=10.0.0.1\u00a0\u00a0\nsudo systemctl set-property system.slice IPAddressDeny=any\u00a0\u00a0\n```", "```\nsudo hostnamectl set-hostname ubuntu01.frederikvoslinvirt.onmicrosoft.com \n```", "```\n127.0.0.1 ubuntu01.frederikvoslinvirt.onmicrosoft.com ubuntu01 \n```", "```\nsudo yum install realmd sssd krb5-workstation krb5-libs samba-common-tools \n```", "```\nsudo apt install krb5-user samba sssd sssd-tools libnss-sss libpam-sss realmd adcli \n```", "```\nsudo realm discover <your domain> \n```", "```\nsudo realm join <your domain> -U <username@domain>\n```", "```\nsudo realm list\n```", "```\nid <user>@<domain>\nsu <user>@<domain>\n```", "```\nsudo yast\n```", "```\naz vm extension set \\ \n\u00a0\u00a0\u00a0\u00a0--publisher Microsoft.Azure.ActiveDirectory.LinuxSSH \\ \n\u00a0\u00a0\u00a0\u00a0--name AADLoginForLinux \\ \n\u00a0\u00a0\u00a0\u00a0--resource-group myResourceGroup \\ \n\u00a0\u00a0\u00a0\u00a0--vm-name myVM \n```", "```\naz role assignment create \\ \n\u00a0\u00a0\u00a0\u00a0--role \"Virtual Machine Administrator Login\" \\ \n\u00a0\u00a0\u00a0\u00a0--assignee <ad user name> \\ \n\u00a0\u00a0\u00a0\u00a0--scope <your vm> \n```", "```\n$vm = Get-AzVM \u2013Name <VM Name> -ResourceGroup <resource group> \n```", "```\n az vm show --name<name> --resource-group <resource group> --query id \n```", "```\nssh <ad user>@<ad domain>@<ip address> \n```"]