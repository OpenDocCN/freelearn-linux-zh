["```\n$ git clone git://git.buildroot.net/buildroot\n$ cd buildroot\n$ git checkout 2015.08.1\n\n```", "```\n$ cd buildroot\n$ make qemu_arm_versatile_defconfig\n$ make\n\n```", "```\n$ qemu-system-arm -M vexpress-a9 -m 256 \\\n-kernel output/images/zImage \\\n-dtb output/images/vexpress-v2p-ca9.dtb \\\n-drive file=output/images/rootfs.ext2,if=sd \\\n-append \"console=ttyAMA0,115200 root=/dev/mmcblk0\" \\\n-serial stdio -net nic,model=lan9118 -net user\n\n```", "```\nBooting Linux on physical CPU 0x0\nInitializing cgroup subsys cpuset\n\nLinux version 4.1.0 (chris@builder) (gcc version 4.9.3 (Buildroot 2015.08) ) #1 SMP Fri Oct 30 13:55:50 GMT 2015\n\nCPU: ARMv7 Processor [410fc090] revision 0 (ARMv7), cr=10c5387d\n\nCPU: PIPT / VIPT nonaliasing data cache, VIPT aliasing instruction cache\nMachine model: V2P-CA9\n[...]\nVFS: Mounted root (ext2 filesystem) readonly on device 179:0.\ndevtmpfs: mounted\nFreeing unused kernel memory: 264K (8061e000 - 80660000)\nrandom: nonblocking pool is initialized\nStarting logging: OK\nStarting mdev...\nInitializing random number generator... done.\nStarting network...\n\nWelcome to Buildroot\nbuildroot login:\n\n```", "```\n$ make clean  #  Always do a clean when changing targets\n$ make beaglebone_defconfig\n\n```", "```\n$ mkdir -p board/melp/nova\n\n```", "```\nMLO  nova.dtb  rootfs.ext2  u-boot.img  uEnv.txt  zImage\n\n```", "```\n$ make savedefconfig BR2_DEFCONFIG=configs/nova_defconfig\n\n```", "```\n$ PATH=<path_to_buildroot>/output/host/usr/bin:$PATH\n\n```", "```\nconfig BR2_PACKAGE_HELLOWORLD\nbool \"helloworld\"\nhelp\n  A friendly program that prints Hello World! every 10s\n```", "```\nmenu \"My programs\"\n  source \"package/helloworld/Config.in\"\nendmenu\n```", "```\nHELLOWORLD_VERSION:= 1.0.0\nHELLOWORLD_SITE:= /home/chris/MELP/helloworld/\nHELLOWORLD_SITE_METHOD:=local\nHELLOWORLD_INSTALL_TARGET:=YES\n\ndefine HELLOWORLD_BUILD_CMDS\n  $(MAKE) CC=\"$(TARGET_CC)\" LD=\"$(TARGET_LD)\" -C $(@D) all\nendef\n\ndefine HELLOWORLD_INSTALL_TARGET_CMDS\n  $(INSTALL) -D -m 0755 $(@D)/helloworld $(TARGET_DIR)/bin\nendef\n\n$(eval $(generic-package))\n```", "```\n$ make legal-info\n\n```", "```\n$ git clone -b fido git://git.yoctoproject.org/poky.git\n\n```", "```\n$ cd poky\n$ source oe-init-build-env\n\n```", "```\n$ source oe-init-build-env build-qemuarm\n\n```", "```\nMACHINE ?= \"qemuarm\"\n```", "```\n$ bitbake core-image-minimal\n\n```", "```\n$ runqemu qemuarm\n\n```", "```\n$ runqemu qemuarm nographic\n\n```", "```\n$ cd poky\n$ scripts/yocto-layer create nova\n\n```", "```\nPlease enter the layer priority you'd like to use for the layer: [default: 6]\nWould you like to have an example recipe created? (y/n) [default: n]\nWould you like to have an example bbappend file created? (y/n) [default: n]\nNew layer created in meta-nova.\nDon't forget to add it to your BBLAYERS (for details see meta-nova\\README).\n\n```", "```\n# We have a conf and classes directory, add to BBPATH\nBBPATH .= \":${LAYERDIR}\"\n\n# We have recipes-* directories, add to BBFILES\nBBFILES += \"${LAYERDIR}/recipes-*/*/*.bb \\\n${LAYERDIR}/recipes-*/*/*.bbappend\"\n\nBBFILE_COLLECTIONS += \"nova\"\nBBFILE_PATTERN_nova = \"^${LAYERDIR}/\"\nBBFILE_PRIORITY_nova = \"6\"\n```", "```\n$ cd ~/poky\n$ . oe-init-build-env build-nova\n\n```", "```\nLCONF_VERSION = \"6\"\n\nBBPATH = \"${TOPDIR}\"\nBBFILES ?= \"\"\n\nBBLAYERS ?= \" \\\n  /home/chris/poky/meta \\\n  /home/chris/poky/meta-yocto \\\n  /home/chris/poky/meta-yocto-bsp \\\n /home/chris/poky/meta-nova \\\n  \"\nBBLAYERS_NON_REMOVABLE ?= \" \\\n  /home/chris/poky/meta \\\n  /home/chris/poky/meta-yocto \\\"\n```", "```\n$ bitbake-layers show-layers\nlayer                 path                     priority\n==========================================================\nmeta              /home/chris/poky/meta            5\nmeta-yocto        /home/chris/poky/meta-yocto      5\nmeta-yocto-bsp    /home/chris/poky/meta-yocto-bsp  5\nmeta-nova         /home/chris/poky/meta-nova       6\n\n```", "```\n$ bitbake -c listtasks core-image-minimal\n\n```", "```\n$ bitbake -c fetch busybox\n\n```", "```\n$ bitbake -c fetchall core-image-minimal\n\n```", "```\nmeta-nova/recipes-local/helloworld\n\u251c\u2500\u2500 files\n\u2502   \u2514\u2500\u2500 helloworld.c\n\u2514\u2500\u2500 helloworld_1.0.bb\n```", "```\nDESCRIPTION = \"A friendly program that prints Hello World!\"\nPRIORITY = \"optional\"\nSECTION = \"examples\"\n\nLICENSE = \"GPLv2\"\nLIC_FILES_CHKSUM = \"file://${COMMON_LICENSE_DIR}/GPL-2.0;md5=801f80980d171dd6425610833a22dbe6\"\n\nSRC_URI = \"file://helloworld.c\"\nS = \"${WORKDIR}\"\n\ndo_compile() {\n  ${CC} ${CFLAGS} -o helloworld helloworld.c\n}\n\ndo_install() {\n  install -d ${D}${bindir}\n  install -m 0755 helloworld ${D}${bindir}\n}\n```", "```\nLICENSE_FLAGS = \"commercial\"\n```", "```\nLICENSE_FLAGS_WHITELIST = \"commercial\"\n```", "```\n$ bitbake  helloworld\n\n```", "```\nIMAGE_INSTALL_append = \" helloworld\"\n```", "```\n$ bitbake core-image-minimal\n\n```", "```\nIMAGE_INSTALL_append = \" strace helloworld\"\n```", "```\nIMAGE_INSTALL_remove = \"someapp\"\n```", "```\n$ ls meta*/recipes*/images/*.bb\n\n```", "```\nrequire recipes-core/images/core-image-minimal.bb\nIMAGE_INSTALL += \"helloworld strace\"\n```", "```\n$ bitbake nova-image\n\n```", "```\nSUMMARY = \"A small image with helloworld and strace packages\" IMAGE_INSTALL = \"packagegroup-core-boot helloworld strace\"\nIMAGE_LINGUAS = \" \"\nLICENSE = \"MIT\"\nIMAGE_ROOTFS_SIZE ?= \"8192\"\ninherit core-image\n```", "```\n$ bitbake nova-image -c populate_sdk\n\n```", "```\npoky-<c_library>-<host_machine>-<target_image><target_machine>-toolchain-<version>.sh\n```", "```\npoky-glibc-x86_64-nova-image-cortexa8hf-vfp-neon-toolchain-1.8.1.sh\n```", "```\nTOOLCHAIN_TARGET_TASK_append = \" glibc-staticdev\"\n```", "```\nSDKIMAGE_FEATURES_append = \" staticdev-pkgs\"\n```", "```\n$ bitbake meta-toolchain\n\n```", "```\n$ tmp/deploy/sdk/poky-glibc-x86_64-nova-image-cortexa8hf-vfp-neon-toolchain-1.8.1.sh\n\nEnter target directory for SDK (default: /opt/poky/1.8.1):\n\nYou are about to install the SDK to \"/opt/poky/1.8.1\". Proceed[Y/n]?\n\n[sudo] password for chris:\n\nExtracting SDK...done\n\nSetting it up...done\n\nSDK has been successfully set up and is ready to be used.\n\n```", "```\n. /opt/poky/1.8.1/environment-setup-cortexa8hf-vfp-neon-poky-linux-gnueabi\n\n```", "```\n$ arm-poky-linux-gnueabi-gcc -print-sysroot\n\n/not/exist\n\n```", "```\n$ arm-poky-linux-gnueabi-gcc helloworld.c -o helloworld\n\nhelloworld.c:1:19: fatal error: stdio.h: No such file or directory\n\n#include <stdio.h>\n\n ^\n\ncompilation terminated.\n\n```", "```\n$ $CC helloworld.c -o helloworld\n\n```", "```\n$ ls tmp/deploy/licenses/nova-image-beaglebone-20151104150124\nlicense.manifest  package.manifest\n\n```"]