- en: Chapter 6. Components of the Yocto Project
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第6章。Yocto项目的组件
- en: In this chapter, you will be given a short introduction to a number of components
    from the ecosystem of the Yocto Project. This chapter is meant to introduce all
    of them so that in subsequent chapters they can be presented more elaborately.
    It also tries to direct readers toward extra readings. For each presented tool,
    feature, or interesting fact, links are offered to help interested readers search
    for their own answers to the questions in this book and those that this chapter
    does not cover.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将简要介绍Yocto项目生态系统中的一些组件。本章的目的是介绍它们，以便在后续章节中更详细地介绍它们。它还试图引导读者进行额外阅读。对于每个工具、功能或有趣的事实，都提供了链接，以帮助感兴趣的读者寻找本书中的问题以及本章未涵盖的问题的答案。
- en: This chapter is full of guidance and relevant examples for an embedded development
    process that involves specific Yocto Project tools. The selection of the tools
    was done in a purely subjective manner. Only the tools that are considered helpful
    in the development process have been selected. We also considered the fact that
    some of them could offer new insights into the embedded world and the development
    for embedded systems in general.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章充满了有关嵌入式开发过程的指导和相关示例，涉及特定的Yocto项目工具。工具的选择是纯主观的。只选择了在开发过程中被认为有帮助的工具。我们还考虑到其中一些工具可能会为嵌入式世界和嵌入式系统的开发提供新的见解。
- en: Poky
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Poky
- en: Poky represents the reference build system for the metadata and tools of the
    Yocto Project, which are used as starting points for anyone interested in interacting
    with the Yocto Project. It is platform-independent and provides the tools and
    mechanisms to build and customize the end result, which is in fact a Linux software
    stack. Poky is used as the central piece of interaction with the Yocto Project.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: Poky代表了Yocto项目的元数据和工具的参考构建系统，这些工具是任何对与Yocto项目进行交互感兴趣的人的起点。它是独立于平台的，并提供了构建和定制最终结果的工具和机制，实际上是一个Linux软件堆栈。Poky被用作与Yocto项目进行交互的中心组件。
- en: 'When working with the Yocto Project as a developer, it is very important to
    have information about mailing lists and an **Internet Relay Chat** (**IRC**)
    channel. Also, Project Bugzilla can be a source of inspiration in terms of a list
    of available bugs and features. All of these elements would need a short introduction,
    so the best starting point would be the Yocto Project Bugzilla. It represents
    a bug tracking application for the users of the Yocto Project and is the place
    where problems are reported. The next component is represented by the available
    channels of IRC. There are two available components on a freenode, one used for
    Poky and the other for discussions related to the Yocto Project, such as **#poky**
    and **#yocto**, respectively. The third element is represented by the Yocto Project
    mailing lists, which are used to subscribe to these mailing lists of the Yocto
    Project:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 作为开发人员使用Yocto项目时，了解邮件列表和**Internet Relay Chat** (**IRC**)频道的信息非常重要。此外，项目Bugzilla也可以作为可用bug和功能列表的灵感来源。所有这些元素都需要一个简短的介绍，因此最好的起点是Yocto项目Bugzilla。它代表了Yocto项目用户的bug跟踪应用程序，并且是问题报告的地方。下一个组件是IRC的可用频道。在freenode上有两个可用的组件，一个用于Poky，另一个用于与Yocto项目相关的讨论，如**#poky**和**#yocto**。第三个元素是Yocto项目邮件列表，用于订阅Yocto项目的邮件列表：
- en: '[http://lists.yoctoproject.org/listinfo/yocto](http://lists.yoctoproject.org/listinfo/yocto):
    This refers to the mailing list where the Yocto Project discussions take place'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://lists.yoctoproject.org/listinfo/yocto](http://lists.yoctoproject.org/listinfo/yocto)：这是Yocto项目讨论的邮件列表。'
- en: '[http://lists.yoctoproject.org/listinfo/poky](http://lists.yoctoproject.org/listinfo/poky):
    This refers to the mailing list where discussions regarding the Poky build of
    the Yocto Project system take place'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://lists.yoctoproject.org/listinfo/poky](http://lists.yoctoproject.org/listinfo/poky)：这是关于Yocto项目Poky构建的讨论邮件列表。'
- en: '[http://lists.yoctoproject.org/listinfo/yocto-announce](http://lists.yoctoproject.org/listinfo/yocto-announce):
    This refers to the mailing list where official announcements of the Yocto Project
    are made, as well as where milestones of the Yocto Project are presented'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://lists.yoctoproject.org/listinfo/yocto-announce](http://lists.yoctoproject.org/listinfo/yocto-announce)：这是官方公告Yocto项目的邮件列表，也是Yocto项目里程碑的发布地点。'
- en: With the help of [http://lists.yoctoproject.org/listinfo](http://lists.yoctoproject.org/listinfo),
    more information can be gathered regarding general and project-specific mailing
    lists. It contains a list of all the mailing lists available at [https://www.yoctoproject.org/tools-resources/community/mailing-lists](https://www.yoctoproject.org/tools-resources/community/mailing-lists).
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 通过[http://lists.yoctoproject.org/listinfo](http://lists.yoctoproject.org/listinfo)，可以获取有关一般和项目特定邮件列表的更多信息。它包含了[https://www.yoctoproject.org/tools-resources/community/mailing-lists](https://www.yoctoproject.org/tools-resources/community/mailing-lists)上所有可用邮件列表的列表。
- en: In order to initiate development using the Yocto Project in general, and Poky
    in particular, you should not only use the previously mentioned components; some
    information regarding these tolls should also be made available. A very good explanation
    of the Yocto Project is available on their documentation page at [https://www.yoctoproject.org/documentation](https://www.yoctoproject.org/documentation).
    Those of you interested in reading a shorter introduction, it may be worth checking
    out the *Embedded Linux Development with Yocto Project*, *Otavio Salvador* and
    *Daiane Angolini*, by *Packt Publishing*.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始使用Yocto项目，特别是Poky，不仅应使用先前提到的组件；还应提供有关这些工具的信息。有关Yocto项目的非常好的解释可以在他们的文档页面上找到[https://www.yoctoproject.org/documentation](https://www.yoctoproject.org/documentation)。对于那些对阅读更简短介绍感兴趣的人，可以查看*Packt
    Publishing*出版的*Embedded Linux Development with Yocto Project*，作者是*Otavio Salvador*和*Daiane
    Angolini*。
- en: 'To use the Yocto Project, a number of specific requirements are needed:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用Yocto项目，需要满足一些特定的要求：
- en: '**A host system**: Let''s assume that this is a Linux-based host system. However,
    it is not just any host system; Yocto has certain requirements. The supported
    operating systems are available inside the `poky.conf` file, available inside
    directory `meta-yocto/conf/distro`. The supported operating systems are defined
    in the `SANITY_TESTED_DISTROS` variable, and a few of these systems are as follows:'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主机系统：假设这是一个基于Linux的主机系统。但这不仅仅是任何主机系统；Yocto有特定的要求。支持的操作系统在`poky.conf`文件中可用，该文件位于`meta-yocto/conf/distro`目录中。支持的操作系统在`SANITY_TESTED_DISTROS`变量中定义，其中一些系统如下：
- en: Ubuntu-12.04
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ubuntu-12.04
- en: Ubuntu-13.10
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ubuntu-13.10
- en: Ubuntu-14.04
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ubuntu-14.04
- en: Fedora-19
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Fedora-19
- en: Fedora-20
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Fedora-20
- en: CentOS-6.4
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CentOS-6.4
- en: CentOS-6.5
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CentOS-6.5
- en: Debian-7.0
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Debian-7.0
- en: Debian-7.1
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Debian-7.1
- en: Debian-7.2
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Debian-7.2
- en: Debian-7.3
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Debian-7.3
- en: Debian-7.4
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Debian-7.4
- en: Debian-7.5
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Debian-7.5
- en: Debian-7.6
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Debian-7.6
- en: SUSE-LINUX-12.2
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SUSE-LINUX-12.2
- en: openSUSE-project-12.3
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: openSUSE-project-12.3
- en: openSUSE-project-13.1
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: openSUSE-project-13.1
- en: '**Required packages**: This contains a list of the minimum requirements for
    the packages available on the host system, besides the ones already available.
    Of course, this is different from one host system to another and the systems vary
    according to their purposes. However, for the Ubuntu host, we need the following
    requirements:'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所需软件包：这包含主机系统上可用的软件包的最低要求列表，除了已有的软件包。当然，这与一个主机系统到另一个主机系统是不同的，系统根据其目的而有所不同。但是，对于Ubuntu主机，我们需要以下要求：
- en: '**Essentials**: This refers to `sudo apt-get install gawk wget git-core diffstat
    unzip texinfo gcc-multilib build-essential chrpath socat`'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基本要求：这指的是`sudo apt-get install gawk wget git-core diffstat unzip texinfo gcc-multilib
    build-essential chrpath socat`
- en: '**Graphical and Eclipse Plug-in extras**: This refers to `sudo apt-get install
    libsdl1.2-dev xterm`'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图形和Eclipse插件额外组件：这指的是`sudo apt-get install libsdl1.2-dev xterm`
- en: '**Documentation**: This refers to `sudo apt-get install make xsltproc docbook-utils
    fop dblatex xmlto`'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文档：这指的是`sudo apt-get install make xsltproc docbook-utils fop dblatex xmlto`
- en: '**ADT Installer Extras**: This refers to `sudo apt-get install autoconf automake
    libtool libglib2.0-dev`'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ADT安装程序额外组件：这指的是`sudo apt-get install autoconf automake libtool libglib2.0-dev`
- en: '**Yocto Project release**: Before staring any work, one of the available Poky
    releases should be chosen. This book is based on the dizzy branch, which is the
    Poky 1.7 version, but a developer can chose whatever fits him or her best. Of
    course, since the interaction with the project is done using the `git` versioning
    system, the user will first need to clone the Poky repository, and any contributions
    to the project should be submitted as a patch to the open source community. There
    is also a possibility of getting a tar archive, but this method has some limitations
    due to the fact that any changes done on the source are harder to trace, and it
    also limits the interaction with the community involved in the project.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Yocto项目发布：在开始任何工作之前，应选择一个可用的Poky版本。本书基于dizzy分支，即Poky 1.7版本，但开发人员可以选择最适合自己的版本。当然，由于与项目的交互是使用`git`版本控制系统完成的，用户首先需要克隆Poky存储库，并且对项目的任何贡献都应提交为开源社区的补丁。还有可能获取一个tar存档，但由于源代码上的任何更改更难追踪，并且还限制了与项目相关社区的交互，因此这种方法存在一些限制。
- en: 'There are other extra optional requirements that should be taken care of if
    special requirements are needed, as follows:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 如果需要特殊要求，还有其他额外的可选要求需要注意，如下所示：
- en: '**Custom Yocto Project kernel interaction**: If a developer decides that the
    kernel source Yocto Projects are maintained and are not suitable for their needs,
    they could get one of the local copies of the Yocto Project supported by kernel
    versions, available at [http://git.yoctoproject.org/cgit.cgi](http://git.yoctoproject.org/cgit.cgi)
    under the Yocto Linux Kernel section, and modify it according to their needs.
    These changes, of course, along with the rest of the kernel sources, will need
    to reside in a separate repository, preferably `git`, and it will be introduced
    to the Yocto world through a kernel recipe.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自定义Yocto项目内核交互：如果开发人员决定Yocto项目维护的内核源不适合他们的需求，他们可以获取Yocto项目支持的内核版本的本地副本之一，该副本可在[Yocto
    Linux Kernel](http://git.yoctoproject.org/cgit.cgi)下找到，并根据自己的需求进行修改。当然，这些更改以及其余的内核源都需要驻留在一个单独的存储库中，最好是`git`，并且将通过内核配方引入Yocto世界。
- en: '**The meta-yocto-kernel-extras git repository**: Here the metadata needed is
    gathered when building and modifying kernel images. It contains a bunch of `bbappend`
    files that can be edited to indicate to the local that the source code has changed,
    which is a more efficient method to use when you are working on the development
    of features of the Linux kernel. It is available under the **Yocto Metadata Layers**
    section at [http://git.yoctoproject.org/cgit.cgi](http://git.yoctoproject.org/cgit.cgi).'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: meta-yocto-kernel-extras git存储库：在构建和修改内核映像时，此处收集所需的元数据。它包含一堆`bbappend`文件，可以编辑以指示本地源代码已更改，这是在开发Linux内核功能时更有效的方法。它在[Yocto
    Metadata Layers](http://git.yoctoproject.org/cgit.cgi)的**Yocto Metadata Layers**部分提供。
- en: '**Supported Board Support Packages (BSPs)**: There are a large number of BSP
    layers that are available and supported by the Yocto Project. The naming of each
    BSP layer is very simple, `meta-<bsp-name>`, and can be found at [http://git.yoctoproject.org/cgit.cgi](http://git.yoctoproject.org/cgit.cgi)
    under the **Yocto Metadata Layers** section. Each BSP layer is, in fact, a collection
    of recipes that define the behavior and minimum requirements offered by the BSP
    provider. More information regarding the development of BSP can be found at [http://www.yoctoproject.org/docs/1.7/dev-manual/dev-manual.html#developing-a-board-support-package-bsp](http://www.yoctoproject.org/docs/1.7/dev-manual/dev-manual.html#developing-a-board-support-package-bsp).'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**支持的板支持包（BSPs）**：有许多BSP层可供Yocto Project支持。每个BSP层的命名非常简单，`meta-<bsp-name>`，可以在[http://git.yoctoproject.org/cgit.cgi](http://git.yoctoproject.org/cgit.cgi)的**Yocto
    Metadata Layers**部分找到。实际上，每个BSP层都是一组定义BSP提供者行为和最低要求的配方集合。有关BSP开发的更多信息可以在[http://www.yoctoproject.org/docs/1.7/dev-manual/dev-manual.html#developing-a-board-support-package-bsp](http://www.yoctoproject.org/docs/1.7/dev-manual/dev-manual.html#developing-a-board-support-package-bsp)找到。'
- en: '**Eclipse Yocto Plug-ins**: For developers who are interested in writing applications,
    an Eclipse **Integrated Development Environment** (**IDE**) is available with
    Yocto-specific plug-ins. You can find more information on this at [http://www.yoctoproject.org/docs/1.7/dev-manual/dev-manual.html#setting-up-the-eclipse-ide](http://www.yoctoproject.org/docs/1.7/dev-manual/dev-manual.html#setting-up-the-eclipse-ide).'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Eclipse Yocto插件**：对于有兴趣编写应用程序的开发人员，Yocto专用插件的Eclipse**集成开发环境**（**IDE**）可用。您可以在[http://www.yoctoproject.org/docs/1.7/dev-manual/dev-manual.html#setting-up-the-eclipse-ide](http://www.yoctoproject.org/docs/1.7/dev-manual/dev-manual.html#setting-up-the-eclipse-ide)找到更多信息。'
- en: The development process inside the Yocto Project has many meanings. It can refer
    to the various bugs and features that are available inside the Yocto Project Bugzilla.
    The developer can assign one of them to his or her account and solve it. Various
    recipes can be upgraded, and this process also requires the developer's involvement;
    new features can also be added and various recipes need to be written by developers.
    All these tasks need to have a well defined process in place that also involves
    `git` interaction.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: Yocto Project内的开发过程有许多含义。它可以指的是Yocto Project Bugzilla中可用的各种错误和功能。开发人员可以将其中之一分配给自己的帐户并解决它。各种配方可以升级，这也需要开发人员的参与；还可以添加新功能，并且需要开发人员编写各种配方。所有这些任务都需要有一个明确定义的流程，其中也涉及`git`的交互。
- en: To send changes added in the recipes back into the community, the available
    create-pull-request and send-pull request scripts can be used. These scripts are
    available inside the poky repository in the scripts directory. Also, in this section,
    there are also a bunch of other interesting scripts available, such as the `create-recipe`
    script, and others that I will let you discover on your own. The other preferred
    method to send the changes upstream would be to use the manual method, which involves
    interaction with `git` commands, such as `git add`, `git commit –s`, `git format-patch`,
    `git send-email`, and others.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 要将配方中添加的更改发送回社区，可以使用可用的create-pull-request和send-pull request脚本。这些脚本位于poky存储库的scripts目录中。此外，在本节中还有一些其他有趣的脚本可用，如`create-recipe`脚本等，我会让你自己去发现。将更改发送到上游的另一种首选方法是使用手动方法，其中涉及与`git`命令的交互，如`git
    add`、`git commit –s`、`git format-patch`、`git send-email`等。
- en: 'Before moving on to describe the other components presented in this chapter,
    a review of the existing Yocto Project development models will be made. This process
    involves these tools made available by the Yocto Project:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续描述本章节中呈现的其他组件之前，将对现有的Yocto Project开发模型进行审查。这个过程涉及Yocto Project提供的这些工具：
- en: '**System development**: This covers the development of the BSP, kernel development,
    and its configurations. Each of them has a section in the Yocto Project documentation
    describing respective development processes, as shown at [http://www.yoctoproject.org/docs/1.7/bsp-guide/bsp-guide.html#creating-a-new-bsp-layer-using-the-yocto-bsp-script](http://www.yoctoproject.org/docs/1.7/bsp-guide/bsp-guide.html#creating-a-new-bsp-layer-using-the-yocto-bsp-script)
    and [http://www.yoctoproject.org/docs/1.7/kernel-dev/kernel-dev.html](http://www.yoctoproject.org/docs/1.7/kernel-dev/kernel-dev.html).'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**系统开发**：这涵盖了BSP的开发、内核开发及其配置。Yocto Project文档中有关于各自开发过程的部分，如[http://www.yoctoproject.org/docs/1.7/bsp-guide/bsp-guide.html#creating-a-new-bsp-layer-using-the-yocto-bsp-script](http://www.yoctoproject.org/docs/1.7/bsp-guide/bsp-guide.html#creating-a-new-bsp-layer-using-the-yocto-bsp-script)和[http://www.yoctoproject.org/docs/1.7/kernel-dev/kernel-dev.html](http://www.yoctoproject.org/docs/1.7/kernel-dev/kernel-dev.html)。'
- en: '**User application development**: This covers the development of applications
    for a targeted hardware device. The information regarding the necessary setup
    for the application development on the host system is available at [http://www.yoctoproject.org/docs/1.7/adt-manual/adt-manual.html](http://www.yoctoproject.org/docs/1.7/adt-manual/adt-manual.html).
    This component will also be discussed in the *Eclipse ADT Plug-ins* section of
    this chapter.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户应用程序开发**：这涵盖了针对目标硬件设备开发应用程序。有关在主机系统上进行应用程序开发所需设置的信息可在[http://www.yoctoproject.org/docs/1.7/adt-manual/adt-manual.html](http://www.yoctoproject.org/docs/1.7/adt-manual/adt-manual.html)找到。本章节还将讨论*Eclipse
    ADT插件*部分。'
- en: '**Temporary modification of source code**: This covers the temporary modifications
    that appear in the development process. This involves the solution for various
    implementation problems that are available in a project''s source code. After
    the problem is solved, the changes need to be available upstream and applied accordingly.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**临时修改源代码**：这涵盖了开发过程中出现的临时修改。这涉及解决项目源代码中可用的各种实现问题的解决方案。问题解决后，更改需要上游可用并相应应用。'
- en: '**Development of a Hob image**: The Hob build system can be used for operating
    and customizing system images. It is a graphical interface developed in Python
    as a more efficient interface with the Bitbake build system.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Hob镜像的开发**：Hob构建系统可用于操作和定制系统镜像。它是一个用Python开发的图形界面，作为与Bitbake构建系统更高效的接口。'
- en: '**Devshell development**: This is a method of development that uses the exact
    environment of the Bitbake build system''s tasks. It is one of the most efficient
    methods used for debugging or package editing. It is also one of the quickest
    ways to set up the build environment when writing various components of a project.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Devshell开发**：这是一种使用Bitbake构建系统任务的确切环境进行开发的方法。这是用于调试或包编辑的最有效方法之一。在编写项目的各个组件时，这也是设置构建环境的最快方法之一。'
- en: For operating systems where the provided components are too old to satisfy the
    requirements of the Yocto Project, a buildtools toolchain is recommended for providing
    the required versions of the software. There are two methods used for installing
    a `buildtools` tarball. The first method implies the use of an already available
    prebuilt tarball, and the second one involves building it using the Bitbake build
    system. More information about this option can be found in the subsections under
    the **Required Git, tar, and Python Versions** section of the Yocto documentation
    mega manual available at [http://www.yoctoproject.org/docs/1.7/mega-manual/mega-manual.html#required-git-tar-and-python-versions](http://www.yoctoproject.org/docs/1.7/mega-manual/mega-manual.html#required-git-tar-and-python-versions).
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 对于提供的组件过时无法满足Yocto项目要求的操作系统，建议使用`buildtools`工具链来提供所需版本的软件。用于安装`buildtools` tarball的方法有两种。第一种方法涉及使用已经可用的预构建tarball，第二种方法涉及使用Bitbake构建系统进行构建。有关此选项的更多信息可以在Yocto文档超级手册的**Required
    Git, tar, and Python Versions**部分的子部分中找到，网址为[http://www.yoctoproject.org/docs/1.7/mega-manual/mega-manual.html#required-git-tar-and-python-versions](http://www.yoctoproject.org/docs/1.7/mega-manual/mega-manual.html#required-git-tar-and-python-versions)。
- en: Eclipse ADT plug-ins
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Eclipse ADT插件
- en: 'The **Application Development Toolkit**, also called ADT, provides a cross-development
    platform suitable for custom build and user-targeted applications. It is comprised
    of the following elements:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**应用程序开发工具包**，也称为ADT，提供了一个适用于自定义构建和用户定制应用程序的交叉开发平台。它由以下元素组成：'
- en: '**A cross-toolchain**: It is associated with the `sysroot`, both of them being
    automatically generated using Bitbake, and the target-specific metadata is made
    available by the target hardware supplier.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**交叉工具链**：它与`sysroot`相关联，两者都是使用Bitbake自动生成的，并且目标特定的元数据由目标硬件供应商提供。'
- en: '**The Quick Emulator environment (Qemu)**: It is used to simulate the target
    hardware.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**快速仿真器环境（Qemu）**：用于模拟目标硬件。'
- en: '**User-space tools**: It improves the overall experience of development of
    an application'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户空间工具**：它改善了应用程序开发的整体体验'
- en: '**Eclipse IDE**: It contains Yocto Project-specific plug-ins'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Eclipse IDE**：它包含Yocto项目特定的插件'
- en: In this section, each of the preceding elements will be discussed, and we will
    start with the cross-development toolchain. It consists of a cross-linker, cross-debugger,
    and a cross-compiler that are used for the application development of a target.
    It also needs the associated target `sysroot` because the necessary headers and
    libraries are required when building an application that will run on the target
    device. The generated `sysroot` is obtained from the same configuration that generates
    the `root` filesystem; this refers to the *image* recipe.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，将讨论前述每个元素，我们将从交叉开发工具链开始。它由用于目标应用程序开发的交叉链接器、交叉调试器和交叉编译器组成。它还需要相关的目标`sysroot`，因为在构建将在目标设备上运行的应用程序时需要必要的头文件和库。生成的`sysroot`是从生成`root`文件系统的相同配置中获得的；这指的是*image*配方。
- en: The toolchain can be generated using multiple methods. The most common one is
    to download the toolchain from [http://downloads.yoctoproject.org/releases/yocto/yocto-1.7/toolchain/](http://downloads.yoctoproject.org/releases/yocto/yocto-1.7/toolchain/),
    and get the appropriate toolchain installer for your host and target. One such
    example is the `poky-glibc-x86_64-core-image-sato-armv7a-vfp-neon-toolchain-1.7.sh`
    script, which when executed will install the toolchain in the default location
    of the `/opt/poky/1.7/` directory. This location can be changed if proper arguments
    are offered in the script before starting the execution of the script.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 工具链可以使用多种方法生成。最常见的方法是从[http://downloads.yoctoproject.org/releases/yocto/yocto-1.7/toolchain/](http://downloads.yoctoproject.org/releases/yocto/yocto-1.7/toolchain/)下载工具链，并获取适合您的主机和目标的适当工具链安装程序。一个例子是`poky-glibc-x86_64-core-image-sato-armv7a-vfp-neon-toolchain-1.7.sh`脚本，当执行时将在默认位置`/opt/poky/1.7/`目录中安装工具链。如果在执行脚本之前提供适当的参数，则可以更改此位置。
- en: Another method I prefer to use when generating a toolchain involves the use
    of the Bitbake build system. Here, I am referring to `meta-ide-support`. When
    running `bitbake meta-ide-support`, the cross-toolchain is generated and it populates
    the build directory. After this task is finished, the same result is obtained
    as in the previously mentioned solution, but in this case, a build directory that
    is already available is used. The only remaining task for both solutions would
    be to set up the environment using the script that contains the `environment-setup`
    string and start using it.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 当生成工具链时，我更喜欢使用Bitbake构建系统。在这里，我指的是`meta-ide-support`。运行`bitbake meta-ide-support`时，会生成交叉工具链并填充构建目录。完成此任务后，将获得与先前提到的解决方案相同的结果，但在这种情况下，将使用已经可用的构建目录。对于这两种解决方案，唯一剩下的任务是使用包含`environment-setup`字符串的脚本设置环境并开始使用它。
- en: 'The Qemu emulator offers the possibility to simulate one hardware device when
    this one is not available. There are multiple ways of making it available in the
    development process:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: Qemu仿真器提供了在目标设备不可用时模拟一个硬件设备的可能性。在开发过程中，有多种方法可以使其可用：
- en: Install the ADT using the adt-installer generated script. One of the steps available
    in this script offers the possibility to enable or disable the use of Qemu in
    the development process.
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用adt-installer生成的脚本安装ADT。在这个脚本中的一个可用步骤提供了在开发过程中启用或禁用Qemu的可能性。
- en: A Yocto Project release is downloaded and in the development process, the environment
    is set up by default. Then, the Qemu is installed and available for use.
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Yocto项目发布版被下载并在开发过程中默认设置环境。然后，Qemu被安装并可供使用。
- en: A `git` clone of the Poky repository is created and the environment is set up.
    In this case, the Qemu is installed and available also.
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建Poky存储库的`git`克隆并设置环境。在这种情况下，Qemu也被安装并可供使用。
- en: The `cross-toolchain` tarball was downloaded, installed, and the environment
    was set up. This also, by default, enables the use of Qemu and installs it for
    later use.
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cross-toolchain` tarball被下载、安装并设置环境。这也默认启用了Qemu并安装了它以供以后使用。'
- en: 'The user-space tools are included into the distribution and are used during
    the development process. They are very common on a Linux platform and can include
    the following:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 用户空间工具包含在发行版中，并在开发过程中使用。它们在Linux平台上非常常见，可以包括以下内容：
- en: '**Perf**: It is a Linux performance counter that measures certain hardware
    and software events. More information about this is available at [https://perf.wiki.kernel.org/](https://perf.wiki.kernel.org/),
    and also on the profiling and tracing manual of Yocto, where a whole section is
    devoted to this tool.'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Perf**：它是一个Linux性能计数器，用于测量特定的硬件和软件事件。有关它的更多信息可在[https://perf.wiki.kernel.org/](https://perf.wiki.kernel.org/)找到，也可以在Yocto的性能和跟踪手册中找到一个专门的章节。'
- en: '**PowerTop**: It is a power measurement tool that is used to determine the
    amount of power a software consumes. More information about it is available at
    [https://01.org/powertop/](https://01.org/powertop/).'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**PowerTop**：这是一个用于确定软件消耗的功率量的功率测量工具。有关它的更多信息可在[https://01.org/powertop/](https://01.org/powertop/)找到。'
- en: '**LatencyTop**: It is a similar tool to PowerTop, the difference being that
    this one focuses on the latency measurement from audio skips and stutters on the
    desktop to server overload; it has measurement for these kind of scenarios and
    answers for the latency problems. Although it seems that no commit has been done
    inside this project since 2009, it is still used today due to the fact that it
    is very useful.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**LatencyTop**：这是一个类似于PowerTop的工具，不同之处在于它专注于从桌面音频跳跃和卡顿到服务器超载的延迟测量；它对这些情景进行测量并提供了延迟问题的解决方案。尽管自2009年以来似乎没有在这个项目中进行过提交，但由于它非常有用，至今仍在使用。'
- en: '**OProfile**: It represents a system-wide profiler for the Linux ecosystem
    with a low overhead. More information about it is available at [http://oprofile.sourceforge.net/about/](http://oprofile.sourceforge.net/about/).
    It also has a section available in the profiling and tracing manual of Yocto.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**OProfile**：它代表Linux生态系统的系统范围分析器，开销很低。有关它的更多信息可在[http://oprofile.sourceforge.net/about/](http://oprofile.sourceforge.net/about/)找到。在Yocto的性能和跟踪手册中也有一个章节可供参考。'
- en: '**SystemTap**: It offers information on the infrastructure of a running Linux
    system, as well as the performance and functional problems of the system. It is
    not available though as an Eclipse extension, but only as a tool inside the Linux
    distribution. More information about it can be found at [http://sourceware.org/systemtap](http://sourceware.org/systemtap).
    It also has a section defined in the profiling and tracing manual of Yocto.'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SystemTap**：它提供了关于运行中的Linux系统基础设施以及系统性能和功能问题的信息。但它并不作为Eclipse扩展，而是作为Linux发行版中的一个工具。关于它的更多信息可以在[http://sourceware.org/systemtap](http://sourceware.org/systemtap)找到。在Yocto的性能和跟踪手册中也有一个章节定义了它。'
- en: '**Lttng-ust**: It is the user-space tracer for the `lttng` project and offers
    information related to user-space activities. More information is available at
    [http://lttng.org/](http://lttng.org/).'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Lttng-ust**：它是`lttng`项目的用户空间跟踪器，提供与用户空间活动相关的信息。更多信息可在[http://lttng.org/](http://lttng.org/)找到。'
- en: The last element of the ADT platform is represented by the Eclipse IDE. It is,
    in fact, the most popular development environment, and it offers full support
    for the development of the Yocto Project. With the installation of the Yocto Project
    Eclipse Plug-ins into the Eclipse IDE, the Yocto Project experience is complete.
    These plugins offer the possibility to cross-compile, develop, deploy, and execute
    the resultant binary in a Qemu emulated environment. Activities, such as cross-debugging,
    tracing, remote profiling, and power data collection, are also possible. More
    information about the activities that appear related to working with Eclipse Plug-ins
    for the Yocto Project can be found at [http://www.yoctoproject.org/docs/1.7/mega-manual/mega-manual.html#adt-eclipse](http://www.yoctoproject.org/docs/1.7/mega-manual/mega-manual.html#adt-eclipse).
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: ADT平台的最后一个元素是Eclipse IDE。实际上，它是最受欢迎的开发环境，并为Yocto项目的开发提供全面支持。通过将Yocto项目Eclipse插件安装到Eclipse
    IDE中，Yocto项目的体验就完整了。这些插件提供了跨编译、开发、部署和在Qemu模拟环境中执行生成的二进制文件的可能性。还可以进行诸如交叉调试、跟踪、远程性能分析和功耗数据收集等活动。有关与使用Yocto项目的Eclipse插件相关的活动的更多信息，请参阅[http://www.yoctoproject.org/docs/1.7/mega-manual/mega-manual.html#adt-eclipse](http://www.yoctoproject.org/docs/1.7/mega-manual/mega-manual.html#adt-eclipse)。
- en: 'To better understand the workflow of the application development of the ADT
    toolkit platform and Eclipse, an overview of the whole process is available in
    the following image:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地理解ADT工具包平台和Eclipse应用开发的工作流程，整个过程的概述在下图中可见：
- en: '![Eclipse ADT plug-ins](img/image00325.jpeg)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![Eclipse ADT插件](img/image00325.jpeg)'
- en: The application development process can also be done with other tools that are
    different from the ones already presented. However, all these options involve
    the use of a Yocto Project component, most notably the Poby reference system.
    Therefore, ADT is the suggested, tested, and recommended option by the open source
    community.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序开发过程也可以使用与已经介绍的不同的其他工具。然而，所有这些选项都涉及使用Yocto项目组件，尤其是Poby参考系统。因此，ADT是开源社区建议、测试和推荐的选项。
- en: Hob and Toaster
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Hob和Toaster
- en: The project—**Hob**—represents a graphical user interface for the Bitbake build
    system. Its purpose was to simplify the interaction with the Yocto Project and
    create a leaner learning curve for the project, allowing users to perform daily
    tasks in a simpler manner. Its primary focus was the generation of a Linux operating
    system image. With time, it evolved and can now be considered a tool suitable
    for both experienced and nonexperienced users. Although I mostly prefer using
    the command line interaction, this statement does not hold true for all Yocto
    Project users.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 项目—**Hob**—代表了Bitbake构建系统的图形用户界面。它的目的是简化与Yocto项目的交互，并为项目创建一个更简单的学习曲线，使用户能够以更简单的方式执行日常任务。它的主要重点是生成Linux操作系统镜像。随着时间的推移，它发展起来，现在可以被认为是一个适合有经验和无经验用户的工具。尽管我更喜欢使用命令行交互，但这个说法并不适用于所有Yocto项目的用户。
- en: 'It might seem, though, that Hob development stopped with the release of Daisy
    1.6\. The development activity somewhat moved to the new project—**Toaster**—,
    which will be explained shortly; the Hob project is still in use today and its
    functionalities should be mentioned. So, the current available version of Hob
    is able to do the following:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管在Daisy 1.6发布后Hob开发似乎停止了。开发活动在某种程度上转移到了新项目—**Toaster**—，这将很快解释；Hob项目仍然在使用中，其功能应该被提及。因此，当前可用的Hob版本能够做到以下几点：
- en: Customize an available base image recipe
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自定义可用的基础镜像配方
- en: Create a completely customized image
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建完全定制的镜像
- en: Build any given image
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建任何给定的镜像
- en: Run an image using Qemu
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Qemu运行镜像
- en: Deploy an image on a USB disk for the purpose of live-booting it on a target
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在USB磁盘上部署镜像，以便在目标上进行现场引导
- en: The Hob project can be started in the same way that Bitbake is executed. After
    the environment sources and the build directory are created, the `hob` command
    can be called and the graphical interface will appear for the user. The disadvantage
    of this is that this tool does not substitute the command-line interaction. If
    new recipes need to be created, then this tool will not be able to provide any
    help with the task.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: Hob项目可以以与执行Bitbake相同的方式启动。在环境源和构建目录创建后，可以调用`hob`命令，用户将看到图形界面。这个工具的缺点是它不能替代命令行交互。如果需要创建新的配方，那么这个工具将无法提供任何帮助。
- en: 'The next project is called Toaster. It is an application programming interface
    and also a web interface that the Yocto Project builds. In its current state,
    it is only able to gather and present information relevant to a build process
    through a web browser. These are some of its functionalities:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个项目叫做Toaster。它是一个应用程序编程接口，也是Yocto项目构建的一个Web界面。在当前状态下，它只能通过Web浏览器收集和呈现与构建过程相关的信息。以下是它的一些功能：
- en: Visibility for the executed and reused tasks during the build process
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在构建过程中执行和重用任务的可见性
- en: Visibility for build components, such as recipes and packages of an image -
    this is done in a manner similar to Hob
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建组件的可见性，如镜像的配方和软件包 - 这与Hob类似地完成
- en: Offering information about recipes, such as dependencies, licenses, and so on
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供有关配方的信息，如依赖关系、许可证等
- en: Offering performance-related information, such as disk I/O , CPU usage, and
    so on
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供与性能相关的信息，如磁盘I/O、CPU使用率等
- en: Presenting errors, warnings, and trace reports for the purpose of debugging
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为了调试目的呈现错误、警告和跟踪报告
- en: 'Although it might not seem much, this project promises to offer the possibility
    to build and customize builds the same way that Hob did, along with many other
    goodies. You can find useful information about this tool at: [https://wiki.yoctoproject.org/wiki/Toaster](https://wiki.yoctoproject.org/wiki/Toaster).'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管看起来可能不多，这个项目承诺提供与Hob相同的构建和定制构建的可能性，以及许多其他好处。您可以在这个工具的[https://wiki.yoctoproject.org/wiki/Toaster](https://wiki.yoctoproject.org/wiki/Toaster)上找到有用的信息。
- en: Autobuilder
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自动构建器
- en: '**Autobuilder** is a project that facilitates the build test automation and
    conducts quality assurance. Through this internal project, the Yocto community
    tries to set a path on which embedded developers are able to publish their QA
    tests and testing plans, develop new tools for automatic testing, continuous integration,
    and develop QA procedures to demonstrate and show them for the benefit of all
    involved parties.'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '**自动构建器**是一个项目，它促进了构建测试自动化并进行质量保证。通过这个内部项目，Yocto社区试图为嵌入式开发人员设定一条路径，使他们能够发布他们的QA测试和测试计划，开发新的自动测试工具、持续集成，并开发QA程序以展示和展示给所有相关方的利益。'
- en: These points are already achieved by a project that publishes its current status
    using this Autobuilder platform, which is available at [http://autobuilder.yoctoproject.org/](http://autobuilder.yoctoproject.org/).
    This link is accessible to everyone and testing is performed on all the changes
    related to the Yocto Project, as well as nightly builds for all supported hardware
    platforms. Although started from the Buildbot project, from which it borrowed
    components for continuous integration, this project promises to move forward and
    offer the possibility of performing runtime testing and other must-have functionalities.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 这些点已经被一个使用Autobuilder平台发布其当前状态的项目所实现，该平台可在[http://autobuilder.yoctoproject.org/](http://autobuilder.yoctoproject.org/)上找到。这个链接对每个人都是可访问的，测试是针对与Yocto项目相关的所有更改进行的，以及所有支持的硬件平台的夜间构建。尽管起源于Buildbot项目，从中借用了持续集成的组件，这个项目承诺将继续前进，并提供执行运行时测试和其他必不可少的功能的可能性。
- en: 'You can find some useful information about this project at: [https://wiki.yoctoproject.org/wiki/AutoBuilder](https://wiki.yoctoproject.org/wiki/AutoBuilder)
    and [https://wiki.yoctoproject.org/wiki/QA](https://wiki.yoctoproject.org/wiki/QA),
    which offers access to the QA procedures done for every release, as well as some
    extra information.'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在以下网址找到有关该项目的一些有用信息：[https://wiki.yoctoproject.org/wiki/AutoBuilder](https://wiki.yoctoproject.org/wiki/AutoBuilder)
    和 [https://wiki.yoctoproject.org/wiki/QA](https://wiki.yoctoproject.org/wiki/QA)，该网址提供了每个发布版本的QA程序的访问权限，以及一些额外的信息。
- en: Lava
  id: totrans-95
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Lava
- en: The Lava project is not an internal work of the Yocto Project, but is, in fact,
    a project developed by Linaro, which is an automated validation architecture aimed
    towards testing the deployments of Linux systems on devices. Although its primary
    focus is the ARM architecture, the fact that it is open source does not make it
    a disincentive. Its actual name is **Linaro Automation and Validation Architecture**
    (**LAVA**).
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: Lava项目并不是Yocto项目的内部工作，而是由Linaro开发的项目，旨在测试设备上Linux系统的部署的自动化验证架构。尽管其主要关注点是ARM架构，但它是开源的，这并不是一个缺点。它的实际名称是**Linaro自动化和验证架构**（**LAVA**）。
- en: This project offers the possibility of deploying an operating system on a hardware
    or virtual platform, defining, tests, and performing them on the project. The
    tests can be of various complexities, they can be combined into bigger and more
    conclusive tests, and the results are tracked in time, after which the resulting
    data is exported for analysis.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 该项目提供了在硬件或虚拟平台上部署操作系统的可能性，定义测试，并在项目上执行测试。测试可以具有各种复杂性，它们可以组合成更大更具有决定性的测试，并且结果会随时间跟踪，之后导出结果数据进行分析。
- en: This is developed with the idea of a continuous evolving architecture that allows
    test performing along with automation and quality control. At the same time, it
    offers validation for gathered data. Tests can be anything from compiling a boot
    test to a change on the kernel scheduler that may or may not have reduced power
    consumption.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个不断发展的架构，允许测试执行以及自动化和质量控制。同时，它还为收集的数据提供验证。测试可以是从编译引导测试到对内核调度器的更改，可能会或可能不会降低功耗。
- en: Although it is still young, this project has gained quite an audience, so some
    investigation into the project would not hurt anyone.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管它还很年轻，但这个项目已经吸引了相当多的关注，因此对该项目进行一些调查不会伤害任何人。
- en: Note
  id: totrans-100
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The LAVA manual is available at [https://validation.linaro.org/static/docs/](https://validation.linaro.org/static/docs/)
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: LAVA手册可在[https://validation.linaro.org/static/docs/](https://validation.linaro.org/static/docs/)找到。
- en: Wic
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Wic
- en: '**Wic** is more of a feature then a project per se. It is the least documented,
    and if a search is conducted for it, you may find no results. I have decided to
    mention it here because in the development process, some special requirements
    could appear, such as generating a custom `root` filesystem from available packages
    (such as `.deb`, `.rpm`, or `.ipk`). This job is the one that is best suited for
    the wic tool.'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '**Wic**更像是一个功能而不是一个项目本身。它是最不被记录的，如果搜索它，你可能找不到结果。我决定在这里提到它，因为在开发过程中可能会出现一些特殊要求，比如从可用软件包（如`.deb`、`.rpm`或`.ipk`）生成自定义的`root`文件系统。这项工作最适合wic工具。'
- en: This tool tries to solve some special requirements from devices or bootloaders,
    such as special formatting or the partitioning of the `root` filesystem. It is
    a highly customized tool that offers the possibility of extending its features.
    It has been developed from another tool called **oeic**, which was used to create
    a certain proprietary formatted image for hardware and was imported into the Yocto
    Project to serve a broader purposes for developers who did not wanted to touch
    recipes and had already packaged sources, or required special formatting for their
    deliverable Linux image.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 这个工具试图解决设备或引导加载程序的一些特殊要求，比如特殊格式化或`root`文件系统的分区。它是一个高度定制的工具，可以扩展其功能。它是从另一个名为**oeic**的工具开发而来，该工具用于为硬件创建特定的专有格式化映像，并被导入到Yocto项目中，以为那些不想要触及配方或已经打包好的源代码的开发人员提供更广泛的目的，或者需要为其可交付的Linux映像进行特殊格式化。
- en: Unfortunately, there is no documentation available for this tool, but I can
    direct those who are interested to its location on the Yocto Project. It resides
    in the Poky repository in the scripts directory under the name of wic. Wic can
    be used as any script, and it provides a help interface where you can seek more
    information. Also, its functionalities will be presented in an extended manner
    in the coming chapters.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，这个工具没有提供文档，但我可以指导感兴趣的人到Yocto项目的位置。它位于Poky存储库中的scripts目录下的wic名称。Wic可以像任何脚本一样使用，并提供一个帮助界面，您可以在那里寻找更多信息。此外，它的功能将在接下来的章节中进行更详细的介绍。
- en: A list with all the available projects developed around the Yocto Project can
    be found at [https://www.yoctoproject.org/tools-resources/projects](https://www.yoctoproject.org/tools-resources/projects).
    Some of the projects available there were not discussed in the context of this
    chapter, but I will let you discover each one of them. There are also other external
    projects that did not make the list. I encourage you to find out and learn about
    them on your own.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 可以在[https://www.yoctoproject.org/tools-resources/projects](https://www.yoctoproject.org/tools-resources/projects)找到所有围绕Yocto项目开发的可用项目的列表。其中一些项目在本章的上下文中没有讨论，但我会让你自己去发现它们。还有其他未列入列表的外部项目。我鼓励你自己去了解和学习它们。
- en: Summary
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, you were presented with the elements that will be discussed
    next in this book. In the following chapter, each of the previously mentioned
    sections will be presented in various chapters, and the information will be presented
    in-depth and in a more applied manner.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，你将看到下一章中将要讨论的元素。在接下来的章节中，之前提到的每个部分将在不同的章节中进行详细和更加应用的介绍。
- en: In the next chapter, the previously mentioned process will start with the Application
    Development Toolkit platform. It will be explained with the steps necessary for
    the setup of the platform, and some usage scenarios will also be introduced to
    you. These involve cross-development, debugging using Qemu, and the interaction
    between specific tools.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，前面提到的过程将从应用开发工具包平台开始。将解释设置平台所需的步骤，并向您介绍一些使用场景。这些涉及跨开发、使用Qemu进行调试以及特定工具之间的交互。
