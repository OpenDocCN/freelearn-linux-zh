["```\n    virbr1). Now, we can complete the configuration of our new virtual machine network XML file:![Figure 4.6 \u2013 New NAT network configuration\n    ](img/B14834_04_06.jpg)Figure 4.6 \u2013 New NAT network configurationThe next step is importing this configuration.\n    ```", "```\n    virsh net-define packtnat.xml\n    virsh net-start packtnat\n    virsh net-autostart packtnat\n    virsh net-list\n    ```", "```\nvirsh attach-interface --domain MasteringKVM01 --source isolated --type network --model virtio --config --live\n```", "```\n    tester:\n\n    ```", "```\n\n    ```", "```\n    ifconfig to check and configure the network settings for a Linux bridge; ifconfig is relatively easy to read and understand but not as feature-rich as the ip command:\n\n    ```", "```\n\n    The Linux bridge tester is now ready. Let's create and add a TAP device to it. \n    ```", "```\n    vm-vnic:\n\n    ```", "```\n    # brctl addif tester vm-vnic\n    # brctl show\n    bridge name bridge id STP enabled interfaces\n    tester 8000.460a80dd627d no vm-vnic\n    ```", "```\n\n    ```", "```\n    vm-vnic has been removed from the bridge, remove the tap device using the ip command:\n\n    ```", "```\n\n    ```", "```\n    # brctl delbr tester\n    ```", "```\n    yum -y install epel-release\n    yum -y install centos-release-openstack-train\n    ```", "```\n    dnf install openvswitch -y\n    ```", "```\n    2.11.0 and DB schema 7.16.1.\n    ```", "```\n    ovs-vsctl add-br ovs-br0\n    ip addr flush dev ens256\n    ip addr add 10.10.10.1/24 dev ovs-br0\n    ovs-vsctl add-port ovs-br0 ens256\n    ip link set dev ovs-br0 up\n    ```", "```\n    ifcfg-ovs-br0 (for our OVS):\n\n    ```", "```\n\n    ```", "```\n    <network>\n    <name>packtovs</name>\n    <forward mode='bridge'/>\n    <bridge name='ovs-br0'/>\n    <virtualport type='openvswitch'/>\n    </network>\n    ```", "```\nvirsh net-define packtovs.xml\nvirsh net-start packtovs\nvirsh net-autostart packtovs\n```", "```\nvirt-install --virt-type=kvm --name MasteringKVM03 --vcpus 2 --ram 4096 --os-variant=rhel8.0 --cdrom=/var/lib/libvirt/images/CentOS-8-x86_64-1905-dvd1.iso --network network:packtovs --graphics vnc --disk size=16\n```", "```\novs-vsctl list-ports ovs-br0\nens256\nvnet0\n```", "```\novs-vsctl set port vnet0 tag=5\n```", "```\n    modinfo command (we're only interested in the parm part of the output):\n\n    ```", "```\n    modprobe -r ixgbe\n    modprobe ixgbe max_vfs=4\n    ```", "```\n\n    ```", "```\n    options ixgbe max_vfs=4\n    ```", "```\n    grub2-mkconfig -o /boot/grub2/grub.cfg\n    ```", "```\n    grubby --update-kernel=ALL --args=\"intel_iommu=on ixgbe.max_vfs=4\"\n    ```", "```\nlspci -nn | grep \"Virtual Function\"\n```", "```\nvirsh nodedev-list | grep 04 \n\u2026\u2026\npci_0000_04_00_0\npci_0000_04_00_1\npci_0000_04_10_0\npci_0000_04_10_1\npci_0000_04_10_2\npci_0000_04_10_3\npci_0000_04_10_4\npci_0000_04_10_5\npci_0000_04_10_6\npci_0000_04_10_7\n```", "```\n<interface type='hostdev' managed='yes' >\n\u00a0\u00a0\u00a0\u00a0<source>\n\u00a0\u00a0\u00a0\u00a0<address type='pci' domain='0x0000' bus='0x04' slot='0x10' function='0x0'>\n\u00a0\u00a0\u00a0\u00a0</address>\n\u00a0\u00a0\u00a0\u00a0</source>\n</interface>\n```", "```\nvirsh attach-device MasteringKVM03 packtsriov.xml --config\n```"]