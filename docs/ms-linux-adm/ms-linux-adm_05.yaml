- en: 'Chapter 6: Package Management and Software Installation'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第6章：软件包管理和软件安装
- en: Package Managers and Repositories
  id: totrans-1
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 软件包管理器和软件仓库
- en: 'Linux package managers and repositories are essential components of the Linux
    ecosystem. They enable users to easily install, update, and manage software packages
    on their Linux systems. Here are some commonly used package managers and repositories
    in the Linux world:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Linux软件包管理器和软件仓库是Linux生态系统的重要组成部分。它们使用户能够轻松安装、更新和管理其Linux系统上的软件包。以下是Linux世界中一些常用的软件包管理器和软件仓库：
- en: 'Advanced Packaging Tool (APT): APT is the package manager used by Debian-based
    distributions like Debian itself, Ubuntu, and Linux Mint. It uses .deb packages
    and retrieves packages from software repositories, such as the main repository
    or additional third-party repositories.'
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高级打包工具（APT）：APT是Debian系发行版如Debian本身、Ubuntu和Linux Mint使用的软件包管理器。它使用.deb软件包，并从软件仓库中检索软件包，如主要仓库或额外的第三方仓库。
- en: 'YUM (Yellowdog Updater Modified): YUM is the package manager used primarily
    by Red Hat-based distributions like Red Hat Enterprise Linux (RHEL), CentOS, and
    Fedora. It uses .rpm packages and retrieves packages from software repositories.'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: YUM（Yellowdog Updater Modified）：YUM主要由类似Red Hat的发行版如Red Hat企业Linux（RHEL）、CentOS和Fedora使用的软件包管理器。它使用.rpm软件包，并从软件仓库中检索软件包。
- en: 'DNF (Dandified YUM): DNF is the next-generation package manager, introduced
    in Fedora 18, and it eventually replaced YUM in Fedora. DNF is compatible with
    YUM repositories and package management commands.'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DNF（Dandified YUM）：DNF是下一代软件包管理器，于Fedora 18中引入，并最终取代了Fedora中的YUM。DNF兼容YUM仓库和软件包管理命令。
- en: 'Pacman: Pacman is the package manager used by Arch Linux and its derivatives,
    such as Manjaro Linux. It uses .pkg.tar.xz packages and retrieves packages from
    the Arch Linux repositories.'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pacman：Pacman是Arch Linux及其衍生版（如Manjaro Linux）使用的软件包管理器。它使用.pkg.tar.xz软件包，并从Arch
    Linux仓库中检索软件包。
- en: 'Zypper: Zypper is the package manager used by the openSUSE Linux distribution.
    It uses .rpm packages and retrieves packages from software repositories.'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Zypper：Zypper是openSUSE Linux发行版使用的软件包管理器。它使用.rpm软件包，并从软件仓库中检索软件包。
- en: 'Snap: Snap is a universal package management system developed by Canonical,
    the company behind Ubuntu. Snap packages are self-contained and can run on any
    Linux distribution that supports Snap. Snaps are obtained from the Snap Store,
    which is a centralized repository.'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Snap：Snap是由Ubuntu背后的公司Canonical开发的通用软件包管理系统。Snap软件包是自包含的，可以在支持Snap的任何Linux发行版上运行。Snaps可以从Snap
    Store获取，这是一个集中的仓库。
- en: 'Flatpak: Flatpak is another universal package management system designed to
    work across different Linux distributions. It uses sandboxing technology and provides
    a way to distribute and run applications independently of the host system. Flatpak
    packages can be obtained from various sources, including Flathub, a popular repository
    for Flatpak applications.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Flatpak：Flatpak是另一个通用的软件包管理系统，旨在跨不同的Linux发行版工作。它使用沙盒技术，并提供了一种在主机系统之外分发和运行应用程序的方法。Flatpak软件包可以从各种来源获取，包括Flathub，一个流行的Flatpak应用程序仓库。
- en: These are just a few examples of package managers and repositories commonly
    used in the Linux world. Each distribution may have its own package manager and
    repositories tailored to its specific needs.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这些只是Linux世界中常用的软件包管理器和仓库的一些例子。每个发行版可能都有适合其特定需求的软件包管理器和仓库。
- en: Installing and Updating Software Packages
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装和更新软件包
- en: Installing and updating software packages in Linux can be done through package
    management systems. The most common package managers in Linux distributions are
    APT (Advanced Package Tool) used by Debian-based systems like Ubuntu, and YUM
    (Yellowdog Updater Modified) used by Red Hat-based systems like Fedora.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在Linux中安装和更新软件包可以通过软件包管理系统完成。Linux发行版中最常见的软件包管理器是APT（高级软件包工具），用于类似Ubuntu的基于Debian的系统，以及YUM（Yellowdog
    Updater Modified），用于类似Fedora的基于Red Hat的系统。
- en: 'Here are the general steps for installing and updating software packages using
    these package managers:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是使用这些软件包管理器安装和更新软件包的一般步骤：
- en: 'APT (Debian/Ubuntu-based systems):'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: APT（Debian/基于Ubuntu的系统）：
- en: 'Update the package lists by running:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 通过运行以下命令更新软件包列表：
- en: sudo apt update
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: sudo apt 更新
- en: 'Install a package using the following command:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令安装软件包：
- en: sudo apt install <package-name>
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: sudo apt 安装 <软件包名称>
- en: 'Update all installed packages to their latest versions:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 更新所有已安装的软件包到它们的最新版本：
- en: sudo apt upgrade
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: sudo apt 升级
- en: 'YUM (Red Hat/Fedora-based systems):'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: YUM（Red Hat/Fedora-based系统）：
- en: 'Update the package lists by running:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 通过运行以下命令更新软件包列表：
- en: sudo yum update
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: sudo yum 更新
- en: 'Install a package using the following command:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令安装软件包：
- en: sudo yum install <package-name>
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: sudo yum 安装 <软件包名称>
- en: 'Update all installed packages to their latest versions:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 更新所有已安装的软件包到它们的最新版本：
- en: sudo yum upgrade
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: sudo yum 升级
- en: 'Note: The actual commands may vary depending on the Linux distribution and
    version you are using. Additionally, some distributions might have their own package
    managers or variations of the mentioned package managers.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 注意：实际命令可能会因您使用的Linux发行版和版本而有所不同。此外，一些发行版可能有自己的软件包管理器或所述软件包管理器的变体。
- en: It's also worth mentioning that many Linux distributions have graphical package
    managers that provide a user-friendly interface for installing and updating software
    packages. Examples include Ubuntu Software Center, GNOME Software, and KDE Discover.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 值得一提的是，许多Linux发行版都有图形化的软件包管理器，提供了用户友好的界面来安装和更新软件包。例如包括Ubuntu软件中心、GNOME软件和KDE
    Discover。
- en: Furthermore, some distributions, such as Arch Linux, use a rolling release model
    where software packages are continuously updated. In such cases, updating the
    entire system using the respective package manager is usually sufficient to update
    all installed software packages.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，一些发行版（如Arch Linux）采用滚动发布模型，其中软件包不断更新。在这种情况下，使用相应的软件包管理器更新整个系统通常足以更新所有已安装的软件包。
- en: Remember to use the appropriate package manager commands with administrative
    privileges (sudo) to perform system-wide installations and updates.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 记得使用适当的包管理器命令以管理员权限（sudo）执行系统范围的安装和更新。
- en: Compiling and Installing from Source
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从源代码编译和安装
- en: 'Compiling and updating software from source on Linux can be a useful approach
    when you want to have the latest version of a particular application or when pre-built
    packages are not available for your distribution. Here''s a general outline of
    the process:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在Linux上从源代码编译和更新软件可以是一种有用的方法，当您想要获得特定应用程序的最新版本或者您的发行版没有预构建的软件包时。以下是该过程的一般概述：
- en: 'Install build tools: Before you begin, make sure your system has the necessary
    build tools installed. This typically includes packages like build-essential on
    Ubuntu/Debian or gcc, make, automake, and autoconf on other distributions. Use
    your package manager to install these tools.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装构建工具：在开始之前，请确保系统已安装必要的构建工具。这通常包括像Ubuntu/Debian上的build-essential或其他发行版上的gcc、make、automake和autoconf等软件包。使用您的包管理器安装这些工具。
- en: 'Obtain the source code: Download the source code for the software you wish
    to compile. You can usually find it on the project''s official website or source
    code repository. Some projects provide source code archives (tarballs) that you
    can download, while others use version control systems like Git.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取源代码：下载您希望编译的软件的源代码。通常可以在项目的官方网站或源代码存储库中找到。一些项目提供可以下载的源代码存档（tarballs），而其他项目使用像Git这样的版本控制系统。
- en: 'Extract the source code: If you downloaded a tarball, extract its contents
    using the tar command. For example, tar xvfz source_code.tar.gz for a tarball
    compressed with gzip.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提取源代码：如果您下载了一个tarball，请使用tar命令提取其内容。例如，对于使用gzip压缩的tarball，使用tar xvfz source_code.tar.gz。
- en: 'Navigate to the source directory: Use the cd command to enter the extracted
    source code directory. For example, cd source_code.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 转到源目录：使用cd命令进入提取的源代码目录。例如，cd source_code。
- en: 'Configure the build: Many projects provide a configuration script (often named
    configure) that you need to run before compiling. This script checks your system
    for dependencies and sets up the build environment. Execute it using ./configure.
    You can often pass various options to customize the build, such as installation
    paths or enabled features. Run ./configure --help to see available options.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置构建：许多项目提供一个配置脚本（通常命名为configure），您需要在编译之前运行它。此脚本会检查您的系统依赖关系并设置构建环境。使用./configure来执行它。通常可以传递各种选项来自定义构建，例如安装路径或启用的功能。运行./configure
    --help来查看可用选项。
- en: 'Build the software: Once the configuration step completes successfully, you
    can proceed with the actual compilation. Use the make command to build the software.
    This command reads the project''s Makefile and compiles the necessary source files.
    Depending on the project''s size and complexity, this step may take some time.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建软件：一旦配置步骤成功完成，您可以继续进行实际的编译。使用make命令构建软件。该命令读取项目的Makefile并编译必要的源文件。根据项目的大小和复杂性，此步骤可能需要一些时间。
- en: 'Install the compiled software: After a successful build, you can install the
    software on your system using make install or sudo make install (if administrative
    privileges are required). This step typically copies the compiled binaries, libraries,
    and other necessary files to appropriate locations on your system.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装编译的软件：在成功构建后，您可以使用make install或sudo make install（如果需要管理员权限）在系统上安装软件。此步骤通常会将编译的二进制文件、库文件和其他必要文件复制到系统上适当的位置。
- en: 'Update the software: To update the software to a newer version, repeat the
    above steps with the newer source code. Before starting, ensure that you remove
    the existing installation, either by using make uninstall (if provided by the
    project) or by manually deleting the installed files.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更新软件：要将软件更新到新版本，使用新的源代码重复上述步骤。在开始之前，请确保删除现有的安装，可以使用make uninstall（如果项目提供）或手动删除已安装的文件。
- en: It's worth noting that this is a general outline, and the actual process may
    vary depending on the project and the specific instructions provided in its documentation.
    Additionally, keep in mind that compiling software from source can introduce compatibility
    issues and requires you to manage dependencies manually. Therefore, it's often
    recommended to use pre-built packages from your distribution's repositories whenever
    possible.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，这是一个一般的概述，实际的过程可能会因项目和文档中提供的具体指令而有所不同。此外，请记住，从源代码编译软件可能会引入兼容性问题，并需要您手动管理依赖关系。因此，通常建议尽可能使用发行版存储库中的预构建软件包。
- en: Managing Dependencies
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 管理依赖关系
- en: 'Managing dependencies is an important aspect of working with Linux, especially
    when installing software packages. The package manager is a powerful tool that
    helps you handle dependencies efficiently. Here''s an overview of how you can
    manage dependencies on Linux:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 管理依赖关系是在Linux上使用的一个重要方面，特别是在安装软件包时。包管理器是一个强大的工具，可以帮助您有效地处理依赖关系。以下是如何在Linux上管理依赖关系的概述：
- en: 'Package Manager: Linux distributions typically have a package manager, such
    as APT (Advanced Package Tool) for Debian-based systems (e.g., Ubuntu) or DNF
    (Dandified Yum) for Fedora-based systems. These package managers handle dependencies
    automatically when you install or remove packages.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包管理器：Linux发行版通常有一个包管理器，如基于Debian的系统（例如Ubuntu）的APT（高级包工具）或基于Fedora的系统的DNF（Dandified
    Yum）。这些包管理器在安装或删除软件包时自动处理依赖关系。
- en: 'Package Repositories: Package managers access software repositories where packages
    and their dependencies are stored. The repositories contain pre-compiled packages
    for easy installation. The package manager resolves dependencies by checking the
    repository for the required packages and their versions.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 软件存储库：包管理器访问软件存储库，其中存储了软件包及其依赖关系。存储库包含预编译的软件包，便于安装。包管理器通过检查存储库以获取所需软件包及其版本来解决依赖关系。
- en: 'Dependency Resolution: When you install a package, the package manager analyses
    its dependencies and verifies if they are already installed. If a dependency is
    missing or an incompatible version is installed, the package manager retrieves
    the required packages from the repository and installs them automatically.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 依赖解决：当您安装一个软件包时，软件包管理器会分析其依赖关系，并验证它们是否已安装。如果缺少依赖项或安装了不兼容的版本，软件包管理器会从存储库中检索所需的软件包并自动安装它们。
- en: 'Update and Upgrade: Package managers also handle updates and upgrades of installed
    packages. They check for newer versions in the repository and update the installed
    packages, including their dependencies, if necessary.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更新和升级：软件包管理器还处理已安装软件包的更新和升级。它们会在存储库中检查更新版本，并在必要时更新已安装的软件包，包括它们的依赖关系。
- en: 'Dependency Tracking: Package managers keep track of installed packages and
    their dependencies. This helps prevent conflicts and ensures that the system remains
    in a consistent state. Removing a package typically triggers an automatic removal
    of its unused dependencies.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 依赖跟踪：软件包管理器会跟踪已安装的软件包及其依赖关系。这有助于防止冲突，并确保系统保持一致状态。通常情况下，删除一个软件包会自动删除其未使用的依赖项。
- en: 'Manual Dependency Resolution: In some cases, you may need to handle dependencies
    manually. For example, if you want to install a package from a source code archive,
    you may need to download and compile its dependencies separately. In such cases,
    it''s important to review the documentation and follow the instructions provided
    by the software developers.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 手动依赖解决：在某些情况下，您可能需要手动处理依赖关系。例如，如果您想要从源代码存档安装软件包，您可能需要单独下载和编译其依赖项。在这种情况下，重要的是要查阅文档并按照软件开发人员提供的说明进行操作。
- en: 'Package Managers and Package Formats: Different package managers support different
    package formats. For example, Debian-based systems use .deb packages, while Red
    Hat-based systems use .rpm packages. It''s important to use the appropriate package
    manager for your distribution to ensure compatibility and efficient dependency
    management.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 软件包管理器和软件包格式：不同的软件包管理器支持不同的软件包格式。例如，基于Debian的系统使用.deb软件包，而基于Red Hat的系统使用.rpm软件包。使用适合您的发行版的适当软件包管理器非常重要，以确保兼容性和高效的依赖管理。
- en: Remember, the specifics of package management may vary between Linux distributions.
    It's always a good idea to consult the documentation or online resources specific
    to your distribution to learn more about managing dependencies effectively.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，软件包管理的具体细节可能因Linux发行版而异。随时查阅与您的发行版相关的文档或在线资源，以了解更多关于有效管理依赖关系的信息。
