- en: '*Chapter 13*: Scaling out KVM with AWS'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第13章*：使用AWS扩展KVM'
- en: Virtualization is a hard problem if you take a look at it up close – it is complicated
    to emulate complete computers in order to be able to run operating systems on
    them. For obvious reasons, getting those virtual machines into a cloud is even
    harder. After that, things really start to get messy. Conceptually, creating clusters
    of machines that can run on demand is even more complicated, based on the sheer
    number of machines that must run at the same time. Also, there's a need to create
    not only emulated computers but also all the networking and infrastructure to
    support larger deployments. Creating a global cloud – one that not only runs millions
    of machines but is also almost omnipresent in even the most remote parts of the
    globe – is a task that few companies have ever tried, and only a couple have succeeded.
    This chapter will cover those big cloud providers in general, and then Amazon,
    as the biggest of them all. Our main idea is to present what makes Amazon tick,
    how it relates to the rest of the topics covered in this book, and how to use
    the services Amazon enables in the real world on real machines.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你仔细观察，虚拟化是一个棘手的问题 - 模拟完整的计算机以便能够在其上运行操作系统是复杂的。出于明显的原因，将这些虚拟机放入云中甚至更加困难。之后，事情真的开始变得混乱。从概念上讲，创建能够按需运行的机器集群更加复杂，基于必须同时运行的机器数量之多。此外，不仅需要创建模拟计算机，还需要创建支持更大规模部署的所有网络和基础设施。创建一个全球云
    - 不仅运行数百万台机器，而且几乎无处不在，甚至在地球上最偏远的地方 - 是少有公司尝试过的任务，只有少数公司成功。本章将总体介绍这些大型云提供商，然后介绍亚马逊作为其中最大的云提供商。我们的主要想法是介绍亚马逊的运作方式，它与本书中涵盖的其他主题的关系，以及如何在现实世界的真实机器上使用亚马逊提供的服务。
- en: '**Amazon Web Services** (**AWS**) is a unique set of tools, services, and infrastructure
    that enable cloud services on a really massive scale, a scale that is so huge
    that it becomes hardly comprehensible. When we are talking about thousands of
    sites using millions of servers to run billions of applications, even enumerating
    these things becomes a big problem, and management is something that can easily
    span not only a single chapter, but probably multiple books. We are going to try
    to introduce you to the most important services and parts of the AWS cloud, and
    try to explain what they can be used for and when.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '**亚马逊网络服务**（**AWS**）是一组独特的工具、服务和基础设施，可以在非常大规模上实现云服务，规模之大几乎难以理解。当我们谈论成千上万的站点使用数百万台服务器运行数十亿的应用程序时，甚至列举这些事物都成为一个大问题，管理是一件不仅可以跨越单一章节，而且可能需要多本书的事情。我们将尝试向您介绍AWS云的最重要的服务和部分，并尝试解释它们可以用于什么以及何时使用。'
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Introduction to AWS
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AWS简介
- en: Preparing and converting virtual machines for AWS
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为AWS准备和转换虚拟机
- en: Building hybrid KVM clouds with Eucalyptus
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Eucalyptus构建混合KVM云
- en: Introduction to AWS
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: AWS简介
- en: While talking about cloud services, AWS is one that needs almost no introduction,
    although few people actually understand how big and complex a system the whole
    Amazon cloud is. What is completely certain is that, at this time, it is unquestionably
    the biggest and most used service on the planet.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在谈论云服务时，AWS几乎不需要介绍，尽管很少有人真正了解整个亚马逊云系统有多么庞大和复杂。完全可以肯定的是，目前它无疑是地球上最大和最常用的服务。
- en: Before we do anything else, we need to talk about how and why AWS is so important,
    not only in regard to its impact on the internet but also on any task that even
    remotely tries to provide some kind of scaling.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们做任何其他事情之前，我们需要谈谈AWS为什么如此重要，不仅是因为它对互联网的影响，还因为它对任何试图提供某种规模的任务的影响。
- en: As we already have done a couple of times in this book, we will start with the
    basic premise of the AWS cloud – to provide a broadly scalable and distributed
    solution that will encompass all possible scenarios for performing any type of
    workload on the internet.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在本书中已经做了几次，我们将从AWS云的基本前提开始 - 提供一个广泛可扩展和分布式的解决方案，涵盖互联网上执行任何类型的工作负载的所有可能场景。
- en: In almost every other place in this book where we mentioned the cloud, we talked
    about scaling up, but when we try to describe AWS as being able to scale, we are
    talking about probably one of the largest providers of capacity and scalability
    on the planet.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的几乎每个其他地方，我们提到云时，我们都谈到了扩展，但当我们试图描述AWS能够扩展时，我们谈论的可能是地球上最大的和最常用的容量和可扩展性提供商之一。
- en: 'Right now, there are more or less four really big cloud providers on the internet:
    AWS, Microsoft Azure, Google Cloud Platform, and Alibaba. Since all the numbers
    are confidential for business reasons, the number of servers and sheer capacity
    they can provide is something analysts try to estimate, or more frequently guess,
    but it has to be in the millions.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，互联网上有四个真正大的云提供商：AWS、微软Azure、谷歌云平台和阿里巴巴。由于所有数字出于商业原因是保密的，它们可以提供的服务器数量和纯粹的容量是分析师试图估计，或更频繁地是猜测的，但必须是以百万计。
- en: Approaching the cloud
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 接近云
- en: Although on the surface they are now competing for the same cloud market, all
    the players came from different backgrounds, and the way they use their infrastructure
    even now is vastly different. In this market, Amazon was first, and it got a head
    start that in IT seems almost unbelievable – roughly 6 *years*. Amazon introduced
    its Amazon Web Services in 2006 but it started the development of the service
    a couple of years earlier. There is even a blog post that mentions the service
    published back in 2004\. The idea for AWS was basically conceived once Amazon
    realized it had a vast infrastructure that was unmatched in the market, and that
    by expanding it and offering it as a service, it could make a profit. At that
    point in time, the infrastructure they had was used to provide the Amazon.com
    service.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管在表面上它们现在在争夺同一个云市场，但所有参与者都来自不同的背景，即使现在他们使用基础设施的方式也大不相同。在这个市场上，亚马逊是第一家，它在IT领域似乎几乎不可思议地领先了大约6年。亚马逊于2006年推出了其亚马逊网络服务，但它在几年前就开始了该服务的开发。甚至有一篇博客文章提到了2004年发布的该服务。
    AWS的想法基本上是在亚马逊意识到它拥有一个在市场上无与伦比的庞大基础设施后构想出来的，通过扩大基础设施并将其作为服务提供，它可以获利。当时，他们拥有的基础设施被用来提供Amazon.com服务。
- en: This idea was different from anything on the market. People were used to having
    collocated computers in data centers, and being able to rent a server in the *cloud*,
    but the concept of renting just the part of the stack they needed instead of the
    entire hardware infrastructure was something new. The first big service AWS offered
    was simple, and was even named like that – **Simple Storage Service** (**S3**),
    along with **Elastic Compute Cloud** (**EC2**). S3 was basically cloud-backed
    storage that offered almost unlimited storage resources for those who could pay
    for them in pretty much the same way it is available even today. EC2 offered computing
    resources.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 这个想法与市场上的任何东西都不同。人们习惯于在数据中心中拥有共同的计算机，并能够租用云中的服务器，但租用他们需要的堆栈的一部分而不是整个硬件基础设施的概念是新的。
    AWS提供的第一个重要服务非常简单，甚至被命名为**简单存储服务**（**S3**），以及**弹性计算云**（**EC2**）。 S3基本上是云支持的存储，为那些能够支付的人提供了几乎无限的存储资源，几乎与今天的方式相同。
    EC2提供了计算资源。
- en: Offerings expanded to a **Content Delivery Network** (**CDN**) and much more
    during the next 6 years, while the competition was still trying to get to grips
    with what the cloud actually meant.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的6年里，提供的服务扩展到了**内容传送网络**（**CDN**）等等，而竞争对手仍在努力理解云的实际含义。
- en: We'll come back to the services AWS offers in a moment, but only after we mention
    the competition they eventually got in what has become a market worth hundreds
    of *billions* of dollars yearly.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我们稍后会回到AWS提供的服务，但只在提到它们最终在这个每年价值数百亿美元的市场中得到的竞争之后。
- en: Microsoft realized it would need to build up an infrastructure to support itself
    and its customers sometime in the late 2000s. Microsoft had its own business support
    infrastructure in place to run the company, but there were no public services
    offered to the general public at that time. That changed once **Microsoft Azure**
    was introduced in 2010\. Initially, it was called **Windows Azure**, and it was
    mainly created to run services for both Microsoft and its partners, mainly on
    Windows. Very quickly, Microsoft realized that offering just a Microsoft operating
    system in the cloud was going to cost them a lot of customers, so Linux was also
    offered as an operating system than could be installed and used.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 微软意识到，它需要建立基础设施来支持自己和客户，这是在2000年代后期的某个时候。微软已经有自己的业务支持基础设施来运行公司，但当时并没有向普通公众提供公共服务。这一切在2010年**微软Azure**推出后发生了变化。最初它被称为**Windows
    Azure**，主要用于为微软及其合作伙伴提供服务，主要是在Windows上。 微软很快意识到，仅在云中提供微软操作系统将会让他们失去很多客户，因此还提供了Linux作为可安装和使用的操作系统。
- en: Azure now runs as a publicly available cloud, but a large portion of it is still
    used by Microsoft and its services, most notably **Office 365** and a myriad of
    Microsoft training and marketing solutions.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: Azure现在作为一个公开可用的云运行，但它的很大一部分仍然被微软及其服务所使用，尤其是**Office 365**和大量的微软培训和营销解决方案。
- en: Google, on the other hand, came to the market in a different way. They also
    realized the need for a cloud offering but limited their first engagement with
    the cloud to offering a single service called **App Engine**, in 2008\. It was
    a service targeted at the web developer community, and Google even gave 10,000
    free licenses for the usage of the service in a limited way. At its core, this
    service and almost all the services that came after it came out with the premise
    that the web needs services that will enable developers to quickly deploy something
    that may or may not scale and that may or may not work. Therefore, giving it for
    free meant that a lot of developers were inclined to use the service just for
    simple testing.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，谷歌以不同的方式进入市场。他们也意识到云服务的需求，但将他们与云的第一次接触限制在提供一个名为**App Engine**的单一服务上，这是在2008年。这是一个面向Web开发者社区的服务，谷歌甚至为该服务的有限使用提供了10,000个免费许可证。在本质上，这项服务以及之后推出的几乎所有服务都是基于这样的前提，即网络需要能够让开发人员快速部署可能会扩展或可能不会工作的东西。因此，免费提供意味着很多开发人员倾向于仅用于简单测试。
- en: Google now also has a vast number of services offered, but when you take a look
    from outside at the actual services and the pricing, it seems that Google has
    created its cloud as a way to lease out extra capacity it has available in its
    data centers.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 谷歌现在也提供了大量的服务，但当你从外部看实际的服务和定价时，似乎谷歌创建了它的云来租用其数据中心中可用的额外容量。
- en: Multi-cloud
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 多云
- en: Looking a few years back, both Azure and Google Cloud Platform had a viable
    cloud service, but compared to what AWS was offering, their services were simply
    not up to par. AWS was the biggest player, both in terms of market share, but
    also in people's minds. Azure was considered as being more Microsoft oriented,
    although more than half of the servers running on it are Linux-based, and Google
    just wasn't perceived as a competitor; their cloud looked more like a side business
    than a viable proposal to run a cloud.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 回顾几年前，Azure和Google Cloud Platform都有一个可行的云服务，但与AWS提供的服务相比，它们的服务根本不匹配。AWS是最大的参与者，无论是市场份额还是人们的心目中。Azure被认为更多是面向微软的，尽管其上运行的服务器有一半以上是基于Linux的，而Google则不被视为竞争对手；他们的云看起来更像是一个副业而不是一个可行的云运行提案。
- en: Then came **multi-cloud**. The idea is simple – do not use a single cloud to
    deploy your services; use multiple cloud providers to provide both *data redundancy*,
    *availability*, and *failover*, and most important – *cost reduction and agility*.
    It may sound strange, but one of the biggest costs when using a cloud service
    is getting data out of it. Usually, getting data into the cloud, be it the user
    uploading data, or you deploying data on a server, is either free or has an extremely
    low cost, which makes sense, since you are more likely to use more services on
    this particular cloud if you have a lot of data online. Once you need to extract
    your data, it becomes expensive. This is intentional, and it keeps users locked
    into the cloud provider. Once you upload your data, it is much cheaper to just
    keep it on the servers and not try to work with it offline. But the data is not
    the only thing that has to be considered when talking about multi-cloud; services
    are also part of the equation.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 然后出现了**多云**。这个想法很简单 - 不要使用单一的云来部署您的服务；使用多个云提供商来提供*数据冗余*、*可用性*和*故障转移*，最重要的是*成本降低和灵活性*。这可能听起来很奇怪，但在使用云服务时最大的成本之一是将数据从中取出。通常情况下，将数据上传到云中，或者在服务器上部署数据，要么是免费的，要么成本极低，这是有道理的，因为如果您在线上有大量数据，您更有可能在这个特定的云上使用更多的服务。一旦您需要提取数据，成本就会变得很高。这是有意为之的，它使用户被锁定在云提供商那里。一旦您上传了数据，将其保留在服务器上而不尝试离线处理它要便宜得多。但在谈论多云时，不仅要考虑数据，服务也是方程式的一部分。
- en: Why multi-cloud?
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 为什么要使用多云策略？
- en: Many companies (and we must stress that multi-cloud users are mostly big companies
    because of the costs involved) are scared of being locked into a particular platform
    or technology. One of the biggest questions is what happens if a platform changes
    so much that the company has to redo part of its infrastructure? Imagine that
    you are a multibillion-dollar company running an enterprise application for hundreds
    of thousands of your own users. You chose the cloud for the usual reasons – to
    keep capital expenditures down and to be able to scale your services. You decided
    to go with one of the big providers. Suddenly, your provider decides it is going
    to change technologies and will phase out some part of the infrastructure. When
    it comes to shifts like that it usually means that your current setup will slowly
    become much more expensive, or you are going to lose some part of the available
    functionalities. Thankfully, these things also typically stretch into years, as
    no sane cloud provider is going to go through a strategic change overnight.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 许多公司（我们必须强调，多云用户大多是大公司，因为涉及到成本）害怕被锁定在特定的平台或技术上。其中最大的问题之一是，如果平台发生了如此大的变化，以至于公司必须重新设计其基础设施，会发生什么？想象一下，您是一家价值数十亿美元的公司，为数十万自己的用户运行企业应用程序。您选择云的原因通常是为了降低资本支出并能够扩展您的服务。您决定选择其中一个大型提供商。突然间，您的提供商决定要改变技术，并将逐步淘汰基础设施的某些部分。在这种情况下，通常意味着您当前的设置将变得更加昂贵，或者您将失去一些可用功能的一部分。幸运的是，这些事情通常会延伸数年，因为没有一个理智的云提供商会在一夜之间进行战略性的改变。
- en: But a change is a change, and you as a corporation have a choice – stay with
    the provider and face the consequences in the form of a much higher price for
    your systems – or redesign the systems, which will also cost money, and may take
    years to finish – sometimes decades.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 但是变化就是变化，作为一家公司，您有选择 - 留在提供商那里并面对系统价格大幅上涨的后果 - 或者重新设计系统，这也将花费金钱，并可能需要数年才能完成
    - 有时甚至数十年。
- en: So, a lot of companies decided on a very conservative strategy – to design a
    system that could run on any cloud, and that means using the lowest common denominator
    of all available technologies. This also means that the system can be migrated
    from cloud to cloud in a matter of days. Some of them then decided to even run
    the system on different clouds at the same time. This is an extremely conservative
    approach, but it works.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，许多公司选择了一种非常保守的策略 - 设计一个可以在任何云上运行的系统，这意味着使用所有可用技术的最低公共分母。这也意味着该系统可以在几天内从一个云迁移到另一个云。其中一些公司甚至决定同时在不同的云上运行系统。这是一种极端保守的方法，但它是有效的。
- en: Another big reason to use a multi-cloud strategy is the complete opposite of
    the one that we just mentioned. Sometimes, the idea is to use a particular cloud
    service or services that are the best in a very specialized task. This means choosing
    different services from different providers to perform separate tasks but to do
    it as efficiently as possible. In the long run, it will also mean having to change
    providers and systems from time to time, but if the core system that the company
    uses is designed with that in mind, this approach can have its benefits.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 使用多云策略的另一个重要原因与我们刚才提到的完全相反。有时，想法是使用特定的云服务或服务来完成非常专业的任务。这意味着选择来自不同提供商的不同服务来执行不同的任务，但要尽可能高效地完成。从长远来看，这也意味着不时地必须更换提供商和系统，但如果公司使用的核心系统是以此为考虑而设计的，这种方法也是有好处的。
- en: Shadow IT
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Shadow IT
- en: There is another way that a company can become a multi-cloud environment without
    even knowing it, this is usually called **Shadow IT**. If a company does not have
    a strict security policy and rules, some of the workers might start using services
    that are not part of the services that they are provided with by the company.
    It could be a cloud storage container, a videoconferencing system, or a mailing
    list provider. In bigger companies, it could even be that entire departments start
    using something from different cloud providers without even realizing it. All
    of a sudden, there is company data on a server that is outside of the scope that
    company's IT covers or is able to cover.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 还有另一种方式，公司可以成为一个多云环境，甚至不知道它，这通常被称为“影子IT”。如果公司没有严格的安全政策和规定，一些员工可能会开始使用公司未提供的服务。这可能是云存储容器、视频会议系统或邮件列表提供商。在大公司中，甚至可能是整个部门开始使用来自不同云提供商的东西，甚至没有意识到。突然之间，公司数据存储在公司IT范围之外或无法覆盖的服务器上。
- en: One of the better examples of this particular phenomenon was how the usage of
    video conferencing services changed during the COVID-19 virus worldwide pandemic.
    Almost all companies had an established communication system, usually a messaging
    system that covered the whole company. And then, literally overnight, the pandemic
    put all workers in their homes. Since communication is the crucial thing in running
    a company, everyone decided to switch to video and audio conferencing in the span
    of a week, globally. What happened next can and probably will become a bestselling
    book theme one day. Most companies tried to stick with their solution but almost
    universally that attempt failed on the first day, either because the service was
    too basic or too outdated to be used as both an audio and video conferencing solution,
    or because the service was not designed for the sheer volume of calls and requests
    and crashed.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 这种现象的一个更好的例子是COVID-19病毒全球大流行期间视频会议服务的使用方式发生了变化。几乎所有公司都有一个成熟的通信系统，通常是覆盖整个公司的消息系统。然后，一夜之间，大流行将所有工人都留在家中。由于沟通是公司运营的关键，每个人决定在一周内全球切换到视频和音频会议。接下来发生的事情可能会成为畅销书的主题。大多数公司试图坚持他们的解决方案，但几乎普遍地，这一尝试在第一天就失败了，要么是因为服务太基本或太过时，无法用作音频和视频会议解决方案，要么是因为服务没有设计用于如此大量的呼叫和请求而崩溃。
- en: People wanted to coordinate, so suddenly nothing was off the table. Every single
    video conferencing solution suddenly became a candidate. Companies, departments,
    and teams started experimenting with different conferencing systems, and cloud
    providers soon realized the opportunity – almost all the services instantly became
    free for even sizeable departments, allowing, in some cases, up to 150 people
    to participate in conferences.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 人们想要协调，所以突然之间一切都成了可能。每一个视频会议解决方案突然都成了候选。公司、部门和团队开始尝试不同的会议系统，云提供商很快意识到了这个机会——几乎所有服务立即对于规模可观的部门来说都是免费的，有些情况下，甚至允许多达150人参加会议。
- en: A lot of services crashed due to demand, but big providers mostly were able
    to scale up to the volume required to keep everything running.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 由于需求激增，很多服务崩溃了，但大型提供商大多能够扩展到所需的规模以保持一切运转。
- en: Since the pandemic was global, a lot of people decided they also needed a way
    to talk to their family. So individual users started using different services
    at home, and when they decided something worked, they used it at work. In a matter
    of days, companies became a multi-cloud environment with people using one provider
    for communication, another for email, a third for storage, and a fourth for backups.
    The change was so quick that sometimes IT was informed of the change a couple
    of days after the systems went online and the people were already using them.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 由于大流行是全球性的，很多人决定他们也需要一种与家人交流的方式。因此，个人用户开始在家使用不同的服务，当他们决定某种服务有效时，他们也在工作中使用它。在几天内，公司变成了一个多云环境，人们使用一个提供商进行通信，另一个提供商进行电子邮件，第三个提供商进行存储，第四个提供商进行备份。变化如此之快，以至于有时IT在系统上线后几天才被告知变化，而人们已经在使用它们。
- en: This change was so enormous that at the time we are writing this book, we cannot
    even try to predict how many of these services are going to become a regular part
    of the company toolset, once users realize something works better than the company-provided
    software. These services further prove this point by being able to work continuously
    through a major disaster like this, so there is only so much a company-wide software
    usage policy can do to stop this chaotic multi-cloud approach.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这种变化如此巨大，以至于在我们写这本书的时候，我们甚至无法预测有多少这些服务将成为公司工具组合的常规部分，一旦用户意识到某些东西比公司提供的软件更好用。这些服务通过能够在这样的重大灾难中持续工作进一步证明了这一点，因此公司范围的软件使用政策对于阻止这种混乱的多云方法能做的事情是有限的。
- en: Market share
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 市场份额
- en: One of the first things everyone mentions as soon as cloud computing companies
    and services are mentioned is the market share each one of them has. We also need
    to address this point, since we said that we are talking about the *biggest one*
    or the *second one*. Before multi-cloud became a thing, market share was divided
    basically between AWS, with the biggest market share; Azure as a distant second;
    followed by Google and a big group of *small* providers, such as Alibaba, Oracle,
    IBM, and such.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 每当提到云计算公司和服务时，每个人都会提到它们的市场份额。我们也需要解决这一点，因为我们说过我们在谈论“最大的”或“第二大”的。在多云成为一种趋势之前，市场份额基本上分为亚马逊AWS占据最大市场份额；微软Azure居于遥远的第二位；其次是谷歌和一大群“小”提供商，如阿里巴巴、甲骨文、IBM等。
- en: Once multi-cloud became a thing, the biggest problem became how to establish
    who had the biggest actual market share. All the big companies started using different
    cloud providers and just simply trying to add up the market share of the providers
    became difficult. From different polls, it is clear that Amazon is still the leading
    provider but that companies are slowly starting to use other providers together
    with Amazon services.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦多云成为一种趋势，最大的问题就是如何确定谁拥有最大的实际市场份额。所有大公司开始使用不同的云服务提供商，而简单地尝试累加提供商的市场份额变得困难。从不同的调查中可以清楚地看出，亚马逊仍然是领先的提供商，但公司们慢慢开始与亚马逊服务一起使用其他提供商。
- en: What this means is that, right now, AWS is still by far the cloud provider of
    choice but the choice itself is no longer about a single provider. People are
    using other providers as well.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着，目前，AWS仍然是首选的云服务提供商，但选择本身不再仅限于单一提供商。人们也在使用其他提供商。
- en: Big infrastructure but no services
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 大型基础设施但没有服务
- en: Sometimes, trying to divide the market share also has another point of view
    that must be considered. If we are talking about cloud providers, we usually think
    that we are talking about companies that have the biggest infrastructure created
    to support cloud services. Sometimes, in reality, we are actually comparing those
    companies that have the biggest portfolio of the services on the market. What
    do we mean by this?
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，试图划分市场份额还有另一个必须考虑的观点。如果我们谈论云服务提供商，通常认为我们在谈论拥有最大基础设施来支持云服务的公司。有时，实际上，我们实际上在比较那些在市场上拥有最大服务组合的公司。我们指的是什么？
- en: There is a distinct company that has a big cloud presence but uses its own infrastructure
    almost exclusively to deliver its own content – Facebook. Although it's hard to
    compare infrastructure sizes in terms of the number of servers, data centers,
    or any other metric, since those numbers are a closely guarded secret, Facebook
    has an infrastructure that is in the same order of magnitude in size as AWS. The
    real difference is that this infrastructure is not going to serve services for
    third parties, and in reality, it was never meant to do so; everything that Facebook
    created was tailor-made to support itself, including choosing locations for the
    data centers, configuring and deploying hardware, and creating software. Facebook
    is not going to suddenly turn into another AWS; it's too big to do that. Available
    infrastructure does not always correlate with cloud market share.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 有一个明显的公司拥有庞大的云存在，但几乎完全使用自己的基础设施来提供自己的内容 - Facebook。尽管很难通过服务器数量、数据中心或任何其他指标来比较基础设施的规模，因为这些数字是严格保密的，但Facebook的基础设施规模与AWS相当。真正的区别在于，这种基础设施不会为第三方提供服务，实际上，它从来就不是为此而设计的；Facebook创建的一切都是为了支持自身，包括选择数据中心的位置、配置和部署硬件以及创建软件。Facebook不会突然变成另一个AWS；它太大了。可用的基础设施并不总是与云市场份额相关。
- en: Pricing
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 定价
- en: Another topic we have to cover, if just to mention it, is the one of pricing.
    Almost every mention of the cloud in this book is technical. We compared probably
    every possible metric that made any sense, from **IOPS**, through **GHz**, to
    **PPS** on the network side, but the cloud is not only a technical problem – when
    you have to put it in use, someone has to pay for it.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个我们必须涵盖的话题，即使只是提及，就是定价。本书中几乎每次提到云都是技术性的。我们比较了可能有意义的每一个指标，从**IOPS**，通过**GHz**，到网络端的**PPS**，但云不仅仅是一个技术问题
    - 当你必须将其投入使用时，有人必须为此付费。
- en: Pricing is a hot topic in the cloud world since the competition is fierce. All
    the cloud providers have their pricing strategies, and rebates and special deals
    are almost the norm, and all that turns understanding pricing into a nightmare,
    especially if you are new to all the different models. One thing is certain, all
    the providers will say that they are going to charge you only for what you use
    but defining what they actually mean by that can be a big problem.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 定价是云世界中的热门话题，因为竞争激烈。所有云服务提供商都有他们的定价策略，折扣和特别交易几乎成为常态，所有这些使得理解定价变成一场噩梦，特别是对于那些对所有不同模式都是新手的人。有一点是确定的，所有提供商都会说他们只会按照你的使用量收费，但是定义他们实际指的是什么可能会成为一个大问题。
- en: 'When starting to plan the costs of deployment, you should first stop and try
    to define what you need, how much of it you need, and whether you are using the
    cloud in the way it is meant to be used. By far the most common mistake is to
    think that the cloud is in any form similar to using a normal server. The first
    thing people notice is the price of a particular instance, in a particular data
    center, running a particular configuration. The price will usually be either the
    monthly cost of the instance, and will usually be prorated, so you will pay only
    for the part that you use, or the price will be given for a different time unit
    – per day, per hour, or maybe even per second. This should be your first clue:
    you pay for using the instance, so in order to keep the costs down, do not keep
    your instances running all the time. This also means that your instances must
    be designed to be quickly brought up and down on demand so using the *standard*
    approach of installing a single or multiple servers and running them all the time
    is not necessarily a good option here.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始规划部署成本时，你应该首先停下来，尝试定义你需要什么，你需要多少，以及你是否正在以云的方式使用它。迄今为止最常见的错误是认为云在任何形式上都类似于使用普通服务器。人们首先注意到的是特定实例在特定数据中心运行特定配置的价格。价格通常要么是实例的月费用，并且通常是按比例计算的，因此你只支付你使用的部分，要么价格是以不同的时间单位给出
    - 每天、每小时，甚至每秒。这应该是你的第一个线索：你支付使用实例的费用，因此为了降低成本，不要让你的实例一直运行。这也意味着你的实例必须被设计成可以根据需求快速启动和关闭，因此使用安装单个或多个服务器并一直运行它们的*标准*方法在这里不一定是一个好选择。
- en: 'When choosing instances, the options are literally too numerous to name here.
    All the cloud providers have their own idea of what people need, so you can not
    only choose simple things such as the number of processors or the amount of memory
    but also get an OS preinstalled, and get wildly varied types of storage and networking
    options. Storage is an especially complicated topic we are just going to quickly
    scratch the surface of here and only mention later. All the cloud providers offer
    two things – some sort of storage meant to be attached to instances, and some
    sort of storage that is meant to be used as a service. What a given provider offers
    can depend on the instance you are trying to request, the data center you are
    trying to request it in, and a number of other factors. Expect that you will have
    to balance three things: capacity, pricing, and speed. Of course, here, we are
    talking about instance storage. Storage as a service is even more complicated
    and with that, you have to think about pricing and capacity, but also about other
    factors like latency, bandwidth, and so on.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在选择实例时，选项实在太多，这里无法一一列举。所有的云提供商都有自己关于人们需求的想法，所以你不仅可以选择简单的东西，比如处理器数量或内存量，还可以获得预安装的操作系统，以及各种各样的存储和网络选项。存储是一个特别复杂的话题，我们在这里只是简单地触及一下，并且稍后再提及。所有的云提供商都提供两种东西
    - 一些用于连接到实例的存储，以及一些用作服务的存储。一个给定的提供商提供的东西可能取决于你尝试请求的实例，你尝试在其中请求的数据中心，以及其他一些因素。预期你将不得不平衡三件事：容量、定价和速度。当然，在这里，我们谈论的是实例存储。作为服务的存储更加复杂，你不仅需要考虑定价和容量，还需要考虑其他因素，比如延迟、带宽等等。
- en: For example, AWS enables you to choose from a variety of services that go from
    database storage, file storage, and long-term backup storage, to different types
    of block and object storage. In order to use these services optimally, you need
    to first understand what is being offered, how it's being offered, what the different
    costs involved are, and how to use them to your advantage.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，AWS让你可以选择各种服务，从数据库存储、文件存储和长期备份存储，到不同类型的块和对象存储。为了最佳地使用这些服务，你需要首先了解提供了什么，以什么方式提供，涉及了哪些不同的成本，以及如何利用它们。
- en: Another thing that you will notice quickly is that when the cloud providers
    said that everything is a service, they really meant it. It is completely possible
    to have a running application without having a single server instance. Tasks can
    be accomplished by stitching different services together, and this is by design.
    This creates an enormously flexible infrastructure, one that scales quickly and
    easily, but requires not only a different way of writing code but a completely
    different mindset when designing the solution you need. If you have no experience,
    find an expert, since this is the fundamental problem with your solution. It has
    to run on the cloud, not be running on your virtual machines that happen to be
    in the cloud.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 你会很快注意到的另一件事是，当云提供商说一切都是服务时，他们是认真的。完全有可能运行一个应用程序而没有一个单独的服务器实例。通过将不同的服务拼接在一起可以完成任务，这是有意设计的。这创造了一个极其灵活的基础设施，一个可以快速、轻松扩展的基础设施，但不仅需要一种不同的编写代码的方式，还需要一种完全不同的思维方式来设计你需要的解决方案。如果你没有经验，找一个专家，因为这是你解决方案的根本问题。它必须在云上运行，而不是在云中的虚拟机上运行。
- en: Our advice to you is simple – *read a lot of documentation*. All the providers
    have excellent resources that will enable you to understand what their service
    provides, and how, but what the thousands of pages will not tell you is how it
    compares to the competition, and more importantly, what is the optimal way of
    connecting the services together. When paying for cloud services, expect that
    you will make a mistake once in a while and pay for it. This is why it's useful
    to use a pay-as-you-go option when getting services deployed – if you make a mistake,
    you will not run up a huge bill; your infrastructure will simply stop.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 我们给你的建议很简单 - *多读文档*。所有的提供商都有出色的资源，可以让你了解他们的服务提供了什么，以及如何提供，但这些数千页的文档不会告诉你它与竞争对手相比如何，更重要的是，连接服务的最佳方式是什么。在支付云服务时，预期你会偶尔犯错并为此付费。这就是为什么在部署服务时使用按需付费选项是有用的
    - 如果你犯了一个错误，你不会产生巨额账单；你的基础设施将会停止。
- en: The other thing to mention when talking about pricing is that everything costs
    a little, but the composite price for a given configuration can be huge. Any additional
    resource will cost money. An *internal link between servers*, *external IP address*,
    *firewall*, *load balancer*, *virtual switch*, these are all the things that we
    usually don't even think about when designing infrastructure, but once we need
    them in the cloud, they can become expensive. Another thing to expect is that
    some of the services have different contexts – for example, network bandwidth
    can have a different price if you are transferring data between instances or to
    the outside world. The same goes for storage – as we mentioned earlier in this
    chapter, most providers will charge you different prices when storing and getting
    data out of the cloud.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 谈到定价时要提及的另一件事是，一切都有一点成本，但给定配置的综合价格可能会很高。任何额外的资源都会花钱。*服务器之间的内部链接*，*外部IP地址*，*防火墙*，*负载均衡器*，*虚拟交换机*，这些通常在设计基础设施时我们甚至都不会考虑的东西，但一旦我们在云中需要它们，它们就会变得昂贵。另一个要预料的事情是，一些服务有不同的上下文
    - 例如，如果你在实例之间传输数据或者传输到外部世界，网络带宽的价格可能会不同。存储也是一样 - 正如我们在本章前面提到的，大多数提供商在存储和从云中获取数据时会向你收取不同的价格。
- en: Data centers
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据中心
- en: A couple of times in this chapter, we have mentioned **data centers**, and it
    is important that we talk a little bit about them. Data centers are at the core
    of the cloud infrastructure, and in more ways than you may think of. When we talked
    about a lot of servers, we mentioned that we usually group them into racks, and
    put the racks into data centers. As you are probably aware, a data center is in
    its essence a group of racks with all the infrastructure that servers need to
    function optimally, both in terms of power and data, but also when it comes to
    cooling, securing, and all the other things required to keep the servers running.
    They also need to be logically divided into **risk zones** that we usually call
    **fault domains**, so that we can avert various risks associated with the *we
    deployed everything on one rack* or *we deployed everything on one physical server*
    scenarios.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们已经几次提到了数据中心，重要的是我们谈一下它们。数据中心是云基础设施的核心，而且方式远不止你所想的那样。当我们谈论大量服务器时，我们提到我们通常将它们分组放入机架，并将机架放入数据中心。你可能知道，数据中心本质上是一组带有所有服务器需要的基础设施的机架，无论是在电源和数据方面，还是在冷却、保护和保持服务器运行所需的其他方面。它们还需要被逻辑地划分为我们通常称之为“故障域”的“风险区域”，以便我们可以避免与“我们把所有东西都部署在一个机架上”或“我们把所有东西都部署在一个物理服务器上”的各种风险相关的问题。
- en: A data center is a complex infrastructure element in any scenario since it requires
    a combination of things to be efficient, secure, and redundant. Putting a group
    of servers in a rack is easy enough, but providing *cooling* and *power* is not
    a simple task. Add to that the fact that the cooling, power, and data all have
    to be *redundant* if you want your servers to work, and that all that needs to
    be secure, both from fires, floods, earthquakes and people, and the cost of running
    a real data center can be high. Of course, a data center running a couple of hundred
    servers is not as complex as the one running thousands or even tens of thousands,
    and the prices rise with the size of the facility. Add to that that having multiple
    data centers creates additional infrastructure challenges in connecting them so
    costs add up.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何情况下，数据中心都是复杂的基础设施元素，因为它需要一系列因素的组合才能高效、安全和冗余。将一组服务器放入机架中是相当容易的，但提供冷却和电源却不是一件简单的任务。此外，如果你想让你的服务器工作，冷却、电源和数据都必须是冗余的，而且所有这些都需要保护，不仅免受火灾、洪水、地震和人为破坏，而且真正运行数据中心的成本可能很高。当然，运行几百台服务器的数据中心并不像运行数千台甚至数万台的数据中心那样复杂，而且随着设施规模的增加，价格也会上涨。此外，拥有多个数据中心会在连接它们时产生额外的基础设施挑战，因此成本会不断增加。
- en: Now multiply that cost by a hundred since this is the number of data centers
    each of the cloud providers keep around the world. Some of the centers are small,
    some are huge but the name of the game is simple – *networking*. In order to be
    a truly global provider, all of them have to have a data center, or a couple of
    servers at least, as close to you as possible. If you are reading this in one
    of the bigger cities in almost any big country in the world, chances are there
    is an AWS, Microsoft, or Google-owned server in a radius of 100 miles from you.
    All the providers try to have at least one data center in every big city in every
    country since that can enable them to offer a range of services extremely quickly.
    This concept is called **Point of Contact** (**POC**) and means that when connecting
    to the provider's cloud, you just need to get to the nearest server, and after
    that, the cloud will make sure your services are as quick as possible.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 现在将这个成本乘以一百，因为这是每个云提供商在世界各地保留的数据中心数量。一些中心很小，一些很大，但游戏的名字很简单——*网络*。为了成为一个真正的全球提供商，所有这些中心都必须有一个数据中心，或者至少有几台服务器，尽可能靠近你。如果你正在世界上几乎任何一个大国家的大城市中阅读这篇文章，很可能在你的100英里半径范围内有一个亚马逊、微软或谷歌拥有的服务器。所有提供商都努力在每个大城市的每个国家至少有一个数据中心，因为这可以让他们极快地提供一系列服务。这个概念被称为**接触点**（**POC**），意味着当连接到提供商的云时，你只需要到达最近的服务器，之后云将确保你的服务尽可能快速。
- en: But when we are talking about data centers that actually belong to Amazon or
    the others, we are still dealing with a large-scale operation. Here, numbers are
    in the hundreds, and their location is also a secret, mainly for security reasons.
    They all have a few things in common. They are a highly automated operation situated
    somewhere in the vicinity of a major power source, a major source of cooling,
    or a major data hub. Ideally, they would be placed in a spot that has all those
    three things, but that is usually not possible.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 但是当我们谈论实际属于亚马逊或其他公司的数据中心时，我们仍然在处理大规模的运营。在这里，数字通常是以百计计算的，它们的位置也是秘密的，主要是出于安全原因。它们都有一些共同点。它们是高度自动化的运营，位于主要电源、主要冷却源或主要数据中心附近。理想情况下，它们应该被放置在一个同时具备这三种条件的地方，但通常这是不可能的。
- en: Placement is the key
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 位置是关键。
- en: Different companies have different strategies since choosing a good place to
    build a data center can mean a lot of cost savings. Some even go to extremes.
    Microsoft, for instance, has a data center completely submerged in the ocean to
    facilitate cooling.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 不同的公司有不同的策略，因为选择一个建立数据中心的好地方可以节省大量成本。有些公司甚至走向了极端。例如，微软有一个完全被浸入海洋中以便进行冷却的数据中心。
- en: 'When providing a service for a particular user, your main concern is usually
    speed and latency, and that in turn means that you want your server or your service
    to run in the data center that is closest to the user. For that purpose, all cloud
    providers divide their data centers geographically, which in turn enables administrators
    to deploy their services in the optimal part of the internet. But at the same
    time, this creates a typical problem with resources – there are places on the
    planet that have a small number of available data centers but are heavily populated,
    and there are places that are quite the opposite. This in turn has a direct influence
    on the price of resources. When we talked about pricing, we mentioned different
    criteria; now we can add another one – location. The location of a data center
    is usually given as a **region**. This means that AWS, or any other provider for
    that matter, is not going to give you the location of their data center, but instead
    will say *users in this region would be best served by this group of servers*.
    As a user, you have no idea where the particular servers are, but instead, you
    only care about the region as given to you by the provider. You can find the names
    of service regions and their codes here:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 为特定用户提供服务时，你通常关心的是速度和延迟，这意味着你希望你的服务器或服务在离用户最近的数据中心运行。为此，所有云提供商都会根据地理位置划分他们的数据中心，这样管理员就可以在互联网的最佳部分部署他们的服务。但与此同时，这也会带来资源的典型问题
    - 地球上有一些地方可用的数据中心很少，但人口密集，也有一些地方则相反。这反过来直接影响资源的价格。当我们谈到定价时，我们提到了不同的标准；现在我们可以再添加一个
    - 地点。数据中心的位置通常被称为“区域”。这意味着AWS，或者其他任何提供商，都不会告诉你他们的数据中心的位置，而是会说“在这个区域的用户最适合使用这组服务器”。作为用户，你不知道特定服务器在哪里，而是只关心提供商给你的区域。你可以在这里找到服务区域的名称和代码：
- en: '![Figure 13.1 – Service regions on AWS with the names used in the configuration'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.1 - AWS上使用的配置名称的服务区域'
- en: '](img/B14834_13_01.jpg)'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B14834_13_01.jpg)'
- en: Figure 13.1 – Service regions on AWS with the names used in the configuration
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.1 - AWS上使用的配置名称的服务区域
- en: Choosing a service provided by a region that is in heavy demand can be expensive,
    and that same service can be much cheaper if you choose a server that is somewhere
    else. This is the beauty of the cloud – you can use the services that suit you
    and your budget.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 选择一个需求量大的地区提供的服务可能会很昂贵，而选择其他地方的服务器可能会便宜得多。这就是云的美妙之处 - 你可以使用适合你和你的预算的服务。
- en: Sometimes price and speed are not the most important things. For example, legal
    frameworks such as **GDPR**, a European regulation on personal data collection,
    processing, and movement, basically states that companies from Europe must use
    a data center in Europe since they are covered by the regulation. Using a US region
    in this case could mean that a company could be legally liable (unless the company
    running this cloud service is a part of some other framework that allows this
    – such as **Privacy Shield**).
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 有时价格和速度并不是最重要的事情。例如，法律框架，比如GDPR，欧洲关于个人数据收集、处理和移动的法规，基本上规定欧洲公司必须使用欧洲的数据中心，因为它们受到这项法规的保护。在这种情况下使用美国地区可能意味着公司可能会承担法律责任（除非运行这个云服务的公司是其他允许这样做的框架的一部分，比如隐私盾）。
- en: AWS services
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: AWS服务
- en: We need to talk a little bit about what AWS offers in terms of services since
    understanding services is one thing that will enable you to use the cloud appropriately.
    On AWS, all the available services are sorted into groups by their purpose. Since
    AWS has hundreds of services, the AWS management console, the first page you will
    see once you log in, will at first be a daunting place.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要谈一下AWS在服务方面提供了什么，因为理解服务是能够适当使用云的一件事。在AWS上，所有可用的服务都按照它们的目的分成了不同的组。由于AWS有数百种服务，AWS管理控制台，也就是你登录后会看到的第一个页面，一开始可能会让人望而生畏。
- en: 'You will probably be using the AWS Free Tier for learning purposes, so the
    first step is to actually open an AWS Free account. Personally, I used my own
    personal account. For the Free account, we need to use the following URL: [https://aws.amazon.com/free/](https://aws.amazon.com/free/),
    and follow along with the procedure. It just asks for a couple of pieces of information,
    such as email address, password, and AWS account name. It will ask you for credit
    card info as well, to make sure that you don''t abuse the AWS account.'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会使用AWS免费套餐进行学习，所以第一步是实际开设一个AWS免费账户。就我个人而言，我使用了自己的个人账户。对于免费账户，我们需要使用以下网址：[https://aws.amazon.com/free/](https://aws.amazon.com/free/)，并按照流程进行。它只需要一些信息，比如电子邮件地址、密码和AWS账户名称。它还会要求你提供信用卡信息，以确保你不会滥用AWS账户。
- en: 'After signing up, we can log in and get to the AWS dashboard. Take a look at
    this screenshot:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 注册后，我们可以登录并进入AWS仪表板。看一下这个屏幕截图：
- en: '![Figure 13.2 – Amazon services'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.2 - 亚马逊服务'
- en: '](img/B14834_13_02.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B14834_13_02.jpg)'
- en: Figure 13.2 – Amazon services
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.2 - 亚马逊服务
- en: Every single thing here is a link, and they all point to different services
    or pages with subservices. Moreover, this screenshot shows only about a third
    of all available services. There is no point in covering them all in this book;
    we are just going to use three of all these to show how AWS connects to our KVM
    infrastructure, but once you get the hang of it, you will slowly begin to understand
    how everything connects and what to use in a particular moment. What really helps
    is that AWS has great documentation, and that all the different services have
    provisioning wizards that help you find the thing you are looking for.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 这里的每一样东西都是一个链接，它们都指向不同的服务或带有子服务的页面。此外，这个屏幕截图只显示了所有可用服务的大约三分之一。在这本书中覆盖它们所有是没有意义的；我们只会使用其中三个来展示AWS如何连接到我们的KVM基础设施，但一旦你掌握了它，你就会慢慢开始理解一切是如何连接的，以及在特定时刻应该使用什么。真正有帮助的是AWS有很好的文档，所有不同的服务都有提供向导，帮助你找到你要找的东西。
- en: 'In this particular chapter, we are going to use these three services: **IAM**,
    **EC2**, and **S3**.'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将使用这三项服务：**IAM**、**EC2**和**S3**。
- en: All of these are of course abbreviations, but other services just use project
    names, such as **CloudFront** or **Global Accelerator**. In any case, your first
    point of order should be to start using them, not just read about them; it is
    much easier to understand the structure once you put it to good use.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，所有这些都是缩写，但其他服务只是使用项目名称，比如**CloudFront**或**Global Accelerator**。无论如何，您的首要任务应该是开始使用它们，而不仅仅是阅读它们；一旦您开始使用，理解结构就会变得更容易。
- en: 'In this chapter, we used a Free account, and almost everything we did was free,
    so there is no reason for you not to try to use the AWS infrastructure yourself.
    AWS tries to be helpful there as much as it can, so if you scroll down on the
    console page, you will find these helpful icons:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们使用了一个免费账户，几乎所有的操作都是免费的，因此您没有理由不尝试使用AWS基础设施。AWS尽其所能在那里提供帮助，因此如果您在控制台页面上向下滚动，您会发现这些有用的图标：
- en: '![Figure 13.3 – Some AWS wizards, documentation, and videos – all very helpful'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.3 - 一些AWS向导、文档和视频 - 都非常有用
- en: '](img/B14834_13_03.jpg)'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B14834_13_03.jpg)'
- en: Figure 13.3 – Some AWS wizards, documentation, and videos – all very helpful
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.3 - 一些AWS向导、文档和视频 - 都非常有用
- en: All of these are simple scenarios that will get you up and running in a couple
    of minutes, for free. Amazon realizes that first-time users of the cloud are overwhelmed
    with all the choices, so they try to get your first machine running in a couple
    of minutes to show you how easy it is.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些都是简单的场景，可以让您在几分钟内免费运行起来。亚马逊意识到，云的首次用户对所有选择感到不知所措，因此他们试图在几分钟内让您的第一台机器运行起来，以向您展示它有多么容易。
- en: Let's get you acquainted with the services we are going to use, which we're
    going to do by using a scenario. We want to migrate a machine that was running
    in our local KVM installation into Amazon AWS. We are going to go through the
    whole process step by step, but we first need to understand what we need. The
    first thing, obviously, is the ability to run virtual machines in the cloud. In
    the AWS universe, this is EC2 or Amazon Elastic Compute Cloud in full.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先了解一下我们将要使用的服务，我们将通过一个场景来做到这一点。我们想要将在本地KVM安装中运行的机器迁移到亚马逊AWS中。我们将逐步完成整个过程，但首先需要了解我们需要什么。显然，第一件事是能够在云中运行虚拟机。在AWS宇宙中，这就是EC2或亚马逊弹性计算云。
- en: EC2
  id: totrans-82
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: EC2
- en: EC2 is one of the few real core services that basically runs everything there
    is to run in the AWS cloud. It is a scalable computing capacity provider for the
    whole infrastructure. It enables running different instances or virtual computing
    environments, using various configurations of storage, memory, CPU, and networking,
    and it also provides everything else those instances need, including security,
    storage volumes, zones, IP addresses, and virtual networks. Some of these services
    are also available separately in case you need more complex scenarios, for example,
    a lot of different storage options exist, but the core functionality for the instances
    is provided by EC2\.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: EC2是少数几个真正的核心服务之一，基本上在AWS云中运行所有的东西。它是整个基础设施的可扩展计算能力提供者。它使得可以运行不同的实例或虚拟计算环境，使用各种存储、内存、CPU和网络配置，并且还提供这些实例所需的一切，包括安全性、存储卷、区域、IP地址和虚拟网络。其中一些服务也可以单独使用，以应对更复杂的场景，例如，存在许多不同的存储选项，但实例的核心功能由EC2提供。
- en: S3
  id: totrans-84
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: S3
- en: The full name of this service is actually Amazon Simple Storage Service, hence
    the name *Amazon S3*. The idea is to give you the ability to store and retrieve
    any amount of data, anytime you need it, using one or more of the methods offered.
    The most important concept we are going to use is an *S3 bucket*. A bucket is
    a logical storage element that enables you to group objects you store. Think of
    it as a name for a storage container you will later use to store things, whatever
    those things may be. You can name your buckets however you want, but there is
    a thing we must point out – the names of buckets have to be *globally unique*.
    This means that when you name a bucket, it must have a name that is not repeated
    anywhere else in any of the regions. This makes sure that your bucket will have
    a unique name, but it also means that trying to create a generic-sounding name
    such as `bucket1` or `storage` is probably not going to work.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 这项服务的全名实际上是亚马逊简单存储服务，因此有了*亚马逊S3*这个名字。其想法是为您提供存储和检索任意数量的数据的能力，随时使用提供的一种或多种方法。我们将使用的最重要的概念是*S3存储桶*。存储桶是一个逻辑存储单元，使您能够对您存储的对象进行分组。可以将其视为一个存储容器的名称，稍后您将使用它来存储任何东西。您可以随意命名存储桶，但有一点我们必须指出
    - 存储桶的名称必须是*全局唯一*的。这意味着当您命名一个存储桶时，它必须具有一个在任何地区中都没有重复的名称。这确保了您的存储桶将具有唯一的名称，但也意味着尝试创建一个听起来很普通的名称，比如`bucket1`或`storage`可能不会起作用。
- en: Once you create a bucket, you can upload and download data from it using the
    web, a CLI, or an API. Since we are talking about a global system, we must also
    point out that data is stored in the region you specify when creating the bucket,
    and is kept there unless you specify you want some form of multi-region redundancy.
    Have that in mind when deploying buckets, since once you start using the data
    in the bucket, your users or your instances need to get the data, and latency
    can become a problem. Due to legal and privacy concerns, data never leaves your
    dedicated region unless you explicitly specify otherwise.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 创建存储桶后，您可以使用Web、CLI或API从中上传和下载数据。由于我们谈论的是一个全球系统，我们还必须指出，数据存储在您创建存储桶时指定的区域，并且会一直保留在那里，除非您指定要进行某种形式的多区域冗余。在部署存储桶时要记住这一点，因为一旦您开始使用存储桶中的数据，您的用户或实例需要获取数据，延迟可能会成为一个问题。由于法律和隐私问题，除非您明确指定，数据永远不会离开您指定的区域。
- en: A bucket can store any number of objects, but there is a limit of 100 buckets
    per account. If that is not enough, you can request (and pay) to have that limit
    raised to 1,000 buckets.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 一个存储桶可以存储任意数量的对象，但每个账户的存储桶数量限制为100个。如果这不够用，您可以请求（并支付）将该限制提高到1,000个存储桶。
- en: Also, take a close look at other different options for storing and moving data
    – there are different types of storage that may or may not fit your needs and
    budget, such as, for example, S3 Glacier, which offers much cheaper options for
    storing large amounts of data, but is expensive if you need to get the data out.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，仔细研究存储和移动数据的其他不同选项 - 有不同类型的存储，可能符合或不符合您的需求和预算，例如，S3 Glacier，它提供了更便宜的存储大量数据的选项，但如果需要取出数据则会很昂贵。
- en: IAM
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: IAM
- en: AWS **Identity** **and Access Management** (**IAM**) is the service we need
    to use since it enables access management and permissions for all the objects
    and services. In our example, we are going to use it to create policies, users,
    and roles necessary to accomplish our task.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: AWS **身份** **和访问管理** (**IAM**) 是我们需要使用的服务，因为它可以为所有对象和服务提供访问管理和权限。在我们的示例中，我们将使用它来创建策略、用户和角色，以完成我们的任务。
- en: Other services
  id: totrans-91
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 其他服务
- en: There is simply no way to mention all the services AWS offers in simple form.
    We mentioned only the ones that were necessary and tried to point you in the right
    direction. It is up to you to try and see what your usage scenario is, and how
    to configure whatever satisfies your particular needs.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 简单地提及AWS提供的所有服务是不可能的。我们只提到了必要的服务，并试图指引您朝正确的方向。您需要尝试并了解您的使用场景是什么，以及如何配置满足您特定需求的内容。
- en: So far, we have explained what AWS is and how complex it can become. We have
    also mentioned the most commonly used parts of the platform and started explaining
    what their functions are. We are going to expand on that as we actually migrate
    a machine from our local environment into AWS. This is going to be our next task.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经解释了AWS是什么以及它有多复杂。我们还提到了平台上最常用的部分，并开始解释它们的功能是什么。随着我们实际将一台机器从本地环境迁移到AWS，我们将对此进行扩展。这将是我们的下一个任务。
- en: Preparing and converting virtual machines for AWS
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为AWS准备和转换虚拟机
- en: 'If you search for it on Google, migrating machines from KVM to AWS is easy,
    and all that is required is to follow the instructions at this link: [https://docs.amazonaws.cn/en_us/vm-import/latest/userguide/vm-import-ug.pdf](https://docs.amazonaws.cn/en_us/vm-import/latest/userguide/vm-import-ug.pdf)'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在Google上搜索，从KVM迁移机器到AWS是很容易的，所需的只是按照此链接上的说明进行操作：[https://docs.amazonaws.cn/en_us/vm-import/latest/userguide/vm-import-ug.pdf](https://docs.amazonaws.cn/en_us/vm-import/latest/userguide/vm-import-ug.pdf)
- en: If you actually try to do it, you will quickly understand that, given *basic*
    knowledge of the way AWS works, you will not be able to follow the instructions.
    This is why we choose to do this simple task as an example of using AWS to quickly
    create a working VM in the cloud.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您真的尝试去做，您会很快明白，只有对AWS工作方式有*基本*的了解，您就无法按照说明进行操作。这就是为什么我们选择以迁移一台机器作为使用AWS的示例，快速在云中创建一个可工作的虚拟机。
- en: What do we want to do?
  id: totrans-97
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们想要做什么？
- en: Let's define what we are doing – we decided to migrate one of our machines into
    the AWS cloud. Right now, our machine is running on our local KVM server, and
    we want it running on AWS as soon as possible.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们定义一下我们正在做的事情 - 我们决定将我们的一台机器迁移到AWS云中。现在，我们的机器正在本地的KVM服务器上运行，我们希望尽快将其运行在AWS上。
- en: 'The first thing we must emphasize is that there is no live migration option
    for this. There is no simple tool that you can point to the KVM machine and move
    it to AWS. We need to do it step by step, and the machine needs to be off. After
    quickly consulting the documentation, we created a plan. Basically, what we need
    to do is the following:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 我们必须强调的第一件事是，这里没有实时迁移选项。没有简单的工具可以直接将KVM机器迁移到AWS。我们需要一步一步地进行，并且机器需要处于关闭状态。在快速查阅文档后，我们制定了一个计划。基本上，我们需要做的是以下内容：
- en: Stop our virtual machine.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 停止我们的虚拟机。
- en: Convert the machine to a format that is compatible with the import tool used
    in AWS.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将机器转换为与AWS中使用的导入工具兼容的格式。
- en: Install the required AWS tools.
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装所需的AWS工具。
- en: Create an account that will be able to do the migration.
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个能够进行迁移的账户。
- en: Check whether our tools are working.
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查我们的工具是否正常工作。
- en: Create an S3 bucket.
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个S3存储桶。
- en: Upload the file containing our machine into the bucket.
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将包含我们机器的文件上传到存储桶中。
- en: Import the machine to EC2.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将机器导入EC2。
- en: Wait for the conversion to finish.
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 等待转换完成。
- en: Prepare the machine to start.
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 准备机器启动。
- en: Start the machine in the cloud.
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在云中启动机器。
- en: 'So, let''s start working on that:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，让我们开始着手做这件事：
- en: A good place to start is by taking a look at our machines on our workstation.
    We will be migrating the machine named `deploy-1` to test our AWS migration. It's
    a core installation of CentOS 7 and is running on a host using the same Linux
    distribution. For that, we obviously need to have privileges:![Figure 13.4 – Selecting
    a VM for our migration process
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个很好的开始是查看我们工作站上的机器。我们将迁移名为`deploy-1`的机器来测试我们的AWS迁移。它是一个基本的CentOS 7安装，运行在使用相同Linux发行版的主机上。因此，我们显然需要有权限：![图13.4
    - 选择迁移过程中的虚拟机
- en: '](img/B14834_13_04.jpg)'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B14834_13_04.jpg)'
- en: Figure 13.4 – Selecting a VM for our migration process
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.4 - 选择迁移过程中的虚拟机
- en: The next thing to do is to stop the machine – we cannot migrate machines that
    are running since we need to convert the volume that the machine is using in order
    to make it compatible with the import tool on EC2\.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来要做的是停止机器 - 我们无法迁移正在运行的机器，因为我们需要转换机器正在使用的卷，以使其与EC2上的导入工具兼容。
- en: 'The documentation available at [https://docs.aws.amazon.com/vm-import/latest/userguide/vmimport-image-import.html](https://docs.aws.amazon.com/vm-import/latest/userguide/vmimport-image-import.html)
    states that:'
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在[https://docs.aws.amazon.com/vm-import/latest/userguide/vmimport-image-import.html](https://docs.aws.amazon.com/vm-import/latest/userguide/vmimport-image-import.html)提供的文档中指出：
- en: '"When importing a VM as an image, you can import disks in the following formats:
    Open Virtualization Archive (OVA), Virtual Machine Disk (VMDK), Virtual Hard Disk
    (VHD/VHDX), and raw. With some virtualization environments, you would export to
    Open Virtualization Format (OVF), which typically includes one or more VMDK, VHD,
    or VHDX files, and then package the files into an OVA file."'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: “当将VM作为镜像导入时，可以导入以下格式的磁盘：Open Virtualization Archive (OVA)、Virtual Machine Disk
    (VMDK)、Virtual Hard Disk (VHD/VHDX)和原始格式。在某些虚拟化环境中，你可以导出为Open Virtualization Format
    (OVF)，它通常包括一个或多个VMDK、VHD或VHDX文件，然后将文件打包成一个OVA文件。”
- en: In our particular case, we are going to use the `.raw` format, since it is compatible
    with the import tool, and is fairly simple to convert from the `.qcow2` format
    KVM uses, into this format.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的特定情况下，我们将使用`.raw`格式，因为它与导入工具兼容，并且相对简单地从KVM使用的`.qcow2`格式转换为这种格式。
- en: 'Once our machine has been stopped, we need to do the conversion. Find the image
    on disk and use `qemu-img` to do the conversion. The only parameter is the files;
    the converter understands what it needs to do by detecting the extensions:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们的机器停止了，我们需要进行转换。找到磁盘上的镜像，并使用`qemu-img`进行转换。唯一的参数是文件；转换器通过检测扩展名来理解它需要做什么：
- en: '![Figure 13.5 – Converting a qcow2 image to raw image format'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.5 – 将qcow2镜像转换为原始镜像格式'
- en: '](img/B14834_13_05.jpg)'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B14834_13_05.jpg)'
- en: Figure 13.5 – Converting a qcow2 image to raw image format
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.5 – 将qcow2镜像转换为原始镜像格式
- en: 'We only need to convert the image file, containing the disk image for the system;
    other data was left out of the installation of the VM. We need to have in mind
    that we are converting to a format that has no compression so your file size can
    significantly increase:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 我们只需要转换包含系统磁盘镜像的镜像文件；其他数据被留在了VM的安装之外。我们需要记住，我们正在转换为一个没有压缩的格式，所以你的文件大小可能会显著增加：
- en: '![Figure 13.6 – The conversion process and the corresponding capacity change'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.6 – 转换过程和相应的容量变化'
- en: '](img/B14834_13_06.jpg)'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B14834_13_06.jpg)'
- en: Figure 13.6 – The conversion process and the corresponding capacity change
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.6 – 转换过程和相应的容量变化
- en: We can see that our file increased from 42 MB to 8 GB just because we had to
    remove the advanced features `qcow2` offers for data storage. The free tier offers
    only 5 GB of storage, so please make sure to configure the raw image size correspondingly.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到我们的文件从42MB增加到8GB，只是因为我们不得不删除`qcow2`为数据存储提供的高级功能。免费层只提供5GB的存储空间，所以请确保相应地配置原始镜像的大小。
- en: Our next obvious step is to upload this image to the cloud since the conversion
    is done there. Here, you can use different methods, either GUI or CLI (API is
    also a possibility but is way too complicated for this simple task).
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 我们接下来明显的步骤是将这个镜像上传到云端，因为转换是在那里完成的。在这里，你可以使用不同的方法，无论是GUI还是CLI（API也是可能的，但对于这个简单的任务来说太复杂了）。
- en: AWS has a CLI tool that facilitates working with services. It's a simple command-line
    tool compatible with most, if not all, the operating systems you can think of:![Figure
    13.7 – Downloading and uncompressing AWS CLI
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: AWS有一个CLI工具，可以方便地与服务一起工作。这是一个简单的命令行工具，兼容大多数，如果不是所有，你能想到的操作系统：![图13.7 – 下载和解压AWS
    CLI
- en: '](img/B14834_13_07.jpg)'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B14834_13_07.jpg)'
- en: Figure 13.7 – Downloading and uncompressing AWS CLI
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.7 – 下载和解压AWS CLI
- en: We're using `curl` to download a file, and its `-o` option to say what the name
    of the output file is going to be. Obviously, we need to unzip the ZIP file so
    that we can use it. The installation process of the tool is also referenced in
    the documentation. We are talking about a simple download, after which we have
    to extract the tool. Since there is no installer, the tool will not be in our
    path, so from now on, we need to reference it by the absolute path.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 我们正在使用`curl`下载文件，并使用`-o`选项来指定输出文件的名称。显然，我们需要解压ZIP文件以便使用它。工具的安装过程也在文档中有提及。我们正在谈论一个简单的下载，之后我们需要提取工具。由于没有安装程序，工具不会出现在我们的路径中，所以从现在开始，我们需要通过绝对路径引用它。
- en: Before we can use the AWS CLI, we need to configure it. This tool has to know
    how it is going to connect to the cloud, which user it's going to use, and has
    to have all the permissions granted in order for the tool to be able to get the
    data uploaded to AWS, and then imported and converted into the EC2 image. Since
    we do not have that configured, let's switch to the GUI on AWS and configure the
    things we need.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们使用AWS CLI之前，我们需要对其进行配置。这个工具必须知道它将如何连接到云端，它将使用哪个用户，并且必须拥有所有的权限，以便工具能够将数据上传到AWS，然后导入并转换为EC2镜像。由于我们还没有配置好，让我们切换到AWS的GUI并配置我们需要的东西。
- en: Important note
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: From now on, if something looks edited in the screenshots, it probably is. To
    enable things to work seamlessly, AWS has a lot of personal and account data on
    the screen.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 从现在开始，如果截图中的某些东西看起来被编辑了，那可能确实是。为了使事情能够无缝地运行，AWS在屏幕上有很多个人和账户数据。
- en: We will go into `Administrator`, a group named `administrators`, and apply appropriate
    permissions to them. Then we are going to join the user to the group. On the first
    screen, you can choose both options, `AdministratorAccess` policy for this example.
    This policy is very important, as it allows us to give all available permissions
    to the `Administrators` group that we're creating. Now select `tags` that can
    be used later for identity management.
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将进入`Administrator`，一个名为`administrators`的组，并为它们应用适当的权限。然后我们将把用户加入到这个组中。在第一个屏幕上，你可以选择`AdministratorAccess`策略作为示例。这个策略非常重要，因为它允许我们给我们正在创建的`Administrators`组赋予所有可用的权限。现在选择可以稍后用于身份管理的`tags`。
- en: 'Tagging can be done by using almost anything – name, email, job title, or whatever
    you need. We are going to leave this empty:'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 标记可以通过几乎任何东西来完成 – 名字、邮箱、职位，或者你需要的任何东西。我们将把这个留空：
- en: '![Figure 13.15 – Adding tags'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.15 – 添加标签'
- en: '](img/B14834_13_15.jpg)'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B14834_13_15.jpg)'
- en: Figure 13.15 – Adding tags
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.15 – 添加标签
- en: 'Let''s review what we have configured so far. Our user is a member of the group
    we just created, and they have to reset the password as soon as they log in:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回顾一下我们到目前为止配置的内容。我们的用户是我们刚刚创建的组的成员，他们在登录后必须立即重置密码：
- en: '![Figure 13.16 – Reviewing the user configuration with group, policy, and tag
    options'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.16 - 通过组、策略和标记选项审查用户配置'
- en: '](img/B14834_13_16.jpg)'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B14834_13_16.jpg)'
- en: Figure 13.16 – Reviewing the user configuration with group, policy, and tag
    options
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.16 - 通过组、策略和标记选项审查用户配置
- en: 'Accept these and add the user. You should be greeted with a reassuring green
    message box that will give you all the relevant details about what just happened.
    There is also a direct link to the console for management access, so you can share
    that with your new user:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 接受这些并添加用户。您应该会看到一个令人放心的绿色消息框，其中包含有关刚刚发生的所有相关细节。还有一个直接链接到控制台的管理访问，所以您可以与新用户共享：
- en: '![Figure 13.17 – User creation was successful'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.17 - 用户创建成功'
- en: '](img/B14834_13_17.jpg)'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B14834_13_17.jpg)'
- en: Figure 13.17 – User creation was successful
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.17 - 用户创建成功
- en: Once the user has been created, we need to enable their `Access Key`. This is
    a normal concept in using different command-line utilities. It enables us to provide
    a way for an application to do something as a given user, and not give the application
    the username or the password. At the same time, we can give each application its
    own key, so when we want to revoke access, we can simply disable the key.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 用户创建后，我们需要启用他们的`访问密钥`。这是使用不同命令行实用程序的正常概念。它使我们能够为应用程序提供一种作为特定用户执行某些操作的方式，而不提供应用程序的用户名或密码。同时，我们可以为每个应用程序提供自己的密钥，因此当我们想要撤销访问权限时，我们只需禁用密钥。
- en: 'Click on **Create access key** in the middle of the screen:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 点击屏幕中间的**创建访问密钥**：
- en: '![Figure 13.18 – Creating an access key'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.18 - 创建访问密钥'
- en: '](img/B14834_13_18.jpg)'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B14834_13_18.jpg)'
- en: Figure 13.18 – Creating an access key
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.18 - 创建访问密钥
- en: 'A couple of things need to be said about this key. There are two fields – one
    is the key itself, which is `Access key ID`, the other is the secret part of the
    key, which is `Secret access key`. In regard to security, this is completely the
    same as having a username and password for a particular user. You are given only
    one opportunity to see and download the key, and after that, it is gone. This
    is because we are dealing with hashed information here, and AWS is *not* storing
    your keys, but hashes of them. This means there is no way to retrieve a key if
    you didn''t save it. It also means if somebody grabs a key, let''s say by reading
    it off a screenshot, they can identify themselves as the user that has the key
    assigned. The good thing is that you can create as many keys as you want and revoking
    them is only a question of deleting them here. So, save the key somewhere safe:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 关于这个密钥需要说几件事。有两个字段 - 一个是密钥本身，即`访问密钥ID`，另一个是密钥的秘密部分，即`秘密访问密钥`。就安全性而言，这与为特定用户设置用户名和密码完全相同。您只有一次机会查看和下载密钥，之后就会消失。这是因为我们在这里处理的是散列信息，AWS
    *不*存储您的密钥，而是它们的散列。这意味着如果您没有保存密钥，就无法检索密钥。这也意味着如果有人获取了密钥，比如从截图中读取，他们可以将自己标识为拥有该密钥的用户。好处是您可以创建任意多的密钥，并且撤销它们只是删除它们的问题。因此，请将密钥保存在安全的地方：
- en: '![Figure 13.19 – Access key was created successfully'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.19 - 访问密钥已成功创建'
- en: '](img/B14834_13_19.jpg)'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B14834_13_19.jpg)'
- en: Figure 13.19 – Access key was created successfully
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.19 - 访问密钥已成功创建
- en: 'We are finished with the GUI for now. Let''s go back and install the AWS CLI:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在暂时完成了GUI。让我们回去安装AWS CLI：
- en: We just need to start the installation script and let it finish its job. This
    is done by starting the file called `install` in the `aws` directory:![Figure
    13.20 – Installing AWS CLI
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们只需要启动安装脚本并让它完成其工作。这可以通过在`aws`目录中启动名为`install`的文件来完成：![图13.20 - 安装AWS CLI
- en: '](img/B14834_13_20.jpg)'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B14834_13_20.jpg)'
- en: Figure 13.20 – Installing AWS CLI
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.20 - 安装AWS CLI
- en: Remember what we said about absolute paths? The `aws` command is not in the
    user path; we need to call it directly. Use `configure` as a parameter. Then,
    use the two parts of the key we saved in the previous step. From now on, every
    command we give using the AWS CLI is interpreted as having been run as the user
    `Administrator` that we just created on the cloud.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 记住我们说过的绝对路径吗？`aws`命令不在用户路径中；我们需要直接调用它。使用`configure`作为参数。然后，使用我们在上一步中保存的密钥的两部分。从现在开始，我们使用AWS
    CLI给出的每个命令都被解释为在云上刚刚创建的用户`Administrator`下运行。
- en: The next step is to create a bucket on S3\. This can be done in one of two ways.
    We can do it through our newly configured CLI, or we can use the GUI. We are going
    to take the "pretty" way and use the GUI in order to show how it looks and behaves.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是在S3上创建一个存储桶。有两种方法可以做到这一点。我们可以通过我们新配置的CLI来做，或者我们可以使用GUI。我们将采取“漂亮”的方式，使用GUI来展示它的外观和行为。
- en: 'Select S3 as the service in the console. There is a button at the top right
    labeled `importkvm` but choose a different name. Make sure that you take note
    of the `region` pull-down menu – this is the AWS location where your resource
    will be created. Remember that the name has to be unique; if everybody who bought
    this book tried to use this name, only the first one would succeed. Fun fact:
    if by the time you read this, we haven''t deleted this bucket, nobody will be
    able to create another with the same name, and only those of you reading this
    exact sentence will understand why. This wizard is quite big in terms of screen
    estate and might not fit on a single book page, so let''s split it into two parts:'
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在控制台中选择S3作为服务。右上角有一个标有`importkvm`的按钮，但选择一个不同的名称。确保记下`region`下拉菜单 - 这是AWS资源将被创建的位置。记住名称必须是唯一的；如果购买了这本书的每个人都尝试使用这个名称，只有第一个人会成功。有趣的事实是：如果到你读到这里的时候，我们还没有删除这个存储桶，没有人将能够创建另一个同名的存储桶，只有读到这句话的人会明白为什么。这个向导在屏幕空间方面非常大，可能无法适应单个书页，所以让我们将其分成两部分：
- en: '![Figure 13.21 – Wizard for creating an S3 bucket – selecting bucket name and
    region'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.21 – 创建S3存储桶的向导-选择存储桶名称和区域'
- en: '](img/B14834_13_21.jpg)'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B14834_13_21.jpg)'
- en: Figure 13.21 – Wizard for creating an S3 bucket – selecting bucket name and
    region
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.21 – 创建S3存储桶的向导-选择存储桶名称和区域
- en: 'The second part of this wizard is related to settings:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 这个向导的第二部分与设置相关：
- en: '![Figure 13.22 – Bucket settings'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.22 – 存储桶设置'
- en: '](img/B14834_13_22.jpg)'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B14834_13_22.jpg)'
- en: Figure 13.22 – Bucket settings
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.22 – 存储桶设置
- en: 'Do not change the access to public – there is really no need to; nobody but
    you is ever going to need to access this particular bucket and the file in it.
    By default, this option is pre-selected, and we should leave it as it is. This
    should be the end result:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 不要更改对公共的访问-实际上没有必要；除了您之外，没有人会需要访问这个特定的存储桶和其中的文件。默认情况下，此选项已预先选择，我们应该保持不变。这应该是最终结果：
- en: '![Figure 13.23 – S3 bucket created successfully'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.23 – S3存储桶创建成功'
- en: '](img/B14834_13_23.jpg)'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B14834_13_23.jpg)'
- en: Figure 13.23 – S3 bucket created successfully
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.23 – S3存储桶创建成功
- en: OK, having done that, it's time for some waiting on the next command to finish.
    In the next step, we are going to use our AWS CLI to copy the `.raw` file onto
    S3\.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 好了，做完这些，现在是等待下一个命令完成的时候了。在下一步中，我们将使用AWS CLI将`.raw`文件复制到S3。
- en: Important note
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: Depending on the type of account, from this point on, it is possible that we
    will have to pay for some of the services that we create since they may overdraft
    the *free tier* enabled on your account. If you do not enable anything expensive,
    you should be fine, but always take look at your **Cost management** dashboard,
    and check that you are still in the black.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 根据账户类型的不同，从这一点开始，我们可能需要为创建的一些服务付费，因为它们可能会超出您账户上启用的*免费套餐*。如果您没有启用任何昂贵的东西，那么应该没问题，但是始终要查看您的**成本管理**仪表板，并确保您仍然处于盈利状态。
- en: Uploading an image to EC2
  id: totrans-179
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将图像上传到EC2
- en: 'The next step is to upload an image to EC2 so that we can actually run that
    image as a virtual machine. Let''s start the upload process – this is why we installed
    the AWS CLI utility in the first place:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的步骤是将图像上传到EC2，以便我们实际上可以将该图像作为虚拟机运行。让我们开始上传过程-这就是我们首先安装AWS CLI实用程序的原因：
- en: Use the AWS CLI with the following parameters:![Figure 13.24 – Using the AWS
    CLI to copy a virtual machine raw image to an S3 bucket
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下参数使用AWS CLI：![图13.24 – 使用AWS CLI将虚拟机原始图像复制到S3存储桶
- en: '](img/B14834_13_24.jpg)'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B14834_13_24.jpg)'
- en: Figure 13.24 – Using the AWS CLI to copy a virtual machine raw image to an S3
    bucket
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.24 – 使用AWS CLI将虚拟机原始图像复制到S3存储桶
- en: 'That''s the end result. Since we are talking about 8 GB of data, you will have
    to wait for some time, depending on your upload speed. The syntax for the AWS
    CLI is pretty straightforward. You can use most Unix commands that you know, both
    `ls` and `cp` do their job. The only thing to remember is to give your bucket
    name in the following format as the destination: `s3://<bucketname>`.'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是最终结果。由于我们谈论的是8GB的数据，您将不得不等待一段时间，具体取决于您的上传速度。AWS CLI的语法非常简单。您可以使用大多数您知道的Unix命令，`ls`和`cp`都能正常工作。唯一要记住的是以以下格式给出您的存储桶名称作为目的地：`s3://<bucketname>`。
- en: After that, we do an `ls` – it will return the bucket names, but we can list
    their contents by using the bucket name. In this example, you can also see it
    took us something like 15 minutes to transfer the file from the moment we created
    the bucket:![Figure 13.25 – Transferring the file
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 之后，我们执行`ls`命令-它将返回存储桶名称，但我们可以通过使用存储桶名称来列出它们的内容。在这个例子中，您还可以看到我们从创建存储桶到传输文件大约花了15分钟的时间：![图13.25
    – 传输文件
- en: '](img/B14834_13_25.jpg)'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B14834_13_25.jpg)'
- en: Figure 13.25 – Transferring the file
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.25 – 传输文件
- en: And now starts the fun part. We need to import the machine into EC2\. To do
    that, we need to do a few things before we will be able to do the conversion.
    The problem is related to permissions – AWS services are unable to talk to each
    other by default. Therefore, you have to give explicit permission to each of them
    to do the importing. In essence, you have to let EC2 talk to S3 and get the file
    from the bucket.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 现在开始有趣的部分。我们需要将机器导入EC2。为此，我们需要在进行转换之前完成一些事情。问题与权限有关-AWS服务默认情况下无法相互通信。因此，您必须为它们中的每一个明确授予权限以进行导入。实质上，您必须让EC2与S3通信并从存储桶中获取文件。
- en: 'For upload purposes, we will introduce another AWS concept – `.json` files.
    A lot of things in AWS are stored in `.json` format, including all the settings.
    Since the GUI is rarely used, this is the quickest way to communicate data and
    settings, so we must also use it. The first file we need is `trust-policy.json`,
    which we are using to create a role that will enable the data to be read from
    the S3 bucket:'
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了上传目的，我们将介绍另一个AWS概念-`.json`文件。AWS中的许多东西都以`.json`格式存储，包括所有的设置。由于GUI很少被使用，这是传输数据和设置的最快方式，因此我们也必须使用它。我们需要的第一个文件是`trust-policy.json`，我们将使用它来创建一个角色，该角色将使数据能够从S3存储桶中读取：
- en: '[PRE0]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '{'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: '"Version":"2012-10-17",'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: '"Version":"2012-10-17",'
- en: '"Statement":['
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: '"Statement":['
- en: '{'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: '"Effect":"Allow",'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: '"Effect":"Allow",'
- en: '"Action":['
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: '"Action":['
- en: '"s3:GetBucketLocation",'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: '"s3:GetBucketLocation",'
- en: '"s3:ListBucket",'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: '"s3:ListBucket",'
- en: '"s3:GetObject"'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: '"s3:GetObject"'
- en: '],'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '],'
- en: '"Resource":['
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: '"Resource":['
- en: '"arn:aws:s3:::importkvm"'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: '"arn:aws:s3:::importkvm"'
- en: '"arn:aws:s3:::importkvm/*"'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '"arn:aws:s3:::importkvm/*"'
- en: '],'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: '],'
- en: '},'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '{'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: '"Effect":"Allow",'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: '"Effect":"Allow",'
- en: '"Action":['
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: '"Action":['
- en: '"s3:GetObject",'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: '"s3:GetObject",'
- en: '"s3:GetBucketLocation",'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: '"s3:GetBucketLocation",'
- en: '"s3:ListBucket",'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: '"s3:ListBucket",'
- en: '"s3:GetBucketAcl",'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: '"s3:GetBucketAcl",'
- en: '"s3:PutObject"'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: '"s3:PutObject"'
- en: '],'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: '],'
- en: '"Resource":['
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: '"Resource":['
- en: '"arn:aws:s3:::importkvm"'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: '"arn:aws:s3:::importkvm"'
- en: '"arn:aws:s3:::importkvm/*"'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: '"arn:aws:s3:::importkvm/*"'
- en: '],'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: '],'
- en: '},'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '{'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: '"Effect":"Allow",'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: '"Effect":"Allow",'
- en: '"Action":['
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: '"Action":['
- en: '"ec2:ModifySnapshotAttribute",'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: '"ec2:ModifySnapshotAttribute",'
- en: '"ec2:CopySnapshot",'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: '"ec2:CopySnapshot",'
- en: '"ec2:RegisterImage",'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: '"ec2:RegisterImage",'
- en: '"ec2:Describe*"'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: '"ec2:Describe*"'
- en: '],'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: '],'
- en: '"Resource":"*"'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: '"Resource":"*"'
- en: '}'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: ']'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: ']'
- en: '}'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE1]'
  id: totrans-232
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Execute these two commands, disregard whatever happens in the formatting –
    both of them are one-liners, and the filename is the last part of the command:'
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行这两个命令，忽略格式中发生的任何事情-它们都是一行命令，文件名是命令的最后部分：
- en: '[PRE2]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The file we''re creating needs to look like this:'
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们正在创建的文件需要如下所示：
- en: '[PRE3]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'As you can see, there is nothing special in the file, but when you create your
    own version, pay attention to use your name for the bucket and the disk image
    that is stored inside the bucket. Name the file whatever you want, and use that
    name to call the import process:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，文件中没有什么特别之处，但是当您创建自己的版本时，请注意使用您的名称作为存储桶和存储在存储桶中的磁盘映像的名称。随意命名文件，并使用该名称调用导入过程：
- en: '![Figure 13.27 – Final step – virtual machine deployment to AWS'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.27 - 最后一步 - 将虚拟机部署到AWS'
- en: '](img/B14834_13_27.jpg)'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B14834_13_27.jpg)'
- en: Figure 13.27 – Final step – virtual machine deployment to AWS
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.27 - 最后一步 - 将虚拟机部署到AWS
- en: Now you wait for the process to finish. What happens in this step is both the
    import and conversion of the image and the operating system you uploaded. AWS
    is not going to run your image as is; the system is going to change quite a few
    things to make sure your image can run on the infrastructure. Some users will
    also receive some changes, but more on that later.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 现在等待过程完成。在这一步中发生的是导入和转换图像以及您上传的操作系统。AWS不会按原样运行您的图像；系统会进行一些更改，以确保您的图像可以在基础设施上运行。一些用户也会收到一些更改，但稍后再说。
- en: 'The task will run in the background, and will not notify you when it completes;
    it is up to you to check on it. Luckily, there is a command that can be used in
    the AWS CLI called `describe-import-image-tasks` and this is the output:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 任务将在后台运行，并在完成时不会通知您；您需要自行检查。幸运的是，AWS CLI中有一个可以使用的命令叫做`describe-import-image-tasks`，这是输出：
- en: '![Figure 13.28 – Checking the status of our upload process'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.28 - 检查我们的上传过程的状态'
- en: '](img/B14834_13_28.jpg)'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B14834_13_28.jpg)'
- en: Figure 13.28 – Checking the status of our upload process
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.28 - 检查我们的上传过程的状态
- en: 'What this means is that we successfully imported our machine. Great! But the
    machine is still not running. Now it has become something called an **Amazon Machine
    Image** (**AMI**). Let''s check how to use that:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着我们成功导入了我们的机器。太棒了！但是机器还没有运行。现在它已经变成了一个叫做**Amazon Machine Image**（**AMI**）的东西。让我们看看如何使用它：
- en: Go to your EC2 console. You should be able to find the image under **AMIs**
    on the left side:![Figure 13.29 – Our AMI has been uploaded successfully and we
    can see it in the EC2 console
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到您的EC2控制台。您应该能够在左侧的**AMI**下找到图像：![图13.29 - 我们的AMI已成功上传，并且可以在EC2控制台中看到
- en: '](img/B14834_13_29.jpg)'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B14834_13_29.jpg)'
- en: Figure 13.29 – Our AMI has been uploaded successfully and we can see it in the
    EC2 console
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.29 - 我们的AMI已成功上传，并且可以在EC2控制台中看到
- en: Now click the big blue **Launch** button. There are a couple of steps you need
    to finish before your instance is running, but we are almost there. First, you
    need to choose your instance type. This means choosing what configuration fits
    your needs, according to how much of everything (CPU, memory, and storage) you
    need.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 现在点击大蓝色的**启动**按钮。在实例运行之前，您需要完成几个步骤，但我们几乎已经完成了。首先，您需要选择您的实例类型。这意味着根据您的需求选择适合您的配置，根据您需要的一切（CPU、内存和存储）。
- en: If you are using a region that is not overcrowded, you should be able to spin
    a *free tier* instance type that is usually called `t2.micro` and is clearly marked.
    In your free part of the account, you have enough processing credits to enable
    you to run this machine completely free:![Figure 13.30 – Selecting an instance
    type
  id: totrans-251
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您使用的是不拥挤的地区，您应该能够启动一个通常称为`t2.micro`的*免费层*实例类型，并且标记清晰。在您的免费账户中，您有足够的处理信用来使您能够完全免费运行这台机器：![图13.30
    - 选择实例类型
- en: '](img/B14834_13_30.jpg)'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B14834_13_30.jpg)'
- en: Figure 13.30 – Selecting an instance type
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.30 - 选择实例类型
- en: And now for some security. Amazon changed your machine and has implemented passwordless
    login to the administrator account using a key pair. Since we don't have a key
    yet, we will also need to create the key pair.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是一些安全性问题。亚马逊更改了您的机器，并已实施了无密码登录到管理员帐户，使用密钥对。由于我们还没有密钥，我们还需要创建密钥对。
- en: 'EC2 is going to put this key into the appropriate accounts on the machine you
    are just creating (all of them), so you can log in without using the password.
    A key pair is generated if you choose to do so, but Amazon will not store it –
    you have to do that:'
  id: totrans-255
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: EC2将把这个密钥放入您刚刚创建的机器上的适当帐户中（所有帐户），因此您可以无需使用密码登录。如果您选择这样做，将生成密钥对，但亚马逊不会存储它 - 您需要自行存储：
- en: '![Figure 13.31 – Selecting an existing key or creating a new one'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.31 - 选择现有密钥或创建新密钥'
- en: '](img/B14834_13_31.jpg)'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B14834_13_31.jpg)'
- en: Figure 13.31 – Selecting an existing key or creating a new one
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.31 - 选择现有密钥或创建新密钥
- en: That's it, your VM should now take a couple of minutes to launch. Just wait
    for the confirmation window. Once it is ready, connect to it using the context
    menu. You will get to the list of instances by clicking **View Instances** at
    the bottom right.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 就是这样，您的虚拟机现在应该需要几分钟来启动。只需等待确认窗口。一旦准备就绪，通过上下文菜单连接到它。点击右下角的**查看实例**，您将进入实例列表。
- en: 'To connect, you need to use the key pair provided to you, and you need an `ssh`
    client. Alternatively, you can use the embedded `ssh` that AWS provides. In any
    case, you need the outside address of the machine, and AWS also provides that,
    along with simple instructions:'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 要连接，您需要使用提供给您的密钥对，并且需要一个`ssh`客户端。或者，您可以使用AWS提供的嵌入式`ssh`。无论哪种情况，您都需要机器的外部地址，AWS也提供了这个，以及简单的说明：
- en: '![Figure 13.32 – Connect to your instance instructions'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.32 - 连接到您的实例说明'
- en: '](img/B14834_13_32.jpg)'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B14834_13_32.jpg)'
- en: Figure 13.32 – Connect to your instance instructions
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.32 - 连接到您的实例说明
- en: 'So, going back to our workstation, we can use the `ssh` command mentioned in
    the previous screenshot to connect to our newly started instance:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，回到我们的工作站，我们可以使用前一个截图中提到的`ssh`命令来连接到我们新启动的实例：
- en: '![Figure 13.33 – Connecting to our instance via SSH'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.33 - 通过SSH连接到我们的实例'
- en: '](img/B14834_13_33.jpg)'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B14834_13_33.jpg)'
- en: Figure 13.33 – Connecting to our instance via SSH
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.33 - 通过SSH连接到我们的实例
- en: 'That''s it. You have successfully connected to your machine. You can even keep
    it running. But be aware, if you have accounts or services that are on by default
    or have no password – you have, after all, pulled a VM out of your safe, home
    sandbox and stuck it on the big, bad internet. And one last thing: after you have
    your VM running, delete the file in the bucket to save you some resources (and
    money). After conversion, this file is no longer needed.'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 就是这样。你已经成功连接到你的机器。你甚至可以让它继续运行。但要注意，如果你的账户或服务是默认开启的或没有密码 - 毕竟，你已经从你安全的家庭沙盒中取出一个虚拟机，并将其放在了庞大而危险的互联网上。最后一件事：在你的虚拟机运行后，删除存储桶中的文件以节省资源（和金钱）。转换后，这个文件就不再需要了。
- en: The next topic on our list is how to extend our local cloud environments into
    hybrid cloud environments by using an application called Eucalyptus. This is a
    hugely popular process that a lot of enterprise companies go through as they scale
    their infrastructure beyond their local infrastructure. Also, this offers benefits
    in terms of scalability when needed – for example, when a company needs to scale
    its testing environment so an application that its employees are working on can
    be load-tested. Let's see how it's done via Eucalyptus and AWS.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 我们接下来要讨论的话题是如何通过使用名为尤加利林的应用程序将我们的本地云环境扩展到混合云环境。这是一个非常流行的过程，许多企业公司在扩展基础设施超出本地基础设施时都会经历。此外，当需要时，这也提供了可伸缩性方面的好处
    - 例如，当公司需要扩展其测试环境以便对员工正在开发的应用进行负载测试时。让我们看看通过尤加利林和AWS如何实现。
- en: Building hybrid KVM clouds with Eucalyptus
  id: totrans-270
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用尤加利林构建混合KVM云
- en: '**Eucalyptus** is a strange beast, and by that, we do not mean the plant. Created
    as a project to bridge the gap between private cloud services and AWS, Eucalyptus
    tries to recreate almost all AWS functionalities in a local environment. Running
    it is almost like having a small local cloud that is compatible with AWS, and
    that in turn uses almost the same commands as AWS. It even uses the same names
    for things as AWS does, so it works with buckets and all of that. This is on purpose,
    and with consent from Amazon. Having an environment like this is a great thing
    for everybody since it creates a safe space for developers and companies to deploy
    and test their instances.'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: '**尤加利林**是一个奇怪的东西，我们并不是指植物。作为一个项目，它旨在弥合私有云服务和AWS之间的差距，尤加利林试图在本地环境中重新创建几乎所有AWS功能。运行它几乎就像拥有一个与AWS兼容的小型本地云，而且它使用的几乎是与AWS相同的命令。它甚至使用与AWS相同的名称，因此它可以与存储桶等进行交互。这是有意为之，并得到了亚马逊的同意。拥有这样的环境对每个人来说都是一件好事，因为它为开发人员和公司部署和测试他们的实例创造了一个安全的空间。'
- en: 'Eucalyptus consists of several parts:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 尤加利林由几个部分组成：
- en: '![](img/B14834_13_34.jpg)'
  id: totrans-273
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B14834_13_34.jpg)'
- en: Figure 13.34 – Eucalyptus architecture (http://eucalyptus.cloud, official documentation)
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.34 - 尤加利林架构（http://eucalyptus.cloud，官方文档）
- en: As can be seen from the diagram, Eucalyptus is highly scalable.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 从图表中可以看出，尤加利林具有高度可伸缩性。
- en: An **availability zone** is one segment that can hold multiple nodes controlled
    by a cluster controller. **Zones** are then combined into the cloud itself, and
    this is controlled by the **Cloud Controller**. Connected to all this is the user
    services part that enables interaction between the user and the whole Eucalyptus
    stack.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: '**可用区**是可以容纳由集群控制器控制的多个节点的一个部分。**区域**然后组合成云本身，由**云控制器**控制。与所有这些相关联的是用户服务部分，它实现了用户与整个尤加利林堆栈之间的交互。'
- en: 'All in all, Eucalyptus uses five components that are sometimes referred to
    by their names from the diagram, and sometimes by their project names, much like
    OpenStack does:'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 总的来说，尤加利林使用了五个组件，有时会根据图表中的名称来指代它们，有时会根据它们的项目名称来指代，就像OpenStack一样：
- en: '**Cloud Controller** (**CLC**) is the central point of the system. It provides
    both the EC2 and the web interfaces and routes every task to itself. It is there
    to provide scheduling, allocation of resources, and accounting. There is one of
    these per cloud.'
  id: totrans-278
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**云控制器**（**CLC**）是系统的中心点。它提供EC2和Web界面，并将每个任务路由到自己。它负责调度、资源分配和计费。每个云都有一个这样的控制器。'
- en: '**Cluster Controller** (**CC**) is the part that manages each individual node
    and controls VMs and their execution. One is running in each availability zone.'
  id: totrans-279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**集群控制器**（**CC**）负责管理每个单独的节点，控制虚拟机及其执行。每个可用区都运行一个。'
- en: '**Storage Controller** (**SC**) is there to provide block-level storage, and
    to provide support for instances and snapshots but within the cluster. It is similar
    to EBS storage from AWS.'
  id: totrans-280
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**存储控制器**（**SC**）负责提供块级存储，并在集群内为实例和快照提供支持。它类似于AWS的EBS存储。'
- en: '**Node Controller** (**NC**) hosts instances and their endpoints. One is running
    for each node.'
  id: totrans-281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**节点控制器**（**NC**）托管实例及其端点。每个节点都运行一个。'
- en: '**eucanetd** is a service Eucalyptus uses to manage cloud networking, as we
    are talking about extending your local networks to the AWS cloud, at the end of
    the day.'
  id: totrans-282
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**eucanetd**是尤加利林用来管理云网络的服务，因为我们正在谈论将本地网络扩展到AWS云的问题。'
- en: 'When you get to know Eucalyptus, you''ll notice that it has a vast array of
    capabilities. It can do the following:'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 当你了解尤加利林时，你会注意到它具有广泛的功能。它可以做到以下几点：
- en: Work with volumes, instances, key pairs, snapshots, buckets, images, network
    objects, tags, and IAM.
  id: totrans-284
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与卷、实例、密钥对、快照、存储桶、镜像、网络对象、标签和IAM一起工作。
- en: Work with load balancers.
  id: totrans-285
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与负载均衡器一起工作。
- en: Work with AWS as an AWS integration tool.
  id: totrans-286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作为AWS集成工具与AWS合作。
- en: These are just some of the features worth mentioning at the start of your Eucalyptus
    journey. Eucalyptus has an additional command-line interface called **Euca2ools**,
    available as a package for all the major Linux distributions. Euca2ools is an
    additional tool that provides full API and CLI compatibility between AWS and Eucalyptus.
    This means that you can use a single tool to manage both and to perform *hybrid
    cloud* migrations. The tool is written in Python, so it is more or less platform-independent.
    If you want to learn more about this interface, make sure that you visit [https://wiki.debian.org/euca2ools](https://wiki.debian.org/euca2ools).
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 这些只是您开始Eucalyptus之旅时值得一提的一些功能。Eucalyptus还有一个名为**Euca2ools**的额外命令行界面，作为所有主要Linux发行版的软件包提供。Euca2ools是一个额外的工具，提供了AWS和Eucalyptus之间的完整API和CLI兼容性。这意味着您可以使用一个工具来管理两者，并执行*混合云*迁移。该工具是用Python编写的，因此它基本上是与平台无关的。如果您想了解更多关于这个接口的信息，请确保您访问[https://wiki.debian.org/euca2ools](https://wiki.debian.org/euca2ools)。
- en: How do you install it?
  id: totrans-288
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何安装？
- en: 'Installing Eucalyptus is easy, if you are installing a test machine and *following
    the instructions*, as we''ll describe in the last chapter of the book, [*Chapter
    16*](B14834_16_Final_ASB_ePub.xhtml#_idTextAnchor302), *Troubleshooting Guideline
    for the KVM Platform*, which deals with KVM troubleshooting. We are going to do
    just that – install a single machine that will hold all the nodes and part of
    the whole cloud. This is, of course, not even close to what is needed for a production
    environment, so on the Eucalyptus website, there are separate guides for this
    single-machine-does-all situation, and for installing production-level clouds.
    Make sure that you check the following link: [https://docs.eucalyptus.cloud/eucalyptus/4.4.5/install-guide-4.4.5.pdf](https://docs.eucalyptus.cloud/eucalyptus/4.4.5/install-guide-4.4.5.pdf).'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您正在安装测试机器并且*遵循说明*，那么安装Eucalyptus很容易，我们将在本书的最后一章[*第16章*](B14834_16_Final_ASB_ePub.xhtml#_idTextAnchor302)中描述，*KVM平台的故障排除指南*，这是处理KVM故障排除的章节。我们将要做的就是安装一个单机，它将容纳所有节点和整个云的一部分。当然，这远远不足以满足生产环境的需求，因此在Eucalyptus网站上，有单机一切都做的指南，以及安装生产级云的指南。请确保您查看以下链接：[https://docs.eucalyptus.cloud/eucalyptus/4.4.5/install-guide-4.4.5.pdf](https://docs.eucalyptus.cloud/eucalyptus/4.4.5/install-guide-4.4.5.pdf)。
- en: 'Installation is simple – just provide a minimally installed CentOS 7 system
    that has at least 120 GB of disk space and 16 GB of RAM. These are the minimums.
    If you go below them, you will have two kinds of problems:'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 安装很简单——只需提供一个至少有120GB磁盘空间和16GB内存的最小安装的CentOS 7系统。这是最低要求。如果低于这些要求，您将遇到两种问题：
- en: If you try to install on a machine that has less than 16 GB of RAM, the installation
    will probably fail.
  id: totrans-291
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您尝试在内存小于16GB的计算机上安装，安装可能会失败。
- en: The installation will, however, succeed on a machine with a smaller disk size
    than the minimum recommended, but you will almost immediately run out of disk
    space as soon as you start getting the deployment images installed.
  id: totrans-292
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 然而，安装将在磁盘大小小于最低建议的机器上成功，但一旦开始安装部署图像，您几乎立即就会耗尽磁盘空间。
- en: For production, everything changes – the minimums are 160 GB for the storage,
    or 500 GB of storage for nodes that are going to run Walrus and SC services. Nodes
    must run on bare metal; nested virtualization is not supported. Or, to be more
    precise, it will work but will negate any positive effect that the cloud can provide.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 对于生产环境，一切都会改变——存储的最低要求是160GB，或者对于将运行Walrus和SC服务的节点，需要500GB的存储。节点必须在裸金属上运行；不支持嵌套虚拟化。或者更准确地说，它可以工作，但会抵消云所能提供的任何积极效果。
- en: Having said all that, we have another point to make before you start installing
    – check for the availability of a new version, and have in mind that it is quite
    possible that there is a newer release than the one that we are working on in
    this book.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 说了这么多，我们在开始安装之前还有一点要提醒一下——检查新版本的可用性，并且要记住，很可能有比我们在本书中使用的版本更新的版本。
- en: Important note
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: At the time of writing, the current version was 4.4.5, with version 5 being
    actively worked on and close to being released.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本文时，当前版本是4.4.5，版本5正在积极开发中，即将发布。
- en: Having installed your base operating system – and it has to be a core system
    without a GUI, it's time to do the actual Eucalyptus installation. The whole system
    is installed using **FastStart**, so the only thing we have to do is to run the
    installer from the internet. The link is helpfully given on the front page of
    the following URL for the project – [https://eucalyptus.cloud](https://eucalyptus.cloud).
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 安装了基本操作系统后——它必须是一个没有图形界面的核心系统，现在是时候进行实际的Eucalyptus安装了。整个系统都是使用**FastStart**安装的，所以我们唯一需要做的就是从互联网上运行安装程序。链接很贴心地放在了项目的以下URL的首页上——[https://eucalyptus.cloud](https://eucalyptus.cloud)。
- en: 'There are some prerequisites for successful Eucalyptus installation:'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: Eucalyptus安装成功的一些先决条件：
- en: You have to be connected to the internet. There is no way to do a local installation
    this way, because everything is downloaded on the fly.
  id: totrans-299
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您必须连接到互联网。这种方式无法进行本地安装，因为一切都是动态下载的。
- en: You also have to have some IP addresses available for the system to use when
    installed. The minimum is 10, and they will get installed along with the cloud.
    The installer will ask for the range and will try to do everything without intervention.
  id: totrans-300
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您还必须有一些IP地址可供系统在安装时使用。最低要求是10个，它们将随着云一起安装。安装程序将要求范围，并尝试在没有干预的情况下完成一切。
- en: The only other prerequisites are a working DNS and some time.
  id: totrans-301
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 唯一的其他先决条件是一个可用的DNS和一些时间。
- en: 'Let''s start the installation by using the following command:'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过以下命令开始安装：
- en: '[PRE4]'
  id: totrans-303
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The installation looks strange if you''re seeing it for the first time. It
    kind of reminds us of some text-based games and services that we used in the 1990s
    (MUD, IRC):'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您是第一次看到安装，它看起来很奇怪。它有点让我们想起了上世纪90年代我们使用的一些基于文本的游戏和服务（MUD，IRC）：
- en: '![Figure 13.35 – Eucalyptus text-mode installation'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.35 – Eucalyptus文本模式安装'
- en: '](img/B14834_13_35.jpg)'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B14834_13_35.jpg)'
- en: Figure 13.35 – Eucalyptus text-mode installation
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.35 - Eucalyptus文本模式安装
- en: The information on the screen will tell you which log to follow if you want
    to see what is actually happening; otherwise, you can look at the installer and
    wait for the tea on the screen to get cold. In all honesty, on a decent machine,
    the installation will probably take around 15 minutes, or 10 minutes more if you
    install all the packages.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 屏幕上的信息将告诉您要遵循哪个日志，如果您想查看实际发生的事情；否则，您可以查看安装程序并等待屏幕上的茶变冷。老实说，在一台体面的机器上，安装可能需要大约15分钟，如果您安装所有软件包，则可能需要多10分钟。
- en: 'Once installed, Eucalyptus will provide you with a default set of credentials:'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 安装后，Eucalyptus将为您提供一组默认凭据：
- en: '`eucalyptus`'
  id: totrans-310
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`桉树`'
- en: '`admin`'
  id: totrans-311
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`管理员`'
- en: '`password`'
  id: totrans-312
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`密码`'
- en: Important note
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: 'In the event that the current installer breaks, the solutions to the subsequent
    problems are in the CiA video here: <video_URL>. There are known bugs, and may
    or may not be solved before this book hits the stores. Make sure that you check
    [https://eucalyptus.cloud](https://eucalyptus.cloud) and documentation before
    installation.'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 如果当前的安装程序出现问题，后续问题的解决方案在此CiA视频中： <video_URL>。已知存在一些问题，可能在本书上市之前解决，也可能不会解决。确保在安装之前检查[https://eucalyptus.cloud](https://eucalyptus.cloud)和文档。
- en: 'The information is case sensitive. Having finished the installation, you can
    connect to the machine using a web browser and log in. The IP address you are
    going to use is the IP address of the machine you just installed:'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 信息区分大小写。安装完成后，您可以使用Web浏览器连接到该机器并登录。您将使用的IP地址是刚刚安装的机器的IP地址：
- en: '![Figure 13.36 – Eucalyptus login screen'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.36 - 桉树登录屏幕'
- en: '](img/B14834_13_36.jpg)'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B14834_13_36.jpg)'
- en: Figure 13.36 – Eucalyptus login screen
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.36 - 桉树登录屏幕
- en: Once the system has finished installing, on the console of the newly installed
    system, you are going to be met with an instruction that will say to run the master
    tutorial contained on the system. The tutorial itself is a great way to get to
    know how the system looks, what the key concepts are, and how to use the command
    line. The only problem you may have is that the tutorial is a set of scripts that
    have some information hardcoded. One of the things you will notice straight away
    is that the links to the cloud versions of the image templates will not work unless
    you fix them – the links point to expired addresses. This is easy to solve but
    will catch you off guard.
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 系统安装完成后，在新安装的系统的控制台上，您将看到一条指示，要求运行系统上包含的主教程。教程本身是了解系统外观、关键概念以及如何使用命令行的好方法。您可能遇到的唯一问题是，教程是一组具有一些信息硬编码的脚本。您会立即注意到的一件事是，除非您修复它们，否则指向图像模板的云版本的链接将无法工作
    - 链接指向已过期的地址。这很容易解决，但会让您措手不及。
- en: 'On the other hand, by the time you read this, maybe the problem will be fixed.
    The tutorial on how to do this and all of its parts is offered in plain text mode
    on the machine Eucalyptus is running on. It''s not available in the GUI:'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，也许在您阅读此文时，问题已经解决。关于如何执行此操作以及其所有部分的教程以纯文本模式提供在Eucalyptus运行的机器上。它在GUI中不可用：
- en: '![Figure 13.37 – Starting a text-mode Eucalyptus master tutorial'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.37 - 启动文本模式Eucalyptus主教程'
- en: '](img/B14834_13_37.jpg)'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B14834_13_37.jpg)'
- en: Figure 13.37 – Starting a text-mode Eucalyptus master tutorial
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.37 - 启动文本模式Eucalyptus主教程
- en: 'The tutorial is extremely rudimentary in its appearance, but we liked it because
    it gave us a short but important overview of everything that Eucalyptus offers:'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 教程在外观上非常基本，但我们喜欢它，因为它为我们提供了对Eucalyptus提供的一切的简短但重要的概述：
- en: '![Figure 13.38 – Using the master tutorial to learn how to configure Eucalyptus'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.38 - 使用主教程学习如何配置Eucalyptus'
- en: '](img/B14834_13_38.jpg)'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B14834_13_38.jpg)'
- en: Figure 13.38 – Using the master tutorial to learn how to configure Eucalyptus
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.38 - 使用主教程学习如何配置Eucalyptus
- en: 'As you can see, everything is explained in detail, so you can really learn
    key concepts in a short amount of time. Go through the tutorial – it is well worth
    it. Another thing you can do from the command line as soon as you start up the
    system is to download a couple of new template images. The script for this is
    also started from the web, and is written in big letters on the official site,
    literally on the landing page located at the following URL (make sure that you
    scroll down a bit) – [https://www.eucalyptus.cloud/](https://www.eucalyptus.cloud/):'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: '正如您所看到的，一切都有详细说明，因此您可以在短时间内真正学习关键概念。浏览教程-它非常值得。一旦启动系统，您可以从命令行下载一些新的模板图像。此脚本也是从Web启动的，并且以大字体写在官方网站上，文字位于以下URL的首页上（确保您向下滚动一点）-
    [https://www.eucalyptus.cloud/](https://www.eucalyptus.cloud/):'
- en: '![Figure 13.39 – Downloading images to our Eucalyptus cloud'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.39 - 下载图像到我们的Eucalyptus云'
- en: '](img/B14834_13_39.jpg)'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B14834_13_39.jpg)'
- en: Figure 13.39 – Downloading images to our Eucalyptus cloud
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.39 - 下载图像到我们的Eucalyptus云
- en: 'Copy-paste this into the root prompt and, shortly, there will be a menu that
    will enable you to download images you may use. This is one of the simplest and
    most bullet-proof installations of templates we have ever seen, short of them
    being included in the initial download:'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 将此复制粘贴到根提示符中，不久将出现一个菜单，可让您下载可能使用的图像。这是我们见过的模板安装中最简单和最可靠的之一，除了它们包含在初始下载中：
- en: '![Figure 13.40 – Simple menu asking us to select which image we want to install'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.40 - 简单菜单要求我们选择要安装的图像'
- en: '](img/B14834_13_40.jpg)'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B14834_13_40.jpg)'
- en: Figure 13.40 – Simple menu asking us to select which image we want to install
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.40 - 简单菜单要求我们选择要安装的图像
- en: Choose one at a time, and they will get included in the image list.
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 一次选择一个，它们将包含在图像列表中。
- en: 'Now let''s switch to the web interface to see how it works. Log in using the
    credentials written above. You will be greeted with a well-designed dashboard.
    On the right, there are groups of functionalities that are most commonly used.
    The left part is reserved for the menu that holds links to all the services. The
    menu will autohide as soon as you move your mouse away from it, leaving only the
    most essential icons:'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们切换到Web界面，看看它是如何工作的。使用上面写的凭据登录。您将看到一个设计精良的仪表板。右侧是最常用的功能组。左侧是保留给包含所有服务链接的菜单。一旦您将鼠标移开，菜单将自动隐藏，只留下最基本的图标：
- en: '![Figure 13.41 – Eucalyptus management console'
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.41 - Eucalyptus管理控制台'
- en: '](img/B14834_13_41.jpg)'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B14834_13_41.jpg)'
- en: Figure 13.41 – Eucalyptus management console
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.41 - Eucalyptus管理控制台
- en: 'We already discussed most of the things on this page – just check the content
    in this chapter related to AWS and you''ll be in very familiar territory. Let''s
    try using this console. We are going to launch a new instance, just to get a feel
    for how Eucalyptus works:'
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经讨论了这个页面上的大部分内容 - 只需查看与AWS相关的本章内容，您就会非常熟悉。让我们尝试使用这个控制台。我们将启动一个新实例，只是为了感受一下Eucalyptus的工作方式：
- en: In the left part of the stack of services, there is an inviting green button
    labeled **Launch instance** – click on it. A list of the images that are available
    on the system will appear. We already used the script to grab some cloud images,
    so we have something to choose from:![Figure 13.42 – Selecting an image to run
    in the Eucalyptus cloud
  id: totrans-342
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在服务堆栈的左侧有一个诱人的绿色按钮标有**启动实例** - 点击它。将出现系统上可用的镜像列表。我们已经使用脚本抓取了一些云镜像，所以有可供选择的内容：![图13.42
    - 选择要在Eucalyptus云中运行的镜像
- en: '](img/B14834_13_42.jpg)'
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B14834_13_42.jpg)'
- en: Figure 13.42 – Selecting an image to run in the Eucalyptus cloud
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.42 - 选择要在Eucalyptus云中运行的镜像
- en: 'We chose to run Ubuntu from the cloud image. Choose **Launch** from the drop-down
    menu after you have selected the image you want. A new window opens, permitting
    you to create your virtual machine. In the dropdown or the instance type, we chose
    a machine that looked powerful enough to run our Ubuntu, but basically, any instance
    with over 1 GB of RAM will do fine. There is not much to change since we are preparing
    just one instance:'
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 我们选择从云镜像中运行Ubuntu。在选择完您想要的镜像后，从下拉菜单中选择**启动**。一个新窗口将打开，允许您创建虚拟机。在下拉菜单或实例类型中，我们选择了一个看起来足够强大以运行我们的Ubuntu的机器，但基本上，任何具有1GB以上RAM的实例都可以很好地运行。由于我们只准备了一个实例，所以没有太多要改变：
- en: '![Figure 13.43 – Launch a new instance wizard'
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.43 - 启动新实例向导'
- en: '](img/B14834_13_43.jpg)'
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B14834_13_43.jpg)'
- en: Figure 13.43 – Launch a new instance wizard
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.43 - 启动新实例向导
- en: The next configuration screen is related to security.
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个配置屏幕与安全有关。
- en: We have a choice of using the default key pair that was created on the Eucalyptus
    cloud or creating a new one. Only the public part of the key is stored in Eucalyptus,
    so we can use this key pair for authentication only if we downloaded the keys
    when we installed them. The process of creating keys is completely identical to
    the one used for AWS:![Figure 13.44 – Security configuration – selecting keys
    and an IAM role
  id: totrans-350
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以选择使用在Eucalyptus云上创建的默认密钥对，也可以创建一个新的。密钥的公共部分仅存储在Eucalyptus中，因此只有在安装时下载了密钥，我们才能使用这个密钥对进行身份验证。创建密钥的过程与用于AWS的过程完全相同：![图13.44
    - 安全配置 - 选择密钥和IAM角色
- en: '](img/B14834_13_44.jpg)'
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B14834_13_44.jpg)'
- en: Figure 13.44 – Security configuration – selecting keys and an IAM role
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.44 - 安全配置 - 选择密钥和IAM角色
- en: 'After clicking the **LAUNCH INSTANCE** button, your machine should boot. For
    testing purposes, we already started another machine earlier, so right now we
    have two of them running:'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**启动实例**按钮后，您的机器应该启动。出于测试目的，我们之前已经启动了另一台机器，所以现在我们有两台正在运行：
- en: '![Figure 13.45 – A couple of launched instances in the Eucalyptus cloud'
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.45 - Eucalyptus云中启动的一对实例'
- en: '](img/B14834_13_45.jpg)'
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B14834_13_45.jpg)'
- en: Figure 13.45 – A couple of launched instances in the Eucalyptus cloud
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.45 - Eucalyptus云中启动的一对实例
- en: The next step is trying to create a storage bucket.
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是尝试创建一个存储桶。
- en: 'Creating a storage bucket is easy, and looks very similar to what AWS enables
    you to do since Eucalyptus tries to be as similar to AWS as possible:'
  id: totrans-358
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建存储桶很容易，并且看起来与AWS让您可以做的非常相似，因为Eucalyptus试图尽可能与AWS相似：
- en: '![Figure 13.46 – Creating a bucket'
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.46 - 创建存储桶'
- en: '](img/B14834_13_46.jpg)'
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B14834_13_46.jpg)'
- en: Figure 13.46 – Creating a bucket
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.46 - 创建存储桶
- en: 'Since Eucalyptus is not as complex as AWS, especially in regard to policy and
    security, the security tab for the bucket is smaller, but has some very powerful
    tools, as you can see in the following screenshot:'
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 由于Eucalyptus不像AWS那样复杂，特别是在策略和安全方面，存储桶的安全选项卡较小，但具有一些非常强大的工具，如下面的屏幕截图所示：
- en: '![Figure 13.47 – Bucket security configuration'
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.47 - 存储桶安全配置'
- en: '](img/B14834_13_47.jpg)'
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B14834_13_47.jpg)'
- en: Figure 13.47 – Bucket security configuration
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.47 - 存储桶安全配置
- en: Now that we have installed, configured, and used Eucalyptus, it's time to move
    on to the next topic of our chapter, which is scaling out our Eucalyptus-based
    cloud to AWS.
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经安装、配置并使用了Eucalyptus，是时候转向本章的下一个主题，即将我们基于Eucalyptus的云扩展到AWS。
- en: Using Eucalyptus for AWS control
  id: totrans-367
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Eucalyptus控制AWS
- en: 'Do you remember the initial screen that showed you the login credentials, and
    we mentioned that you can also log in to AWS? Log out of your Eucalyptus console
    and get to the login screen. Click on **LOG IN TO AWS** this time:'
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 您还记得最初显示登录凭据的初始屏幕吗？我们提到您也可以登录到AWS。从Eucalyptus控制台注销并转到登录屏幕。这次点击**登录到AWS**：
- en: '![Figure 13.48 – Log on to AWS via Eucalyptus'
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.48 - 通过Eucalyptus登录AWS'
- en: '](img/B14834_13_48.jpg)'
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B14834_13_48.jpg)'
- en: Figure 13.48 – Log on to AWS via Eucalyptus
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.48 - 通过Eucalyptus登录AWS
- en: 'Try and use the auth key we created in the *Uploading an image to EC2* section,
    or create a new one for the `Administrator` user in AWS IAM. Copy and paste it
    into the AWS credentials, and you will have a fully working interface connected
    to your AWS account. Your dashboard will look almost the same, but will show the
    status of your AWS account:'
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试使用我们在*上传图像到EC2*部分创建的身份验证密钥，或者为AWS IAM中的`管理员`用户创建一个新的密钥。将其复制并粘贴到AWS凭据中，您将拥有一个完全可用的界面，连接到您的AWS帐户。您的仪表板看起来几乎一样，但会显示您的AWS帐户的状态：
- en: '![Figure 13.49 – Eucalyptus Management Console for AWS'
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.49 - Eucalyptus管理控制台用于AWS'
- en: '](img/B14834_13_49.jpg)'
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B14834_13_49.jpg)'
- en: Figure 13.49 – Eucalyptus Management Console for AWS
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.49 - Eucalyptus管理控制台用于AWS
- en: 'Let''s check we can see our buckets:'
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们检查一下我们是否能看到我们的存储桶：
- en: '![Figure 13.50 – Checking our AWS buckets'
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.50 - 检查我们的AWS存储桶'
- en: '](img/B14834_13_50.jpg)'
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B14834_13_50.jpg)'
- en: Figure 13.50 – Checking our AWS buckets
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.50 - 检查我们的AWS存储桶
- en: Notice that we not only see the bucket we used to test the AWS KVM import, but
    we also see the region we are running in, in the upper-right corner. Your account
    is given by its key name, not the actual user; this is simply because we are in
    fact logged in *programmatically*. Everything we click gets translated to API
    calls, and the returned data is then parsed and displayed to the user.
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们不仅看到了我们用来测试AWS KVM导入的存储桶，还看到了我们运行的区域，在右上角。您的帐户由其密钥名称给出，而不是实际用户；这仅仅是因为我们实际上是以*编程方式*登录的。我们点击的每个东西都被转换为API调用，然后返回的数据被解析并显示给用户。
- en: 'Our currently stopped instance is also here, but keep in mind that you will
    see it only if you choose the region you initially imported your instance into.
    In our case, it was `US West`, so our instance is there:'
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: 我们当前停止的实例也在这里，但请记住，只有在您选择最初导入实例的区域时才会看到它。在我们的情况下，它是`美国西部`，所以我们的实例就在那里：
- en: '![Figure 13.51 – Checking our AWS instances'
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.51 - 检查我们的AWS实例'
- en: '](img/B14834_13_51.jpg)'
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B14834_13_51.jpg)'
- en: Figure 13.51 – Checking our AWS instances
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.51 - 检查我们的AWS实例
- en: As you have probably noticed, Eucalyptus is a multi-faceted tool that's able
    to provide us with hybrid-cloud services. Basically, one of the key points of
    Eucalyptus is the fact that it gets you to an AWS-compatible level. So, if you
    start using it as a private solution and sometime in the future start thinking
    about moving to AWS, Eucalyptus has you covered. It's a de-facto standard solution
    for KVM-based virtual machines for that purpose.
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您可能已经注意到的那样，Eucalyptus是一个多方面的工具，能够为我们提供混合云服务。基本上，Eucalyptus的关键点之一是它使您达到了与AWS兼容的水平。因此，如果您开始将其用作私有解决方案，并且在将来的某个时候开始考虑转移到AWS，Eucalyptus已经为您考虑到了。对于基于KVM的虚拟机来说，它是一个事实上的标准解决方案。
- en: We will stop here with the AWS integration. The point of this chapter was, after
    all, to get you to see how Eucalyptus connects to AWS. You might see that this
    interface lacks functionality that AWS has, but can at the same time be more than
    enough to control a basic mid-size infrastructure – buckets, images, and instances
    from one place. Having tested the 5.0 beta 1 version, we can definitely tell you
    that the full 5.0 version should be quite a substantial upgrade when it comes
    out. The beta version already has many additional options and we're rather excited
    to see when the full release comes out.
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在这里结束AWS集成。毕竟，本章的重点是让您看到Eucalyptus如何连接到AWS。您可能会发现，这个界面缺少AWS具有的功能，但同时可能已经足够控制基本的中型基础设施-从一个地方控制存储桶、镜像和实例。经过测试5.0
    beta 1版本后，我们可以明确告诉您，完整的5.0版本一推出应该是相当大的升级。beta版本已经有许多额外的选项，我们对完整版本的发布感到非常兴奋。
- en: Summary
  id: totrans-387
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we covered a lot of topics. We introduced AWS as a cloud solution
    and did some cool things with it – we converted our virtual machine so that we
    can run in it, and made sure that everything works. Then we moved to Eucalyptus,
    to check how we can use it as a management application for our local cloud environment,
    and how to use it to extend our existing environment to AWS.
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们涵盖了许多主题。我们将AWS作为云解决方案进行了介绍，并对其进行了一些很酷的操作-我们转换了我们的虚拟机，以便我们可以在其中运行，并确保一切正常。然后我们转向Eucalyptus，以查看我们如何将其用作本地云环境的管理应用程序，以及如何将其用于扩展我们的现有环境到AWS。
- en: The next chapter takes us into the world of monitoring KVM virtualization by
    using the ELK stack. It's a hugely important topic, especially as companies and
    infrastructures grow in size – you just can't keep up with the organic growth
    of IT services by manually monitoring all possible services. The ELK stack will
    help you with that – just how much, you'll learn in the next chapter.
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章将带我们进入使用ELK堆栈监视KVM虚拟化的世界。这是一个非常重要的话题，特别是随着公司和基础设施的规模增长-您无法通过手动监视所有可能的服务来跟上IT服务的有机增长。ELK堆栈将帮助您解决这个问题-您将在下一章中了解到它有多大帮助。
- en: Questions
  id: totrans-390
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: What is AWS?
  id: totrans-391
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: AWS是什么？
- en: What are EC2, S3, and IAM?
  id: totrans-392
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: EC2、S3和IAM是什么？
- en: What is an S3 bucket?
  id: totrans-393
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: S3存储桶是什么？
- en: How do we migrate a virtual machine to AWS?
  id: totrans-394
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们如何将虚拟机迁移到AWS？
- en: Which tool do we use to upload a raw image to AWS?
  id: totrans-395
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们使用哪个工具将原始图像上传到AWS？
- en: How do we authenticate ourselves to AWS as a user?
  id: totrans-396
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们如何作为用户向AWS进行身份验证？
- en: What is Eucalyptus?
  id: totrans-397
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Eucalyptus是什么？
- en: What are the key services in Eucalyptus?
  id: totrans-398
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Eucalyptus中的关键服务是什么？
- en: What are availability zones? What are fault domains?
  id: totrans-399
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可用区是什么？故障域是什么？
- en: What are the fundamental problems of delivering Tier-0 storage services for
    virtualization, cloud, and HPC environments?
  id: totrans-400
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为虚拟化、云和HPC环境提供Tier-0存储服务的基本问题是什么？
- en: Further reading
  id: totrans-401
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'Please refer to the following links for more information regarding what was
    covered in this chapter:'
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: 有关本章涵盖内容的更多信息，请参考以下链接：
- en: 'Amazon AWS documentation: [https://docs.aws.amazon.com/](https://docs.aws.amazon.com/)'
  id: totrans-403
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Amazon AWS文档：[https://docs.aws.amazon.com/](https://docs.aws.amazon.com/)
- en: 'Amazon EC2 documentation: [https://docs.aws.amazon.com/ec2/?id=docs_gateway](https://docs.aws.amazon.com/ec2/?id=docs_gateway)'
  id: totrans-404
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Amazon EC2文档：[https://docs.aws.amazon.com/ec2/?id=docs_gateway](https://docs.aws.amazon.com/ec2/?id=docs_gateway)
- en: 'Amazon S3 documentation: [https://docs.aws.amazon.com/s3/?id=docs_gateway](https://docs.aws.amazon.com/s3/?id=docs_gateway)'
  id: totrans-405
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 亚马逊S3文档：[https://docs.aws.amazon.com/s3/?id=docs_gateway](https://docs.aws.amazon.com/s3/?id=docs_gateway)
- en: 'Amazon IAM documentation: [https://docs.aws.amazon.com/iam/?id=docs_gateway](https://docs.aws.amazon.com/iam/?id=docs_gateway)'
  id: totrans-406
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 亚马逊IAM文档：[https://docs.aws.amazon.com/iam/?id=docs_gateway](https://docs.aws.amazon.com/iam/?id=docs_gateway)
- en: 'Eucalyptus installation guide: [https://docs.eucalyptus.cloud/eucalyptus/4.4.5/install-guide/index.html](https://docs.eucalyptus.cloud/eucalyptus/4.4.5/install-guide/index.html)'
  id: totrans-407
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尤卡利普特斯安装指南：[https://docs.eucalyptus.cloud/eucalyptus/4.4.5/install-guide/index.html](https://docs.eucalyptus.cloud/eucalyptus/4.4.5/install-guide/index.html)
- en: 'Eucalyptus administration guide: [https://docs.eucalyptus.cloud/eucalyptus/4.4.5/admin-guide/index.html](https://docs.eucalyptus.cloud/eucalyptus/4.4.5/admin-guide/index.html)'
  id: totrans-408
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尤卡利普特斯管理指南：[https://docs.eucalyptus.cloud/eucalyptus/4.4.5/admin-guide/index.html](https://docs.eucalyptus.cloud/eucalyptus/4.4.5/admin-guide/index.html)
- en: 'Eucalyptus console guide: [https://docs.eucalyptus.cloud/eucalyptus/4.4.5/console-guide/index.html](https://docs.eucalyptus.cloud/eucalyptus/4.4.5/console-guide/index.html)'
  id: totrans-409
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尤卡利普特斯控制台指南：[https://docs.eucalyptus.cloud/eucalyptus/4.4.5/console-guide/index.html](https://docs.eucalyptus.cloud/eucalyptus/4.4.5/console-guide/index.html)
- en: 'Euca2ools guide: [https://docs.eucalyptus.cloud/eucalyptus/4.4.5/euca2ools-guide/index.html](https://docs.eucalyptus.cloud/eucalyptus/4.4.5/euca2ools-guide/index.html)'
  id: totrans-410
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Euca2ools指南：[https://docs.eucalyptus.cloud/eucalyptus/4.4.5/euca2ools-guide/index.html](https://docs.eucalyptus.cloud/eucalyptus/4.4.5/euca2ools-guide/index.html)
