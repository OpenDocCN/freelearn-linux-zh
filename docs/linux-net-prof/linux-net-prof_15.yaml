- en: '*Chapter 12*: Network Monitoring Using Linux'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第12章*：使用Linux进行网络监控'
- en: In this chapter, we'll be discussing various network monitoring and management
    protocols, tools, and approaches. We'll cover logging using syslog, which can
    be used to log events of interest on various hosts. This will be extended to a
    cloud-based collection of syslog events, allowing you to both summarize firewall
    traffic and compare your traffic patterns against those across the internet.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论各种网络监控和管理协议、工具和方法。我们将介绍使用syslog进行日志记录，它可以用于记录各种主机上感兴趣的事件。这将扩展到基于云的syslog事件收集，允许你总结防火墙流量并将你的流量模式与互联网上的流量进行比较。
- en: We'll discuss using SNMP to collect performance statistics of your various network
    devices and hosts, which can be useful in both troubleshooting and capacity planning.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将讨论使用SNMP来收集各种网络设备和主机的性能统计数据，这在故障排除和容量规划中都很有用。
- en: Finally, we'll use NetFlow and other flow-collection protocols to look for traffic
    anomalies – we'll use NetFlow to follow a typical incident investigation, uncovering
    a large data exfiltration event.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们将使用NetFlow和其他流量收集协议来寻找流量异常——我们将使用NetFlow来进行典型的事件调查，揭示一个大规模的数据外泄事件。
- en: 'In particular, we''ll cover the following topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 具体来说，我们将涵盖以下主题：
- en: Logging using Syslog
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Syslog进行日志记录
- en: The Dshield project
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Dshield项目
- en: Collecting NetFlow data on Linux
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Linux上收集NetFlow数据
- en: Technical requirements
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: In this chapter, we'll be discussing several facets of network management. While
    you can certainly recreate the example builds in this chapter, just be aware that
    your data will be different. So, while the methodology of using the various data
    types for monitoring or troubleshooting will remain the same, to use your data
    (and any issues you find that need resolution) in your environment, you will need
    different search terms.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们将讨论网络管理的几个方面。虽然你可以在本章中重新创建示例构建，但请注意你的数据将会不同。因此，虽然使用各种数据类型进行监控或故障排除的方法将保持不变，但要在你的环境中使用你的数据（以及任何需要解决的问题），你将需要不同的搜索词。
- en: That being said, your existing Linux Host or VM can be used to build any or
    all of the example systems described in this chapter. However, in production,
    you would separate these functions across one, two, or even more dedicated servers.
    If you are using a VM for your lab, my best suggestion would be to start from
    a new, clean image and build forward from there – that way, if you find any of
    the various **Network Management Systems** (**NMSes**) we work with useful, you
    can move forward with them directly into production.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 也就是说，你现有的Linux主机或VM可以用来构建本章中描述的任何一个或所有示例系统。然而，在生产中，你会将这些功能分开部署在一个、两个甚至更多的专用服务器上。如果你在实验室中使用VM，我最好的建议是从一个新的、干净的映像开始，并从那里开始构建——这样，如果你发现我们使用的各种**网络管理系统**（**NMSes**）有用，你可以直接将它们移植到生产中。
- en: The NMS section focuses on the LibreNMS application. The suggestion for that
    set of examples is to download and install the pre-built Linux VM image (in OVA
    format) for that application.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: NMS部分侧重于LibreNMS应用程序。对于那组示例，建议下载并安装该应用程序的预构建Linux VM映像（OVA格式）。
- en: Logging using Syslog
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Syslog进行日志记录
- en: '**Logging** is a key facet of managing any system, and central logging is almost
    universally recommended. Logging centrally allows you to combine the logs from
    several servers or services – for instance, your firewall, load balancer, and
    web server – into one file in chronological order. This can often speed up any
    troubleshooting or diagnosis as you see an even move from one platform to the
    next. From a security point of view, this is especially important in **Incident
    Response** (**IR**). In responding to an incident, you might see malware arrive
    in an email, then execute as a process, then move laterally (often called "east/west")
    to other workstation hosts, or move "north" toward your servers. Add to this that
    after regular (often hourly) updates, the current versions of your tools may very
    well be able to pick malware out of your logs that might have sailed by unnoticed
    yesterday.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**日志记录**是管理任何系统的关键方面，几乎普遍建议进行中央日志记录。中央日志记录允许你将来自多台服务器或服务（例如防火墙、负载均衡器和Web服务器）的日志合并到一个按时间顺序排列的文件中。这通常可以加快任何故障排除或诊断，因为你可以看到事件从一个平台移动到下一个。从安全的角度来看，这在**事件响应**（**IR**）中尤为重要。在响应事件时，你可能会看到恶意软件通过电子邮件到达，然后作为一个进程执行，然后横向移动（通常称为“东/西”）到其他工作站主机，或向“北”向你的服务器移动。再加上定期（通常每小时）更新后，你的工具的当前版本很可能能够从日志中找出可能在昨天被忽略的恶意软件。'
- en: Also, from a security point of view, logging to a central location takes a copy
    of those log entries off the source host. If that source host is compromised,
    this can give you a "more trusted" version of the truth. After an initial compromise,
    your attacker has to expend more effort to find and compromise a central log server.
    In a lot of cases, this delay can be used to your advantage to identify and alert
    that the attack has occurred. Often, defenses are all about delaying the attacker
    and providing as much detail to the defenders as possible during this delay. Central
    logging, along with close to real-time analysis or triggers against log entries,
    is a great example of this.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，从安全的角度来看，将日志记录到中央位置可以将这些日志条目的副本从源主机中移出。如果源主机受到攻击，这可以给你一个“更可信”的真相版本。在初始受损后，攻击者必须付出更多的努力来找到并攻击中央日志服务器。在很多情况下，这种延迟可以被用于你的优势，以识别并警告攻击已经发生。通常，防御都是关于延迟攻击者，并在此延迟期间向防御者提供尽可能多的细节。中央日志记录，以及对日志条目进行接近实时的分析或触发器，是这一点的一个很好的例子。
- en: So, what design and usability considerations should we think about when deploying
    and using central logging?
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，在部署和使用中央日志记录时，我们应该考虑哪些设计和可用性考虑？
- en: Log size, rotation, and databases
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 日志大小、轮换和数据库
- en: The first thing you'll notice about logs is that they grow very quickly. If
    you are doing full logging on a firewall, even in a small organization, just those
    logs can grow into GBs per day very quickly. Add to that logs from routers, switches,
    servers, and the services on those servers, and logs can become very complex and
    difficult to search.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 你会注意到关于日志的第一件事是它们增长得非常快。如果你在防火墙上进行全面日志记录，即使在一个小组织中，这些日志也会很快增长到每天几GB。再加上路由器、交换机、服务器以及这些服务器上的服务的日志，日志可能会变得非常复杂和难以搜索。
- en: The first thing people often do is separate logs out. It's always wise to keep
    an "everything log", but it can be handy to take copies of each device or service
    log and break those out to separate, smaller logs. While firewall logs might be
    gigabytes in size, router logs for that same period are most likely to be kilobytes
    in size, often in single digits. Log size can often be an indicator of a problem
    – for instance, if you have a log that's typically 3-5 KB per day, which suddenly
    grows to 2-3 MB per day, that's often an indication that something is wrong. Or,
    if you have 15 branch offices that are supposed to be identical, but one has a
    router or firewall log that's 3x or 10x the size of the others, that's also a
    great big arrow saying "look here!"
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 人们经常做的第一件事是分离日志。保留“全部日志”总是明智的，但将每个设备或服务日志的副本分开并分成单独的较小日志可能会很方便。虽然防火墙日志可能有几GB大小，但同一时期的路由器日志很可能只有几KB大小，通常是个位数。日志大小通常可以成为问题的指标
    - 例如，如果你有一个典型每天3-5KB的日志，突然增长到每天2-3MB，这通常表明出现了问题。或者，如果你有15个分支办公室应该是相同的，但其中一个路由器或防火墙日志的大小是其他的3倍或10倍，那也是一个很大的箭头指向“这里看看！”
- en: Often, people will take a hybrid approach – keep that monolithic log that contains
    everything, have separate logs for everything, but then consolidate those things
    that aren't as "chatty" – for instance, just removing firewall logs as well as
    Linux and Hypervisor main syslog logs can dramatically reduce the log size but
    still retain a reasonably consolidated log file.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，人们会采取混合方法 - 保留包含所有内容的单一日志，为所有内容保留单独的日志，然后合并那些不那么“啰嗦”的东西 - 例如，只删除防火墙日志以及Linux和Hypervisor主要syslog日志可以大大减少日志大小，但仍保留一个合理的合并日志文件。
- en: All of this takes up disk space, and every time you slice the data differently,
    it's likely to dramatically increase that space requirement again. Keep an eye
    on the overall size of data and the volumes that you have it on – you never want
    to be in a position where an attack can fill the log volume. This situation can
    stall the logging process altogether, so you don't know where the attacker has
    gone. It can also overwrite the initial set of events in the incident, so you
    won't know how the attacker got their foothold in the first place. In the worst
    case, it can do both.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些都占用了磁盘空间，每次你以不同的方式切割数据，都很可能会大幅增加空间需求。要注意数据的整体大小和存储它的容量 - 你绝不希望处于攻击者可以填满日志容量的位置。这种情况可能会完全停止日志记录过程，因此你不知道攻击者去了哪里。它还可以覆盖事件的初始集，因此你不知道攻击者是如何首次立足的。在最坏的情况下，它可能两者兼而有之。
- en: One way to deal with this space issue is to archive your logs – keep 1-5-7-10
    days of logs in an easily searchable format, but beyond that, maybe archive and
    compress the main log and delete the rest. This can keep the traditional text
    files, along with the traditional `grep`/`cut`/`sort`/`uniq search` approach,
    but keep the size manageable.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 解决这个空间问题的一种方法是归档日志 - 保留1-5-7-10天的日志以便轻松搜索，但在那之后，可能会归档和压缩主要日志并删除其余部分。这可以保留传统的文本文件，以及传统的`grep`/`cut`/`sort`/`uniq搜索`方法，但保持大小可管理。
- en: A more modern approach might be to keep that monolithic "everything" log file,
    with periodic offline storage, which makes it easy to keep logs for months or
    years – whatever is required by your policy, procedures, or compliance requirements.
    You can then re-forward traffic to your SIEM as needed from this central location.
    These logs all remain searchable using command-line tools.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 更现代的方法可能是保留那个单一的“全部”日志文件，并进行定期的离线存储，这样可以轻松地保留几个月甚至几年的日志 - 根据你的政策、程序或合规要求。然后，你可以根据需要从这个中央位置重新转发流量到你的SIEM。所有这些日志都可以使用命令行工具进行搜索。
- en: For troubleshooting day-to-day issues, parse the log data and store it in a
    database. This allows for much faster searches, especially after applying strategic
    indices, and also allows you to manage the overall size of the data much easier.
    The key thing in this approach isn't to manage the disk space but to (as much
    as possible) manage the log volumes by a target time interval that will facilitate
    predictable, repeatable troubleshooting and reporting windows.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 对于日常故障排除，解析日志数据并将其存储在数据库中。这样可以实现更快的搜索，尤其是在应用了战略索引之后，还可以更轻松地管理数据的整体大小。这种方法的关键不是管理磁盘空间，而是（尽可能地）通过目标时间间隔来管理日志容量，以便实现可预测、可重复的故障排除和报告窗口。
- en: Let's dig into how you can add search terms iteratively to find a final answer
    when troubleshooting.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们深入探讨如何在故障排除时逐步添加搜索项以找到最终答案。
- en: Log analysis – finding "the thing"
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 日志分析 - 寻找“关键”
- en: The main challenge that people face once they have logs on disk is how to use
    them. Specifically, when troubleshooting or working through a security incident,
    you know that there is good information in the logs, but knowing where to search,
    how to search, and what tools to use is a daunting task if you're just starting
    in log analysis.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 人们一旦将日志存储在磁盘上，面临的主要挑战是如何使用它们。特别是在故障排除或处理安全事件时，你知道日志中有很好的信息，但要知道在哪里搜索、如何搜索以及使用什么工具是一个艰巨的任务，如果你刚开始进行日志分析的话。
- en: Where to look
  id: totrans-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 要查找的地方
- en: Often, it makes sense to determine where on the OSI stack you are looking for
    your problem. Things such as duplicate IP addresses are Layer 3 issues – you'll
    look on router or switch logs for them. However, that same problem might start
    with end user reports stating that "the web server is erratic", so you might start
    the application logs for the web server – it might take you some time to work
    that issue down the stack through the various server and device logs to find the
    root problem. In one recent example, I worked with the helpdesk to deploy a new
    printer, and I accidentally used one of the web server cluster addresses in the
    printer configuration by mistake.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，确定你正在寻找问题的OSI堆栈的哪个位置是有意义的。诸如重复的IP地址之类的问题是第3层的问题 - 你会在路由器或交换机日志中寻找它们。然而，同样的问题可能会从最终用户报告开始，他们声称“Web服务器不稳定”，所以你可能会从Web服务器的应用程序日志开始
    - 你可能需要一些时间来通过各种服务器和设备日志逐步解决这个问题，找到根本问题。最近的一个例子中，我与帮助台合作部署了一台新打印机，我不小心错误地在打印机配置中使用了Web服务器集群地址之一。
- en: While finding these issues might be quicker in a larger log, searching a multi-GB
    text log can easily take 5-10-15 minutes per "try" as you interactively get to
    a final set of search terms. Again, in the case of text logs, you will often start
    your search in "the most likely" log rather than the "search here, it has everything"
    log.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然在更大的日志中查找这些问题可能会更快，但在一个多GB的文本日志中搜索可能需要5-10-15分钟每次“尝试”，因为你需要交互式地得到最终的搜索词组。同样，在文本日志的情况下，你通常会从“最有可能的”日志开始搜索，而不是“在这里搜索，它包含所有内容”的日志。
- en: Now that we're looking in the right place, how can we narrow down all these
    log entries to find "the answer"?
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们正在寻找正确的地方，我们如何缩小所有这些日志条目以找到“答案”呢？
- en: How to search
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何搜索
- en: In most cases, searching logs will consist of a series of `find this` and `exclude
    that` clauses. If you are searching a text log, this will usually be `grep –i
    "include text"` or `grep –i –v "exclude text"`. Note that using `–i` makes your
    searches case-insensitive. If you string enough of these together in the right
    order, this is usually enough.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数情况下，搜索日志将包括一系列“找到这个”和“排除那个”的子句。如果你在搜索文本日志，这通常是`grep -i "包含文本"`或`grep -i
    -v "排除文本"`。请注意，使用`-i`会使你的搜索不区分大小写。如果你按正确的顺序串联足够多的这些内容，通常就足够了。
- en: However, if you want to then "count" specific events, `uniq -c` can be helpful,
    which will count unique events. Then, you can use `sort –r` to sort them into
    descending order.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，如果你想“计算”特定事件，“uniq -c”可能会有所帮助，它将计算唯一事件。然后，你可以使用`sort -r`将它们按降序排序。
- en: 'For instance, to find DNS queries to external DNS servers, you''ll want to
    search your firewall logs. If the firewall is a Cisco ASA, the query might look
    similar to this sequence:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，要查找到外部DNS服务器的DNS查询，你需要搜索防火墙日志。如果防火墙是Cisco ASA，查询可能类似于这个序列：
- en: '![](img/B16336_12_Table_01.jpg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16336_12_Table_01.jpg)'
- en: 'Our final command? Let''s take a look:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的最终命令？让我们来看一下：
- en: '[PRE0]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This looks complex, but keep in mind that this is done iteratively – we work
    out each "clause" in the request separately and string them together sequentially.
    Also, in many cases, we might spend several minutes or even hours getting a query
    "just perfect," but then use that query in an automated way for years going forward,
    so it's time well spent!
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 这看起来很复杂，但请记住，这是迭代完成的 - 我们分别解决每个请求中的“子句”，然后按顺序将它们串联在一起。此外，在许多情况下，我们可能会花费几分钟甚至几个小时来完善一个查询，但然后在以后的几年中以自动化的方式使用该查询，所以这是值得花费的时间！
- en: 'Also, while we showed this query using Linux command-line text processing commands,
    the same methodology can be used for a database log repository, or even for querying
    against a different firewall. No matter what the target device, log repository
    type, or problem we''re solving, the approach is most often to do the following:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，虽然我们展示了使用Linux命令行文本处理命令进行查询，但相同的方法可以用于数据库日志存储库，甚至用于针对不同防火墙的查询。无论目标设备、日志存储库类型或我们要解决的问题是什么，方法通常是这样的：
- en: Use some broad-brush queries or selections (either includes or excludes) to
    whittle the data down to a more manageable volume.
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用一些广泛的查询或选择（包括或排除）来将数据减少到更可管理的量。
- en: Do whatever is needed to massage that data so that it can be queried more specifically.
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 做任何必要的工作来处理数据，以便可以更具体地查询。
- en: Use some more specific queries to narrow it down more.
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用一些更具体的查询来进一步缩小范围。
- en: If we're looking for counts or most common occurrences, summarize the data to
    match what's needed.
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果我们正在寻找计数或最常见的事件，就要总结数据以匹配所需的内容。
- en: Test the final query/selection criteria.
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试最终的查询/选择标准。
- en: Plug the final search terms into whatever automation is needed so that this
    information is summarized or reported on at whatever frequency is needed.
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将最终的搜索词组插入到所需的自动化中，以便以所需的频率对此信息进行总结或报告。
- en: This covers how to search through logs of past events to diagnose an issue in
    the past, but can't we use logs to tell us immediately when known problems have
    occurred? The short answer is "yes, absolutely." Let's explore how this is done.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这涵盖了如何通过日志搜索过去的事件来诊断过去的问题，但我们不能使用日志立即告诉我们已知的问题何时发生吗？简短的答案是“是的，绝对可以”。让我们探讨一下这是如何做到的。
- en: Alerts on specific events
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 特定事件的警报
- en: This is an extension of the "finding the thing" conversation – maybe alongside
    the topic of "when to look." Of course, the best time to find a problem is the
    instant it happens – or maybe even before it happens, so that you can fix it as
    soon as possible.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 这是“寻找事物”对话的延伸 - 也许是“何时寻找”的话题。当然，找到问题的最佳时间是它发生的瞬间 - 或者甚至是在它发生之前，这样你就可以尽快修复它。
- en: To that end, it's very common to have simple text strings defined that might
    indicate a problem and alert the right people when that occurs. You might send
    them an email alert or SMS message the instant such an alert happens, or maybe
    collect alerts for a day and send a daily summary – your approach will likely
    depend on your environment and the severity of the alerts that are seen.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，通常会定义简单的文本字符串，这些字符串可能会指示问题并在发生时警报相关人员。您可能会在发生此类警报时发送电子邮件警报或短信，或者可能会收集一天的警报并发送每日摘要-您的方法可能取决于您的环境以及所见到的警报的严重程度。
- en: 'Common search terms to hunt for include the following (case-insensitive searches
    are almost always recommended):'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 搜索常见术语包括以下内容（几乎总是建议不区分大小写搜索）：
- en: '![](img/B16336_12_Table_02a.jpg)![](img/B16336_12_Table_02b.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16336_12_Table_02a.jpg)![](img/B16336_12_Table_02b.jpg)'
- en: In all of these cases, you'll likely want to add a `not` clause to filter out
    users who might be browsing or searching for these terms – for instance, "batter"
    will find all battery incidents, but it will also find users searching for cake
    recipes and baseball news stories. If you exclude "http" from the search terms,
    that will often get you just what you need.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有这些情况下，您可能希望添加一个`not`子句来过滤可能正在浏览或搜索这些术语的用户-例如，“batter”将找到所有电池事件，但它也会找到搜索蛋糕食谱和棒球新闻故事的用户。如果从搜索术语中排除“http”，那通常会得到您所需的内容。
- en: With triggers like these in play, you can head off a pile of problems, often
    before they become problems – this is always a good thing.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这些触发器，您可以在问题变成问题之前解决一堆问题-这总是一件好事。
- en: Now that we've discussed searches and triggers, let's build a log server and
    try out these methods for real!
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经讨论了搜索和触发器，让我们建立一个日志服务器并尝试这些方法！
- en: Syslog server example – Syslog
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Syslog服务器示例-Syslog
- en: To run basic syslog services on a Linux host, we'll be configuring the `rsyslog`
    service. By default, this service listens on port `514/udp`, though both the port
    and the protocol are configurable.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 要在Linux主机上运行基本的syslog服务，我们将配置`rsyslog`服务。默认情况下，此服务侦听端口`514/udp`，尽管端口和协议都是可配置的。
- en: 'Log events come in various priority or severity levels, which are normally
    set by the sending device:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 日志事件以各种优先级或严重级别出现，通常由发送设备设置：
- en: '`emerg, panic` (Emergency) – Level `0`: This is the lowest log level. The system
    is unusable. Often these, are the last messages that you will see before a system
    crash.'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`emerg, panic`（紧急）-级别`0`：这是最低的日志级别。系统无法使用。通常这些是在系统崩溃之前您将看到的最后消息。'
- en: '`alert` (Alerts): Level `1`: Action must be taken immediately. These usually
    impact the operation of the overall system.'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`alert`（警报）：级别`1`：必须立即采取行动。这些通常会影响整个系统的操作。'
- en: '`crit` (Critical): Level `2`: As with alerts, action must be taken immediately.
    The primary functions of the system are likely not operating.'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`crit`（临界）：级别`2`：与警报一样，必须立即采取行动。系统的主要功能可能无法正常运行。'
- en: '`err` (Errors): Level `3`: Important errors, but the system is still up. The
    primary functions of the system are likely affected.'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`err`（错误）：级别`3`：重要错误，但系统仍在运行。系统的主要功能可能受到影响。'
- en: '`warn` (Warnings): Level `4`: Warning conditions.'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`warn`（警告）：级别`4`：警告条件。'
- en: '`notice` (Notification): Level `5`: Normal but significant conditions.'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`notice`（通知）：级别`5`：正常但重要的条件。'
- en: '`info` (Information): Level `6`: Informational messages.'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`info`（信息）：级别`6`：信息消息。'
- en: '`debug` (Debugging): Level `7`: This is the highest level – debug-level messages.'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`debug`（调试）：级别`7`：这是最高级别-调试级别消息。'
- en: Usually, when you configure one logging level, all the lower logging levels
    are included. So, if you configure a level 4 syslog on a host, that includes 0,
    1, 2, and 3 as well. This explains why, in most situations, you only configure
    one logging level for any given host.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，当您配置一个日志记录级别时，所有较低的日志记录级别都会包括在内。因此，如果您在主机上配置了级别4的syslog，则也会包括0、1、2和3。这就解释了为什么在大多数情况下，您只为任何给定的主机配置一个日志记录级别。
- en: 'It''s likely that `rsyslog` is already installed and running on your Linux
    host. Let''s check:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 很可能`rsyslog`已经安装并在您的Linux主机上运行。让我们来检查一下：
- en: '[PRE1]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'If you don''t have this service installed, it''s as simple as running the following
    command:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您尚未安装此服务，只需运行以下命令即可：
- en: '[PRE2]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: With the service installed and running, let's get on with the configuration.
    Edit the `/etc/rsyslog.conf` file, ensuring you do so with `sudo` rights.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 安装并运行服务后，让我们继续配置。编辑`/etc/rsyslog.conf`文件，确保您具有`sudo`权限进行此操作。
- en: 'You''ll find that the lines that control the listening ports are as follows.
    Uncomment the lines for UDP, as shown (the two lines with `imudp` in them). If
    you''d also like to accept syslog on `514/tcp`, feel free to uncomment this as
    well (both are shown uncommented here):'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 您会发现控制监听端口的行如下。取消注释UDP的行，如下所示（其中包含`imudp`的两行）。如果您还想在`514/tcp`上接受syslog，请随时取消注释（这两个在此处都取消了注释）：
- en: '[PRE3]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'If you''d like to restrict syslog clients to a particular set of subnets or
    DNS domains, you can do that by adding an `AllowedSender` line to this file, as
    shown here, below either of the "input" lines we just uncommented (be sure to
    use the right protocol depending on the section you''re adding this line to):'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想将syslog客户端限制为特定的子网或DNS域集，可以通过在此文件中添加`AllowedSender`行来实现，如下所示，在我们刚刚取消注释的“input”行之后（请务必根据您要添加此行的部分使用正确的协议）：
- en: '[PRE4]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Next, we''ll scroll down to the `GLOBAL DIRECTIVES` section of this same file.
    Just before that line, we''ll add a line as a "template" to name the incoming
    files and identify their locations. We can use several `"%"` delimited variables
    for this, with the most common being as follows:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将向下滚动到同一文件的“全局指令”部分。就在那一行之前，我们将添加一行作为“模板”，以命名传入的文件并标识它们的位置。我们可以使用几个以“％”分隔的变量，其中最常见的如下：
- en: '![](img/B16336_12_Table_03.jpg)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16336_12_Table_03.jpg)'
- en: 'In our configuration, we''ll use the host IP for a filename and then break
    logs out by date:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的配置中，我们将使用主机IP作为文件名，然后按日期拆分日志：
- en: '[PRE5]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Check the file syntax with the following command:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令检查文件语法：
- en: '[PRE6]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Other variable names that can be used to template the syslog file include the
    following:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 可以用于模板化syslog文件的其他变量名称包括以下内容：
- en: '![](img/B16336_12_Table_04.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16336_12_Table_04.jpg)'
- en: 'Now, save the file and restart the `rsyslog` service:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，保存文件并重新启动`rsyslog`服务：
- en: '[PRE7]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Now, all we have to do is configure all of our various servers and devices to
    forward logs to this server, right?
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们只需要配置我们的各种服务器和设备，将日志转发到这台服务器，对吧？
- en: 'Sort of – what that gets us is a really expensive (in terms of disk space)
    pile of logs. What we actually want is some method of getting some real-time alerts
    out of these logs. We''ll do this by using a process called `tail` command, which
    will echo lines as they are added to a text file with the following command:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 有点像 - 这给我们带来的是一个非常昂贵（以磁盘空间计算）的日志堆。我们实际想要的是一种方法，从这些日志中实时获取一些警报。我们将使用一个名为`tail`命令的过程来实现这一点，该命令将使用以下命令将行回显到文本文件中：
- en: '[PRE8]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'This echos the text but doesn''t get us any alerting. For that, we must install
    a package called `swatch` (for "syslog watch"):'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 这会回显文本，但不会给我们任何警报。为此，我们必须安装一个名为`swatch`（用于“syslog watch”）的软件包：
- en: '[PRE9]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Once installed, we''ll make a config file to tell the tool what to look for.
    Referring back to our list of common alerts, something such as the `swatch.conf`
    file, shown here, might be a good start:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，我们将创建一个配置文件来告诉工具要查找什么。回顾我们的常见警报列表，像这样的`swatch.conf`文件可能是一个很好的开始：
- en: '[PRE10]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: There are a few things to note here – the text that we're looking for is in
    that `watchfor` clause. Note that in each case, the text being watched for is
    a "regular expression," or `regex`. The `regex` syntax is extremely flexible and
    can be both very simple (as shown previously) or so complex as to be difficult
    to understand. I've included a few regex references at the end of this chapter.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有几点需要注意 - 我们要查找的文本在`watchfor`子句中。请注意，在每种情况下，被监视的文本都是“正则表达式”或`regex`。`regex`语法非常灵活，既可以非常简单（如前面所示），也可以非常复杂，难以理解。我在本章末尾包含了一些正则表达式参考资料。
- en: In our example, the first regex ends in `/I`, which tells the `watchfor` command
    that this is a case-insensitive search. Note that this is fairly CPU-intensive,
    so if you know the case in the matched text, you are best off putting it in the
    regex correctly.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的示例中，第一个正则表达式以`/I`结尾，这告诉`watchfor`命令这是一个不区分大小写的搜索。请注意，这会消耗相当多的CPU资源，因此如果您知道匹配文本的大小写，最好将其正确地放入正则表达式中。
- en: In the second clause, note that we have three different search terms, separated
    with the `|` character, which is a logical OR – so, in other words, "temperature
    OR fan OR water."
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在第二个子句中，请注意我们有三个不同的搜索项，用`|`字符分隔，这是一个逻辑或 - 换句话说，“温度”或“风扇”或“水”。
- en: The last two examples are linked. The first one looks for failed logins and
    alerts you for each one. But then it has a `continue` command, telling swatch
    to proceed. The next clause matches for the same text, but with a threshold –
    if swatch sees five failed login attempts within 5 minutes, it identifies a possible
    password stuffing attack.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 最后两个示例是相关的。第一个示例查找失败的登录并为每个登录提供警报。但然后它有一个`continue`命令，告诉swatch继续。下一个子句匹配相同的文本，但有一个阈值
    - 如果swatch在5分钟内看到五次失败的登录尝试，它将识别可能的密码填充攻击。
- en: You can also have a matched log statement trigger a script using the `exec`
    command instead of `mail`.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用`exec`命令而不是`mail`来触发匹配的日志语句执行脚本。
- en: 'Finally, we''ll want to start the swatch process:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们将要开始样本过程：
- en: '[PRE11]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'This command brings up two points:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令提出了两个观点：
- en: We've already mentioned log sizes as a concern, and for that reason, the current
    path that we're storing logs in shouldn't be in the same partition as `/var/log`,
    which is sized for local logs only. It definitely shouldn't be in the same partition
    as the boot or any other system partition. Filling up a syslog partition will
    result in loss of logs, but can crash your server or prevent it from booting as
    well! We'll want our logs in a separate, dedicated partition, well sized to store
    what we need. Archived logs can be in that same partition or on a second one,
    dedicated to archived (and likely ZIP-compressed) logs only.
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们已经提到日志大小是一个问题，因此我们存储日志的当前路径不应该与`/var/log`在同一个分区中，后者仅用于本地日志。它绝对不应该与引导或任何其他系统分区在同一个分区中。填满syslog分区将导致日志丢失，还可能导致服务器崩溃或无法引导！我们希望我们的日志在一个单独的、专用的分区中，大小合适以存储我们需要的内容。归档日志可以在同一个分区中，也可以在第二个分区中，专门用于存档（很可能是ZIP压缩）日志。
- en: 'The current configuration that we have for `rsyslog` needs sudo permissions
    to see the logs. So, either we''ll need to modify the file and directory permissions,
    or we''ll need to run our `swatchdog` using sudo. Both come with some level of
    risk, but to facilitate using the logs for troubleshooting, let''s change the
    file permissions. This can be done in the `/etc/rsyslog.conf` file by modifying
    these lines:'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们为`rsyslog`配置的当前配置需要sudo权限来查看日志。因此，我们要么需要修改文件和目录权限，要么需要使用sudo运行我们的`swatchdog`。这两种方法都带有一定程度的风险，但为了便于使用日志进行故障排除，让我们更改文件权限。这可以在`/etc/rsyslog.conf`文件中通过修改这些行来完成：
- en: '[PRE12]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: In most cases, you can change the `FileGroup` command to a different group and
    put your various admin folks into that group, as well as whatever account you
    run your "swatch" setup from.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数情况下，您可以将`FileGroup`命令更改为不同的组，并将各种管理员放入该组，以及您从中运行“swatch”设置的任何帐户。
- en: Alternatively, you might change the File and Dir `CreateMode` lines, maybe all
    the way to include "everyone" with `0777`. Since log entries always contain sensitive
    information, I wouldn't recommend this – speaking as a penetration tester, it's
    fairly common to find passwords in log files – it's surprising how often folks
    type their password in the `userid` field, then try again with the right information!
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，您可以更改文件和目录`CreateMode`行，甚至包括"everyone"，使用`0777`。由于日志条目始终包含敏感信息，我不建议这样做 -
    作为一名渗透测试人员，发现密码在日志文件中是相当常见的 - 令人惊讶的是，人们经常在`userid`字段中输入密码，然后再次尝试正确的信息！
- en: You can still use the date in the directory name, but often, it's easier to
    keep a consistent set of file and directory names for the live file. This makes
    it easier for log monitoring tools and people troubleshooting issues to find "today."
    Using the date values in your archiving scripts means that historic log files
    will either be in a "dated" directory or have a "dated" ZIP filename.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 您仍然可以在目录名称中使用日期，但通常，保持一致的文件和目录名称对于实时文件更容易。这使得日志监控工具和解决问题的人更容易找到“今天”。在您的归档脚本中使用日期值意味着历史日志文件将位于“日期”目录中或具有“日期”ZIP文件名。
- en: 'That being said, our revised swatch command will look similar to the following:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 话虽如此，我们修改后的swatch命令将类似于以下内容：
- en: '[PRE13]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Note that we added `–d` to the command – once everything has been debugged and
    working correctly, you'll want this parameter to run the command in the background
    (as a daemon).
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们在命令中添加了`-d` - 一旦一切都调试和正常工作，您将希望在后台运行该命令（作为守护进程）。
- en: There is likely more that you will need to do to get swatch working in production
    – for instance, getting those permissions "just so" for your environment, going
    through your network inventory, and ensuring that you have central logging for
    all of your gear, getting that log partition sized, and getting your log rotation
    working. What we've covered should be enough to get you on your way, though; much
    of this other work will be specific to your environment.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能需要做更多的工作才能使swatch在生产中运行 - 例如，为您的环境获得那些权限，检查您的网络清单，并确保您的所有设备都有中央日志记录，调整日志分区大小，并使日志轮换工作。我们已经涵盖的内容应该足以让您上路，尽管这些其他工作大部分将是针对您的环境的。
- en: 'With our organization''s logs covered, other questions now arise: how do our
    events stack up against other organizations? Do we see the same attacks as others,
    or maybe we''re a target for specific things? How can we get this information?
    We''ll look at this in the next section.'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们组织的日志得到覆盖后，现在出现了其他问题：我们的事件如何与其他组织相比？我们是否看到与其他人相同的攻击，或者我们可能是特定事物的目标？我们如何获得这些信息？我们将在下一节中讨论这个问题。
- en: The Dshield project
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Dshield项目
- en: The Dshield project is maintained by the folks at the Internet Storm Center
    ([https://isc.sans.edu](https://isc.sans.edu)) and allows participants to forward
    their (anonymized) logs to a central repository where they are aggregated to provide
    a good picture of "what's happening on the internet."
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: Dshield项目由互联网风暴中心（[https://isc.sans.edu](https://isc.sans.edu)）的人员维护，允许参与者将他们的（匿名化的）日志转发到一个中央存储库，这些日志被聚合起来，以提供一个关于“互联网上发生了什么”的良好图景。
- en: 'Specifically, the information that is forwarded is the connection attempts
    that are blocked by your firewall. There is also a dedicated Dshield sensor that
    can be used if you don''t want to use your actual firewall logs. Instructions
    for participation can be found here: [https://isc.sans.edu/howto.html](https://isc.sans.edu/howto.html).'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 具体来说，转发的信息是由您的防火墙阻止的连接尝试。如果您不想使用实际的防火墙日志，还可以使用专用的Dshield传感器。参与说明可以在这里找到：[https://isc.sans.edu/howto.html](https://isc.sans.edu/howto.html)。
- en: 'This aggregated data gives us a view of what ports malicious actors are looking
    for, intending to exploit them. The participant''s addresses are the information
    that is anonymized. The various high-level reports can be viewed here: [https://isc.sans.edu/reports.html](https://isc.sans.edu/reports.html).'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 这些聚合数据让我们了解恶意行为者正在寻找哪些端口，以便利用它们。参与者的地址是匿名化的信息。各种高级报告可以在这里查看：[https://isc.sans.edu/reports.html](https://isc.sans.edu/reports.html)。
- en: 'In particular, you can drill down into any of the "top 10 ports" on that page
    to see activity over time on the most popular ports being scanned for. For instance,
    you can go to [https://isc.sans.edu/port.html?port=2222](https://isc.sans.edu/port.html?port=2222),
    as shown in the following screenshot:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 特别是，您可以深入研究该页面上的任何“前10个端口”，以查看最受欢迎的端口上随时间的活动。例如，您可以转到[https://isc.sans.edu/port.html?port=2222](https://isc.sans.edu/port.html?port=2222)，如下图所示：
- en: '![Figure 12.1 – Dshield data for one port](img/B16336_12_001.jpg)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![图12.1 - 一个端口的Dshield数据](img/B16336_12_001.jpg)'
- en: Figure 12.1 – Dshield data for one port
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.1 - 一个端口的Dshield数据
- en: From this pattern, you can see how to query any port if you have specific traffic
    you might be doing forensics on.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这种模式，您可以看到如何查询任何端口，如果您有特定的流量需要进行取证。
- en: 'Furthermore, this aggregated information can be queried by an API, if you''d
    rather consume this using a script or application. The Dshield API is documented
    here: [https://isc.sans.edu/api/](https://isc.sans.edu/api/).'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，如果您更愿意使用脚本或应用程序来消耗这些聚合信息，这些信息也可以通过API查询。 Dshield API的文档在这里：[https://isc.sans.edu/api/](https://isc.sans.edu/api/)。
- en: 'For instance, to collect the summary information for port `2222`, we can use
    `curl` (just as an example):'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，要收集端口`2222`的摘要信息，我们可以使用`curl`（只是一个例子）：
- en: '[PRE14]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Because the data is returned in XML in this example, you can consume it using
    standard libraries or language components. You can also change the returned formatting
    to JSON, text, or PHP. In some cases, the data lends itself toward comma- or tab-delimited
    formats (CSV, tab).
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 因为在此示例中返回的数据是XML格式，所以您可以使用标准库或语言组件来消耗它。您还可以将返回的格式更改为JSON、文本或PHP。在某些情况下，数据适合逗号或制表符分隔的格式（CSV、制表符）。
- en: To change formats, simply add `?format_type` to the query, where `format_type`
    can be JSON, text, PHP, or in some cases, CSV or tab.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 要更改格式，只需将`?format_type`添加到查询中，其中`format_type`可以是JSON、文本、PHP，或者在某些情况下可以是CSV或制表符。
- en: Each user has their own web portal, which shows these same stats for their own
    device(s) – this data can be valuable in troubleshooting, or to contrast it against
    the aggregate data to see if your organization might be targeted by one attack
    or another. But the strength of this approach is in the aggregated data, which
    gives a good picture of the internet "weather" on any particular day, as well
    as overall "climate" trends.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 每个用户都有自己的网络门户，显示他们自己设备的相同统计数据 - 这些数据在故障排除时可能很有价值，或者与聚合数据进行对比，以查看您的组织是否可能受到攻击。但这种方法的强大之处在于聚合数据，它可以很好地反映特定日期的互联网“天气”情况，以及整体“气候”趋势。
- en: Now that we've got local logging configured and our firewall logs aggregated
    for better internet traffic analysis, let's consider other network management
    protocols and approaches, starting with the **Simple Network Management Protocol**
    (**SNMP**) management/performance and uptime.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经配置了本地日志记录，并将我们的防火墙日志聚合以进行更好的互联网流量分析，让我们考虑其他网络管理协议和方法，首先是**简单网络管理协议**（**SNMP**）管理/性能和正常运行时间。
- en: Network device management using SNMP
  id: totrans-127
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用SNMP进行网络设备管理
- en: At its heart, SNMP is a way to collect information from target network devices.
    Most often, this is done by a server-based application, but you can certainly
    query SNMP from the command line There are several versions of SNMP, with two
    of them in common use today.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 在本质上，SNMP是从目标网络设备收集信息的一种方式。通常，这是通过基于服务器的应用程序完成的，但您当然也可以从命令行查询SNMP。目前有几个版本的SNMP，其中有两个是常用的。
- en: SNMPv2c (version 2c) is a slight improvement over the initial v1 protocol, but
    is still an "old-school" approach to data collection – both the SNMP queries and
    responses are transferred in clear text over UDP. It is secured using a passphrase
    (called a *community string*), but this is also sent in clear text, so tools such
    as Ettercap can easily collect these – even the often-recommended "long and complex"
    strings do not protect you if your attacker can simply cut and paste them for
    reuse. In addition, the default community strings (public for read-only access
    and private for read-write access) are often left in place, so just querying using
    those can often yield good results for an attacker. It's often recommended that
    the access to SNMP be protected by an ACL at the target device. However, given
    how easy it is to perform ARP poisoning attacks, a well-positioned attacker can
    easily bypass these ACLs as well.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: SNMPv2c（第2c版）是对初始v1协议的轻微改进，但仍然是一种“老派”数据收集方法 - SNMP查询和响应都是通过UDP以明文传输的。它使用密码短语（称为*社区字符串*）进行安全保护，但这也是以明文发送的，因此工具如Ettercap可以轻松收集这些信息
    - 即使通常建议使用“长且复杂”的字符串，也无法保护您，如果攻击者可以轻松地复制并重用它们。此外，默认的社区字符串（只读访问为public，读写访问为private）通常保持不变，因此只需使用这些字符串进行查询，通常就可以为攻击者带来良好的结果。通常建议在目标设备上使用ACL来保护对SNMP的访问。但是，考虑到进行ARP欺骗攻击的简单性，位置良好的攻击者也可以轻松绕过这些ACL。
- en: SNMPv3 is the most recent version of the protocol and adds a most welcome encryption
    feature. It also has a much more nuanced approach to access controls, as opposed
    to the "either read or read/write" access controls that SNMPv2c offers.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: SNMPv3是该协议的最新版本，增加了一个非常受欢迎的加密功能。与SNMPv2c提供的“只读或读/写”访问控制相比，它还具有更加细致的访问控制方法。
- en: As we mentioned previously, SNMP (either version) can be used to "poll" a target
    device for information. In addition, that device can send an unsolicited SNMP
    "trap" to an SNMP server or log collector. SNMP polls use `161/udp`, and SNMP
    traps are sent to `162/udp` (though TCP can be configured).
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前提到的，SNMP（任一版本）可用于向目标设备“轮询”信息。此外，该设备可以向SNMP服务器或日志收集器发送未经请求的SNMP“陷阱”。SNMP轮询使用`161/udp`，而SNMP陷阱发送到`162/udp`（尽管可以配置为使用TCP）。
- en: With some of the background covered, let's make a few example queries.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在涵盖了一些背景知识之后，让我们来做一些示例查询。
- en: Basic SNMP queries
  id: totrans-133
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 基本的SNMP查询
- en: 'Before you can make command-line queries in Linux, you likely need to install
    the `snmp` package:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 在Linux中进行命令行查询之前，您可能需要安装`snmp`软件包：
- en: '[PRE15]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Now, we can make an example query. In our first example, I''m collecting the
    IOS version of a lab switch:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以进行一个示例查询。在我们的第一个示例中，我正在收集实验室交换机的IOS版本：
- en: '[PRE16]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'To collect the system uptime, in both seconds and in a human-readable timestamp,
    use the following command:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 要收集系统正常运行时间，以秒和人类可读的时间戳，使用以下命令：
- en: '[PRE17]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'What about the stats for an interface? Let''s start with the name:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 接口的统计数据呢？让我们从名称开始：
- en: '[PRE18]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Then, we can get packets in and out (unicast):'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们可以获取进出的数据包（单播）：
- en: '[PRE19]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: You get the idea – there's an OID for just about every common parameter. But
    how do we keep them all straight?
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 您明白了吧 - 几乎每个常见参数都有一个OID。但我们如何保持这些参数的清晰？
- en: 'First of all, this is standardized in RFC 1213, with MIB-2 being the latest
    set of definitions that most vendors support as a "lowest common denominator"
    implementation. Secondly, the definition is hierarchal. This shows the "top" of
    the basic tree, with the OID for **mib-2** highlighted:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，这是在RFC 1213中标准化的，MIB-2是大多数供应商支持的最新一组定义，作为“最低公共分母”实现。其次，该定义是分层的。这显示了基本树的“顶部”，其中突出显示了**mib-2**的OID：
- en: '![Figure 12.2 – SNMP OID tree, showing mib-2](img/B16336_12_002.jpg)'
  id: totrans-146
  prefs: []
  type: TYPE_IMG
  zh: '![图12.2 - SNMP OID树，显示mib-2](img/B16336_12_002.jpg)'
- en: Figure 12.2 – SNMP OID tree, showing mib-2
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.2 - SNMP OID树，显示mib-2
- en: 'When there are a group of interfaces, there''ll be a count, then a table for
    each interface statistic (by interface index). If you use `snmpwalk` instead of
    `snmpget`, you can collect the entire list, along with all the sub-parameters
    for each entry. This shows the beginning of the `ifTable` (Interface Table) part
    of mib-2:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 当有一组接口时，将会有一个计数，然后是每个接口统计的表（按接口索引）。如果使用`snmpwalk`而不是`snmpget`，您可以收集整个列表，以及每个条目的所有子参数。这显示了mib-2的`ifTable`（接口表）部分的开头：
- en: '![Figure 12.3 – SNMP OID tree, showing interface information (ifTable)](img/B16336_12_003.jpg)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![图12.3 - SNMP OID树，显示接口信息（ifTable）](img/B16336_12_003.jpg)'
- en: Figure 12.3 – SNMP OID tree, showing interface information (ifTable)
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.3 - SNMP OID树，显示接口信息（ifTable）
- en: 'In addition, they maintain a list of the "starting points" of the OIDs that
    each vendor has their custom tree of items under. The top of the **private** branch
    of the OID tree is shown here. Note that toward the top of the tree, you will
    tend to find several organizations that may have either been acquired or are not
    commonly seen anymore in enterprise environments for one reason or another:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，他们维护了每个供应商的OID起始点列表，每个供应商都有其自定义的项目树。 OID树的**private**分支的顶部显示在此处。请注意，在树的顶部，您往往会发现一些可能已被收购或由于某种原因在企业环境中不再常见的组织：
- en: '![Figure 12.4 – SNMP OID tree, showing the Vendor OID section](img/B16336_12_004.jpg)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![图12.4 - SNMP OID树，显示供应商OID部分](img/B16336_12_004.jpg)'
- en: Figure 12.4 – SNMP OID tree, showing the Vendor OID section
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.4 - SNMP OID树，显示供应商OID部分
- en: This model all hangs together more or less nicely, with the various devices
    maintaining their various counters, waiting on a valid server to query for those
    values.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 这个模型或多或少地很好地结合在一起，各种设备维护着它们的各种计数器，等待一个有效的服务器来查询这些值。
- en: If you have a starting point, you can use the `snmpwalk` command to traverse
    the tree of OIDs from that point down (see the *SNMPv3* section for an example).
    Needless to say, this can turn into a messy business of "find me the number I
    really want," spread across hundreds of lines of text.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您有一个起点，您可以使用`snmpwalk`命令遍历从该点向下的OID树（请参阅*SNMPv3*部分以获取示例）。不用说，这可能会变成一个混乱的业务，“找到我真正想要的数字”，分散在数百行文本中。
- en: Also, as you can see, each "node" in the SNMP tree is named. If you have the
    appropriate definitions, you can query by name rather than OID. You likely already
    have the MIB-2 definitions installed on your Linux host, so you can import and
    manage vendor MIB definitions as well. An easy way to install or manage the various
    MIB definitions is to use the `snmp-mibs-downloader` package (install this using
    our familiar `apt-get install` approach).
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，正如您所看到的，SNMP树中的每个“节点”都有名称。如果您有适当的定义，您可以按名称而不是OID进行查询。您可能已经在Linux主机上安装了MIB-2定义，因此您也可以导入和管理供应商的MIB定义。安装或管理各种MIB定义的简单方法是使用`snmp-mibs-downloader`软件包（使用我们熟悉的`apt-get
    install`方法安装此软件包）。
- en: 'To install a vendor''s MIBs, we can use Cisco (as an example). After installing
    `snmp-mibs-downloader`, edit the `/etc/snmp-mibs-downloader/snmp-mibs-downloader.conf`
    file and add the `cisco` designator to the `AUTOLOAD` line . This line should
    now look like this:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装供应商的MIB，我们可以使用Cisco（作为示例）。安装`snmp-mibs-downloader`后，编辑`/etc/snmp-mibs-downloader/snmp-mibs-downloader.conf`文件，并将`cisco`指示符添加到`AUTOLOAD`行。现在这行应该是这样的：
- en: '[PRE20]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'The definitions of where and how to collect the cisco MIBs are in `/etc/snmp-mibs-downloader/cisco.conf`:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: cisco MIB的收集位置和方式的定义在`/etc/snmp-mibs-downloader/cisco.conf`中：
- en: '[PRE21]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'The individual MIB definitions are in `/etc/snmp-mibs-downloader/ciscolist`
    – as you can see, this file is too long to list here:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 各个MIB定义在`/etc/snmp-mibs-downloader/ciscolist`中 - 正如您所看到的，这个文件太长了，无法在这里列出：
- en: '[PRE22]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Once you''ve updated the `snmp-mibs-downloader.conf` file, simply run the following
    command:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 更新了`snmp-mibs-downloader.conf`文件后，只需运行以下命令：
- en: '[PRE23]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: You'll see each MIB file get downloaded (all 1,431 files).
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 您将看到每个MIB文件都被下载（共1,431个文件）。
- en: 'With the MIB text descriptions now loaded (the defaults are loaded after installing
    `snmp-mibs-downloader`), you can now query SNMP using text descriptions – in this
    case, we''ll query the `sysDescr` (System Description) field of a lab switch:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 现在加载了MIB文本描述（默认在安装`snmp-mibs-downloader`后加载），您现在可以使用文本描述查询SNMP - 在这种情况下，我们将查询实验交换机的`sysDescr`（系统描述）字段：
- en: '[PRE24]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Even using the descriptive field names, this process gets very complicated very
    quickly – this is where a **Network Management System** (**NMS**) comes in. Most
    NMS systems have a point-and-click web interface, where you start with the IP
    and can drill down by interface or other statistics to get the information you
    want. It then presents that information graphically, usually over time. Most of
    the better NMSes will figure out what the device is and create all the graphs
    you'll typically want, without further prompting.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 即使使用描述性字段名称，这个过程也会非常快速地变得非常复杂 - 这就是**网络管理系统**（**NMS**）的用武之地。大多数NMS系统都有一个点对点的Web界面，您可以从IP开始，然后通过接口或其他统计数据深入查询所需的信息。然后以图形方式呈现这些信息，通常随着时间的推移。大多数更好的NMS系统将弄清楚设备是什么，并创建您通常想要的所有图表，而无需进一步提示。
- en: '**Where does this break down?**'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '**这是哪里出了问题？**'
- en: The clear-text nature of SNMPv2 is an ongoing problem – many organizations simply
    have not moved on to SNMPv3, with its more secure transport.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: SNMPv2的明文性质是一个持续的问题 - 许多组织简单地没有转向更安全的传输SNMPv3。
- en: Even worse, many organizations have simply continued using the default SNMP
    community strings; that is, "public" and "private." In almost all cases, there
    is no need for read-write access to SNMP, but people configure it anyway. This
    situation is made worse by the fact that not only can you shut down interfaces
    or reboot a device if you have read/write access, but you can generally retrieve
    a full device configuration with that access – there's even a nmap script to retrieve
    a Cisco IOS running configuration.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 更糟糕的是，许多组织仍然继续使用默认的SNMP社区字符串；也就是说，“public”和“private”。在几乎所有情况下，没有必要对SNMP进行读写访问，但人们还是进行了配置。这种情况变得更糟糕的是，不仅可以通过读/写访问关闭接口或重新启动设备，而且还可以通过该访问通常检索完整的设备配置
    - 甚至有一个nmap脚本来检索Cisco IOS运行配置。
- en: Operationally, if you query every interface and statistic on a device, you will
    often impact the CPU of that device. Historically, especially on switches, if
    you query every interface, you will (on one version or the other of the operating
    system) find memory leak bugs. These can be so bad that you can graph the memory
    utilization and see a straight line increase where these queries don't return
    a few bytes per query, eventually to the point where there isn't enough memory
    left for the device to run.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 在操作上，如果您查询设备上的每个接口和统计信息，通常会影响该设备的CPU。从历史上看，特别是在交换机上，如果您查询每个接口，您将（在操作系统的某个版本上）发现内存泄漏错误。这些错误可能非常严重，以至于您可以绘制内存利用率并看到这些查询不返回几个字节的情况下直线增加，最终导致设备没有足够的内存运行。
- en: So, these were the obvious recommendations. Use SNMPv3, restrict SNMP access
    to known servers, and only query interfaces that you need. On firewalls and routers,
    this may include all interfaces, but on switches, you will often only query uplinks
    and interfaces for critical servers – hypervisors, in particular.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，这些是明显的建议。使用SNMPv3，限制对已知服务器的SNMP访问，并仅查询您需要的接口。在防火墙和路由器上，这可能包括所有接口，但在交换机上，您通常只查询上行链路和关键服务器的接口
    - 特别是虚拟化程序。
- en: With some of the theory covered, let's build a popular Linux-based NMS – LibreNMS.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 有了一些理论知识，让我们来构建一个流行的基于Linux的NMS - LibreNMS。
- en: SNMP NMS deployment example – LibreNMS
  id: totrans-175
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SNMP NMS部署示例 - LibreNMS
- en: LibreNMS is an NMS that has been forked from the Nagios NMS (which is now a
    mostly commercial product) and is fairly full-featured for a free NMS application.
    More importantly, the learning curve to get your devices enrolled is pretty simple,
    and the installation can be simplified tremendously.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: LibreNMS是一个从Nagios NMS分叉出来的NMS（现在主要是商业产品），对于一个免费的NMS应用来说，它相当全面。更重要的是，将您的设备注册的学习曲线非常简单，安装也可以大大简化。
- en: First of all, the installation documentation for LibreNMS is very complete and
    covers all of the various database, website, and other dependent components. We
    won't cover those instructions here since they change from version to version;
    the best source is the vendor download page.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，LibreNMS的安装文档非常完整，涵盖了各种数据库、网站和其他依赖组件。我们不会在这里涵盖这些说明，因为它们会随着版本的更改而改变；最好的来源是供应商下载页面。
- en: But rather than installing from scratch, often, it's much simpler to use any
    one of the pre-installed images and start from there. VMware and Hyper-V are both
    very widespread hypervisors and are the main compute platforms in many enterprises.
    For these, LibreNMS has a complete Ubuntu install in a pre-packaged **Open Virtualization
    Format** (**OVA**) file. In fact, as the name suggests, that file type is almost
    universally supported to deploy pre-built VM images.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 但与其从头开始安装，通常更简单的方法是使用任何一个预安装的映像并从那里开始。VMware和Hyper-V都是非常普遍的虚拟化程序，并且是许多企业的主要计算平台。对于这些，LibreNMS在预打包的**Open
    Virtualization Format**（**OVA**）文件中有一个完整的Ubuntu安装。实际上，正如其名称所示，该文件类型几乎普遍支持部署预构建的VM映像。
- en: For the examples in this chapter, you can download and import the OVA file for
    LibreNMS. The gear you have to query will be different than the examples, depending
    on what is in your environment, but the core concepts will remain the same. A
    great side effect of deploying an NMS is that, like logging and log alerting,
    you are likely to find problems you didn't know you had – everything from an overheating
    CPU to an interface operating at maximum or "too close to maximum" capacity.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的示例中，您可以下载并导入LibreNMS的OVA文件。您要查询的设备可能与示例中的不同，这取决于您的环境中有什么，但核心概念将保持不变。部署NMS的一个很大的副作用是，就像日志和日志警报一样，您可能会发现您不知道的问题
    - 从过热的CPU到接口以最大或“接近最大”容量运行的一切问题。
- en: Hypervisor specifics
  id: totrans-180
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 虚拟化程序的具体信息
- en: Be sure that the network you deploy your LibreNMS VM on has access to the devices
    that you will be monitoring.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 确保您部署LibreNMS VM的网络可以访问您将要监视的设备。
- en: In VMware, the default disk format for this VM is "thin provisioned." This means
    that the virtual disk will start by being just big enough to hold the files that
    it has on it, and will grow as the file storage needs more. This is fine for a
    lab/test VM, but in production, you will almost always want a "thick provisioned"
    disk – you don't want a server "growing" unexpectedly and maxing out your storage.
    This never ends well, especially if you have multiple servers thin-provisioned
    in the same datastore!
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 在VMware中，该VM的默认磁盘格式为“thin provisioned”。这意味着虚拟磁盘将从足够容纳其上的文件的大小开始，并且随着文件存储的需求增加而增长。这对于实验/测试VM来说是可以的，但在生产中，您几乎总是希望有一个“thick
    provisioned”磁盘 - 您不希望服务器意外“增长”并耗尽存储空间。这永远不会有好结果，特别是如果您在同一数据存储中有多个thin-provisioned服务器！
- en: Once deployed, you'll need to log in using the `librenms` account – the password
    for this does change from version to version, so be sure to refer to the documentation
    for your download. Once logged in, note that this account has root privileges,
    so change the password for `librenms` using the `passwd` command.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 部署后，您需要使用`librenms`帐户登录 - 该密码会随着版本的更改而更改，因此请务必参考您下载的文档。登录后，请注意该帐户具有root权限，因此请使用`passwd`命令更改`librenms`的密码。
- en: Get your current IP address using the `ip address` command (see [*Chapter 2*](B16336_02_Final_NM_ePub.xhtml#_idTextAnchor035),
    *Basic Linux Network Configuration and Operations – Working with Local Interfaces*).
    Consider that this host will be monitoring critical devices using SNMP and that
    you will likely want to add an ACL to each of these devices to restrict access
    to SNMP – given that you will want to manually set your IP address, subnet mask,
    gateway, and DNS server to static values. You can do this using a static DHCP
    reservation or you can assign it statically on the server – choose whichever approach
    is your organization's standard.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`ip address`命令获取当前IP地址（参见[*第2章*](B16336_02_Final_NM_ePub.xhtml#_idTextAnchor035)，*基本Linux网络配置和操作
    - 使用本地接口*）。考虑到这台主机将使用SNMP监视关键设备，并且您可能希望为这些设备中的每一个添加ACL以限制对SNMP的访问 - 鉴于您可能希望手动设置IP地址、子网掩码、网关和DNS服务器为静态值。您可以使用静态DHCP预留或者在服务器上静态分配它
    - 选择您组织的标准方法。
- en: Once this is done, browse to that address using HTTP, not HTTPS. Given the sensitivity
    of the information on this server, I'd recommend installing a certificate and
    forcing the use of HTTPS, but we won't cover that in this chapter (the LibreNMS
    documentation does a great job of walking through this, though). The web login
    is also `librenms`, but the default password for this will be different; consult
    the documentation for your download for this as well.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，使用HTTP而不是HTTPS浏览到该地址。考虑到该服务器上的信息的敏感性，我建议安装证书并强制使用HTTPS，但我们不会在本章中涵盖这一点（尽管LibreNMS文档在这方面做得很好）。Web登录也是`librenms`，但是默认密码将不同；同样，请查阅您下载的文档。
- en: 'You should now have an **Edit Dashboard** splash screen:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您应该看到一个**编辑仪表板**的启动屏幕：
- en: '![Figure 12.5 – LibreNMS Edit Dashboard startup screen](img/B16336_12_005.jpg)'
  id: totrans-187
  prefs: []
  type: TYPE_IMG
  zh: '![图12.5 - LibreNMS编辑仪表板启动屏幕](img/B16336_12_005.jpg)'
- en: Figure 12.5 – LibreNMS Edit Dashboard startup screen
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.5 - LibreNMS编辑仪表板启动屏幕
- en: 'Before you go any further, click on the `librenms` account icon in the upper
    right of your screen:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续之前，请点击屏幕右上角的`librenms`账户图标：
- en: '![Figure 12.6 – LibreNMS "Account" and "System" icons](img/B16336_12_006.jpg)'
  id: totrans-190
  prefs: []
  type: TYPE_IMG
  zh: '![图12.6 - LibreNMS“账户”和“系统”图标](img/B16336_12_006.jpg)'
- en: Figure 12.6 – LibreNMS "Account" and "System" icons
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.6 - LibreNMS“账户”和“系统”图标
- en: 'Then, update the password for the web account as well:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，也更新Web账户的密码：
- en: '![Figure 12.7 – Changing default passwords in LibreNMS](img/B16336_12_007.jpg)'
  id: totrans-193
  prefs: []
  type: TYPE_IMG
  zh: '![图12.7 - 在LibreNMS中更改默认密码](img/B16336_12_007.jpg)'
- en: Figure 12.7 – Changing default passwords in LibreNMS
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.7 - 在LibreNMS中更改默认密码
- en: With the server up and running, let's take a look at adding some devices to
    manage.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器已经运行起来了，让我们来看看如何添加一些设备进行管理。
- en: Setting up a basic SNMPv2 device
  id: totrans-196
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设置基本的SNMPv2设备
- en: 'To add the most basic of devices, you''ll want to go to that device. You''ll
    want to enable SNMP (version 2, in this case), and then add a community string
    and hopefully also an ACL to restrict access. On a typical Cisco switch, for instance,
    this would look like this:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 要添加最基本的设备，您需要转到该设备。您需要启用SNMP（在本例中是第2版），然后添加一个社区字符串，希望还添加一个ACL来限制访问。例如，在典型的思科交换机上，会是这样的：
- en: '[PRE25]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: That's it! Note that we used `ROSNMP` for the SNMP Community string – that's
    much too simple for a production environment. Also, note that the `RO` parameter
    ensures that this is string allows only read-only permissions.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 就是这样！请注意，我们在SNMP社区字符串中使用了`ROSNMP` - 这对于生产环境来说太简单了。另外，请注意`RO`参数确保该字符串只允许只读权限。
- en: 'Now, back in LibreNMS, from the main dashboard, choose **Devices** > **Add
    Device**:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在LibreNMS中，从主仪表板中选择**设备** > **添加设备**：
- en: '![Figure 12.8 – Adding a device to LibreNMS](img/B16336_12_008.jpg)'
  id: totrans-201
  prefs: []
  type: TYPE_IMG
  zh: '![图12.8 - 在LibreNMS中添加设备](img/B16336_12_008.jpg)'
- en: Figure 12.8 – Adding a device to LibreNMS
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.8 - 在LibreNMS中添加设备
- en: 'Fill in the IP address of your device, as well as the community string. Your
    screen should look something like this (with your own device''s IP address, of
    course):'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 填写您设备的IP地址，以及社区字符串。您的屏幕应该看起来像这样（当然要用您自己设备的IP地址）：
- en: '![Figure 12.9 – Adding device details in LibreNMS](img/B16336_12_009.jpg)'
  id: totrans-204
  prefs: []
  type: TYPE_IMG
  zh: '![图12.9 - 在LibreNMS中添加设备详细信息](img/B16336_12_009.jpg)'
- en: Figure 12.9 – Adding device details in LibreNMS
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.9 - 在LibreNMS中添加设备详细信息
- en: Now, you can browse to the device you just added by selecting **Devices** >
    **All Devices** and then clicking your device.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您可以通过选择**设备** > **所有设备**，然后点击您的设备来浏览刚刚添加的设备。
- en: 'Note that LibreNMS has already started graphing CPU and memory utilization,
    as well as traffic for both the overall device and each interface that is up.
    The default page for a network device (in this case, a firewall) is shown here:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，LibreNMS已经开始绘制CPU和内存利用率，以及每个已启用接口的流量。这里显示了网络设备（在本例中是防火墙）的默认页面：
- en: '![Figure 12.10 – Device statistics collected in LibreNMS](img/B16336_12_010.jpg)'
  id: totrans-208
  prefs: []
  type: TYPE_IMG
  zh: '![图12.10 - 在LibreNMS中收集的设备统计信息](img/B16336_12_010.jpg)'
- en: Figure 12.10 – Device statistics collected in LibreNMS
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.10 - 在LibreNMS中收集的设备统计信息
- en: 'As you drill down into any particular clickable link or graph, further details
    on collected statistics will be shown. Often, even mousing over a link will flash
    up the details – in this case, by mousing over the `vmx0` link, details about
    that specific interface are shown:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 当您深入了解任何特定的可点击链接或图表时，将显示有关收集统计信息的更多详细信息。通常，甚至将鼠标悬停在链接上也会显示详细信息 - 在这种情况下，将鼠标悬停在`vmx0`链接上，将显示有关该特定接口的详细信息：
- en: '![Figure 12.11 – Mousing over an interface for interface details in LibreNMS](img/B16336_12_011.jpg)'
  id: totrans-211
  prefs: []
  type: TYPE_IMG
  zh: '![图12.11 - 在LibreNMS中悬停在接口上以获取接口详细信息](img/B16336_12_011.jpg)'
- en: Figure 12.11 – Mousing over an interface for interface details in LibreNMS
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.11 - 在LibreNMS中悬停在接口上以获取接口详细信息
- en: We've already talked about how deploying SNMPv2 is risky, due to its clear-text
    nature and simple authentication. Let's look at fixing that by using SNMPv3 instead.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经讨论过部署SNMPv2是有风险的，因为它是明文传输和简单认证。让我们通过改用SNMPv3来解决这个问题。
- en: SNMPv3
  id: totrans-214
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SNMPv3
- en: 'SNMP version 3 is not much more complex to configure. In most cases, we take
    the default "read-only" SNMP views and just add a passphrase to use for authentication
    and an encryption key. On the device side, this is an example Cisco IOS configuration:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 配置SNMP版本3并不复杂。在大多数情况下，我们采用默认的“只读”SNMP视图，只需添加用于身份验证的密码和加密密钥。在设备端，这是Cisco IOS配置的一个示例：
- en: '[PRE26]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'The key parameters are as follows:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 关键参数如下：
- en: '![](img/B16336_12_Table_05.jpg)'
  id: totrans-218
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16336_12_Table_05.jpg)'
- en: 'We can test this with the `snmpwalk` or `snmpget` commands. For instance, the
    `snmpwalk` command pulls the system description values (note that we''ll need
    the calling station''s IP in the ACL-SNMP access list):'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`snmpwalk`或`snmpget`命令进行测试。例如，`snmpwalk`命令提取系统描述值（请注意，我们将需要ACL-SNMP访问列表中的调用站点的IP）：
- en: '[PRE27]'
  id: totrans-220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'On the NMS side, it''s as simple as matching the various configuration passwords
    and parameters that we used on the device:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 在NMS端，只需匹配我们在设备上使用的各种配置密码和参数即可：
- en: '![Figure 12.12 – Adding a device to the LibreNMS inventory using SNMPv3](img/B16336_12_012.jpg)'
  id: totrans-222
  prefs: []
  type: TYPE_IMG
  zh: '![图12.12 - 使用SNMPv3将设备添加到LibreNMS库存中](img/B16336_12_012.jpg)'
- en: Figure 12.12 – Adding a device to the LibreNMS inventory using SNMPv3
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.12 - 使用SNMPv3将设备添加到LibreNMS库存中
- en: After enrollment, we can fix the device's name by editing the device, then changing
    the device's name to something that's more easily remembered, and adding an IP
    overwrite (which the NMS will use for access). Of course, if the device has a
    DNS name, then enrolling it using its FQDN would work too. Relying on DNS can
    become a problem though if you need the NMS for troubleshooting when DNS might
    not be available – in fact, you might be troubleshooting DNS!
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 注册后，我们可以通过编辑设备来修复设备名称，然后将设备名称更改为更容易记住的内容，并添加IP覆盖（NMS将使用该IP进行访问）。当然，如果设备有DNS名称，那么使用其FQDN进行注册也可以。但是，如果您需要NMS进行故障排除时DNS可能不可用，依赖DNS可能会成为一个问题
    - 实际上，您可能正在解决DNS问题！
- en: '![Figure 12.13 – Changing the device''s name and adding an "Overwrite IP" in
    LibreNMS](img/B16336_12_013.jpg)'
  id: totrans-225
  prefs: []
  type: TYPE_IMG
  zh: '![图12.13 - 在LibreNMS中更改设备名称并添加"覆盖IP"](img/B16336_12_013.jpg)'
- en: Figure 12.13 – Changing the device's name and adding an "Overwrite IP" in LibreNMS
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.13 - 在LibreNMS中更改设备名称并添加"覆盖IP"
- en: Note that even though we have added true authentication (using a hashed password
    in transit) and authorization to the mix (by adding authorizing to the access
    level), as well as encryption of the actual data, we're still adding a plain old
    access list to protect the SNMP service on the router. The mantra of "Defense
    in Depth" has us thinking that it's always best to assume that one or more protection
    layers might be compromised at some point, so adding more defensive layers to
    any target service will protect it that much better.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，即使我们已经添加了真正的身份验证（在传输中使用哈希密码）和授权（通过添加授权到访问级别），以及对实际数据的加密，我们仍然添加了一个普通的访问列表来保护路由器上的SNMP服务。
    "深度防御"的口头禅让我们认为，最好总是假设一个或多个保护层可能在某个时候被破坏，因此向任何目标服务添加更多的防御层将更好地保护它。
- en: We can expand SNMPv3 usage by using it to send SNMP trap messages, which are
    encrypted, to replace plain-text syslog logging. This complicates our log services
    somewhat, but is well worth it!
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过使用SNMPv3将其用于发送加密的SNMP陷阱消息来扩展SNMPv3的使用，以替换明文syslog日志记录。这在某种程度上使我们的日志服务变得复杂，但是非常值得！
- en: Additional security configurations are available for SNMPv3; the CIS Benchmark
    for your platform is normally a good reference for this. The CIS Benchmark for
    Cisco IOS makes a good starting point if you just want to dig deeper, or if your
    router or switch doesn't have a Benchmark or good security guidance from the vendor.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: SNMPv3还提供了其他安全配置；您的平台的CIS基准通常是一个很好的参考。如果您只想深入了解，或者如果您的路由器或交换机没有基准或来自供应商的良好安全指导，那么Cisco
    IOS的CIS基准是一个很好的起点。
- en: Aside from the additional protection provided, the underlying SNMP capabilities
    remain almost the same between SNMP versions 2 and 3\. Once enrolled in the NMS,
    devices using SNMPv2 and SNMPv3 do not operate or appear different in the system
    in any significant way.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 除了提供额外的保护之外，SNMP版本2和3之间的基本SNMP功能几乎保持不变。一旦在NMS中注册，使用SNMPv2和SNMPv3的设备在系统中的操作或外观方式没有任何显着的不同。
- en: Now that we're monitoring all of our various network-connected devices and servers
    using SNMP, can we use the polling engine of our NMS to add alerts to monitor
    for devices or services that go down?
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们正在使用SNMP监视所有各种网络连接的设备和服务器，我们可以使用NMS的轮询引擎添加警报以监视关闭的设备或服务吗？
- en: Alerts
  id: totrans-232
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 警报
- en: 'One of the main things you''ll want to do is add some alerts to go with your
    stats. For instance, if you go to **Alerts** > **Alert Rules** and click **Create
    rule from collection**, you''ll see this screen:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 您将想要做的主要事情之一是添加一些警报以配合您的统计数据。例如，如果您转到**警报** > **警报规则**并单击**从收集创建规则**，您将看到此屏幕：
- en: '![Figure 12.14 – Default alert collection in LibreNMS'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: '![图12.14 - LibreNMS中的默认警报收集'
- en: '](img/B16336_12_014.jpg)'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16336_12_014.jpg)'
- en: Figure 12.14 – Default alert collection in LibreNMS
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.14 - LibreNMS中的默认警报收集
- en: 'Let''s add an alert that will trigger on any interface at over 80% utilization.
    To see if there is something like this in the default collection, type `utili`
    into the *Search* field – as you type, the search will be narrowed down:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们添加一个警报，当任何接口利用率超过80%时触发。要查看默认收集中是否有类似的内容，请在*搜索*字段中键入`utili` - 随着您的输入，搜索结果将被缩小：
- en: '![Figure 12.15 – Adding an alert in LibreNMS'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: '![图12.15 - 在LibreNMS中添加警报'
- en: '](img/B16336_12_015.jpg)'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16336_12_015.jpg)'
- en: Figure 12.15 – Adding an alert in LibreNMS
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.15 - 在LibreNMS中添加警报
- en: 'Select the rule; we''ll get some options:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 选择规则；我们将得到一些选项：
- en: '![Figure 12.16 – Alert rule options in LibreNMS'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: '![图12.16 - LibreNMS中的警报规则选项'
- en: '](img/B16336_12_016.jpg)'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16336_12_016.jpg)'
- en: Figure 12.16 – Alert rule options in LibreNMS
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.16 - LibreNMS中的警报规则选项
- en: Starting from the top, you should rename the rule. If you decide to import the
    default ruleset, you don't want to have things failing because you tried to have
    duplicate rule names. Often, I'll name custom rules so that they start with an
    underscore character; this ensures that they are always at the top of the rule
    list when sorted. Since we're taking a copy of what's in the collection, we can
    easily also change the percentage that triggers the alert.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 从顶部开始，您应该重命名规则。如果您决定导入默认规则集，您不希望因为尝试使用重复的规则名称而导致失败。通常，我会将自定义规则命名为以下划线字符开头；这可以确保它们在排序时始终位于规则列表的顶部。由于我们正在复制收集中的内容，我们也可以轻松地更改触发警报的百分比。
- en: 'Regarding **Match devices, groups and locations list**, things get tricky.
    As it stands, there''s nothing in the match list, and **All devices except in
    the list** is set to **OFF**, so this rule won''t match anything. Let''s select
    our device:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 关于**匹配设备、组和位置列表**，情况变得棘手。目前，匹配列表中没有任何内容，**除列表中的所有设备**设置为**关闭**，因此此规则不会匹配任何内容。让我们选择我们的设备：
- en: '![Figure 12.17 – Matching devices and groups within an alert rule in LibreNMS'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: '![图12.17-在LibreNMS中匹配设备和组的警报规则'
- en: '](img/B16336_12_017.jpg)'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16336_12_017.jpg)'
- en: Figure 12.17 – Matching devices and groups within an alert rule in LibreNMS
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.17-在LibreNMS中匹配设备和组的警报规则
- en: Now, save the rule. Yes, it is that easy!
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，保存规则。是的，就是这么简单！
- en: Did you happen to notice the **Groups** pick in the preceding menu? Using device
    groups is a great way to assign one rule to all similar devices – for instance,
    you might have a different port threshold for a router or a switch port. The reason
    for this is that increasing a router's WAN link speed might take weeks, as opposed
    to changing a switch port, which might involve just moving the cable from a 1G
    port to a 10G port (for instance). So, in that case, it makes good sense to have
    one rule for all routers (maybe at 60%) and a different rule for all switches
    (set at some higher number).
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 你是否注意到前面菜单中的**组**选择了吗？使用设备组是将一个规则分配给所有相似设备的好方法 - 例如，您可能对路由器或交换机端口设置不同的端口阈值。这是因为增加路由器的WAN链路速度可能需要几周的时间，而改变交换机端口可能只涉及将电缆从1G端口移动到10G端口（例如）。因此，在这种情况下，对所有路由器设置一个规则（可能为60%），对所有交换机设置一个不同的规则（设置为更高的数字）是很有道理的。
- en: 'Explore the rules – you''ll see many that you likely want to enable – alerts
    for device or service down, CPU, memory or interface utilization, and temperature
    or fan alerts. Some of these alerts depend on syslog – and yes, LibreNMS does
    have a syslog server built into it. You can explore this at **Overview** > **Syslog**:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 探索规则 - 您会看到许多您可能想要启用的规则 - 用于设备或服务宕机的警报，CPU、内存或接口利用率，以及温度或风扇警报。其中一些警报依赖于syslog
    - 是的，LibreNMS确实内置了一个syslog服务器。您可以在**概述** > **Syslog**中探索这一点：
- en: '![Figure 12.18 – Syslog display in LibreNMS'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: '![图12.18-在LibreNMS中的Syslog显示'
- en: '](img/B16336_12_018.jpg)'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16336_12_018.jpg)'
- en: Figure 12.18 – Syslog display in LibreNMS
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.18-在LibreNMS中的Syslog显示
- en: Note that there is some simple searching available to you, but it is pretty
    simple. This syslog server is a good thing to use so that the alerts can monitor
    it – this will be much simpler than the alerting we set up earlier in this chapter.
    However, you'll still want to keep those text logs we set up, both for better
    searching and for longer-term storage.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，您可以进行一些简单的搜索，但这相当简单。这个syslog服务器是一个很好的东西，可以用来监视警报 - 这将比我们在本章早些时候设置的警报简单得多。但是，您仍然希望保留我们设置的文本日志，既可以进行更好的搜索，也可以进行长期存储。
- en: As we add devices to our NMS, or for that matter as we deploy devices and name
    them, there are some things we should keep in mind.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们向我们的NMS添加设备，或者说当我们部署设备并对其进行命名时，有一些事情我们应该牢记。
- en: Some things to keep in mind as you add devices
  id: totrans-258
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在添加设备时要牢记的一些事情
- en: As you add devices and groups, be sure to name them, especially the devices,
    so that they sort logically. Naming conventions will often use the device's type
    (FW, SW, or RT, for instance) a standard for location name (branch number, for
    instance), or a short form of the city name – (CHI, TOR, and NYC for Chicago,
    Toronto, and New York City, for instance). The important things are consistency,
    planning out how things will sort, and keeping the various terms in the name short
    – remember, you'll be typing these things, and they'll also end up in spreadsheet
    columns eventually.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 在添加设备和组时，请务必对其进行命名，特别是设备，以便它们可以逻辑排序。命名约定通常会使用设备类型（例如FW、SW或RT）、位置名称的标准（例如分公司编号）或城市名称的简称（例如CHI、TOR和NYC代表芝加哥、多伦多和纽约市）。重要的是要保持一致性，规划如何对事物进行排序，并保持名称中各种术语的简短
    - 记住，您将要输入这些内容，它们最终也会出现在电子表格列中。
- en: So far, we've focused on using SNMP to monitor statistics. Now, let's monitor
    a running service on a device.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经专注于使用SNMP来监视统计信息。现在，让我们监视设备上运行的服务。
- en: Monitoring services
  id: totrans-261
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 监视服务
- en: Keep in mind that services on hosts are key things to monitor. It's common to
    monitor ports for database access, APIs, and web and VPN services using a nmap-like
    function in the NMS. A more advanced monitor will poll a service and ensure that
    the data coming back from the poll is correct.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，主机上的服务是需要监视的关键事项。通常会使用NMS中类似nmap的功能来监视数据库访问、API和Web和VPN服务的端口。更高级的监视器将轮询服务并确保从轮询返回的数据是正确的。
- en: 'Before we can monitor for services, we''ll need to enable service checks. SSH
    to your LibreNMS host and edit the `/opt/librenms/config.php` file. Add the following
    line:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们监视服务之前，我们需要启用服务检查。SSH到您的LibreNMS主机并编辑`/opt/librenms/config.php`文件。添加以下行：
- en: '[PRE28]'
  id: totrans-264
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'You may also wish to uncomment some or all of these `$config` lines (so that
    you can scan subnets rather than add devices one at a time):'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能还希望取消注释这些`$config`行中的一些或全部内容（以便您可以扫描子网，而不是一次添加一个设备）：
- en: '[PRE29]'
  id: totrans-266
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Now, we''ll update the cron scheduler for the application by adding the following
    line to the `/etc/cron.d/librenms` file:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将通过向`/etc/cron.d/librenms`文件添加以下行来更新应用程序的cron调度程序：
- en: '[PRE30]'
  id: totrans-268
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'By default, not all the plugins are installed – in fact, in my install, none
    were. Install them like so:'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，并非所有插件都已安装——事实上，在我的安装中，没有一个插件被安装。像这样安装它们：
- en: '[PRE31]'
  id: totrans-270
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Now, we should be able to add a service. Choose `22`):'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们应该能够添加一个服务。选择`22`）：
- en: '![Figure 12.19 – Monitoring a basic service in LibreNMS'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: '![图12.19–LibreNMS中监控基本服务'
- en: '](img/B16336_12_019.jpg)'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16336_12_019.jpg)'
- en: Figure 12.19 – Monitoring a basic service in LibreNMS
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.19–LibreNMS中监控基本服务
- en: 'You can expand on this – did you notice how many service checks there were
    in the list when you added the first service? Let''s add a monitor for an HTTP
    service. In this case, we''ll watch it on our firewall. This is a handy check
    for watching an SSL VPN service as well:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以扩展这一点——你是否注意到当你添加第一个服务时，列表中有多少服务检查？让我们为HTTP服务添加一个监视器。在这种情况下，我们将在我们的防火墙上观察它。这对于监视SSL
    VPN服务也很方便：
- en: '![Figure 12.20 – Monitoring an HTTPS service in LibreNMS using parameters'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: '![图12.20–使用参数在LibreNMS中监控HTTPS服务'
- en: '](img/B16336_12_020.jpg)'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16336_12_020.jpg)'
- en: Figure 12.20 – Monitoring an HTTPS service in LibreNMS using parameters
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.20–使用参数在LibreNMS中监控HTTPS服务
- en: Note that the parameters here are important. `-S` indicates that the check should
    use SSL (or more specifically, TLS). `–p 443` indicates the port to poll.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这里的参数很重要。`-S`表示检查应该使用SSL（或更具体地说是TLS）。`–p 443`表示轮询的端口。
- en: 'Now, when we navigate to the **Services** page, we''ll see the two services
    we just added. You may need to give it a few minutes for LibreNMS to get around
    to polling both of them:'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，当我们导航到**服务**页面时，我们将看到我们刚刚添加的两个服务。你可能需要给LibreNMS一些时间来轮询它们：
- en: '![Figure 12.21 – Services display in LibreNMS'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: '![图12.21–LibreNMS中的服务显示'
- en: '](img/B16336_12_021.jpg)'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16336_12_021.jpg)'
- en: Figure 12.21 – Services display in LibreNMS
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.21–LibreNMS中的服务显示
- en: 'The full list of available plugins can be seen directly from the dropdown on
    the **Service configuration** page:'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 可以直接从**服务配置**页面的下拉菜单中查看所有可用插件的完整列表：
- en: '![Figure 12.22 – Service checks available in LibreNMS'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: '![图12.22–LibreNMS中可用的服务检查'
- en: '](img/B16336_12_022.jpg)'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16336_12_022.jpg)'
- en: Figure 12.22 – Service checks available in LibreNMS
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.22–LibreNMS中可用的服务检查
- en: 'Some of the commonly used checks include the following:'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 一些常用的检查包括以下内容：
- en: '![](img/B16336_12_Table_06.jpg)'
  id: totrans-289
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16336_12_Table_06.jpg)'
- en: The documentation for all the parameters for each of these checks is located
    at [https://www.monitoring-plugins.org/doc/man/index.html](https://www.monitoring-plugins.org/doc/man/index.html).
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些检查的参数文档位于[https://www.monitoring-plugins.org/doc/man/index.html](https://www.monitoring-plugins.org/doc/man/index.html)。
- en: That about covers the basic operation of the LibreNMS system. Now, let's move
    on to collecting and analyzing traffic. We won't be using packet captures, but
    rather aggregating the high-level traffic information into "flows" using the family
    of NetFlow protocols.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 这大致涵盖了LibreNMS系统的基本操作。现在，让我们继续收集和分析流量。我们不会使用数据包捕获，而是使用NetFlow协议系列将高级流量信息聚合成“流”。
- en: Collecting NetFlow data on Linux
  id: totrans-292
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Linux上收集NetFlow数据
- en: What do you do when looking at interface throughput isn't enough? Quite often,
    those SNMP throughput graphs will tell you that you have a problem, but won't
    take you to that next step – what protocol or which people are eating up all that
    bandwidth? Is this something I can fix with configuration, or do I need to work
    on policies to help control the video habits of the people in my organization,
    or do I truly need more bandwidth?
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 当查看接口吞吐量不够时，你该怎么办？很多时候，那些SNMP吞吐量图表会告诉你有问题，但不会带你迈出下一步——是哪种协议或哪些人在消耗所有的带宽？这是我可以通过配置解决的问题，还是我需要制定政策来帮助控制组织中人们的视频习惯，还是我真的需要更多的带宽？
- en: How can we get this information? It's not as easy as SNMP, but NetFlow collects
    all the information you might need to help be a "bandwidth detective." Let's discuss
    how this works, and what protocols are involved.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 我们如何获得这些信息？这并不像SNMP那样容易，但NetFlow收集了你可能需要的所有信息，以帮助成为“带宽侦探”。让我们讨论一下它是如何工作的，以及涉及哪些协议。
- en: What is NetFlow and its "cousins" SFLOW, J-Flow, and IPFIX?
  id: totrans-295
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是NetFlow及其“表兄弟”SFLOW、J-Flow和IPFIX？
- en: 'If you recall back in [*Chapter 3*](B16336_03_Final_NM_ePub.xhtml#_idTextAnchor053),
    *Using Linux and Linux Tools for Network Diagnostics*, and again in [*Chapter
    11*](B16336_11_Final_NM_ePub.xhtml#_idTextAnchor192), *Packet Capture and Analysis
    in Linux*, where we discussed packet "tuples," this is where we use that concept
    for just about everything. NetFlow is a service that collects traffic from an
    identified interface, usually on a router, switch, or firewall, and summarizes
    it. The information that it collects to summarize almost always includes the core
    tuple values that we discussed earlier in this book:'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你回忆一下[*第3章*](B16336_03_Final_NM_ePub.xhtml#_idTextAnchor053)，*使用Linux和Linux工具进行网络诊断*，以及[*第11章*](B16336_11_Final_NM_ePub.xhtml#_idTextAnchor192)，*Linux中的数据包捕获和分析*，我们在那里讨论了数据包“元组”，这就是我们将那个概念用于几乎所有事情的地方。NetFlow是一项服务，它从已识别的接口（通常是路由器、交换机或防火墙）收集流量并对其进行汇总。它几乎总是包括我们在本书前面讨论过的核心元组值的信息：
- en: Source IP
  id: totrans-297
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 源IP
- en: Destination IP
  id: totrans-298
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目标IP
- en: Protocol (TCP, UDP, ICMP, or whatever other protocol)
  id: totrans-299
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 协议（TCP、UDP、ICMP或其他协议）
- en: Source port
  id: totrans-300
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 源端口
- en: Destination port
  id: totrans-301
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目标端口
- en: 'However, as we''ll see later, modern NetFlow configurations can expand on the
    standard tuple values by adding the following:'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，正如我们将在后面看到的，现代NetFlow配置可以通过添加以下内容来扩展标准元组值：
- en: QOS information (TOS or DSCP bits)
  id: totrans-303
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: QOS信息（TOS或DSCP位）
- en: BGP **Autonomous System** (**AS**) numbers
  id: totrans-304
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: BGP **自治系统**（**AS**）号码
- en: TCP Flags (SYN, ACK, and so on)
  id: totrans-305
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TCP标志（SYN，ACK等）
- en: The TCP flags are critical, as the first packet (which has just a SYN flag set)
    defines which host is the client and which is the server in any conversation.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: TCP标志是至关重要的，因为第一个数据包（只设置了SYN标志）定义了在任何对话中哪个主机是客户端，哪个是服务器。
- en: 'NetFlow was originally developed by Cisco but was developed under the RFC process
    to allow more widespread adoption in the industry, and many vendors other than
    Cisco support NetFlow. There are two commonly seen versions of NetFlow – 5 and
    9 – with the main difference being the number of fields that are supported. There
    are a few "cousin" protocols that are frequently seen:'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: NetFlow最初由思科开发，但在RFC过程下进行了开发，以允许行业更广泛地采用，除了思科之外，许多供应商也支持NetFlow。NetFlow有两个常见的版本-5和9-主要区别在于支持的字段数量。经常见到一些“表兄弟”协议：
- en: '**sFlow** was developed by InMon as an open standard, and also has a supporting
    RFC. It''s common to see networking gear that supports both NetFlow and sFlow.'
  id: totrans-308
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: sFlow由InMon开发为开放标准，并有支持RFC。通常会看到支持NetFlow和sFlow的网络设备。
- en: '**IPFIX** (**IP Flow Information eXport**) is yet another open standard, which
    is built on and is (more or less) a superset of NetFlow v9.'
  id: totrans-309
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: IPFIX（IP流信息导出）是另一个开放标准，它建立在NetFlow v9的基础上，几乎是NetFlow v9的超集。
- en: '**J-Flow** is the NetFlow equivalent of Juniper gear, though in its most recent
    version (J-Flow v9), it appears identical to IPFIX and is documented that way
    in Juniper''s device-specific documentation.'
  id: totrans-310
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: J-Flow是Juniper设备的NetFlow等效物，尽管在其最新版本（J-Flow v9）中，它似乎与IPFIX相同，并且在Juniper的设备特定文档中是这样记录的。
- en: No matter what protocol you are using to export flow information, the systems
    that receive this information will usually ingest any or all of them. The export
    is usually on a UDP port. While in some cases the port will be defined in the
    specification, it can always be changed, and will often vary from one vendor to
    the next. NetFlow, for instance, is often seen on ports `2055`, `2056`, `4432`,
    `9995`, or `9996`. sFlow is officially defined to be on port `6343`, but is often
    deployed on other ports. IPFIX is not widely seen yet (other than as J-Flow v9)
    but is specified to be on `4739`.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 无论您使用哪种协议来导出流信息，接收此信息的系统通常会接收任何或所有这些信息。导出通常在UDP端口上进行。虽然在某些情况下，端口将在规范中定义，但它总是可以更改，并且通常会因供应商而异。例如，NetFlow通常出现在端口`2055`、`2056`、`4432`、`9995`或`9996`上。sFlow正式定义为端口`6343`，但通常部署在其他端口上。IPFIX目前并不常见（除了作为J-Flow
    v9），但被指定为`4739`端口。
- en: 'While there are minor differences (sFlow, in particular, has some differences
    in how the data is collected and summarized), the result is the same. After being
    summarized, the data is sent to a backend server, where it is queryable. In these
    data repositories, network administrators look for the same things as police detectives:'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然有一些细微差别（特别是sFlow在数据收集和汇总方面有一些差异），但结果是相同的。在被汇总后，数据被发送到后端服务器，可以进行查询。在这些数据存储库中，网络管理员寻找与警察侦探相同的事物：
- en: '**Who** sent the data, and to **Where**? (source and destination IP)'
  id: totrans-313
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 谁发送了数据，发送到哪里？（源和目的地IP）
- en: '**What** was the data (source and, in particular, the destination port)'
  id: totrans-314
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据是什么（源和特别是目的地端口）
- en: '**When** was it sent?'
  id: totrans-315
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它是何时发送的？
- en: '**Why** is often extrapolated by defining the application that was used to
    send the data – Cisco''s **Network-Based Application Recognition** (**NBAR**)
    add-on can be helpful in this, or you can often infer the application just from
    the destination port (on the server side of the flow).'
  id: totrans-316
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通常通过定义用于发送数据的应用程序来推断原因-思科的基于网络的应用程序识别（NBAR）附加组件在这方面可能有所帮助，或者您通常可以从目的地端口（在流的服务器端）推断应用程序。
- en: '**How** much data was sent in each time interval.'
  id: totrans-317
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个时间间隔发送了多少数据。
- en: Let's dig a bit deeper into how collecting, aggregating, and sending flow data
    works, and how that might affect your design and implementation within your organization's
    network.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们深入了解一下收集、汇总和发送流量数据的工作方式，以及这可能如何影响您在组织网络中的设计和实施。
- en: Flow collection implementation concepts
  id: totrans-319
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 流量收集实施概念
- en: A key concept in all of these flow collection protocols is sampling. All of
    these protocols have a "sample x packets for every y packet" property in their
    configuration, with various vendors and platforms having different default values.
    Newer routers, for instance, will often default to a 100% sampling rate as they're
    usually lower bandwidth platforms (often under 100 Mbps) and have the CPU to back
    up that collection rate. This rate is often not practical on 1G, 10G, or faster
    switches – sampling at a reasonable rate becomes critical in those cases.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些流量收集协议中的一个关键概念是抽样。所有这些协议在其配置中都具有“每y个数据包抽样x个数据包”的属性，各种供应商和平台具有不同的默认值。例如，较新的路由器通常会将默认采样率设置为100％，因为它们通常是较低带宽平台（通常低于100
    Mbps），并且具有CPU来支持该收集速率。在1G、10G或更快的交换机上，这种速率通常不实用-在这些情况下，以合理的速率进行抽样变得至关重要。
- en: Picking interfaces is also key in terms of the implementation. As in SNMP, collecting
    flow information on all ports of a large switch will likely severely affect the
    switch's CPU (and its overall throughput). Your mileage may vary on this, though,
    as higher-end switches will offload telemetry functions to dedicated silicon to
    use the main chassis CPU that much less.
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 在实施方面，选择接口也很关键。与SNMP一样，在大型交换机的所有端口上收集流量信息可能会严重影响交换机的CPU（以及其整体吞吐量）。不过，您的情况可能有所不同，因为高端交换机通常会将遥测功能卸载到专用硅上，以减少主机机箱CPU的使用。
- en: Picking the collection topology is also important. For instance, in a data center/head
    office/branch office scenario, if the majority of the traffic is "hub and spoke"
    (that is, branch to branch communication is minimal), you will likely only collect
    flow data at the central location and put your flow collector in that same central
    location. In this scenario, the branch traffic would simply be the inverse of
    the head office traffic, so sending that a second time, over a WAN that presumably
    costs you money for bandwidth, is usually not wise.
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 选择收集拓扑结构也很重要。例如，在数据中心/总部/分公司的情况下，如果大部分流量是“中心和辐射”（即，分公司之间的通信很少），您可能只会在中心位置收集流量数据，并将流量收集器放在同一中心位置。在这种情况下，分公司流量简单地是总部流量的倒数，因此第二次发送该流量，通过您为带宽付费的WAN，通常是不明智的。
- en: The exception to this is **Voice over IP** (**VoIP**). If you recall from [*Chapter
    11*](B16336_11_Final_NM_ePub.xhtml#_idTextAnchor192), *Packet Capture and Analysis
    in Linux*, call setup uses the SIP protocol and is between the phone handset and
    the PBX. The call itself though uses RTP and is directly from one handset to the
    other. If there's a significant amount of branch-to-branch VoIP communication,
    you may choose to monitor the WAN interfaces of your branch routers as well.
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 唯一的例外是VoIP。如果您回忆一下第11章《Linux中的数据包捕获和分析》，呼叫设置使用SIP协议，位于电话机和PBX之间。但呼叫本身使用RTP，直接从一个电话机到另一个电话机。如果分支之间的VoIP通信量很大，您可能还会选择监视分支路由器的WAN接口。
- en: Finally, keep in mind that while this data is sampled and aggregated, eventually,
    it will get to the server and have to be stored on disk, where it tends to add
    up pretty quickly. You may find that as you "find your way" regarding how much
    information you need to keep to create meaningful reports, you might have to increase
    your partition or database sizes fairly frequently (always up, unfortunately).
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，请记住，虽然这些数据是抽样和聚合的，但最终它们会到达服务器并且必须存储在磁盘上，这往往会很快积累起来。您可能会发现，随着您在保留多少信息以创建有意义的报告方面的“摸索”，您可能需要经常增加您的分区或数据库大小（不幸的是，总是增加）。
- en: In a similar vein, as your data volume grows, so will the demands on memory
    and CPU. You may find that you benefit from adding indexes here or there in your
    database to speed up reporting or the web interface itself. Adding indexes will
    unfortunately usually cost you additional disk and often memory requirements,
    so keep that in mind as well. As your dig deeper into this see-saw set of requirements,
    you'll find that your database administration skills will grow over time, and
    may end up helping you optimize other database-centric applications.
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 同样地，随着数据量的增长，对内存和CPU的需求也会增加。您可能会发现，在数据库中偶尔添加索引可以加快报告或Web界面本身的速度。不幸的是，添加索引通常会增加额外的磁盘和内存需求，所以也要记住这一点。随着您深入研究这一需求的过程，您会发现您的数据库管理技能会随着时间的推移而增长，并且最终可能会帮助您优化其他以数据库为中心的应用程序。
- en: There will always be a temptation to combine syslog, SNMP, and flow collection
    on one single network management server. While combining syslog and SNMP is a
    common thing, if the NMS uses a database for log information, you'll likely want
    a separate, text-based log repository – if only to keep your long-term log storage
    process simple. Regarding flow collection, you'll almost always put this on a
    separate server. You might get away with an "all-in-one" approach in a smaller
    environment, but even many small environments will find that the resources for
    flow collection far outweigh the other two functions. In addition, the dependence
    on the backend database and the high rates of inbound data means this can make
    your flow collection server abnormally "fragile" – you may find that you'll need
    to rebuild this server once or twice per year to fix "unexplainable" problems.
    Also, because of this, you'll find that it's fairly common to see organizations
    switch to a different application or database platform when this happens (unless
    there are commercial licenses involved), only because by then, they'll know what
    they don't like about the previous build, and since there's a rebuild, it's a
    low barrier to test that next solution.
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 总是会有一种诱惑，即将syslog、SNMP和流量收集合并到一个单一的网络管理服务器上。虽然合并syslog和SNMP是一件常见的事情，但如果NMS使用数据库来记录信息，您可能会希望有一个单独的基于文本的日志存储库，这样可以使您的长期日志存储过程变得简单。关于流量收集，您几乎总是会将其放在一个单独的服务器上。在较小的环境中，您可能会采用“一体化”方法，但即使在许多小型环境中，您会发现流量收集的资源远远超过其他两个功能。此外，对后端数据库的依赖和入站数据的高速率意味着这可能会使您的流量收集服务器异常“脆弱”
    - 您可能会发现您需要每年一两次重建此服务器以解决“无法解释”的问题。此外，由于这个原因，您会发现组织普遍会在发生这种情况时切换到不同的应用程序或数据库平台（除非涉及商业许可），只是因为到那时，他们会知道他们不喜欢以前的构建，而且由于有了重建，测试下一个解决方案的门槛很低。
- en: With all this basic flow information covered, let's build a NetFlow solution
    for real, starting with a typical router.
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 在涵盖了所有这些基本流信息之后，让我们为真实情况构建一个NetFlow解决方案，从一个典型的路由器开始。
- en: Configuring a router or switch for flow collection
  id: totrans-328
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置路由器或交换机进行流量收集
- en: 'First, we''ll define what we want to collect. To start with, we want our standard
    tuple information – source and destination IP, protocol, and port information.
    We''ll also add QoS information (the `ipv4 tos` line), as well as direction and
    routing information if possible (the `as` information is BGP Autonomous System
    information). We also have `application name` in this definition. This is mainly
    used if you are also running Cisco''s NBAR add-on. NBAR is set on the interface
    (you''ll see this on the next page) and helps identify applications by name from
    its constituent network traffic:'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将定义我们要收集的内容。首先，我们想要我们的标准元组信息 - 源和目的IP、协议和端口信息。我们还将添加QoS信息（`ipv4 tos`行），以及方向和路由信息（如果可能的话，`as`信息是BGP自治系统信息）。在这个定义中，我们还有`应用程序名称`。这主要是用于如果您还在运行Cisco的NBAR附加组件。NBAR设置在接口上（您将在下一页看到），并帮助通过其组成的网络流量识别应用程序的名称。
- en: '[PRE32]'
  id: totrans-330
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Next, we''ll define the flow exporter. This tells the system where to send
    the flow information, and from which interface. The flow source is important because
    if that should change, it will look like another device on the NetFlow server.
    Also, note that we''ve defined an interface table in this section, which will
    send enough interface information to help in defining the host and interface characteristics
    on the server. Note that the flow destination port is almost always UDP, but the
    port number is not standardized. Vendors often have their own default value, and
    in all the implementations I''ve seen, that port number is configurable:'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将定义流出口。这告诉系统从哪里发送流信息以及从哪个接口发送。流源很重要，因为如果发生变化，它将看起来像NetFlow服务器上的另一个设备。还要注意，我们在此部分中定义了一个接口表，它将发送足够的接口信息以帮助定义服务器上的主机和接口特性。请注意，流目的地端口几乎总是UDP，但端口号没有标准化。供应商通常有自己的默认值，并且在我看到的所有实现中，该端口号是可配置的：
- en: '[PRE33]'
  id: totrans-332
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'As you can see in the definition, the flow monitor ties the exporter and flow
    records together so that it can all be applied as one "thing" to the interfaces:'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 如您在定义中所见，流量监视器将出口和流记录绑定在一起，以便可以将其作为一个“整体”应用于接口：
- en: '[PRE34]'
  id: totrans-334
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: On the interface, you'll see that we've defined a flow monitor that's both inbound
    and outbound. Note that you can define multiple recorders and monitors. Normally,
    there is only one flow exporter (as there is usually only one flow destination
    for any given device).
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 在接口上，您将看到我们定义了一个既入站又出站的流量监视器。请注意，您可以定义多个记录器和监视器。通常，只有一个流出口（因为通常对于任何给定的设备，只有一个流目的地）：
- en: 'The `bandwidth` statement is often used to help define router metrics in the
    OSPF or EIGRP routing protocols, for instance. In the case of flow collection,
    though, defining a bandwidth will usually auto-configure the total bandwidth per
    interface for the various flow graphs. Defining the total bandwidth per physical
    interface is key so that each graph has an accurate upper bound, and will then
    show accurate percentages for both aggregate and specific tuple statistics:'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: '`带宽`语句通常用于帮助定义OSPF或EIGRP路由协议中的路由器指标。在流量收集的情况下，定义带宽通常会自动配置各种流图的每个接口的总带宽。定义每个物理接口的总带宽是关键的，这样每个图表都有准确的上限，并且随后将显示聚合和特定元组统计的准确百分比：'
- en: '[PRE35]'
  id: totrans-337
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Layer 2 flow collection – on an individual switch port, for instance – is usually
    much simpler. For instance, on an HP switch, collecting sFlow data on one switch
    port might look something like the following example.
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 第2层流量收集-例如，在单个交换机端口上-通常要简单得多。例如，在HP交换机上，在一个交换机端口上收集sFlow数据可能看起来像以下示例。
- en: 'Note that the port number is `6343`. In contrast to NetFlow, sFlow has `6343/udp`
    assigned as its default port. It is, of course, configurable for other values
    on both the client and server side:'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意端口号为`6343`。与NetFlow相比，sFlow将`6343/udp`分配为其默认端口。当然，客户端和服务器端都可以配置为其他值：
- en: '[PRE36]'
  id: totrans-340
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: Note the sampling rate and polling intervals that are defined. Also, note that
    since you are collecting flow data at Layer 2 in this instance, your tuple might
    be limited, depending on your switch model. This also helps explain why the configuration
    is so much simpler – unless the switch deconstructs the sampled frames to get
    the L3/L4 information of each packet, there's less information to collect.
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意定义的采样率和轮询间隔。还要注意，由于在这种情况下在第2层收集流量数据，因此您的元组可能会受到限制，这取决于交换机型号。这也有助于解释为什么配置要简单得多-除非交换机解构采样帧以获取每个数据包的L3/L4信息，否则要收集的信息就会更少。
- en: With the router configuration built, let's move on and build and configure the
    server side of this equation.
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 构建了路由器配置后，让我们继续构建和配置此方程式的服务器端。
- en: An example NetFlow server using NFDump and NFSen
  id: totrans-343
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用NFDump和NFSen的示例NetFlow服务器
- en: NFDump and **NetFlow Sensor** (**NFSen**) make for a nice entry level to the
    world of flow collection. Of particular interest is that NFDump uses its own file
    format, and that the command-line tools are very similar in terms of operation
    to tcpdump (which we covered in [*Chapter 11*](B16336_11_Final_NM_ePub.xhtml#_idTextAnchor192),
    *Packet Capture and Analysis in Linux*). So, if you enjoyed our filtering discussions
    and examples in that chapter, using the NFDump tools for "top n" type statistics
    and reports will be right up your alley!
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: NFDump和**NetFlow Sensor**（**NFSen**）是流量收集世界的良好入门级工具。特别有趣的是，NFDump使用自己的文件格式，并且命令行工具在操作上与tcpdump非常相似（我们在[*第11章*](B16336_11_Final_NM_ePub.xhtml#_idTextAnchor192)中介绍了Linux中的*数据包捕获和分析*）。因此，如果您喜欢我们在该章节中的过滤讨论和示例，那么使用NFDump工具进行“top
    n”类型的统计和报告将非常合适！
- en: NFCapd is a flow collector application. We'll run it in the foreground and also
    in the background.
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: NFCapd是一个流量收集器应用程序。我们将在前台和后台运行它。
- en: NFSen is a simple web frontend to NFDump.
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: NFSen是NFDump的简单Web前端。
- en: 'We''ll run this on a standalone Linux host; you can use the Ubuntu VM or physical
    host that we''ve been using throughout this book. Let''s start by installing the
    `nfdump` package (which gets us several NetFlow-related commands):'
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在独立的Linux主机上运行此操作；您可以使用我们在整本书中一直在使用的Ubuntu VM或物理主机。让我们首先安装`nfdump`软件包（这将为我们提供几个与NetFlow相关的命令）：
- en: '[PRE37]'
  id: totrans-348
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Now, edit the `/etc/nfdump/.default.conf` file and change the `options` line
    at the top:'
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，编辑`/etc/nfdump/.default.conf`文件并更改顶部的`options`行：
- en: '[PRE38]'
  id: totrans-350
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'This puts the data where our NFSen server will expect it to be later. The `-S`
    parameter tells the NFCapd process (which we''ll run as a daemon) to append a
    datestamp to the path. So, for June 23, 2021, all of our captured NetFlow data
    will be in the directory:'
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 这将把数据放在我们的NFSen服务器稍后期望的位置。`-S`参数告诉NFCapd进程（我们将作为守护进程运行）将日期戳附加到路径上。因此，对于2021年6月23日，我们捕获的所有NetFlow数据将在目录中：
- en: '[PRE39]'
  id: totrans-352
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: As you'd expect, this data will tend to accumulate quickly, which can be risky
    as `/var` is also where logs and other vital system data is stored. In production,
    I'd recommend that you have a separate partition for this, and have the root of
    the path be something different, maybe `/netflow`. This way, if your NetFlow volume
    fills up, other system services won't be directly affected.
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所期望的那样，这些数据往往会迅速积累，这可能会有风险，因为`/var`也是存储日志和其他重要系统数据的地方。在生产中，我建议您为此单独设置一个分区，并将路径的根目录设置为不同的内容，也许是`/netflow`。这样，如果您的NetFlow容量填满，其他系统服务不会直接受到影响。
- en: The `–p` parameter defines the port that our `nfcapd` process will listen on
    – the default of `2055` should work well in most situations, but change it as
    required.
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: '`-p`参数定义了我们的`nfcapd`进程将监听的端口-默认的`2055`在大多数情况下应该很好用，但根据需要进行更改。'
- en: Now, we can start directing NetFlow traffic to this collector IP using port
    `2055/udp`. After a few minutes, we can look at the NetFlow data using `nfdump`.
    The data files are collected in `/var/cache/nfdump/live/source1/` (follow the
    tree to today's date from there).
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以开始将NetFlow流量定向到此收集器IP，使用端口`2055/udp`。几分钟后，我们可以使用`nfdump`查看NetFlow数据。数据文件存储在`/var/cache/nfdump/live/source1/`中（从那里跟踪到今天的日期）。
- en: 'Let''s look at the first few lines of one file:'
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们查看一个文件的前几行：
- en: '[PRE40]'
  id: totrans-357
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Note that each line wraps. Let''s just look at the tuple information and the
    amount of data that was moved for each sample interval. We''ll take out the column
    headers:'
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，每行都换行了。让我们只看元组信息和每个样本间隔移动的数据量。我们将去掉列标题：
- en: '[PRE41]'
  id: totrans-359
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Now, we have what''s starting to look like information! Let''s aggregate the
    traffic in both directions by adding `-b`. We''ll also read from all the files
    available in the directory. The columns are now `Protocol`, `Src IP:Port`, `Dst
    IP:Port`, `Out Pkt`, `In Pkt`, `Out Byte`, `In Byte`, and `Flows`. Note that in
    some cases, we have an active flow for that time period, but no data in or out:'
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们开始看起来像是信息了！让我们通过添加`-b`来聚合双向流量。我们还将从目录中可用的所有文件中读取。现在的列是`Protocol`，`Src IP:Port`，`Dst
    IP:Port`，`Out Pkt`，`In Pkt`，`Out Byte`，`In Byte`和`Flows`。请注意，在某些情况下，我们在该时间段有一个活动流，但没有数据进出：
- en: '[PRE42]'
  id: totrans-361
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Let''s look at the traffic from just one IP address:'
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们查看来自一个IP地址的流量：
- en: '[PRE43]'
  id: totrans-363
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: The data is wrapped, but you can see how this is becoming more and more useful.
    It's not a full packet capture, but on many days, it's all the packet capture
    information you might need!
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 数据已经包装，但您可以看到这变得越来越有用。这不是完整的数据包捕获，但在许多天里，这是您可能需要的所有数据包捕获信息！
- en: The `–s` (statistics) parameter is very useful as you can query on any possible
    NetFlow-collected information in the extended tuple. `-A` allows you to aggregate
    on that same extended information, while `–a` aggregates just on the basic 5-tuple.
    Note that you can't aggregate on the source or destination IP when you have `–b`
    set (because `–b` already aggregates those two).
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: '`-s`（统计）参数非常有用，因为您可以查询扩展元组中收集的任何可能的NetFlow信息。`-A`允许您在相同的扩展信息上进行聚合，而`-a`仅在基本的5元组上进行聚合。请注意，当您设置了`-b`时，您无法对源IP或目标IP进行聚合（因为`-b`已经对这两个进行了聚合）。'
- en: 'Usually, you need to collect information for a given time window; that is,
    when a problem or symptom has occurred. In those cases, `-t` (timewin) is your
    friend – let''s look between 21:31 and 21:32, still for just that IP address.
    Note again that you''ll want to modify this for your date and traffic patterns:'
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，您需要收集特定时间窗口的信息；也就是说，在出现问题或症状时。在这些情况下，`-t`（timewin）是您的朋友-让我们在21:31和21:32之间查看，仍然只针对该IP地址。再次注意，您需要根据您的日期和流量模式进行修改：
- en: '[PRE44]'
  id: totrans-367
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: In one command line, we've summarized all the traffic that's comes in and goes
    out of one host for a 2-minute period!
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 在一条命令行中，我们总结了一个主机在2分钟内进出的所有流量！
- en: With our basic functionality working, let's install the web interface for our
    collector. This is how NetFlow data is most often consumed – anomalies in protocol
    patterns are often very easy to see by eye.
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的基本功能正常工作后，让我们安装收集器的Web界面。这是NetFlow数据最常见的消耗方式-通过眼睛很容易看到协议模式中的异常。
- en: 'The following instructions are from [https://github.com/mbolli/nfsen-ng](https://github.com/mbolli/nfsen-ng)(`nfsen-ng`
    is the application being installed):'
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 以下说明来自[https://github.com/mbolli/nfsen-ng](https://github.com/mbolli/nfsen-ng)（正在安装的应用程序是`nfsen-ng`）：
- en: 'First, let''s elevate our privileges to root – almost everything here requires
    those rights:'
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们提升我们的权限到root-几乎这里的所有内容都需要这些权限：
- en: '[PRE45]'
  id: totrans-372
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'Install all the packages we''ll need:'
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 安装我们需要的所有软件包：
- en: '[PRE46]'
  id: totrans-374
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'Enable the Apache modules:'
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 启用Apache模块：
- en: '[PRE47]'
  id: totrans-376
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'Install the `rrd` library for PHP:'
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: 为PHP安装`rrd`库：
- en: '[PRE48]'
  id: totrans-378
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'Configure the RRD library and PHP:'
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 配置RRD库和PHP：
- en: '[PRE49]'
  id: totrans-380
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Configure the virtual host so that it can read `.htaccess` files. Edit the
    `/etc/apache2/apache2.conf` file and edit the `Allow Override` line in the `/var/www`
    section:'
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: 配置虚拟主机以便它可以读取`.htaccess`文件。编辑`/etc/apache2/apache2.conf`文件，并编辑`/var/www`部分中的`Allow
    Override`行：
- en: '[PRE50]'
  id: totrans-382
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'Finally, restart the Apache server:'
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，重新启动Apache服务器：
- en: '[PRE51]'
  id: totrans-384
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'Now, we''re ready to install `nfsen-ng` and set the file/directory flags:'
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们准备安装`nfsen-ng`并设置文件/目录标志：
- en: '[PRE52]'
  id: totrans-386
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'Still working with root privileges, copy the default settings to the settings
    file:'
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: 仍然使用root权限，将默认设置复制到设置文件：
- en: '[PRE53]'
  id: totrans-388
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: Edit the resulting `settings.php` file.
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑生成的`settings.php`文件。
- en: 'In the `nfdump` section, update the following lines to match:'
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 在`nfdump`部分，更新以下行以匹配：
- en: '[PRE54]'
  id: totrans-391
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: Note that you can change this, especially if you plan to do log rotation by
    the date of your `nfdump` files, but that's not in our scope at the moment.
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，您可以更改这一点，特别是如果您计划按`nfdump`文件的日期进行日志轮换，但这不是我们目前的范围。
- en: 'Now, let''s test our configuration (still as root):'
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们测试我们的配置（仍然作为root用户）：
- en: '[PRE55]'
  id: totrans-394
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: If this processes without error, your configuration will look good!
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这个过程没有错误，您的配置将看起来很好！
- en: Now, point your various network devices to send their NetFlow results to this
    host's IP address, on port `2055/udp` (note that you can change this listening
    port by editing `/etc/nfdump/default.conf`).
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，将各种网络设备指向将它们的NetFlow结果发送到此主机的IP地址，端口为`2055/udp`（请注意，您可以通过编辑`/etc/nfdump/default.conf`来更改此监听端口）。
- en: Let's collect some data. You can verify that it's working by watching the file
    sizes in the target directory. An "empty" file is 276 bytes, but once you start
    receiving data, you should start seeing larger files.
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们收集一些数据。您可以通过观察目标目录中的文件大小来验证它是否正常工作。一个“空”文件大小为276字节，但一旦开始接收数据，您应该会看到更大的文件。
- en: 'Now, browse to your server. Since we haven''t done anything fancy in apache,
    your URL will be as follows:'
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，浏览到您的服务器。由于我们在apache中没有做任何花哨的东西，您的URL将如下：
- en: '[PRE56]'
  id: totrans-399
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: Now, let's look at the graphical side of things. Browse to your server IP address
    – the URL should look something like [http://192.168.122.113/nfsen-ng/frontend/](http://192.168.122.113/nfsen-ng/frontend/).
    You can, of course, simplify this URL by configuring Apache to repoint to the
    home page.
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看图形方面的东西。浏览到您的服务器IP地址 - URL应该看起来像[http://192.168.122.113/nfsen-ng/frontend/](http://192.168.122.113/nfsen-ng/frontend/)。当然，您可以通过配置Apache重新指向主页来简化此URL。
- en: 'Your display should now look something like this (your data values will differ):'
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: 您的显示现在应该看起来像这样（您的数据值将有所不同）：
- en: '![Figure 12.23 – Basic flow data in the graph display with display/filter controls
    in NFSen'
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: '![图12.23 - 图形显示中的基本流数据，带有NFSen中的显示/过滤控件'
- en: '](img/B16336_12_023.jpg)'
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16336_12_023.jpg)'
- en: Figure 12.23 – Basic flow data in the graph display with display/filter controls
    in NFSen
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.23 - 图形显示中的基本流数据，带有NFSen中的显示/过滤控件
- en: A good approach is to pick a reasonable time scale and then use the sliders
    to either grow or shrink the window as needed. In this case, we started with a
    24-hour graph, with a final display of 6-ish hours.
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: 一个好的方法是选择一个合理的时间尺度，然后使用滑块来扩大或缩小窗口。在这种情况下，我们从一个24小时的图表开始，最终显示了大约6小时。
- en: This display will often highlight times that might be of concern – you can "zoom"
    this graph in on those times for more details.
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: 这个显示通常会突出显示可能引起关注的时间 - 您可以在这些时间上“放大”这个图表以获得更多细节。
- en: The next stop would be to the **Flows** button (in the top right of your display).
    A good set of selections here will be a reasonable starting window. Next, select
    the various aggregations.
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: 下一站将是**流量**按钮（在显示的右上角）。在这里，一个合理的起始窗口将是一个很好的选择。接下来，选择各种聚合。
- en: 'Normally, you will want protocol aggregation with a destination port aggregation.
    Next, you''ll often want the IP to be aggregated by both the source and destination
    IP. Adding in an NFDUMP filter for the exact time window is also often helpful.
    If you can limit your displays to be as short as possible – a few minutes, if
    possible – you will gain the most value from these displays:'
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，您会希望使用目标端口聚合进行协议聚合。接下来，您通常会希望将IP地址按源IP和目标IP进行聚合。添加NFDUMP过滤器以获取确切的时间窗口通常也很有帮助。如果可能的话，您可以将显示限制在尽可能短的时间内
    - 如果可能的话，几分钟内，您将从这些显示中获得最大的价值：
- en: '![Figure 12.24 – Flow display controls for aggregation and filtering in NFSen'
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: '![图12.24 - NFSen中聚合和过滤的流显示控件'
- en: '](img/B16336_12_024.jpg)'
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16336_12_024.jpg)'
- en: Figure 12.24 – Flow display controls for aggregation and filtering in NFSen
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.24 - NFSen中聚合和过滤的流显示控件
- en: The final selections will be dictated by what you are trying to solve, and it
    may take a few tries to get the display you need for a final diagnosis.
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: 最终的选择将取决于您要解决的问题，可能需要尝试几次才能获得您需要的显示以进行最终诊断。
- en: 'When your selections are complete, pick **Process data** to get your results
    in the lower part of the screen:'
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: 当您的选择完成后，选择**处理数据**以在屏幕的下半部分获得结果：
- en: '![Figure 12.25 – Filter results in NFSen'
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: '![图12.25 - NFSen中的过滤结果'
- en: '](img/B16336_12_025.jpg)'
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16336_12_025.jpg)'
- en: Figure 12.25 – Filter results in NFSen
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.25 - NFSen中的过滤结果
- en: You may wish to export this to CSV to manipulate your data further in a spreadsheet.
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能希望将其导出为CSV，以便在电子表格中进一步操作您的数据。
- en: 'In a real incident, what does this look like? Let''s open the default window,
    where we will notice a "spike" in traffic that might be suspicious. We might also
    get this timeframe from the helpdesk or desktop team, who might have forensic
    information, an IPS event (see [*Chapter 13*](B16336_13_Final_NM_ePub.xhtml#_idTextAnchor236),
    *Intrusion Prevention Systems on Linux*), or an event from the desktop protection
    application or anti-malware application. In this daily view, we can see a suspicious
    spike just before 2:30 P.M. Note that we used the sliders to zoom into the time
    window of interest. Also, note that we''re looking at either the "traffic" or
    "bytes" view – data exfiltration will often occur as one or two flows only, so
    those attacks will often stand out in the default display:'
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: 在真实的事件中，这是什么样子？让我们打开默认窗口，在那里我们会注意到流量可能可疑的“峰值”。我们还可以从帮助台或桌面团队那里获得这个时间段，他们可能有取证信息，IPS事件（见[*第13章*]（B16336_13_Final_NM_ePub.xhtml#_idTextAnchor236），*Linux上的入侵防范系统*），或来自桌面保护应用程序或反恶意软件应用程序的事件。在这个每日视图中，我们可以看到在下午2:30之前出现了一个可疑的峰值。请注意，我们使用滑块来放大感兴趣的时间窗口。还要注意，我们正在查看“流量”或“字节”视图
    - 数据外泄通常只会发生在一两个流中，因此这些攻击通常会在默认显示中显眼：
- en: '![Figure 12.26 – Unusual traffic "peak" discovered'
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: '![图12.26 - 发现异常流量“峰值”'
- en: '](img/B16336_12_026.jpg)'
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16336_12_026.jpg)'
- en: Figure 12.26 – Unusual traffic "peak" discovered
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.26 - 发现异常流量“峰值”
- en: 'Let''s change to the protocol display and poke around a bit. In this display,
    we''ve trimmed things down to only show UDP, and we can see something suspicious
    – this volume of UDP traffic isn''t normal for this organization:'
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们切换到协议显示并稍微浏览一下。在这个显示中，我们已经将事情简化，只显示UDP，我们可以看到一些可疑的东西 - 这种UDP流量的数量对于这个组织来说并不正常：
- en: '![Figure 12.27 – Display adjustments in the protocol display, showing UDP only'
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: '![图12.27 - 协议显示中的显示调整，仅显示UDP'
- en: '](img/B16336_12_027.jpg)'
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16336_12_027.jpg)'
- en: Figure 12.27 – Display adjustments in the protocol display, showing UDP only
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.27 - 协议显示中的显示调整，仅显示UDP
- en: 'With that suspicious traffic spike at 14:20, let''s dig a bit deeper. Let''s
    add a nfdump filter to look at UDP, but pull out all the requests to the DNS forwarders
    that we have configured on the internal DNS server:'
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: 有了那个在14:20出现的可疑流量峰值，让我们深入一点。让我们添加一个nfdump过滤器来查看UDP，但提取我们在内部DNS服务器上配置的所有DNS转发器的请求：
- en: '![Figure 12.28 – UDP search results – removing legitimate DNS traffic'
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: '![图12.28 – UDP搜索结果 – 删除合法的DNS流量'
- en: '](img/B16336_12_028.jpg)'
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16336_12_028.jpg)'
- en: Figure 12.28 – UDP search results – removing legitimate DNS traffic
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.28 – UDP搜索结果 – 删除合法的DNS流量
- en: 'Now, digging deeper, let''s look at just that suspect IP address:'
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们深入挖掘一下，只看那个可疑的IP地址：
- en: '![Figure 12.29 – Filtering for a suspect IP address'
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: '![图12.29 – 过滤可疑IP地址'
- en: '](img/B16336_12_029.jpg)'
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16336_12_029.jpg)'
- en: Figure 12.29 – Filtering for a suspect IP address
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.29 – 过滤可疑IP地址
- en: 'This gives us the following result, showing the same transfer before and after
    NAT on the firewall, with no other traffic than this one large transfer of data:'
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
  zh: 这给我们以下结果，显示了防火墙上NAT之前和之后的相同传输，除了这一大数据传输之外没有其他流量：
- en: '![Figure 12.30 – Suspect traffic before and after NAT on the firewall'
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
  zh: '![图12.30 – 防火墙上NAT之前和之后的可疑流量'
- en: '](img/B16336_12_030.jpg)'
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16336_12_030.jpg)'
- en: Figure 12.30 – Suspect traffic before and after NAT on the firewall
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.30 – 防火墙上NAT之前和之后的可疑流量
- en: Looking at the totals in the `53/udp`, which we know is normally used for DNS.
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: 观察`53/udp`中的总数，我们知道这通常用于DNS。
- en: Using DNS, you can even exfiltrate data using valid queries – first, encode
    your data using base64, then make sequential "A" record queries of the resulting
    text in known "chunk" sizes. The receiving server then reassembles that data and
    decodes it to its original binary format. If there is concern about out-of-order
    packets, you can even encode a sequence number into the transfer.
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
  zh: 使用DNS，甚至可以使用有效的查询来外泄数据 – 首先，使用base64对数据进行编码，然后以已知的“块”大小进行顺序的“A”记录查询。接收服务器然后重新组装数据并将其解码为原始的二进制格式。如果担心数据包的顺序问题，甚至可以将序列号编码到传输中。
- en: Now that we've found that attack, how would we defend against this at a network
    level?
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们发现了这次攻击，我们如何在网络层面进行防御呢？
- en: 'A good starting point would be a reasonable access list for outbound traffic,
    commonly called an egress filter. It would work something like this:'
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: 一个很好的起点是为出站流量创建一个合理的访问列表，通常称为出口过滤器。它可能是这样工作的：
- en: Permit `53/udp` and `tcp` from our DNS servers to their known forwarder IPs.
  id: totrans-442
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许从我们的DNS服务器到它们已知的转发器IP的`53/udp`和`tcp`。
- en: Deny all other `53/udp` and `tcp`, and log that traffic as an alert.
  id: totrans-443
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 拒绝所有其他的`53/udp`和`tcp`，并将该流量记录为警报。
- en: Permit `ssh`, `scp`, `ftp`, and other known traffic by protocol and ports to
    known target hosts.
  id: totrans-444
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许`ssh`，`scp`，`ftp`和其他已知的流量通过协议和端口到已知的目标主机。
- en: Deny those protocols to all other hosts and log this as an alert.
  id: totrans-445
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 拒绝所有其他主机的这些协议，并将其记录为警报。
- en: Permit HTTP and HTTPS to any IP (but layer on another protection, perhaps reputation
    filtering or content controls).
  id: totrans-446
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许HTTP和HTTPS到任何IP（但另外增加一层保护，也许是声誉过滤或内容控制）。
- en: Deny all other traffic and log that traffic as an alert.
  id: totrans-447
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 拒绝所有其他流量，并将该流量记录为警报。
- en: The key thing is that there will always be a "next attack" – but logging and
    alerting on attacks you know about will generally give you at least some warning
    at the beginning of an attack, often enough for you to act and prevent the attacker
    from succeeding in their final goals.
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: 关键是总会有“下一次攻击” – 但是记录和警报你知道的攻击通常至少会在攻击开始时给你一些警告，通常足够让你采取行动，防止攻击者达到最终目标。
- en: At this point, you have some familiarity with using NFDUMP and NFSEN combination.
    But what other open source NetFlow Collector applications are available to you?
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，您对使用NFDUMP和NFSEN组合有一些了解。但是还有哪些开源NetFlow收集器应用程序可供您选择？
- en: Other open source NetFlow alternatives
  id: totrans-450
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 其他开源NetFlow替代方案
- en: nProbe is written by the fine folks who brought us ntop and is hosted at [https://www.ntop.org/products/netflow/nprobe/#](https://www.ntop.org/products/netflow/nprobe/#).
    This allows you to install a NetFlow collector on any host. The ntop tool ([https://www.ntop.org/products/traffic-analysis/ntop/](https://www.ntop.org/products/traffic-analysis/ntop/))
    is their collector, which gave us many of the benefits of NetFlow well before
    NetFlow was popular, but using a packet capture and analysis approach. It has
    since been expanded to include support for all versions of NetFlow and IPFIX.
    The most attractive factor in choosing ntop is that it's a single install with
    everything packaged in – most of the fiddly configuration is taken care of. It
    also breaks the data out with more detail on underlying applications, even on
    the initial graphical screens. On the downside, there is no command-line set of
    tools; it's an "all-in-one" application that presents a web/graphical interface.
    The ntop suite of tools is free to download. At this free level, it enjoys "community
    support" via forums and "best efforts" mailing lists.
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
  zh: nProbe是由ntop团队编写的，托管在[https://www.ntop.org/products/netflow/nprobe/#](https://www.ntop.org/products/netflow/nprobe/#)。这允许您在任何主机上安装NetFlow收集器。ntop工具（[https://www.ntop.org/products/traffic-analysis/ntop/](https://www.ntop.org/products/traffic-analysis/ntop/)）是他们的收集器，在NetFlow流行之前就为我们提供了许多NetFlow的好处，但使用了数据包捕获和分析方法。它已经扩展到支持所有版本的NetFlow和IPFIX。选择ntop最吸引人的因素是它是一个单一的安装，所有东西都打包在一起
    – 大部分繁琐的配置都已经处理好了。它还以更详细的方式分解数据，甚至在初始的图形界面上也是如此。不足之处是没有命令行工具集；它是一个“一体化”的应用程序，提供了一个网页/图形界面。ntop工具套件是免费下载的。在这个免费级别上，它通过论坛和“尽力而为”的邮件列表享有“社区支持”。
- en: '**System for Internet Level Knowledge** (**SILK**) is one of the oldest flow
    collection tools out there, but it still supports all of the newer protocols.
    It is developed by the Network Situational Awareness Group at CERT, with the documentation
    and downloads hosted here: [https://tools.netsa.cert.org/silk/](https://tools.netsa.cert.org/silk/).
    SILK is a free tool, with no commercial offering.'
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
  zh: '**互联网级别知识系统**（**SILK**）是最古老的流量收集工具之一，但它仍然支持所有较新的协议。它由CERT的网络态势感知组开发，文档和下载托管在这里：[https://tools.netsa.cert.org/silk/](https://tools.netsa.cert.org/silk/)。SILK是一个免费工具，没有商业提供。'
- en: Speaking of which, what about commercial products in this field?
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
  zh: 说到这一点，这个领域还有哪些商业产品？
- en: Commercial offerings
  id: totrans-454
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 商业产品
- en: Almost every vendor that has a commercial NMS will have a flow collection module
    to that NMS. However, as you dig into their documentation, almost all of them
    will only recommend that you deploy the flow collection on the same server as
    the SNMP and syslog functions. As we discussed earlier, as the volume of flow
    data grows and the length of data retention grows, the flow collection service
    will tend to overwhelm an already busy system. Also, given the database-intensive
    nature of most flow collection services, it's common to see people have to clear
    that data periodically as a "when all other troubleshooting fails" step in fixing
    a broken flow collection server. These factors tend to quickly see NetFlow or
    its related services moved to their own server and database in most organizations.
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
  zh: 几乎每个拥有商业NMS的供应商都会有一个流量收集模块与该NMS相配套。然而，当你深入研究他们的文档时，几乎所有的供应商都只建议你在与SNMP和syslog功能相同的服务器上部署流量收集。正如我们之前讨论的，随着流量数据量的增长和数据保留时间的增加，流量收集服务往往会压倒已经繁忙的系统。此外，由于大多数流量收集服务对数据库的依赖性，通常会看到人们不得不定期清除数据，作为修复破损的流量收集服务器的“当所有其他故障排除失败时”的步骤。这些因素往往会迅速导致NetFlow或其相关服务在大多数组织中被移至自己的服务器和数据库。
- en: That being said, in commercial offerings, you'll often see more work on the
    "look and feel" of the application. For instance, when a device interface is added
    for NetFlow, the interface name will often be read from the interface's `description`
    value, and the maximum bandwidth for graphs will be initially set from either
    the interface's throughput value or the router's "bandwidth" metric (if set).
    Graphs will often include application names and workstation names, or even user
    IDs. Graphs will also drill down to the destination port values and data rates
    right from the start – since that's where you typically want to end up. Overall,
    most commercial products tend to be much easier to set up, both for the initial
    application and when adding devices.
  id: totrans-456
  prefs: []
  type: TYPE_NORMAL
  zh: 话虽如此，在商业产品中，你经常会看到更多关于应用程序“外观和感觉”的工作。例如，当为NetFlow添加设备接口时，接口名称通常会从接口的`description`值中读取，并且图表的最大带宽将最初从接口的吞吐量值或路由器的“带宽”度量（如果设置）中设置。图表通常会包括应用程序名称和工作站名称，甚至用户ID。图表还将从一开始就深入到目标端口值和数据速率，因为那通常是你想要最终到达的地方。总的来说，大多数商业产品往往更容易设置，无论是在初始应用程序还是在添加设备时。
- en: Summary
  id: totrans-457
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: At this point, you should be aware of the huge volumes of useful data that can
    be collected from the logs of various systems, as well as how to use command-line
    tools to "mine" this data to find information that can help you solve specific
    problems as they arise. The use of log alerting should also be familiar ground,
    allowing you to proactively send alerts in the early stages of a problem.
  id: totrans-458
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，你应该意识到可以从各种系统的日志中收集到大量有用的数据，以及如何使用命令行工具来“挖掘”这些数据，以找到可以帮助你解决特定问题的信息。日志警报的使用也应该是熟悉的领域，允许你在问题的早期阶段主动发送警报。
- en: Then, the Dshield project was introduced. We welcome your participation, but
    even if you don't contribute data, it can be a valuable resource for a quick "internet
    weather report," as well as trends that help define the "internet climate" as
    far as malicious traffic (by port and protocol) goes.
  id: totrans-459
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，介绍了Dshield项目。我们欢迎你的参与，但即使你不贡献数据，它也可以成为一个快速的“互联网天气报告”的宝贵资源，以及有助于定义“互联网气候”的趋势，就恶意流量（按端口和协议）而言。
- en: You should now be familiar with how SNMP works, as well as how to use an SNMP-based
    NMS to manage performance metrics on your network devices and even Linux or Windows
    servers. We used LibreNMS in our examples, but the approaches and even the implementation
    will be very similar on almost any NMS you might find yourself using.
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在应该熟悉SNMP的工作原理，以及如何使用基于SNMP的NMS来管理网络设备甚至Linux或Windows服务器的性能指标。我们在示例中使用了LibreNMS，但几乎任何你可能使用的NMS的方法甚至实现都会非常相似。
- en: At a more advanced level, you should be well acquainted with the NetFlow protocol,
    both configuring it on a network device and a Linux collector. In this chapter,
    we used NetFlow as a detective tool, performing high-level forensics on network
    traffic to find suspicious traffic and, eventually, a malicious data exfiltration
    event.
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
  zh: 在更高级别上，你应该对NetFlow协议非常熟悉，包括在网络设备和Linux收集器上配置它。在本章中，我们使用NetFlow作为侦探工具，对网络流量进行高级取证，以找到可疑的流量，最终找到恶意数据外泄事件。
- en: In the next chapter, we'll explore **intrusion prevention systems** (**IPS**),
    which will build on the material from several chapters in this book to look for
    and often stop malicious network activity.
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将探讨入侵防范系统（IPS），这将建立在本书的几章材料基础上，以寻找并经常阻止恶意网络活动。
- en: Questions
  id: totrans-463
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: 'As we conclude, here is a list of questions for you to test your knowledge
    regarding this chapter''s material. You will find the answers in the *Assessments*
    section of the *Appendix*:'
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们结束时，这里有一些问题供你测试对本章材料的了解。你可以在*附录*的*评估*部分找到答案：
- en: Why is it a bad idea to enable read-write community access for SNMP?
  id: totrans-465
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为什么启用SNMP的读写社区访问是一个坏主意？
- en: What are the risks of using Syslog?
  id: totrans-466
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用Syslog的风险是什么？
- en: NetFlow is also a clear text protocol. What are the risks with that?
  id: totrans-467
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: NetFlow也是一个明文协议。这会带来什么风险？
- en: Further reading
  id: totrans-468
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'For more information regarding what was covered in this chapter, please take
    a look at the following resources:'
  id: totrans-469
  prefs: []
  type: TYPE_NORMAL
  zh: 有关本章内容的更多信息，请参阅以下资源：
- en: 'Approaches to working with Syslog Data:'
  id: totrans-470
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理Syslog数据的方法：
- en: '[https://isc.sans.edu/diary/Syslog+Skeet+Shooting+-+Targetting+Real+Problems+in+Event+Logs/19449](https://isc.sans.edu/diary/Syslog+Skeet+Shooting+-+Targetting+Real+Problems+in+Event+Logs/19449)'
  id: totrans-471
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://isc.sans.edu/diary/Syslog+Skeet+Shooting+-+Targetting+Real+Problems+in+Event+Logs/19449](https://isc.sans.edu/diary/Syslog+Skeet+Shooting+-+Targetting+Real+Problems+in+Event+Logs/19449)'
- en: '[https://isc.sans.edu/forums/diary/Finding+the+Clowns+on+the+Syslog+Carousel/18373/](https://isc.sans.edu/forums/diary/Finding+the+Clowns+on+the+Syslog+Carousel/18373/)'
  id: totrans-472
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://isc.sans.edu/forums/diary/Finding+the+Clowns+on+the+Syslog+Carousel/18373/](https://isc.sans.edu/forums/diary/Finding+the+Clowns+on+the+Syslog+Carousel/18373/)'
- en: 'Swatch Man Pages:'
  id: totrans-473
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Swatch手册：
- en: '[http://manpages.ubuntu.com/manpages/bionic/man1/swatchdog.1p.html](http://manpages.ubuntu.com/manpages/bionic/man1/swatchdog.1p.html)'
  id: totrans-474
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://manpages.ubuntu.com/manpages/bionic/man1/swatchdog.1p.html](http://manpages.ubuntu.com/manpages/bionic/man1/swatchdog.1p.html)'
- en: '[https://linux.die.net/man/1/swatch](https://linux.die.net/man/1/swatch)'
  id: totrans-475
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://linux.die.net/man/1/swatch](https://linux.die.net/man/1/swatch)'
- en: 'Swatch Home Pages:'
  id: totrans-476
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Swatch主页：
- en: '[https://github.com/ToddAtkins/swatchdog](https://github.com/ToddAtkins/swatchdog)'
  id: totrans-477
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://github.com/ToddAtkins/swatchdog](https://github.com/ToddAtkins/swatchdog)'
- en: '[https://sourceforge.net/projects/swatch/](https://sourceforge.net/projects/swatch/)'
  id: totrans-478
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://sourceforge.net/projects/swatch/](https://sourceforge.net/projects/swatch/)'
- en: 'Various Regular Expressions Cheat Sheets:'
  id: totrans-479
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 各种正则表达式备忘单：
- en: '[https://www.rexegg.com/regex-quickstart.html](https://www.rexegg.com/regex-quickstart.html)'
  id: totrans-480
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.rexegg.com/regex-quickstart.html](https://www.rexegg.com/regex-quickstart.html)'
- en: '[https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions/Cheatsheet](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions/Cheatsheet)'
  id: totrans-481
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions/Cheatsheet](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions/Cheatsheet)'
- en: '[https://www.sans.org/security-resources/posters/dfir/hex-regex-forensics-cheat-sheet-345](https://www.sans.org/security-resources/posters/dfir/hex-regex-forensics-cheat-sheet-345)'
  id: totrans-482
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.sans.org/security-resources/posters/dfir/hex-regex-forensics-cheat-sheet-345](https://www.sans.org/security-resources/posters/dfir/hex-regex-forensics-cheat-sheet-345)'
- en: 'Online Regex "builders":'
  id: totrans-483
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在线正则表达式“构建器”：
- en: '[https://regexr.com/](https://regexr.com/)'
  id: totrans-484
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://regexr.com/](https://regexr.com/)'
- en: https://gchq.github.io/CyberChef/#recipe=Regular_expression('User%20defined','',true,true,false,false,false,false,'Highlight%20matches')&input=Ig
  id: totrans-485
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: https://gchq.github.io/CyberChef/#recipe=Regular_expression('User%20defined','',true,true,false,false,false,false,'Highlight%20matches')&input=Ig
- en: 'Egress Filters: [https://isc.sans.edu/forums/diary/Egress+Filtering+What+do+we+have+a+bird+problem/18379/](https://isc.sans.edu/forums/diary/Egress+Filtering+What+do+we+have+a+bird+problem/18379/)'
  id: totrans-486
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 出口过滤器：[https://isc.sans.edu/forums/diary/Egress+Filtering+What+do+we+have+a+bird+problem/18379/](https://isc.sans.edu/forums/diary/Egress+Filtering+What+do+we+have+a+bird+problem/18379/)
- en: 'Relevant RFCs:'
  id: totrans-487
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 相关的RFC：
- en: '**Syslog**: [https://datatracker.ietf.org/doc/html/rfc5424](https://datatracker.ietf.org/doc/html/rfc5424)'
  id: totrans-488
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Syslog**：[https://datatracker.ietf.org/doc/html/rfc5424](https://datatracker.ietf.org/doc/html/rfc5424)'
- en: '**SNMP**:'
  id: totrans-489
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SNMP**：'
- en: '[https://datatracker.ietf.org/doc/html/rfc3411](https://datatracker.ietf.org/doc/html/rfc3411)'
  id: totrans-490
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[https://datatracker.ietf.org/doc/html/rfc3411](https://datatracker.ietf.org/doc/html/rfc3411)'
- en: '[https://datatracker.ietf.org/doc/html/rfc3412](https://datatracker.ietf.org/doc/html/rfc3412)'
  id: totrans-491
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[https://datatracker.ietf.org/doc/html/rfc3412](https://datatracker.ietf.org/doc/html/rfc3412)'
- en: '[https://datatracker.ietf.org/doc/html/rfc3413](https://datatracker.ietf.org/doc/html/rfc3413)'
  id: totrans-492
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[https://datatracker.ietf.org/doc/html/rfc3413](https://datatracker.ietf.org/doc/html/rfc3413)'
- en: '[https://datatracker.ietf.org/doc/html/rfc3415](https://datatracker.ietf.org/doc/html/rfc3415)'
  id: totrans-493
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[https://datatracker.ietf.org/doc/html/rfc3415](https://datatracker.ietf.org/doc/html/rfc3415)'
- en: '[https://datatracker.ietf.org/doc/html/rfc3416](https://datatracker.ietf.org/doc/html/rfc3416)'
  id: totrans-494
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[https://datatracker.ietf.org/doc/html/rfc3416](https://datatracker.ietf.org/doc/html/rfc3416)'
- en: '[https://datatracker.ietf.org/doc/html/rfc3417](https://datatracker.ietf.org/doc/html/rfc3417)'
  id: totrans-495
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[https://datatracker.ietf.org/doc/html/rfc3417](https://datatracker.ietf.org/doc/html/rfc3417)'
- en: '[https://datatracker.ietf.org/doc/html/rfc3418](https://datatracker.ietf.org/doc/html/rfc3418)'
  id: totrans-496
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[https://datatracker.ietf.org/doc/html/rfc3418](https://datatracker.ietf.org/doc/html/rfc3418)'
- en: '**SNMP MIB II**: [https://datatracker.ietf.org/doc/html/rfc1213](https://datatracker.ietf.org/doc/html/rfc1213)'
  id: totrans-497
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SNMP MIB II**：[https://datatracker.ietf.org/doc/html/rfc1213](https://datatracker.ietf.org/doc/html/rfc1213)'
- en: '**SNMPv3:**'
  id: totrans-498
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SNMPv3**：'
- en: '[https://datatracker.ietf.org/doc/html/rfc3414](https://datatracker.ietf.org/doc/html/rfc3414)'
  id: totrans-499
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[https://datatracker.ietf.org/doc/html/rfc3414](https://datatracker.ietf.org/doc/html/rfc3414)'
- en: '[https://datatracker.ietf.org/doc/html/rfc6353](https://datatracker.ietf.org/doc/html/rfc6353)'
  id: totrans-500
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[https://datatracker.ietf.org/doc/html/rfc6353](https://datatracker.ietf.org/doc/html/rfc6353)'
- en: '**NetFlow**: [https://datatracker.ietf.org/doc/html/rfc3954.html](https://datatracker.ietf.org/doc/html/rfc3954.html)'
  id: totrans-501
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**NetFlow**：[https://datatracker.ietf.org/doc/html/rfc3954.html](https://datatracker.ietf.org/doc/html/rfc3954.html)'
- en: '**sFlow**: [https://datatracker.ietf.org/doc/html/rfc3176](https://datatracker.ietf.org/doc/html/rfc3176)'
  id: totrans-502
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**sFlow**：[https://datatracker.ietf.org/doc/html/rfc3176](https://datatracker.ietf.org/doc/html/rfc3176)'
- en: '**IPFIX**: [https://datatracker.ietf.org/doc/html/rfc7011](https://datatracker.ietf.org/doc/html/rfc7011)'
  id: totrans-503
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**IPFIX**：[https://datatracker.ietf.org/doc/html/rfc7011](https://datatracker.ietf.org/doc/html/rfc7011)'
- en: '**SNMP OIDs for various vendors**: Consult your vendor documentation; some
    of the OIDs that you''ll commonly see are listed here.'
  id: totrans-504
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 各种供应商的**SNMP OID**：请查阅您的供应商文档；以下是您通常会看到的一些OID。
- en: Commonly used SNMP OIDs
  id: totrans-505
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 常用的SNMP OID
- en: 'Monitoring CPU on routers: `1.3.6.1.4.1.9.2.1.58.0`'
  id: totrans-506
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 监控路由器CPU：`1.3.6.1.4.1.9.2.1.58.0`
- en: 'Monitoring memory on routers: `1.3.6.1.4.1.9.9.48.1.1.1.6.1`'
  id: totrans-507
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 监控路由器内存：`1.3.6.1.4.1.9.9.48.1.1.1.6.1`
- en: '`1.3.6.1.2.1.1`'
  id: totrans-508
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`1.3.6.1.2.1.1`'
- en: 'Interfaces: `1.3.6.1.2.1.2`'
  id: totrans-509
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 接口：`1.3.6.1.2.1.2`
- en: 'IP: `1.3.6.1.2.1.4`'
  id: totrans-510
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: IP：`1.3.6.1.2.1.4`
- en: 'Memory: `1.3.6.1.2.1.4.1.9.9.48`'
  id: totrans-511
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内存：`1.3.6.1.2.1.4.1.9.9.48`
- en: 'CPU: `1.3.6.1.2.1.4.1.9.9.109`'
  id: totrans-512
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CPU：`1.3.6.1.2.1.4.1.9.9.109`
- en: 'Firewall: `1.3.6.1.2.1.4.1.9.9.147`'
  id: totrans-513
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 防火墙：`1.3.6.1.2.1.4.1.9.9.147`
- en: 'Buffers: `1.3.6.1.2.1.4.1.9.9.147.1.2.2.1`'
  id: totrans-514
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缓冲区：`1.3.6.1.2.1.4.1.9.9.147.1.2.2.1`
- en: 'Connections: `1.3.6.1.2.1.4.1.9.9.147.1.2.2.2`'
  id: totrans-515
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连接：`1.3.6.1.2.1.4.1.9.9.147.1.2.2.2`
- en: 'SSL Stats: `1.3.6.1.4.1.3076.2.2.26`'
  id: totrans-516
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SSL统计：`1.3.6.1.4.1.3076.2.2.26`
- en: 'IPSec Stats: `1.3.6.1.2.1.4.1.9.9.171`'
  id: totrans-517
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: IPSec统计：`1.3.6.1.2.1.4.1.9.9.171`
- en: 'Remote Access Stats: `1.3.6.1.2.1.4.1.9.9.392`'
  id: totrans-518
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 远程访问统计：`1.3.6.1.2.1.4.1.9.9.392`
- en: 'FIPS Stats: `1.3.6.1.2.1.4.1.9.9.999999`'
  id: totrans-519
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: FIPS统计：`1.3.6.1.2.1.4.1.9.9.999999`
- en: 'Active connections in PIX/ASA firewall: `1.3.6.1.4.1.9.9.147.1.2.2.2.1.5.40.7`'
  id: totrans-520
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PIX/ASA防火墙中的活动连接：`1.3.6.1.4.1.9.9.147.1.2.2.2.1.5.40.7`
- en: 'The total number of currently active IPsec Phase-2 tunnels: `1.3.6.1.4.1.9.9.171.1.3.1.1.0`'
  id: totrans-521
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当前活动的IPsec Phase-2隧道总数：`1.3.6.1.4.1.9.9.171.1.3.1.1.0`
- en: 'You will need the following MIBs:'
  id: totrans-522
  prefs: []
  type: TYPE_NORMAL
  zh: 您将需要以下MIB：
- en: IF-MIB, RFC1213-MIB, CISCO-MEMORY-POOLMIB, CISCO-PROCESS-MIB, ENTITY-MIB, CISCO-SMI,
    CISCO-FIREWALL-MIB. ASA also adds CISCO-IPSEC-FLOW-MONITOR-MIB, CISCO-FIPS-STAT-MIB,
    and ALTIGA-SSL-STATS-MIB.
  id: totrans-523
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: IF-MIB，RFC1213-MIB，CISCO-MEMORY-POOLMIB，CISCO-PROCESS-MIB，ENTITY-MIB，CISCO-SMI，CISCO-FIREWALL-MIB。ASA还添加了CISCO-IPSEC-FLOW-MONITOR-MIB，CISCO-FIPS-STAT-MIB和ALTIGA-SSL-STATS-MIB。
- en: 'Serial number for stackable switches: `1.3.6.1.2.1.47.1.1.1.1.11.1`'
  id: totrans-524
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 堆叠交换机的序列号：`1.3.6.1.2.1.47.1.1.1.1.11.1`
- en: 'IOS version for stackable switches: `1.3.6.1.2.1.47.1.1.1.1.9.1`'
  id: totrans-525
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 堆叠交换机的IOS版本：`1.3.6.1.2.1.47.1.1.1.1.9.1`
- en: 'ARP cache on a router: `1.3.6.1.2.1.3.1.1.2`'
  id: totrans-526
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 路由器上的ARP缓存：`1.3.6.1.2.1.3.1.1.2`
- en: 'Last state change of an interface: `1.3.6.1.2.1.2.2.1.9`.[interface number]'
  id: totrans-527
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 接口的最后状态更改：`1.3.6.1.2.1.2.2.1.9`。[接口编号]
