- en: '*Chapter 19*: Practice Exercise – 2'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第19章*：练习2'
- en: In this second practice exercise chapter, we will run a set of exercises to
    check the knowledge you've acquired throughout this book. In contrast with this
    book's chapters, not all the steps will be specified; it's left up to your discretion
    to perform the steps required to accomplish the necessary goals. It is recommended
    that you avoid checking back on the chapters for guidance and instead try to use
    your memory or the tools available in the system. This experience will be a key
    factor when you take on the official exams.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的第二个练习中，我们将运行一系列练习，以检查您在本书中所学知识。与本书的其他章节不同，不是所有步骤都会被指定；您可以自行决定执行必要的步骤以完成必要的目标。建议您避免查阅章节以获取指导，而是尝试使用您的记忆或系统中可用的工具。当您参加官方考试时，这种经验将是一个关键因素。
- en: It is strongly advised that you start this exercise with a clock so that you
    know how long it took for you to complete.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 强烈建议您在开始练习时使用时钟，以便知道您完成所需时间。
- en: Technical requirements
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: All the practical exercises in this chapter require a **virtual machine** (**VM**)
    running Red Hat Enterprise Linux 8 to be installed with the base installation.
    Additionally, new virtual drives will be required for storage operations.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中的所有实际练习都需要安装运行Red Hat Enterprise Linux 8的**虚拟机**（VM）以及基本安装。此外，还需要新的虚拟驱动器来进行存储操作。
- en: 'The exercises assume that you have the following:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 练习假设您具有以下内容：
- en: Red Hat Enterprise Linux 8 installed with a base operating system **Minimal
    Install** software selection.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装了基本操作系统**最小安装**软件选择的Red Hat Enterprise Linux 8。
- en: Access to the Red Hat Customer Portal with an active subscription.
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 访问具有有效订阅的Red Hat客户门户网站。
- en: The VM must be expendable; that is, actions that you perform on it might render
    it unusable, so it will have to be reinstalled.
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: VM必须是可扩展的；也就是说，您对其执行的操作可能会使其无法使用，因此必须重新安装。
- en: Tips for the exercise
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 练习的提示
- en: 'This is a list of general recommendations for any test, most of which are common
    sense, but it''s always interesting to keep them in mind:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这是任何测试的一般建议清单，其中大部分都是常识，但始终记住它们是很有趣的：
- en: Read the questions in their entirety before starting the exam.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在开始考试之前，先阅读问题的全部内容。
- en: Specific words have specific meanings that give hints about the requirements
    or ways to accomplish the exercise. That's why, again, reading everything first
    might add or remove possibilities.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 特定的词语具有特定的含义，可以提供关于要求或完成练习的方法的提示。因此，再次阅读所有内容可能会增加或减少可能性。
- en: 'Make yourself comfortable: install your favorite editor, run `updatedb` so
    that you have a fresh database of packages and files ready for you, and define
    your keyboard layout. Install and learn the basics of how to use `tmux` so that
    you can open new tabs and name them without requiring extra windows.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使自己感到舒适：安装您喜欢的编辑器，运行`updatedb`以便您有一个新的软件包和文件数据库准备好，并定义您的键盘布局。安装并学习如何使用`tmux`的基础知识，以便您可以打开新标签并命名它们，而无需额外的窗口。
- en: Locate dependencies between requests. Some goals depend on others for completion,
    so find those dependencies to see how you can build up the solution without having
    to go back and redo some steps because of taking the wrong path.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查找请求之间的依赖关系。一些目标依赖于其他目标的完成，因此找到这些依赖关系，以查看如何构建解决方案，而无需返回并重做一些步骤。
- en: Use a timer. It's important to get an idea of what exercises took more time
    to complete so that you can find areas to improve upon.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用计时器。重要的是要了解哪些练习花费了更多的时间，以便您可以找到需要改进的地方。
- en: Don't remember specific commands. Instead, learn how to use the documentation
    available in the system by using `man`, `/usr/share/docs` arguments such as `--help`
    for the commands, and so on.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不要记住具体的命令。相反，学习如何使用系统中可用的文档，例如使用`man`，`/usr/share/docs`参数，如`--help`命令等。
- en: 'Ensure that changes persist and are still active after a reboot. Some changes
    might be active while you run them, but those must be persisted: firewall rules,
    services to start at boot, and so on.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保更改在重新启动后仍然有效。有些更改可能在运行时是有效的，但必须持久：防火墙规则，要在启动时启动的服务等。
- en: Remember that you can use `dnf whatprovides "*/COMMAND"` to find packages regarding
    that file you might be missing.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 记住，您可以使用`dnf whatprovides "*/COMMAND"`来查找与您可能缺少的文件相关的软件包。
- en: Check [https://www.redhat.com/en/services/training/ex200-red-hat-certified-system-administrator-rhcsa-exam?=Objectives](https://www.redhat.com/en/services/training/ex200-red-hat-certified-system-administrator-rhcsa-exam?=Objectives)
    for the official EX200 exam objectives.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查看[https://www.redhat.com/en/services/training/ex200-red-hat-certified-system-administrator-rhcsa-exam?=Objectives](https://www.redhat.com/en/services/training/ex200-red-hat-certified-system-administrator-rhcsa-exam?=Objectives)以获取官方EX200考试目标。
- en: Practice exercise – 2
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 练习2
- en: Important Note
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: By design, in the following exercise, commands, packages, and so on will not
    be highlighted. Remember what you've learned so far to detect the keywords to
    see what needs to be done.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 根据设计，在以下练习中，命令、软件包等将不会被突出显示。记住到目前为止学到的知识，以便检测关键字，看看需要做什么。
- en: Don't jump into the solution too early; try to think and remember what was covered.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 不要过早地跳入解决方案；尝试思考和记住所涵盖的内容。
- en: Exercises
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习
- en: Download the necessary file from this book's GitHub repository at [https://raw.githubusercontent.com/PacktPublishing/Red-Hat-Enterprise-Linux-8-Administration/main/chapter-19-exercise2/users.txt](https://raw.githubusercontent.com/PacktPublishing/Red-Hat-Enterprise-Linux-8-Administration/main/chapter-19-exercise2/users.txt).
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从本书的GitHub存储库中下载所需的文件[https://raw.githubusercontent.com/PacktPublishing/Red-Hat-Enterprise-Linux-8-Administration/main/chapter-19-exercise2/users.txt](https://raw.githubusercontent.com/PacktPublishing/Red-Hat-Enterprise-Linux-8-Administration/main/chapter-19-exercise2/users.txt)。
- en: 'Use the `users.txt` file to generate users in the system in an automated way
    using the values provided, in the following order: `username`, `placeholder`,
    `uid`, `gid`, `name`, `home`, `shell`.'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`users.txt`文件以自动化的方式使用提供的值在系统中生成用户，顺序如下：`用户名`，`占位符`，`uid`，`gid`，`名称`，`主目录`，`shell`。
- en: Create a group named users and add that group as the primary group to all users,
    leaving their own groups, named after each user, as secondary groups.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建名为users的组，并将该组添加为所有用户的主要组，将它们自己的组（以每个用户的名称命名）作为辅助组。
- en: Change the home folders for the users so that they are group-owned.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更改用户的主目录，使其由组拥有。
- en: Set up an HTTP server and enable a web page for each user with a small introduction
    for each that is different between users.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置一个HTTP服务器，并为每个用户启用一个网页，为每个用户提供一个不同的小介绍。
- en: Allow all users in the `users` group to become root without a password.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 允许`users`组中的所有用户在无需密码的情况下成为root。
- en: Create SSH keys for each user and add each key to root and the other users so
    that each user can SSH like the other users; that is, without a password.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为每个用户创建SSH密钥，并将每个密钥添加到root和其他用户，以便每个用户都可以像其他用户一样进行SSH连接，即无需密码。
- en: Disable password access to the system with SSH.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 禁用通过SSH访问系统的密码。
- en: Set each user with a different password using `/dev/random` and store the password
    in the `users.txt` file in the second field of the file.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`/dev/random`为每个用户设置不同的密码，并将密码存储在`users.txt`文件的第二个字段中。
- en: If the number of letters in the username is a multiple of 2, add that fact to
    each user description web page.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果用户名中的字母数是2的倍数，则将该事实添加到每个用户描述网页中。
- en: Create a container that runs the `yq` python package as the entry point.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个容器，以`yq` python包作为入口点运行。
- en: Configure password aging for users that are not a multiple of 2 to so that they're
    expiring.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为非2的倍数的用户配置密码到期。
- en: Configure a daily compressed log rotation for a month of logs using date-named
    files.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用日期命名的文件配置一个每日压缩的日志轮换，为一个月的日志。
- en: Save all the logs that have been generated in the day in `/root/errors.log`.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存当天生成的所有日志在`/root/errors.log`中。
- en: Install all the available updates for the system libraries.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装系统库的所有可用更新。
- en: Repair the broken rpm binary using a previously downloaded package available
    in the `/root` folder.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用先前在`/root`文件夹中可用的已下载软件包修复损坏的rpm二进制文件。
- en: Make all the processes that are executed by the user doe to run with a low priority
    and the ones from john run with a higher priority (+/- 5).
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用户执行的所有进程都以低优先级运行，而来自john的进程则以更高优先级运行（+/- 5）。
- en: Make the system run with the highest throughput and performance.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使系统以最高的吞吐量和性能运行。
- en: Change the system network interface so that it uses an IP address that's higher
    than the one it was using. Add another IPv6 address to the same interface.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更改系统网络接口，使其使用比原来更高的IP地址。为同一接口添加另一个IPv6地址。
- en: Create and add `/opt/mysystem/bin/` to the system PATH for all users.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为所有用户将`/opt/mysystem/bin/`创建并添加到系统PATH中。
- en: Create a firewall zone, assign it to an interface, and make it the default zone.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个防火墙区域，将其分配给一个接口，并将其设置为默认区域。
- en: Add a repository hosted at `https://myserver.com/repo/` with a GPG key from
    `https://myserver.com/mygpg.key` to the system since our server might be down.
    Configure it so that it can be skipped if it's unavailable.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加一个托管在`https://myserver.com/repo/`上的存储库，使用`https://myserver.com/mygpg.key`上的GPG密钥添加到系统中，因为我们的服务器可能会宕机。配置它以便在不可用时可以跳过它。
- en: Answers to practice exercise 2
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 练习2的答案
- en: In this section, we'll copy each item from the list of goals, and explain them
    while using proper syntax highlighting.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将复制目标列表中的每一项，并在使用适当的语法高亮时加以解释。
- en: 1\. Download the necessary file from this book's GitHub repository at https://raw.githubusercontent.com/PacktPublishing/Red-Hat-Enterprise-Linux-8-Administration/main/chapter-19-exercise2/users.txt
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1. 从本书的GitHub存储库https://raw.githubusercontent.com/PacktPublishing/Red-Hat-Enterprise-Linux-8-Administration/main/chapter-19-exercise2/users.txt下载必要的文件
- en: '[PRE0]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '2\. Use the users.txt file to generate users in the system in an automated
    way using the values provided, in the following order: username, placeholder,
    uid, gid, name, home, shell'
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2. 使用`users.txt`文件以自动化方式在系统中生成用户，顺序如下：用户名、占位符、uid、gid、名称、主目录、shell
- en: 'First, let''s examine the `users.txt` file with the following code:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们使用以下代码检查`users.txt`文件：
- en: '[PRE1]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: As described in the request, the fields in that file are `username`, `placeholder`,
    `uid`, `gid`, `name`, `home`, `shell`. The placeholder is not asked to create
    a user as it's usually the password so that we can work with the other data while
    ignoring that.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 如请求中所述，该文件中的字段为`username`、`placeholder`、`uid`、`gid`、`name`、`home`、`shell`。通常不要求创建用户的占位符是密码，因此我们可以在忽略该字段的同时使用其他数据。
- en: As we can also see, each field is separated by at least a `;` symbol, but some
    have extra spaces before or after it. Since we also have surnames, we can't just
    remove all spaces; we need to do this before and after the actual text we want.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们也可以看到的那样，每个字段至少由一个`;`符号分隔，但有些在其前后有额外的空格。由于我们还有姓氏，我们不能只是删除所有空格；我们需要在实际文本之前和之后执行此操作。
- en: We need to use cut with the `;` field separator, but first, we need to read
    the file line by line.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要使用带有`;`字段分隔符的cut命令，但首先，我们需要逐行读取文件。
- en: 'We can achieve this with Bash''s built-in `read` function:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用Bash的内置`read`函数来实现这一点：
- en: '[PRE2]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Using this as a base, we can start building up everything we're going to need
    to create the users. Let's start by working on the individual steps and then build
    up the full command line.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 基于此，我们可以开始构建我们将需要创建用户的所有内容。让我们首先着手处理各个步骤，然后构建完整的命令行。
- en: 'We have lots of lines, so for each one, we need to define the fields and remove
    the end/start spaces:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有很多行，因此对于每一行，我们需要定义字段并删除末尾/开头的空格：
- en: '[PRE3]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: In the preceding examples, we're echoing each line and cutting the field specified
    with `-f` using the `;` field delimiter. This allows us to select exactly the
    field containing the data we're looking for. To make this easier, we can store
    each in a variable so that we can reuse that snippet of code and still have a
    clear understanding of what each script will be doing.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的示例中，我们正在回显每一行，并使用`-f`指定的字段和`；`字段分隔符进行切割。这使我们能够精确选择包含我们要查找的数据的字段。为了使这更容易，我们可以将每个存储在一个变量中，以便我们可以重用该代码片段，并且仍然清楚地了解每个脚本将要执行的操作。
- en: 'The preceding code will work, *but* it will fail with the spaces, so we need
    to extend them to just capture the actual text without the spaces. Let''s use
    `xargs` for this:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的代码将起作用，*但*它将在空格处失败，因此我们需要将它们扩展到只捕获实际文本而不包括空格。让我们使用xargs来实现这一点：
- en: '[PRE4]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The next step is to build the command line for adding a user:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是构建添加用户的命令行：
- en: '[PRE5]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Now that everything''s ready, let''s build the solution:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 现在一切准备就绪，让我们构建解决方案：
- en: '[PRE6]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 3\. Create a group named users and add that group as the primary group to all
    users, leaving their own groups, named after each user, as secondary groups
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3. 创建名为users的组，并将该组添加为所有用户的主要组，将它们自己的组，以每个用户命名，作为辅助组
- en: 'In this case, we need to create the groups that we didn''t create in the previous
    step. So, we will loop over the users once the new group has been created, create
    new groups for each, and then modify the user to get the `users` group and add
    their own as secondary groups:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我们需要创建我们在上一步中没有创建的组。因此，一旦新组已创建，我们将循环遍历用户，为每个用户创建新组，然后修改用户以获得users组并将其自己添加为辅助组：
- en: '[PRE7]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 4\. Change the home folders for the users so that are group owned
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4. 更改用户的主文件夹，使其成为组所有
- en: '[PRE8]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 5\. Set up an HTTP server and enable a web page for each user, with a small
    introduction for each that is different between users
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 5. 设置HTTP服务器并为每个用户启用一个网页，每个网页都有一个不同的小介绍
- en: '[PRE9]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Finally, we''ll need to enable `homedirs` by editing `/etc/httpd/conf.d/userdir.conf`
    and disabling `UserDir` so that it becomes `Userdir public_html`:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们需要通过编辑/etc/httpd/conf.d/userdir.conf并禁用UserDir来启用homedirs，以便它变为Userdir
    public_html：
- en: '[PRE10]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 6\. Allow all the users in the users group to become root without a password
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 6. 允许users组中的所有用户成为root而无需密码
- en: 'This can be done in several ways, but since all the users are in the `users`
    group, we can add that group:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 这可以通过多种方式实现，但由于所有用户都在users组中，我们可以添加该组：
- en: '[PRE11]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 7\. Create SSH keys for each user and add each key to root and the other users
    so that each user can SSH like the other users; that is, without a password
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 7. 为每个用户创建SSH密钥，并将每个密钥添加到root和其他用户，以便每个用户都可以像其他用户一样进行SSH，即无需密码
- en: 'First, let''s create the keys for each user and add the keys to root:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们为每个用户创建密钥并将密钥添加到root：
- en: '[PRE12]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Now, let''s copy the authorized keys for each user:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们为每个用户复制授权密钥：
- en: '[PRE13]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Validate that users can `ssh` just like any other user:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 验证用户是否可以像其他用户一样进行ssh：
- en: '[PRE14]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The preceding command should work for all the users because we copied `authorized_keys`,
    right? This isn't the case as some users have their shell disabled.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的命令应该适用于所有用户，因为我们复制了authorized_keys，对吗？这并不是这种情况，因为一些用户已经禁用了他们的shell。
- en: 8\. Disable password access to the system with SSH
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 8. 禁用通过SSH访问系统的密码
- en: Edit `/etc/ssh/sshd_config` and replace any value of `PasswordAuthentication`
    with `no`.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑/etc/ssh/sshd_config并将PasswordAuthentication的任何值替换为no。
- en: 'Then, restart `sshd`:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，重新启动sshd：
- en: '[PRE15]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 9\. Set each user with a different password using /dev/random and store the
    password in the users.txt file in the second field of the file
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 9. 使用/dev/random为每个用户设置不同的密码，并将密码存储在users.txt文件的文件的第二个字段中
- en: 'From `/dev/random`, we can get random data, but it''s binary, so it''s probably
    not valid if we want to use it for logging in later. We can use a hash function
    over the data we''ve received and use that as the password:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 从/dev/random，我们可以获取随机数据，但它是二进制的，所以如果我们想以后用它进行登录，它可能无效。我们可以对接收到的数据使用哈希函数，并将其用作密码：
- en: '[PRE16]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: This will be the password, without the need for it to be encrypted.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 这将是密码，无需加密。
- en: With `usermod`, we can define a password from its encrypted seed, so we will
    be combining both.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 使用usermod，我们可以根据其加密种子定义密码，因此我们将两者结合起来。
- en: Additionally, we're told to store the generated password in `users.text`, so
    we will need to edit the file.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们被告知将生成的密码存储在users.text中，因此我们需要编辑该文件。
- en: 'But there''s a problem: editing a specific field in the `.txt` file might not
    be easy, but we can just rewrite it completely:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 但是有一个问题：编辑.txt文件中的特定字段可能不容易，但我们可以完全重写它：
- en: '[PRE17]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: In this way, we've rewritten the `users.txt` file to a new file by adding all
    the fields we had and overwritten `users.txt` with our new copy.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '通过这种方式，我们已经将users.txt文件重写为一个新文件，通过添加我们拥有的所有字段，并用我们的新副本覆盖了users.txt。 '
- en: The last command in the loop reads the password from the variable and feeds
    it to the `passwd` file, which will encrypt and store it while reading it from
    `stdin`.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 循环中的最后一个命令从变量中读取密码，并将其提供给passwd文件，该文件将对其进行加密和存储，同时从stdin中读取它。
- en: 10\. If the number of letters in the username is a multiple of 2, add that fact
    to each users description web page
  id: totrans-103
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 10. 如果用户名中的字母数是2的倍数，则将该事实添加到每个用户的描述网页中
- en: '[PRE18]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: In this example, we repeat the same field calculation, but we add the `wc` command
    to get the number of characters and remove one to adjust it to the number of letters.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们重复相同的字段计算，但是我们添加了wc命令来获取字符数，并删除一个来调整到字母数。
- en: In the comparison, we evaluate the remainder when dividing by 2, so that when
    there's no remainder, this means that our number of letters is a multiple of 2.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在比较中，我们评估除以2时的余数，这样当没有余数时，这意味着我们的字母数是2的倍数。
- en: 11\. Create a container that runs the yq Python package
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 11. 创建一个运行yq Python包的容器
- en: When we read "Python package," we should think about PIP. PIP is not recommended
    to be used on systems directly as it might alter the system-provided Python libraries,
    and it's better to use a virtual environment for it. Alternatively, you can use
    a container that will keep it isolated.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们读到"Python package"时，我们应该考虑PIP。不建议直接在系统上使用PIP，因为它可能会改变系统提供的Python库，最好使用虚拟环境。或者，您可以使用一个容器来保持它的隔离。
- en: As described in the [*Chapter 17*](B16799_17_Final_SK_ePub.xhtml#_idTextAnchor207),
    *Managing Containers with Podman, Buildah, and Skopeo*, the easiest way to do
    this is by creating a file that defines the container creation steps.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 如[*第17章*](B16799_17_Final_SK_ePub.xhtml#_idTextAnchor207)中所述，*使用Podman、Buildah和Skopeo管理容器*，最简单的方法是创建一个定义容器创建步骤的文件。
- en: For containers, it will be also required to install the `podman` package and
    the `container-tools` modules if you don't have them in your system.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 对于容器，如果您的系统中没有安装`podman`包和`container-tools`模块，还需要安装它们。
- en: As this file is a Python package, we require a container that already has Python
    in it; for example, [https://catalog.redhat.com/software/containers/rhel8/python-38/5dde9cb15a13461646f7e6a2](https://catalog.redhat.com/software/containers/rhel8/python-38/5dde9cb15a13461646f7e6a2).
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这个文件是一个Python包，我们需要一个已经包含Python的容器；例如，[https://catalog.redhat.com/software/containers/rhel8/python-38/5dde9cb15a13461646f7e6a2](https://catalog.redhat.com/software/containers/rhel8/python-38/5dde9cb15a13461646f7e6a2)。
- en: 'So, let''s create a `Containerfile` with the following contents (available
    at [https://github.com/PacktPublishing/Red-Hat-Enterprise-Linux-8-Administration/blob/main/chapter-19-exercise2/ContainerFile](https://github.com/PacktPublishing/Red-Hat-Enterprise-Linux-8-Administration/blob/main/chapter-19-exercise2/ContainerFile)):'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，让我们创建一个包含以下内容的`Containerfile`（可在[https://github.com/PacktPublishing/Red-Hat-Enterprise-Linux-8-Administration/blob/main/chapter-19-exercise2/ContainerFile](https://github.com/PacktPublishing/Red-Hat-Enterprise-Linux-8-Administration/blob/main/chapter-19-exercise2/ContainerFile)中找到）：
- en: '[PRE19]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: When combined with `podman build -t yq -f ContainerFile`, it will pull the `ubi8`
    image with Python so that we can just run the `pip3 install` command to install
    `yq`, which will be then assigned as our `entrypoint`.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 与`podman build -t yq -f ContainerFile`结合使用时，它将拉取带有Python的`ubi8`镜像，以便我们只需运行`pip3
    install`命令来安装`yq`，然后将其分配为我们的`entrypoint`。
- en: For example, if we define an invalid `entrypoint` (because we might not know
    where the program is installed), we can use `podman run -it --entrypoint /bin/bash
    <podmanid>`. We can get the podman ID by running `podman images` and checking
    the generation date for each of the available pods in our system.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果我们定义了一个无效的`entrypoint`（因为我们可能不知道程序安装在哪里），我们可以使用`podman run -it --entrypoint
    /bin/bash <podmanid>`。我们可以通过运行`podman images`并检查系统中可用的每个pod的生成日期来获取podman ID。
- en: The created container can be tested with `podman run –it <podmanid>`, where
    it will output the information about what the `yq` command does.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用`podman run –it <podmanid>`来测试创建的容器，它将输出关于`yq`命令的信息。
- en: Note that `yq`, as expressed in their repository at [https://github.com/kislyuk/yq](https://github.com/kislyuk/yq),
    requires that we have installed the `jq` command, but we left it out on purpose
    to demonstrate how to create the container.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，`yq`，如其在[https://github.com/kislyuk/yq](https://github.com/kislyuk/yq)的存储库中所述，需要我们安装`jq`命令，但我们故意将其排除在外，以演示如何创建容器。
- en: 12\. Configure password aging for users that are not a multiple of 2 so that
    they're expiring
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 12\. 为非2的倍数的用户配置密码过期，以便它们过期
- en: '[PRE20]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Here, we've reused the loop from question 10, but inverted the conditional.
    Since there's no requirements regarding the kind of password aging we can use,
    we just need to define the maximum number of days before a password change is
    required to be `30 days`.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们重用了问题10中的循环，但是反转了条件。由于对密码过期的使用没有要求，我们只需要将需要密码更改的最大天数定义为“30天”。
- en: 13\. Configure the daily compressed log rotation for a month of logs using date-named
    files
  id: totrans-121
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 13\. 使用日期命名的文件配置每月日志的每日压缩日志轮换
- en: 'First, we need to make sure that `logrotate` is installed:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要确保`logrotate`已安装：
- en: '[PRE21]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Once installed, edit the `/etc/logrotate.conf` file so that it contains the
    following:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 安装后，编辑`/etc/logrotate.conf`文件，使其包含以下内容：
- en: '[PRE22]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: We need to ensure that no other period is defined (monthly, weekly, and so on).
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要确保没有定义其他周期（每月、每周等）。
- en: 14\. Save all the logs generated in the day in /root/errors.log
  id: totrans-127
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 14\. 将当天生成的所有日志保存在/root/errors.log中
- en: 'This has a trick to it: some programs will log to the journal, while some of
    them will log to `*.log` files.'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 这有一个技巧：有些程序将日志记录到日志中，而有些程序将日志记录到`*.log`文件中。
- en: 'The date for today can be obtained with `+%Y-%m-%d`. This format, which uses
    the year-month-day format, is commonly used in program logs:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 今天的日期可以用`+%Y-%m-%d`获得。这种使用年-月-日格式的格式通常用于程序日志：
- en: '[PRE23]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: By doing this, we combine both outputs. We could, of course, try to sort the
    entries by date so that they correlate, but bear in mind that the first `grep`
    does a recursive search, so the filename is being prepended, making it harder
    to sort.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这样做，我们结合了两个输出。当然，我们可以尝试按日期对条目进行排序，以便它们相关联，但请记住，第一个`grep`执行递归搜索，因此文件名被前置，这使得排序更加困难。
- en: 15\. Install all the available updates for system libraries
  id: totrans-132
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 15\. 为系统库安装所有可用的更新
- en: 'Usually, the system libraries contain the `lib` substring in them, so the update
    should be a matter of running the following command:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，系统库中包含`lib`子字符串，因此更新应该只是运行以下命令的问题：
- en: '[PRE24]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: As it will ask for confirmation, review the listed packages to make sure that
    no errors occurred.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 因为它会要求确认，所以请查看列出的软件包，确保没有发生错误。
- en: 16\. Repair the broken rpm binary using a previously downloaded package available
    in the /root folder
  id: totrans-136
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 16\. 使用先前在/root文件夹中可用的下载包修复损坏的rpm二进制文件
- en: This is a tricky but useful knowledge check.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个棘手但有用的知识检查。
- en: 'First, let''s make sure that the `rpm` package is available:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们确保`rpm`包可用：
- en: '[PRE25]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Verify that the file exists with the following command:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令验证文件是否存在：
- en: '[PRE26]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Check the file to make sure we have a way to go back in case we breack it beyond
    repair:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 检查文件，确保我们有办法回退，以防我们破坏它无法修复：
- en: '[PRE27]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Now, let''s look at the destructive action that will help us validate we are
    solving the issue:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看一下有助于验证我们解决问题的破坏性操作：
- en: '[PRE28]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: From here, it's like *look ma, no hands*... no RPM is available to install the
    `rpm*.rpm` package, but we still need to install it to fix the issue.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 从这里开始，就像*看吧，不用手*...没有RPM可用来安装`rpm*.rpm`包，但我们仍然需要安装它来解决问题。
- en: '`rpm` packages are compressed `cpio` archives, so what we can do is use the
    following command:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '`rpm`包是压缩的`cpio`存档，所以我们可以使用以下命令：'
- en: '[PRE29]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: This will extract the compressed `rpm` contents (without the need to run a script).
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 这将提取压缩的`rpm`内容（无需运行脚本）。
- en: 'Move the uncompressed `rpm` file back into `/usr/bin`:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 将未压缩的`rpm`文件移回`/usr/bin`：
- en: '[PRE30]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Verify the installation and operation of `rpm`:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 验证`rpm`的安装和操作：
- en: '[PRE31]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: It will complain. saying that at least the date has changed. However, it may
    have also updated the sizes and md5sum if the downloaded file was newer.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 它会抱怨，说至少日期已经改变。然而，如果下载的文件更新了大小和md5sum，它也可能已经更新了。
- en: 'Move the system to a sane state by reinstalling the `rpm` package:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 通过重新安装`rpm`软件包将系统移动到一个合理的状态：
- en: '[PRE32]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: This will make the system complain because the package was already installed
    (it will state that it will overwrite `rpm`, `rpm2archive`, `rpm2cpio`, `rpmdb`,
    `rpmkeys`, and more).
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 这将使系统抱怨，因为软件包已经安装（它将说明它将覆盖`rpm`、`rpm2archive`、`rpm2cpio`、`rpmdb`、`rpmkeys`等）。
- en: 'If the `rpm` version differs, we can just upgrade it with the following command:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`rpm`版本不同，我们可以使用以下命令升级它：
- en: '[PRE33]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Then, we can verify this with the following command:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们可以使用以下命令验证这一点：
- en: '[PRE34]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Nothing should be reported as changed regarding what the database contains.
    If we cannot upgrade, we can run the installation with the `--force` argument
    to tell `rpm` that it's OK to continue and overwrite the files.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 关于数据库包含的内容，不应该报告任何更改。如果我们无法升级，我们可以使用`--force`参数运行安装，告诉`rpm`可以继续并覆盖文件。
- en: 'Alternatively, once the `rpm` binary has been restored with `cpio`, we can
    use the following command:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，一旦`rpm`二进制文件已经被`cpio`恢复，我们可以使用以下命令：
- en: '[PRE35]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Another approach for this could have been to `scp` the `rpm` binary from a similar
    system or to use rescue media.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种方法是从类似系统`scp` `rpm`二进制文件，或者使用救援介质。
- en: 17\. Make all the processes that are executed by the user doe run with a low
    priority and the ones from john run with a higher priority (+/- 5)
  id: totrans-166
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 17\. 使用户doe执行的所有进程以低优先级运行，而由john运行的进程以更高优先级运行（+/- 5）
- en: We have no way of making this a default, but we can combine a cron job to do
    so.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 我们无法将其设置为默认值，但我们可以结合一个cron作业来实现。
- en: 'Execute crontab `-e` as root to edit the root''s crontab and set up a job that
    runs every minute:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 以root身份执行`crontab -e`来编辑root的crontab并设置一个每分钟运行的作业：
- en: '[PRE36]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: This will use `pgrep` for all the PIDs for john and doe and feed them via `xargs`
    to the `renice` process.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 这将使用`pgrep`来获取john和doe的所有PID，并通过`xargs`将它们传递给`renice`进程。
- en: 'Alternatively, we could use something like the following:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，我们可以使用以下内容：
- en: '[PRE37]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: This can be used as an alternative to the `xargs` command.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 这可以作为`xargs`命令的替代方法。
- en: 18\. Make the system run with the highest throughput and performance
  id: totrans-174
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 18\. 使系统以最高吞吐量和性能运行
- en: '`tuned` is a system daemon we can install to automatically apply some well-known
    parameters to our system, which will become the base for our specific optimizations
    later:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: '`tuned`是一个系统守护程序，我们可以安装它来自动应用一些众所周知的参数到我们的系统，这将成为我们特定优化的基础：'
- en: '[PRE38]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 19\. Change the system network interface so that it uses an IP address that's
    higher than the one it was using. Add another IPv6 address to the same interface
  id: totrans-177
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 19\. 更改系统网络接口，使其使用比原来更高的IP地址。在同一个接口上添加另一个IPv6地址
- en: 'Using `nmcli`, check the current system IP''s address:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`nmcli`，检查当前系统IP地址：
- en: '[PRE39]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'The output should be as follows:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 输出应该如下：
- en: '![Figure 19.1 – Output of nmcli con show'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: '![图19.1 - nmcli con show的输出'
- en: '](img/B16799_19_001.jpg)'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_19_001.jpg)'
- en: Figure 19.1 – Output of nmcli con show
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 图19.1 - nmcli con show的输出
- en: With this, we can find what system interface is being used and connected. Let's
    say it's `ens3`, which is connected on the connection named `Wired Connection`.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这个，我们可以找到正在使用和连接的系统接口。假设它是`ens3`，它连接在名为`Wired Connection`的连接上。
- en: Let's use `nmcli con show "Wired Connection"|grep address` to find the current
    addresses.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用`nmcli con show "Wired Connection"|grep address`来查找当前的地址。
- en: 'If our address is, for example, `10.0.0.6`, we can use the following code:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们的地址是，例如，`10.0.0.6`，我们可以使用以下代码：
- en: '[PRE40]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Verify this with the following command:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令验证这一点：
- en: '[PRE41]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 20\. Create and add /opt/mysystem/bin/ to the system PATH for all users
  id: totrans-190
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 20\. 为所有用户创建并添加`/opt/mysystem/bin/`到系统路径
- en: 'Edit the `/etc/profile.d/mysystempath.sh` file and place the following contents:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑`/etc/profile.d/mysystempath.sh`文件，并放入以下内容：
- en: '[PRE42]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'To validate this, add the `+x` attribute to the file and create the folder
    with the following commands:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 要验证这一点，将`+x`属性添加到文件中，并使用以下命令创建文件夹：
- en: '[PRE43]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'Relogging with the user should show the new path when executing the following
    command:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 重新登录用户时，执行以下命令应该显示新的路径：
- en: '[PRE44]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 21\. Create a firewall zone, assign it to an interface, and make it the default
    zone
  id: totrans-197
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 21\. 创建一个防火墙区域，将其分配给一个接口，并将其设置为默认区域
- en: This is a tricky question. In this book, we've explained how to query zones
    and how to change the default one, and even shown screenshots of `cockpit` for
    managing the firewall, so now that you're an experienced user, this shouldn't
    be hard.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个棘手的问题。在这本书中，我们已经解释了如何查询区域以及如何更改默认区域，甚至展示了用于管理防火墙的`cockpit`的屏幕截图，所以现在作为一个有经验的用户，这应该不难。
- en: 'The first thing you need to do when you don''t know how to do something is
    check the manual page:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 当你不知道如何做某事时，第一件事就是查看手册页：
- en: '[PRE45]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: This doesn't show a lot of interesting information. However , toward the end
    of the man pages, there's a section called `firewalld.zones(5)`. This means that
    we can check section 5 of the manual for `firewalld.zones`.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 这并不显示很多有趣的信息。然而，在man页面的末尾，有一个名为`firewalld.zones(5)`的部分。这意味着我们可以查看手册的第5部分`firewalld.zones`。
- en: 'We don''t usually specify the section as there might not be a lot of duplicates,
    so we can just run the following command:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通常不指定部分，因为可能没有很多重复，所以我们可以运行以下命令：
- en: '[PRE46]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'This instructs us to check the default ones in `/usr/lib/firewalld/zones` and
    `/etc/firewalld/zones`, so let''s do that:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 这指示我们在`/usr/lib/firewalld/zones`和`/etc/firewalld/zones`中检查默认值，所以让我们这样做：
- en: '[PRE47]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'Now, let''s edit the new copied file, called `/etc/firewalld/zones/dazone.xml`,
    and change its name from `Public` to `dazone`. Then, we need to reload the firewall:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们编辑新复制的文件，名为`/etc/firewalld/zones/dazone.xml`，并将其名称从`Public`更改为`dazone`。然后，我们需要重新加载防火墙：
- en: '[PRE48]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'Let''s validate that the new zone is there with the following command:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用以下命令验证新的区域是否存在：
- en: '[PRE49]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Let''s make it the default zone:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们把它设置为默认区域：
- en: '[PRE50]'
  id: totrans-211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'Now, add the default interface (`ens3`):'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，添加默认接口（`ens3`）：
- en: '[PRE51]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'It will fail. This is expected since `ens3` has already been assigned to a
    zone (`public`). So, let''s use the following commands:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 它会失败。这是预期的，因为`ens3`已经被分配给一个区域（`public`）。所以，让我们使用以下命令：
- en: '[PRE52]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: As you can see, even without prior knowledge about creating new zones, we've
    been able to use our system knowledge about finding information to accomplish
    this goal.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所看到的，即使没有关于创建新区域的先前知识，我们也能够利用我们关于查找信息的系统知识来实现这个目标。
- en: 22\. Add a repository hosted at https://myserver.com/repo/ with GPG key from
    https://myserver.com/mygpg.key to the system since our server might be down. Configure
    it so that it can be skipped if it's unavailable
  id: totrans-217
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 22. 添加一个托管在https://myserver.com/repo/上的存储库，使用来自https://myserver.com/mygpg.key的GPG密钥添加到系统中，因为我们的服务器可能会宕机。配置它以便在不可用时可以跳过它
- en: 'If we don''t remember the syntax for a repository, we can use one of the examples
    available on the system. To do this, go to `/etc/yum.repos.d/`, list the available
    files, and pick one to create a `myserver.repo` file with the following contents:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们不记得存储库的语法，我们可以使用系统上可用的示例之一。要做到这一点，转到`/etc/yum.repos.d/`，列出可用的文件，并选择一个来创建一个名为`myserver.repo`的文件，其中包含以下内容：
- en: '[PRE53]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'How do we skip it if it''s unavailable? Let''s check the man page for `yum`.
    Again, not much information is provided here, but in the `man dnf.conf` is specified.
    This lists a Boolean that might help us, so let''s add this to our `repofile`:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 如果不可用，我们如何跳过它？让我们查看`yum`的手册页。同样，在`man dnf.conf`中有指定。这列出了一个可能帮助我们的布尔值，所以让我们将其添加到我们的`repofile`中：
- en: '[PRE54]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: With that, we've completed our objectives.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这个，我们已经完成了我们的目标。
