["```\n    $ sudo mkdir /etc/ssl/CA\n    $ sudo mkdir /etc/ssl/newcerts\n    ```", "```\n    sudo syntax when creating a serial file. This is needed because if you just use sudo against the echo command, you don't have rights under the /etc directory. What this syntax does is start a sh temporary shell and pass the character string in quotes to execute using the -c parameter. This is equivalent to running sudo sh or su, executing the command, and then exiting back to the regular user context. However, using sudo sh \u2013c is far preferable to these other methods, as it removes the temptation to stay in the root context. Staying in the root context brings with it all kinds of opportunities to mistakenly and permanently change things on the system that you didn't intend\u2014anything from accidentally deleting a critical file (which only root has access to), right up to\u2014and including\u2014mistakenly installing malware, or allowing ransomware or other malware to run as root.\n    ```", "```\n    private_key line, but be sure to double-check it for correctness while you are in the file.\n    ```", "```\n    $ openssl req -new -x509 -extensions v3_ca -keyout cakey.pem -out cacert.pem -days 3650\n    Generating a RSA private key\n    ...............+++++\n    .................................................+++++\n    writing new private key to 'cakey.pem'\n    Enter PEM pass phrase:\n    Verifying - Enter PEM pass phrase:\n    -----\n    You are about to be asked to enter information that will be incorporated\n    into your certificate request.\n    What you are about to enter is what is called a Distinguished Name or a DN.\n    There are quite a few fields but you can leave some blank\n    For some fields there will be a default value,\n    If you enter '.', the field will be left blank.\n    -----\n    Country Name (2 letter code) [AU]:CA\n    State or Province Name (full name) [Some-State]:ON\n    Locality Name (eg, city) []:MyCity\n    Organization Name (eg, company) [Internet Widgits Pty Ltd]:Coherent Security\n    Organizational Unit Name (eg, section) []:IT\n    Common Name (e.g. server FQDN or YOUR name) []:ca01.coherentsecurity.com\n    Email Address []:\n    ```", "```\n    mv command. In security engagements, it's common to find certificates and keys stored in all sorts of temporary or archive locations\u2014needless to say, if an attacker is able to obtain the root certificate and private key for your certificate server, all sorts of shenanigans can result!\n    ```", "```\n$ openssl genrsa -des3 -out server.key 2048\nGenerating RSA private key, 2048 bit long modulus (2 primes)\n...............................................+++++\n........................+++++\ne is 65537 (0x010001)\nEnter pass phrase for server.key:\nVerifying - Enter pass phrase for server.key:\n```", "```\n$ openssl rsa -in server.key -out server.key.insecure\nEnter pass phrase for server.key:\nwriting RSA key\n```", "```\n$ mv server.key server.key.secure\n$ mv server.key.insecure server.key\n```", "```\n~$ openssl req -new -key server.key -out server.csr\nYou are about to be asked to enter information that will be incorporated\ninto your certificate request.\nWhat you are about to enter is what is called a Distinguished Name or a DN.\nThere are quite a few fields but you can leave some blank\nFor some fields there will be a default value,\nIf you enter '.', the field will be left blank.\n-----\nCountry Name (2 letter code) [AU]:CA\nState or Province Name (full name) [Some-State]:ON\nLocality Name (eg, city) []:MyCity\nOrganization Name (eg, company) [Internet Widgits Pty Ltd]:Coherent Security\nOrganizational Unit Name (eg, section) []:IT\nCommon Name (e.g. server FQDN or YOUR name) []:www.coherentsecurity.com\nEmail Address []:\nPlease enter the following 'extra' attributes\nto be sent with your certificate request\nA challenge password []:passphrase\nAn optional company name []:\n```", "```\n$ sudo openssl ca -in server.csr -config /etc/ssl/openssl.cnf\n```", "```\n$ ls /etc/ssl/newcerts/\n01.pem\n```", "```\n$ cat /etc/ssl/CA/index.txt\nV\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0220415165738Z\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a001\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0unknown /C=CA/ST=ON/O=Coherent Security/OU=IT/CN=www.coherentsecurity.com\n$ cat /etc/ssl/CA/serial\n02\n```", "```\n    openssl genrsa -des3 -out private.key <bits>\n    ```", "```\n    openssl req -new -key private.key -out server.csr\n    ```", "```\n    openssl req -in example.csr -verify\n    ```", "```\n    openssl req -in server.csr -noout -text\n    ```", "```\n    sudo openssl ca -in server.csr -config <path to configuration file>\n    ```", "```\n    openssl req -x509 -sha256 -nodes -days <days>\u00a0\u00a0-newkey rsa:2048 -keyout privateKey.key -out certificate.crt\n    ```", "```\n    openssl x509 -in certificate.crt -text \u2013noout\n    ```", "```\n    openssl pkcs12 -info -in certpluskey.pfx\n    ```", "```\n    openssl rsa -check -in example.key\n    ```", "```\n    openssl s_client -connect <servername_or_ip>:443\n    ```", "```\n    openssl s_client -connect example.com:443 2>&1 < /dev/null | sed -n '/-----BEGIN/,/-----END/p' > publiccert.pem\n    ```", "```\n    openssl x509 -noout -ocsp_uri -in publiccert.pem http://ocsp.ca-ocspuri.com\n    ```", "```\n    http://ocsp.ca-ocspuri.com is the URI of the issuing CA's OCSP server (previously found).\n    ```", "```\n    openssl s_client -connect example.com443 -showcerts 2>&1 < /dev/null\n    ```", "```\n    openssl ocsp -issuer chain.pem -cert publiccert.pem -text -url http://ocsp.ca-ocspuri.com\n    ```", "```\n    openssl x509 -outform der -in certificate.pem -out certificate.der\n    ```", "```\n    openssl x509 -inform der -in certificate.cer -out certificate.pem\n    ```", "```\n    openssl pkcs12 -in keyStore.pfx -out keyStore.pem \u2013nodes\n    ```", "```\n    openssl pkcs12 -export -out certificate.pfx -inkey privateKey.key -in certificate.crt -certfile CACert.crt\n    ```"]