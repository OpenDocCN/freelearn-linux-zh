- en: Scanning, Auditing, and Hardening
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 扫描、审计和加固
- en: A common misconception is that Linux users never need to worry about malware.
    Yes, it's true that Linux is much more resistant to viruses than Windows is. But,
    viruses are only one type of malware, and other types of malware can be planted
    on Linux machines. And, if you're running a server that will share files with
    Windows users, you'll want to make sure that you don't share any virus-infected
    files with them.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 一个常见的误解是Linux用户永远不需要担心恶意软件。是的，Linux比Windows更抵抗病毒。但是，病毒只是恶意软件的一种类型，其他类型的恶意软件也可以植入Linux机器。而且，如果您运行的服务器将与Windows用户共享文件，您将希望确保不与他们共享任何感染病毒的文件。
- en: While Linux system log files are nice, they don't always give a good picture
    of who does what or who accesses what. It could be that either intruders or insiders
    are trying to access data that they're not authorized to access. What we really
    want is a good auditing system to alert us when people do things that they're
    not supposed to do.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然Linux系统日志文件很好，但它们并不总是能清楚地反映谁做了什么或者谁访问了什么。可能是入侵者或内部人员试图访问未经授权的数据。我们真正想要的是一个良好的审计系统，可以在人们做了不应该做的事情时向我们发出警报。
- en: And then, there's the issue of regulatory compliance. Your organization may
    have to deal with one or more regulatory bodies that dictate how you harden your
    servers against attacks. If you're not in compliance, you could be fined or put
    out of business.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，还有合规性的问题。您的组织可能必须与一个或多个规制机构打交道，这些机构规定了您如何加固服务器以防止攻击。如果您不符合规定，可能会被罚款或被迫停业。
- en: Fortunately, we have ways to deal with all of these issues, and they aren't
    all that complicated.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，我们有办法解决所有这些问题，而且它们并不那么复杂。
- en: 'In this chapter, we''ll cover the following topics:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Installing and updating ClamAV and maldet
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装和更新ClamAV和maldet
- en: Scanning with ClamAV and maldet
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用ClamAV和maldet进行扫描
- en: SELinux considerations
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SELinux考虑
- en: Scanning for rootkits with Rootkit Hunter
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Rootkit Hunter扫描rootkits
- en: Controlling the auditd daemon
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 控制auditd守护程序
- en: Creating audit rules
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建审计规则
- en: Using the `ausearch` and `aureport` utilities to search the audit logs for problems
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`ausearch`和`aureport`实用程序搜索审计日志中的问题
- en: '`oscap`, the command-line utility in order to manage and apply OpenSCAP policies'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`oscap`，命令行实用程序，用于管理和应用OpenSCAP策略'
- en: OpenSCAP Workbench, the GUI utility to manage and apply OpenSCAP policies
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenSCAP Workbench，用于管理和应用OpenSCAP策略的GUI实用程序
- en: OpenSCAP policy files and the compliance standards that each of them is designed
    to meet
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenSCAP策略文件及其各自旨在满足的合规标准
- en: Applying a policy during operating system installation
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在操作系统安装期间应用策略
- en: Installing and updating ClamAV and maldet
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装和更新ClamAV和maldet
- en: Although we don't have to worry much about viruses infecting our Linux machines,
    we do need to worry about sharing infected files with Windows users. ClamAV is
    a **Free Open Source Software** (**FOSS**) antivirus solution that can either
    run as a standalone program or can be integrated with a mail server daemon, such
    as Postfix. It's a traditional antivirus scanner that works pretty much the same
    as the antivirus program on your typical Windows workstation. The included `freshclam`
    utility allows you to update virus signatures.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们不必过多担心病毒感染我们的Linux机器，但我们确实需要担心与Windows用户共享感染文件的问题。ClamAV是一个可以作为独立程序运行或集成到邮件服务器守护程序（如Postfix）中的**自由开源软件**（**FOSS**）防病毒解决方案。它是一个传统的防病毒扫描程序，工作方式基本与典型的Windows工作站上的防病毒程序相同。包含的`freshclam`实用程序允许您更新病毒签名。
- en: '*Linux Malware Detect*, which you''ll often see abbreviated as either **LMD**
    or **maldet**, is another FOSS antivirus program that can work alongside ClamAV.
    (To save typing, I''ll just refer to it as LMD from now on.) As far as I know,
    it''s not available in the repositories of any Linux distro, but it''s still simple
    enough to install and configure. One of its features is that it automatically
    generates malware detection signatures when it sees malware on the network''s
    edge intrusion detection systems. End users can also submit their own malware
    samples. When you install it, you''ll get a systemd service that''s already enabled
    and a cron job that will periodically update both the malware signatures and the
    program itself. It works with the Linux kernel''s inotify capability to automatically
    monitor directories for files that have changed. The procedure to install it is
    pretty much the same for any systemd-based Linux distro.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '*Linux Malware Detect*，通常缩写为**LMD**或**maldet**，是另一个可以与ClamAV一起工作的FOSS防病毒程序。（为了节省输入，我现在只会称它为LMD。）据我所知，它并不在任何Linux发行版的存储库中，但安装和配置起来仍然很简单。其特点之一是当它在网络的边缘入侵检测系统上看到恶意软件时，它会自动生成恶意软件检测签名。最终用户也可以提交自己的恶意软件样本。安装后，您将获得一个已启用的systemd服务和一个定期更新恶意软件签名和程序本身的cron作业。它利用Linux内核的inotify功能自动监视目录中已更改的文件。安装它的过程对于任何基于systemd的Linux发行版来说基本相同。'
- en: 'You can get all the nitty-gritty details about Linux Malware Detect at:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在以下网址获取有关Linux Malware Detect的所有细节：
- en: '[https://www.rfxn.com/projects/linux-malware-detect/.](https://www.rfxn.com/projects/linux-malware-detect/)'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.rfxn.com/projects/linux-malware-detect/.](https://www.rfxn.com/projects/linux-malware-detect/)'
- en: The reason that we're installing ClamAV and LMD together is that, as the LMD
    folk freely admit, the ClamAV scan engine gives a much better performance when
    scanning large file sets. Also, by having them both together, ClamAV can use the
    LMD malware signatures as well as its own malware signatures.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我们安装ClamAV和LMD的原因是，正如LMD的开发人员自由承认的那样，ClamAV扫描引擎在扫描大文件集时性能更好。而且，通过将它们放在一起，ClamAV可以使用LMD恶意软件签名以及自己的恶意软件签名。
- en: Installing ClamAV and maldet
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装ClamAV和maldet
- en: We'll begin by installing ClamAV. (It's in the normal repository for Ubuntu,
    but not for CentOS. For CentOS, you'll need to install the EPEL repository, as
    I showed you how to do in [Chapter 1](366f0919-598d-4648-8873-b4dbe636d171.xhtml),
    *Running Linux in a Virtual Environment*.) We'll also install Wget, which we'll
    use to download LMD.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从安装ClamAV开始。（它在Ubuntu的正常软件库中，但不在CentOS中。对于CentOS，您需要安装EPEL软件库，就像我在[第1章](366f0919-598d-4648-8873-b4dbe636d171.xhtml)中所示的那样，*在虚拟环境中运行Linux*。）我们还将安装Wget，我们将用它来下载LMD。
- en: 'The following command will help you install ClamAV and Wget on Ubuntu:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令将帮助您在Ubuntu上安装ClamAV和Wget：
- en: '[PRE0]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The following command will help you install ClamAV and Wget on CentOS:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令将帮助您在CentOS上安装ClamAV和Wget：
- en: '[PRE1]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: For Ubuntu, the `clamav` package contains everything you need. For CentOS, you'll
    need to also install `clamav-update` in order to obtain virus updates.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Ubuntu，`clamav`软件包包含您所需的一切。对于CentOS，您还需要安装`clamav-update`以获取病毒更新。
- en: The rest of the steps will be the same for either virtual machine.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 其余步骤对于任何虚拟机都是相同的。
- en: 'Next, you''ll download and install LMD. Here, you''ll want to do something
    that I rarely tell people to do. That is, you''ll want to log in to the root user
    shell. The reason is that although the LMD installer works fine with sudo, you''ll
    end up with the program files being owned by the user who performed the installation,
    instead of by the root user. Performing the installation from the root user''s
    shell saves us the trouble of tracking down those files and changing ownership.
    So, download the file as follows:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，您将下载并安装LMD。在这里，您将要做一件我很少告诉人们要做的事情。也就是说，您将要登录到根用户shell。原因是，尽管LMD安装程序可以使用sudo正常工作，但您最终会发现程序文件的所有者是执行安装的用户，而不是根用户。从根用户的shell中执行安装可以避免我们跟踪这些文件并更改所有权的麻烦。因此，按照以下方式下载文件：
- en: '[PRE2]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'You''ll now have the file in the root user''s home directory. Now, extract
    the archive, enter the resultant directory, and run the installer. Once the installer
    finishes, copy the `README` file to your own home directory so that you can have
    it for ready reference. (This `README` file is the documentation for LMD.) Then,
    exit from the root user''s shell back to your own shell:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您将在根用户的主目录中找到该文件。现在，解压缩存档，进入生成的目录，并运行安装程序。安装程序完成后，将`README`文件复制到您自己的主目录，以便随时参考。（此`README`文件是LMD的文档。）然后，从根用户的shell退出到您自己的shell：
- en: '[PRE3]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: As you can see, the installer automatically creates the symbolic link that enables
    the maldet service, and it also automatically downloads and installs the newest
    malware signatures.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所看到的，安装程序会自动创建符号链接以启用maldet服务，并且还会自动下载并安装最新的恶意软件签名。
- en: Configuring maldet
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置maldet
- en: 'If you try to start the maldet service at this point, it will fail. To make
    it work, you need to configure the directories that you want it to automatically
    monitor and scan. To do this, you''ll add the directories to the `/usr/local/maldetect/monitor_paths`
    file. For now, I just want to monitor the `/home` and `/root` directories, so
    my `monitor_paths` file looks like this:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在此时尝试启动maldet服务，它将失败。要使其工作，您需要配置要自动监视和扫描的目录。为此，您将把这些目录添加到`/usr/local/maldetect/monitor_paths`文件中。目前，我只想监视`/home`和`/root`目录，所以我的`monitor_paths`文件看起来是这样的：
- en: '[PRE4]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'After you save the file, you''ll be able to start the maldet daemon:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 保存文件后，您就可以启动maldet守护程序了：
- en: '[PRE5]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: You can add more directories to the `monitor_paths` file at any time, but remember
    to restart the maldet daemon any time that you do, in order to read in the new
    additions.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以随时向`monitor_paths`文件添加更多目录，但请记住每次这样做时都要重新启动maldet守护程序，以便读取新添加的内容。
- en: The configuration file for LMD is `/usr/local/maldetect/conf.maldet`. It's very
    well-documented with well-written comments for every configuration item, so you
    shouldn't have any trouble figuring it out. For now, we're only going to make
    a few configuration changes.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: LMD的配置文件是`/usr/local/maldetect/conf.maldet`。它有非常完善的文档和对每个配置项都有良好的注释，因此您不应该有任何困难来弄清楚它。目前，我们只会做一些配置更改。
- en: 'At the top of the file, enable email alerts and set your username as the email
    address. The two lines should now look something like this:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在文件顶部，启用电子邮件警报并将您的用户名设置为电子邮件地址。现在，这两行应该看起来像这样：
- en: '[PRE6]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'LMD isn''t already configured to move suspicious files to the quarantine folder,
    and we want to make it do that.  Open the `conf.maldet` file in your text editor
    and look for the line that says:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: LMD尚未配置为将可疑文件移动到隔离文件夹中，我们希望它这样做。打开您的文本编辑器中的`conf.maldet`文件，并查找以下行：
- en: '[PRE7]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Change the previous line to the following line:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 将上一行更改为以下行：
- en: '[PRE8]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'You''ll see a few other quarantine actions that you can configure, but for
    now, this is all we need.  After you save the file, restart maldet:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 您将看到一些其他可以配置的隔离操作，但目前这就是我们需要的全部。保存文件后，重新启动maldet：
- en: '[PRE9]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The new changes will now be in effect.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 新更改现在将生效。
- en: Updating ClamAV and maldet
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更新ClamAV和maldet
- en: 'The good news for busy admins is that you don''t have to do anything to keep
    either of these programs updated. Both of them run with a cron job that gets created
    automatically and that does the updates for us. To prove that ClamAV is getting
    updated, we can look in the system log file:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 对于忙碌的管理员来说，好消息是您不必做任何事情来保持这两个程序的更新。它们都通过自动创建的cron作业运行，并为我们进行更新。为了证明ClamAV正在更新，我们可以查看系统日志文件：
- en: '[PRE10]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: You'll see these same entries in either the Ubuntu logs or the CentOS logs.
    However, there is a difference between how the updates get run automatically.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 您将在Ubuntu日志或CentOS日志中看到相同的条目。但是，自动运行更新的方式有所不同。
- en: 'In the `/etc/clamav/freshclam.conf` file of your Ubuntu machine, you''ll see
    the following lines at the end:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的Ubuntu机器的`/etc/clamav/freshclam.conf`文件中，您会在末尾看到以下行：
- en: '[PRE11]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: So essentially, this means that on Ubuntu, ClamAV will be checking for updates
    every hour.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，基本上这意味着在Ubuntu上，ClamAV将每小时检查更新。
- en: 'On your CentOS machine, you''ll see a `clamav-update` cron job in the `/etc/cron.d`
    directory that looks like this:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的CentOS机器上，您将在`/etc/cron.d`目录中看到一个`clamav-update` cron作业，如下所示：
- en: '[PRE12]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The `*/3` in the second column from the left indicates that ClamAV will check
    for updates every 3 hours. You can change that if you like, but you''ll also need
    to change the setting in the `/etc/sysconfig/freshclam` file. Let''s say that
    you want for CentOS to also check for ClamAV updates every hour. In the cron job
    file, change the `*/3` to `*`. (You don''t need to do `*/1` because the asterisk
    by itself in that position already indicates that the job will run every hour.)
    Then, in the `/etc/sysconfig/freshclam` file, look for this line:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 左侧第二列中的`*/3`表示ClamAV将每3小时检查更新。如果您愿意，可以更改该设置，但您还需要更改`/etc/sysconfig/freshclam`文件中的设置。假设您希望CentOS每小时检查一次ClamAV更新。在cron作业文件中，将`*/3`更改为`*`。（您不需要执行`*/1`，因为该位置上的星号已经表示作业将每小时运行一次。）然后，在`/etc/sysconfig/freshclam`文件中查找以下行：
- en: '[PRE13]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Uncomment that line and add the number of minutes that you want between updates.
    To set it to 1 hour, in order to match the cron job, it will look like this:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 取消注释该行，并添加您希望更新之间的分钟数。要设置为1小时，以匹配cron作业，它将如下所示：
- en: '[PRE14]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'To prove that maldet is getting updated, you can look in its own log files
    in the `/usr/local/maldetect/logs/` directory. In the `event_log` file, you''ll
    see the following code:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 为了证明maldet正在更新，您可以查看`/usr/local/maldetect/logs/`目录中的其自己的日志文件。在`event_log`文件中，您将看到以下代码：
- en: '[PRE15]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'In the `/usr/local/maldetect/conf.maldet` file, you''ll see these two lines,
    but with some comments in between them:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在`/usr/local/maldetect/conf.maldet`文件中，您将看到以下两行，但它们之间有一些注释：
- en: '[PRE16]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Not only will LMD automatically update its malware signatures, it will also
    ensure that you have the latest version of LMD itself.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: LMD不仅会自动更新其恶意软件签名，还会确保您拥有LMD本身的最新版本。
- en: Scanning with ClamAV and maldet
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用ClamAV和maldet进行扫描
- en: LMD's maldet daemon constantly monitors the directories that you specify in
    the `/usr/local/maldetect/monitor_paths` file. When it finds a file that it suspects
    might be malware, it automatically takes whatever action that you specified in
    the `conf.maldet` file. To see how this works, I'll create a simulated malware
    file in my home directory. Fortunately, that's easier than it sounds, because
    we have a website that will help us out.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: LMD的maldet守护程序会不断监视您在`/usr/local/maldetect/monitor_paths`文件中指定的目录。当它发现可能是恶意软件的文件时，它会自动执行您在`conf.maldet`文件中指定的操作。为了演示其工作原理，我将在我的主目录中创建一个模拟恶意软件文件。幸运的是，这比听起来要容易，因为我们有一个网站可以帮助我们。
- en: '**EICAR**, which used to be known by its full name of **European Institute
    for Computer Antivirus Research**, provides a virus signature that you can include
    in a plain text file.  You can get it at: [http://www.eicar.org/86-0-Intended-use.html](http://www.eicar.org/86-0-Intended-use.html).'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '**EICAR**，以前以其全名**European Institute for Computer Antivirus Research**而闻名，提供了一个病毒签名，您可以将其包含在一个纯文本文件中。您可以在以下网址获取：[http://www.eicar.org/86-0-Intended-use.html](http://www.eicar.org/86-0-Intended-use.html)。'
- en: To create the simulated virus file, go to the page that I've listed in the preceding
    link.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建模拟病毒文件，请转到我在前面链接中列出的页面。
- en: 'Scroll down toward the bottom of the page until you see this line of text within
    a text box:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 向下滚动页面，直到在文本框中看到以下文本行：
- en: '[PRE17]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Copy that line of text and insert it into a text file that you''ll save to
    your home directory of either virtual machine. (You can name it anything you want,
    but I''ll just name mine `testing.txt`.) Wait just a few moments, and you should
    see the file disappear. Then, look in the `/usr/local/maldetect/logs/event_log`
    file to verify that the LMD moved the file to quarantine:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 复制该文本行并将其插入到一个文本文件中，然后将其保存到任一虚拟机的主目录中。（您可以随意命名，但我会将其命名为`testing.txt`。）等待片刻，您会看到文件消失。然后，查看`/usr/local/maldetect/logs/event_log`文件，以验证LMD是否将文件移至隔离区：
- en: '[PRE18]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: There's still a bit more to LMD than what I can show you here. However, you
    can read all about it in the `README` file that comes with it.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: LMD还有更多内容，这里无法全部展示。但是，您可以在随附的`README`文件中了解所有内容。
- en: SELinux considerations
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SELinux注意事项
- en: It used to be that doing an antivirus scan on a Red Hat-type system would trigger
    an SELinux alert. But, in the course of proofing this chapter, the scans all worked
    as they should, and SELinux never bothered me even once. So, it would appear that
    that problem is now fixed.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 以前，在Red Hat类型的系统上进行杀毒扫描会触发SELinux警报。但是，在校对本章的过程中，扫描都按照预期进行，SELinux从未打扰过我。因此，这个问题似乎已经解决了。
- en: 'If you ever do generate any SELinux alerts with your virus scans, all you need
    to do to fix it is to change one Boolean:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在病毒扫描中生成任何SELinux警报，只需更改一个布尔值即可解决问题：
- en: '[PRE19]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'What interests us here is the `antivirus_can_scan_system` Boolean, which is
    off by default. To turn it on to enable virus scans, just follow this:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 我们感兴趣的是`antivirus_can_scan_system`布尔值，默认情况下是关闭的。要打开以启用病毒扫描，请按照以下步骤：
- en: '[PRE20]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: That should fix any SELinux-related scan problems that you may have. But, as
    things stand now, you probably won't need to worry about it.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该解决您可能遇到的与SELinux相关的扫描问题。但是，就目前情况而言，您可能不需要担心它。
- en: Scanning for rootkits with Rootkit Hunter
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Rootkit Hunter扫描rootkits
- en: Rootkits are exceedingly nasty pieces of malware that can definitely ruin your
    day. They can listen for commands from their masters, steal sensitive data and
    send it to their masters, or provide an easy-access back door for their masters.
    They're designed to be stealthy, with the ability to hide themselves from plain
    view. Sometimes, they'll replace utilities such as `ls` or `ps` with their own
    trojaned versions that will show all files or processes on the system except for
    the ones that are associated with the rootkit. Rootkits can infect any operating
    system, even our beloved Linux.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: rootkit是极其恶毒的恶意软件，绝对会毁了你的一天。它们可以监听来自他们主人的命令，窃取敏感数据并将其发送给他们的主人，或者为他们的主人提供一个易于访问的后门。它们被设计为隐秘的，具有隐藏自己的能力。有时，它们会用自己的特洛伊木马版本替换诸如`ls`或`ps`之类的实用程序，这些实用程序将显示系统上的所有文件或进程，但不包括与rootkit相关的文件。Rootkit可以感染任何操作系统，甚至是我们心爱的Linux。
- en: In order to plant a rootkit, an attacker has to have already gained administrative
    privileges on a system. This is one of the many reasons why I always cringe when
    I see people doing all of their work from the root user's shell and why I'm a
    firm advocate of using sudo whenever possible. I mean, really, why should we make
    it easy for the bad guys?
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 为了植入rootkit，攻击者必须已经在系统上获得了管理员权限。这是我总是在看到人们都在root用户的shell中完成所有工作时感到不安的许多原因之一，也是我坚决主张尽可能使用sudo的原因。我是说，真的，我们为什么要让坏人轻而易举地得逞呢？
- en: Several years ago, back in the dark days of Windows XP, Sony Music got into
    a bit of trouble when someone discovered that they had planted a rootkit on their
    music CDs. They didn't mean to do anything malicious, but only wanted to stop
    people from using their computers to make illegal copies. Of course, most people
    ran Windows XP with an administrator account, which made it really easy for the
    rootkit to infect their computers. Windows users still mostly run with administrator
    accounts, but they at least now have User Access Control to help mitigate these
    types of problems.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 几年前，在Windows XP的黑暗时期，索尼音乐因为有人发现他们在音乐CD上植入了rootkit而陷入了一些麻烦。他们并不是有意要做任何恶意的事情，只是想阻止人们使用他们的计算机制作非法副本。当然，大多数人都以管理员帐户运行Windows
    XP，这使得rootkit很容易感染他们的计算机。Windows用户仍然大多以管理员帐户运行，但至少现在有用户访问控制来帮助缓解这些问题。
- en: There are a couple of different programs that scan for rootkits, and both are
    used pretty much the same way. The one that we'll look at now is named, Rootkit
    Hunter.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 有几个不同的程序可以扫描rootkit，两者使用方式基本相同。我们现在要看的是一个名为Rootkit Hunter的程序。
- en: Installing and updating Rootkit Hunter
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装和更新Rootkit Hunter
- en: For Ubuntu, Rootkit Hunter is in the normal repository. For CentOS, you'll need
    to install the EPEL repository, as I showed you how to do in [Chapter 1](366f0919-598d-4648-8873-b4dbe636d171.xhtml),
    *Running Linux in a Virtual Environment*. For both Linux distros, the package
    name is `rkhunter`.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Ubuntu，Rootkit Hunter在正常的存储库中。对于CentOS，您需要安装EPEL存储库，就像我在[第1章](366f0919-598d-4648-8873-b4dbe636d171.xhtml)中所示的那样，*在虚拟环境中运行Linux*。对于这两个Linux发行版，软件包名称是`rkhunter`。
- en: 'For Ubuntu:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Ubuntu：
- en: '[PRE21]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'For CentOS:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 对于CentOS：
- en: '[PRE22]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'After it''s installed, you can look at its options with:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 安装后，您可以使用以下命令查看其选项：
- en: '[PRE23]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Easy, right?
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 简单，对吧？
- en: 'The next thing you''ll need to do is to update the rootkit signatures, using
    the `--update` option:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，您需要使用`--update`选项更新rootkit签名：
- en: '[PRE24]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Now, we're ready to scan.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们准备好扫描了。
- en: Scanning for rootkits
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 扫描rootkit
- en: 'To run your scan, use the `-c` option. (That''s `-c` for check.)  Be patient,
    because it will take a while:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 要运行扫描，请使用`-c`选项。（这是用于检查的`-c`。）请耐心等待，因为这需要一段时间：
- en: '[PRE25]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: When you run the scan in this manner, Rootkit Hunter will periodically stop
    and ask you to hit the *Enter* key to continue. When the scan completes, you'll
    find an `rkhunter.log` file in the `/var/log` directory.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 当您以这种方式运行扫描时，Rootkit Hunter将定期停止并要求您按*Enter*键继续。扫描完成后，您会在`/var/log`目录中找到一个`rkhunter.log`文件。
- en: 'To have Rootkit Hunter automatically run as a cron job, you''ll want to use
    the `--cronjob` option, which will cause the program to run all the way through
    without prompting you to keep hitting the *Enter* key. You might also want to
    use the `--rwo` option, which will cause the program to only report warnings,
    instead of also reporting on everything that''s good.  From the command line,
    the command would look like this:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 要让Rootkit Hunter自动作为cron作业运行，您需要使用`--cronjob`选项，这将导致程序一直运行下去，而不会提示您不断按*Enter*键。您可能还想使用`--rwo`选项，这将导致程序仅报告警告，而不是报告所有良好的内容。从命令行，命令看起来是这样的：
- en: '[PRE26]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'To create a cron job that will automatically run Rootkit Hunter on a nightly
    basis, open the crontab editor for the root user:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建一个自动每晚运行Rootkit Hunter的cron作业，请打开root用户的crontab编辑器：
- en: '[PRE27]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Let''s say that you want to run Rootkit Hunter every night at 20 minutes past
    10\. Enter this into the crontab editor:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 假设您想在每天晚上10点20分运行Rootkit Hunter。将其输入到crontab编辑器中：
- en: '[PRE28]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Since cron only works with 24 hour clock time, you'll have to express 10:00
    P.M. as 22\. (Just add 12 to the normal P.M. clock times that you're used to using.)
    The three asterisks mean, respectively, that the job will run every day of the
    month, every month, and every day of the week. You'll need to list the entire
    path for the command, or else cron won't be able to find it.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 由于cron只能使用24小时制时间，因此您必须将晚上10:00表示为22。 （只需将您习惯使用的P.M.时钟时间加12即可。）这三个星号分别表示该作业将在每个月的每一天，每个月和每周的每一天运行。您需要列出命令的完整路径，否则cron将无法找到它。
- en: You'll find more options that might interest you in the `rkhunter` man page,
    but this should be enough to get you going with it.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在`rkhunter`手册页中找到更多可能对您感兴趣的选项，但这应该足以让您开始使用它。
- en: Controlling the auditd daemon
  id: totrans-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 控制auditd守护程序
- en: So, you have a directory full of super-secret files that only a very few people
    need to see, and you want to know when unauthorized people try to see them. Or,
    maybe you want to see when a certain file gets changed. Or, maybe you want to
    see when people log into the system and what they're doing once they do log in.
    For all this and more, you have the auditd system. It's a really cool system,
    and I think that you'll like it.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，您有一个充满了只有极少数人需要看到的绝密文件的目录，并且您想知道未经授权的人何时尝试查看它们。或者，也许您想知道某个文件何时被更改。或者，也许您想知道人们何时登录系统以及他们登录后在做什么。对于所有这些以及更多内容，您都有auditd系统。这是一个非常酷的系统，我相信您会喜欢它。
- en: One of the beauties of auditd is that it works at the Linux kernel level, rather
    than at the user-mode level. This makes it much harder for attackers to subvert.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: auditd的美妙之一是它在Linux内核级别工作，而不是在用户模式级别。这使得攻击者更难以颠覆。
- en: 'On Red Hat-type systems, auditd comes installed and enabled by default. So,
    you''ll find it already there on your CentOS machine. On Ubuntu, it isn''t already
    installed, so you''ll have to do it yourself:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在红帽类型的系统上，auditd默认已安装并启用。因此，您会在CentOS机器上找到它。在Ubuntu上，它尚未安装，因此您需要自己安装：
- en: '[PRE29]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'On Ubuntu, you can control the auditd daemon with the normal `systemctl` commands.
    So, if you need to restart auditd to read in a new configuration, you can do that
    with the following:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 在Ubuntu上，您可以使用正常的`systemctl`命令控制auditd守护程序。因此，如果需要重新启动auditd以读取新的配置，可以使用以下命令：
- en: '[PRE30]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'On CentOS 7, for some reason that I don''t understand, the normal `systemctl`
    commands don''t work with auditd. (For all other daemons, they do.) So, on your
    CentOS 7 machine, you''ll restart the auditd daemon with the old-fashioned `service`
    command, like so:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在CentOS 7上，由于某种我不理解的原因，正常的`systemctl`命令无法与auditd一起使用。（对于所有其他守护程序，它们可以。）因此，在您的CentOS
    7机器上，您将使用老式的`service`命令重新启动auditd守护程序，如下所示：
- en: '[PRE31]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Other than this minor difference, everything I tell you about auditd from here
    on will apply to both Ubuntu and CentOS.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 除了这个小的不同之外，我告诉你的关于auditd的一切都适用于Ubuntu和CentOS。
- en: Creating audit rules
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建审计规则
- en: 'Okay, let''s start with something simple and work our way up to something awesome.
    First, let''s check to see whether any audit rules are in effect:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，让我们从简单的开始，逐步提升到令人惊叹的东西。首先，让我们检查是否有任何审计规则生效：
- en: '[PRE32]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: As you can see, the `auditctl` command is what we use to manage audit rules.
    The `-l` option lists the rules.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所看到的，`auditctl`命令是我们用来管理审计规则的命令。`-l`选项列出规则。
- en: Auditing a file for changes
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 审计文件的更改
- en: 'Now, let''s say that we want to see when someone changes the `/etc/passwd`
    file. (The command that we''ll use will look a bit daunting, but I promise that
    it will make sense once we break it down.) Look at the following code:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，假设我们想要查看当有人更改`/etc/passwd`文件时。 （我们将使用的命令看起来有点吓人，但我保证一旦我们分解它，它就会讲得通。）看看以下代码：
- en: '[PRE33]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Here''s the breakdown:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 这是细节：
- en: '`-w`: This stands for where, and it points to the object that we want to monitor. 
    In this case, it''s `/etc/passwd`.'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-w`：这代表着“在哪里”，并且指向我们想要监视的对象。在这种情况下，它是`/etc/passwd`。'
- en: '`-p`: This indicates the object''s permissions that we want to monitor. In
    this case, we''re monitoring to see when anyone either tries to (w)rite to the
    file, or tries to make (a)ttribute changes. (The other two permissions that we
    can audit are (r)ead and e(x)ecute.)'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-p`：这表示我们要监视的对象的权限。在这种情况下，我们正在监视任何人尝试（w）写入文件或尝试进行（a）属性更改的情况。（我们可以审计的另外两个权限是（r）读取和e(x)ecute。）'
- en: '`-k`: The `k` stands for key, which is just auditd''s way of assigning a name
    to a rule.  So, `passwd_changes` is the key, or the name, of the rule that we''re
    creating.'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-k`：`k`代表key，这只是auditd分配规则名称的方式。因此，`passwd_changes`是我们正在创建的规则的键或名称。'
- en: The `auditctl -l` command shows us that the rule is indeed there.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '`auditctl -l`命令向我们显示规则确实存在。'
- en: 'Now, the slight problem with this is that the rule is only temporary and will
    disappear when we reboot the machine. To make it permanent, we need to create
    a custom rules file in the `/etc/audit/rules.d/` directory. Then, when you restart
    the auditd daemon, the custom rules will get inserted into the `/etc/audit/audit.rules`
    file. Because the `/etc/audit/` directory can only be accessed by someone with
    root privileges, I''ll just open the file by listing the entire path to the file,
    rather than trying to enter the directory:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，这个规则的一个小问题是它只是临时的，当我们重新启动机器时就会消失。要使其永久，我们需要在`/etc/audit/rules.d/`目录中创建一个自定义规则文件。然后，当您重新启动auditd守护程序时，自定义规则将被插入到`/etc/audit/audit.rules`文件中。因为`/etc/audit/`目录只能被具有root权限的人访问，所以我将通过列出文件的完整路径来打开文件，而不是尝试进入目录：
- en: '[PRE34]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'There''s not a whole lot in this default file:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 这个默认文件中没有太多内容：
- en: '[PRE35]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Here''s the breakdown for this file:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 这个文件的细节如下：
- en: '`-D`: This will cause all rules and watches that are currently in effect to
    be deleted, so that we can start from a clean slate. So, if I were to restart
    the auditd daemon right now, it would read this `audit.rules` file, which would
    delete the rule that I just now created.'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-D`：这将导致当前生效的所有规则和监视被删除，以便我们可以从干净的状态开始。因此，如果我现在重新启动auditd守护程序，它将读取这个`audit.rules`文件，这将删除我刚刚创建的规则。'
- en: '`-b 8192`: This sets the number of outstanding audit buffers that we can have
    going at one time. If all of the buffers get full, the system can''t generate
    any more audit messages.'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-b 8192`：这设置了我们可以同时拥有的未决审计缓冲区的数量。如果所有缓冲区都满了，系统将无法生成更多的审计消息。'
- en: '`-f 1`: This sets the failure mode for critical errors, and the value can be
    either 0, 1, or 2.  A `-f 0` would set the mode to silent, meaning that auditd
    wouldn''t do anything about critical errors. A `-f 1`, as we see here, tells auditd
    to only report the critical errors, and a `-f 2` would cause the Linux kernel
    to go into panic mode. According to the `auditctl` man page, anyone in a high-security
    environment would likely want to change this to `-f 2`. For our purposes though,
    `-f1` works.'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-f 1`：这设置了关键错误的失败模式，值可以是0、1或2。`-f 0`会将模式设置为静默，这意味着auditd不会对关键错误采取任何措施。如我们在这里看到的`-f
    1`，告诉auditd只报告关键错误，`-f 2`会导致Linux内核进入紧急模式。根据`auditctl`手册页面，高安全环境中的任何人可能都想将其更改为`-f
    2`。但对于我们的目的，`-f1`就可以了。'
- en: 'You could use your text editor to create a new rules file in the `/etc/audit/rules.d/`
    directory. Or, you could just redirect the `auditctl -l` output into a new file,
    like this:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用文本编辑器在`/etc/audit/rules.d/`目录中创建一个新的规则文件。或者，您可以将`auditctl -l`输出重定向到一个新文件，就像这样：
- en: '[PRE36]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Since the Bash shell doesn''t allow me to directly redirect information into
    a file in the `/etc` directory, even with sudo, I have to use the `sudo sh -c`
    command in order to execute the `auditctl` command. After restarting the auditd
    daemon, our `audit.rules` file now looks like this:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 由于Bash shell不允许我直接将信息重定向到`/etc`目录中的文件，即使使用sudo，我也必须使用`sudo sh -c`命令来执行`auditctl`命令。重新启动auditd守护程序后，我们的`audit.rules`文件现在如下所示：
- en: '[PRE37]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Now, the rule will take effect every time the machine gets rebooted, and every
    time that you manually restart the auditd daemon.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，规则将在每次机器重新启动时生效，以及每次手动重新启动auditd守护程序时生效。
- en: Auditing a directory
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 审计目录
- en: 'Vicky and Cleopatra, my solid gray kitty and my gray-and-white tabby kitty,
    have some supersensitive secrets that they need to safeguard. So, I created the
    `secretcats` group and added them to it. I then created the `secretcats` shared
    directory and set the access controls on it as I showed you how to do in [Chapter
    6](0db2a305-ea20-4b70-820a-38b1bd81dd98.xhtml), *Access Control Lists and Shared
    Directory Management*:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 我的固体灰色小猫维基和灰白色虎斑小猫克利奥帕特拉有一些非常敏感的秘密需要保护。因此，我创建了`secretcats`组并将它们添加到其中。然后，我创建了`secretcats`共享目录，并按照我在[第6章](0db2a305-ea20-4b70-820a-38b1bd81dd98.xhtml)中向您展示的方式设置了它的访问控制列表：
- en: '[PRE38]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Vicky and Cleopatra want to be absolutely sure that nobody gets into their
    stuff, so they requested that I set up an auditing rule for their directory:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 维基和克利奥帕特拉希望绝对确定没有人能进入他们的东西，因此他们要求我为他们的目录设置审计规则：
- en: '[PRE39]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'As before, the `-w` denotes what we want to monitor, and the `-k` denotes the
    name of the audit rule. This time, I left out the `-p` option because I want to
    monitor for every type of access. In other words, I want to monitor for any read,
    write, attribute change, or execute actions. (Because this is a directory, the
    execute action happens when somebody tries to `cd` into the directory.) You can
    see in the `auditctl -l` output that by leaving out the `-p`, we will now monitor
    for everything. However, let''s say that I only want to monitor for when someone
    tries to `cd` into this directory. Instead, I could have made the rule look like
    this:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 与以前一样，`-w`表示我们要监视的内容，`-k`表示审计规则的名称。这次，我省略了`-p`选项，因为我想监视每种类型的访问。换句话说，我想监视任何读取、写入、属性更改或执行操作。（因为这是一个目录，当有人尝试`cd`到目录时，执行操作会发生。）您可以在`auditctl
    -l`输出中看到，通过省略`-p`，我们现在将监视一切。但是，假设我只想监视有人尝试`cd`到这个目录的情况。相反，我可以使规则看起来像这样：
- en: '[PRE40]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Easy enough so far, right? Let's now look at something a bit more complex.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止还算简单，对吧？现在让我们看看更复杂的东西。
- en: Auditing system calls
  id: totrans-158
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 审计系统调用
- en: 'Creating rules to monitor when someone performs a certain action isn''t hard,
    but the command syntax is a bit trickier than what we''ve seen so far. With this
    rule, we''re going to be alerted every time that Charlie either tries to open
    a file or tries to create a file:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 创建监视某个动作的规则并不难，但命令语法比我们到目前为止看到的要复杂一些。使用这个规则，我们将在查理尝试打开文件或尝试创建文件时收到警报：
- en: '[PRE41]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Here''s the breakdown:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 这是分解：
- en: '`-a always,exit`: Here, we have the action and the list. The `exit` part means
    that this rule will be added to the system call exit list. Whenever the operating
    system exits from a system call, the exit list will be used to determine if an
    audit event needs to be generated. The `always` part is the action, which means
    that an audit record for this rule will always be created on exit from the specified
    system call. Note that the action and list parameters have to be separated by
    a comma.'
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-a always,exit`：这里有动作和列表。`exit`部分表示此规则将被添加到系统调用退出列表中。每当操作系统从系统调用退出时，将使用退出列表来确定是否需要生成审计事件。`always`部分是动作，表示每次从指定系统调用退出时都会创建此规则的审计记录。请注意，动作和列表参数必须用逗号分隔。'
- en: '`-F arch=b64`: The `-F` option is used to build a rule field, and we see two
    rule fields in this command. This first rule field specifies the machine''s CPU
    architecture.  The `b64` means that the computer is running with an x86_64 CPU.
    (Whether it''s Intel or AMD doesn''t matter.) Considering that 32-bit machines
    are dying off and that Sun SPARC and PowerPC machines aren''t all that common,
    `b64` is what you''ll now mostly see.'
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-F arch=b64`：`-F`选项用于构建规则字段，在此命令中我们看到两个规则字段。第一个规则字段指定了机器的CPU架构。`b64`表示计算机正在使用x86_64
    CPU。（无论是英特尔还是AMD都无关紧要。）考虑到32位机器正在消失，Sun SPARC和PowerPC机器并不常见，现在大多数情况下会看到`b64`。'
- en: '`-S openat`: The `-S` option specifies the system call that we want to monitor. 
    `openat` is the system call that either opens or creates a file.'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-S openat`：`-S`选项指定我们要监视的系统调用。`openat`是打开或创建文件的系统调用。'
- en: '`-F auid=1006`: This second audit field specifies the user ID number of the
    user that we want to monitor. (Charlie''s user ID number is `1006`.)'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-F auid=1006`：这第二个审计字段指定了我们要监视的用户的用户ID号码。（查理的用户ID号码是`1006`。）'
- en: A complete explanation about system calls, or syscalls, is a bit too esoteric
    for our present purpose. For now, suffice it to say that a syscall happens whenever
    a user issues a command that requests that the Linux kernel provide a service.
    If you're so inclined, you can read more about syscalls at: [https://blog.packagecloud.io/eng/2016/04/05/the-definitive-guide-to-linux-system-calls/](https://blog.packagecloud.io/eng/2016/04/05/the-definitive-guide-to-linux-system-calls/).
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 关于系统调用或syscalls的完整解释对我们当前的目的来说有点太深奥了。现在，暂且可以说，每当用户发出请求Linux内核提供服务的命令时，就会发生系统调用。如果你有兴趣，可以在这里阅读更多关于syscalls的内容：[https://blog.packagecloud.io/eng/2016/04/05/the-definitive-guide-to-linux-system-calls/](https://blog.packagecloud.io/eng/2016/04/05/the-definitive-guide-to-linux-system-calls/)。
- en: 'What I''ve presented here are just a few of the many things that you can do
    with auditing rules. To see more examples, check out the `auditctl` man page:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 我在这里呈现的只是你可以使用审计规则做的许多事情中的一小部分。要查看更多示例，请查看`auditctl`手册页：
- en: '[PRE42]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: So, now you're wondering, "*Now that I have these rules, how do I know when
    someone tries to violate them?*" As always, I'm glad that you asked.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，现在你在想，“*既然我有了这些规则，我怎么知道有人试图违反它们呢？*”像往常一样，我很高兴你问了。
- en: Using ausearch and aureport
  id: totrans-170
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用ausearch和aureport
- en: The auditd daemon logs events to the `/var/log/audit/audit.log` file. Although
    you could directly read the file with something like `less`, you really don't
    want to. The `ausearch` and `aureport` utilities will help you translate the file
    into a language that makes some sort of sense.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: auditd守护程序将事件记录到`/var/log/audit/audit.log`文件中。虽然你可以直接使用`less`之类的工具读取文件，但你真的不想这样做。`ausearch`和`aureport`实用程序将帮助你将文件转换为一种有些意义的语言。
- en: Searching for file change alerts
  id: totrans-172
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 搜索文件更改警报
- en: 'Let''s start by looking at the rule that we created that will alert us whenever
    a change is made to the `/etc/passwd` file:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们首先看一下我们创建的规则，该规则将在对`/etc/passwd`文件进行更改时警报我们：
- en: '[PRE43]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'Now, let''s make a change to the file and look for the alert message. Rather
    than add another user, since I''m running out of cats whose names I can use, I''ll
    just use the `chfn` utility to  add contact information to the comment field for
    Cleopatra''s entry:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们对文件进行更改并查找警报消息。我不想再添加另一个用户，因为我已经用完了可以使用的猫的名字，所以我将使用`chfn`实用程序来将联系信息添加到Cleopatra条目的注释字段中：
- en: '[PRE44]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'I''ll now use `ausearch` to look for any audit messages that this event may
    have generated:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 我现在将使用`ausearch`查找此事件可能生成的任何审计消息：
- en: '[PRE45]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'Here''s the breakdown:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 这是分解：
- en: '`-i`: This takes any numeric data and, whenever possible, converts it into
    text.  In this case, it takes user ID numbers and converts them to the actual
    username, which shows up here as `auid=donnie`. If I were to leave the `-i` out,
    the user information would instead show up as `auid=1000`, which is my user ID
    number.'
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-i`：这将接受任何数字数据，并在可能的情况下将其转换为文本。在这种情况下，它接受用户ID号并将其转换为实际的用户名，显示为`auid=donnie`。如果我不加`-i`，用户信息将显示为`auid=1000`，这是我的用户ID号。'
- en: '`-k passwd_changes`: This specifies the key, or the name, of the audit rule
    for which we want to see audit messages.'
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-k passwd_changes`：这指定了我们想要查看审计消息的审计规则的键或名称。'
- en: 'You can see that there are two parts to this output. The first part just shows
    when I created the audit rule, so we''re not interested in that. In the second
    part, you can see when I triggered the rule, but it doesn''t show how I triggered
    it. So, let''s use `aureport` to see if it will give us a bit more of a clue:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到这个输出有两部分。第一部分只是显示我创建审计规则的时间，所以我们对此不感兴趣。在第二部分中，你可以看到我触发规则的时间，但它没有显示我如何触发它。所以，让我们使用`aureport`来看看它是否会给我们更多线索：
- en: '[PRE46]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: What's curious is that with `ausearch`, you have to specify the name, or key,
    of the audit rule that interests you after the `-k` option. With `aureport`, the
    `-k` option means that you want to look at all log entries that have to do with
    all audit rule keys. To see log entries for a specific key, just pipe the output
    into grep.  The `-i` option does the same thing that it does for `ausearch`.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的是，使用`ausearch`时，你必须在`-k`选项之后指定你感兴趣的审计规则的名称或键。而对于`aureport`，`-k`选项表示你想查看与所有审计规则键有关的所有日志条目。要查看特定键的日志条目，只需将输出导入grep。`-i`选项对`ausearch`的作用与对`aureport`的作用相同。
- en: 'As you can see, `aureport` parses the cryptic language of the `audit.log` file
    into plain language that''s easier to understand. I wasn''t sure about what I
    had done to generate events 1 and 2, so I looked in the `/var/log/secure` file
    to see if I could find out. I saw these two entries for those times:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所看到的，`aureport`将`audit.log`文件的隐晦语言解析为更容易理解的普通语言。我不确定我做了什么来生成事件1和2，所以我查看了`/var/log/secure`文件以查找答案。我在那些时间看到了这两个条目：
- en: '[PRE47]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: So, event 1 was from when I initially created the audit rule, and event 2 happened
    when I did an `ausearch` operation.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，事件1是我最初创建审计规则时发生的，事件2发生在我执行`ausearch`操作时。
- en: 'I must confess that the events in lines 4 and 5 are a bit of a mystery. Both
    were created when I invoked the `usermod` command, and both of them correlate
    to the secure log entries where I added Vicky and Cleopatra to the `secretcats` group:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 我必须承认，第4行和第5行的事件有点神秘。当我调用`usermod`命令时，都会创建这两个事件，并且它们都与我将Vicky和Cleopatra添加到`secretcats`组的安全日志条目相关：
- en: '[PRE48]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: The strange part about this is that adding a user to a secondary group doesn't
    modify the `passwd` file. So, I really don't know why the rule got triggered to
    create the events in lines 4 and 5.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 奇怪的是，将用户添加到辅助组不会修改`passwd`文件。所以，我真的不知道为什么规则会触发创建第4行和第5行的事件。
- en: 'This leaves us with the event in line 3, which is where I used `chfn` to actually
    modify the `passwd` file. Here''s the `secure` log entry for that:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 这让我们留下了第3行的事件，那是我使用`chfn`实际修改`passwd`文件的地方。这是关于那个的`secure`日志条目：
- en: '[PRE49]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: So, out of all of these events, the one in line 3 is the only one where the
    `/etc/passwd` file actually got modified.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，在所有这些事件中，只有第3行的事件是实际修改了`/etc/passwd`文件的。
- en: The `/var/log/secure` file that I keep mentioning here is on Red Hat-type operating
    systems, such as CentOS. On your Ubuntu machine, you'll see the `/var/log/auth.log` file,
    instead.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 我一直在这里提到的`/var/log/secure`文件是在Red Hat类型的操作系统上，比如CentOS。在你的Ubuntu机器上，你会看到`/var/log/auth.log`文件。
- en: Searching for directory access rule violations
  id: totrans-195
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 搜索目录访问规则违规
- en: 'In our next scenario, we created a shared directory for Vicky and Cleopatra
    and created an audit rule for it that looks like this:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的下一个场景中，我们为Vicky和Cleopatra创建了一个共享目录，并为它创建了一个审计规则，看起来像这样：
- en: '[PRE50]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'So, all accesses or attempted accesses to this directory should trigger an
    alert. First, let''s have Vicky enter the `/secretcats` directory and run an `ls
    -l` command:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，对这个目录的所有访问或尝试访问都应该触发警报。首先，让Vicky进入`/secretcats`目录并运行`ls -l`命令：
- en: '[PRE51]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'We see that Cleopatra has already been there and has created a file. (We''ll
    get back to that in a moment.) When an event triggers an auditd rule, it often
    creates multiple records in the `/var/log/audit/audit.log` file. If you study
    through each record for an event, you''ll see that each one covers a different
    aspect of that event. When I do an `ausearch` command, I see a total of five records
    just from that one `ls -l` operation. For the sake of saving space, I''ll just
    put the first one and the last one here:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到Cleopatra已经在那里并创建了一个文件。（我们稍后再回来讨论这个问题。）当事件触发auditd规则时，通常会在`/var/log/audit/audit.log`文件中创建多条记录。如果你研究每个事件的每条记录，你会发现每条记录都涵盖了该事件的不同方面。当我执行`ausearch`命令时，我看到了来自那个`ls
    -l`操作的总共五条记录。为了节省空间，我只列出第一条和最后一条：
- en: '[PRE52]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: In both records, you see the action that was taken (`ls -l`), and information
    about the person—or, cat, in this case—that took the action.  Since this is a
    CentOS machine, you also see SELinux context information.  In the second record,
    you also see the name of the file that Vicky saw when she did the `ls` command.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 在这两条记录中，你可以看到所采取的行动（`ls -l`），以及采取行动的人或者在这种情况下是猫的信息。由于这是一个CentOS机器，你还可以看到SELinux上下文信息。在第二条记录中，你还可以看到Vicky在执行`ls`命令时看到的文件名。
- en: 'Next, let''s say that that sneaky Charlie guy logs in and tries to get into
    the `/secretcats` directory:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们假设那个狡猾的查理登录并尝试进入`/secretcats`目录：
- en: '[PRE53]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'Charlie isn''t a member of the `secretcats` group and doesn''t have permission
    to go into the `secretcats` directory. So, he should trigger an alert message.
    Well, he actually triggered one that consists of four records, and I''ll again
    just list the first and the last:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 查理不是`secretcats`组的成员，也没有权限进入`secretcats`目录。因此，他应该触发一个警报消息。实际上，他触发了一个包含四条记录的警报，我再次只列出第一条和最后一条：
- en: '[PRE54]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: There are two things to note here. First, just attempting to `cd` into the directory
    doesn't trigger an alert. However, using `ls` to try to read the contents of the
    directory does. Secondly, note the `Permission denied` message that shows up in
    the second record.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有两件事需要注意。首先，仅尝试`cd`进入目录不会触发警报。然而，使用`ls`尝试读取目录的内容会触发警报。其次，注意第二条记录中出现的`Permission
    denied`消息。
- en: 'The last set of alerts that we''ll look at got created when Cleopatra created
    her `cleopatrafile.txt` file. This event triggered an alert that consists of 30
    records. Here are two of them:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将要查看的最后一组警报是在Cleopatra创建她的`cleopatrafile.txt`文件时创建的。这个事件触发了一个包含30条记录的警报。以下是其中的两条：
- en: '[PRE55]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: You can tell that the first of these two messages happened when Cleopatra saved
    the file and exited vim because the second message shows `objtype=DELETE`, where
    her temporary vim swap file got deleted.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看出这两条消息中的第一条是Cleopatra保存文件并退出vim时发生的，因为第二条消息显示了`objtype=DELETE`，她的临时vim交换文件被删除了。
- en: Okay, this is all good, but what if this is too much information? What if you
    just want a quick and sparse list of all of the security events that got triggered
    by this rule? For that, we'll use `aureport`. We'll use it just like we did before.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，这都很好，但如果这些信息太多怎么办？如果你只想要一个快速而简洁的安全事件列表，那么我们将使用`aureport`。我们将像之前一样使用它。
- en: 'First,  let''s pipe the `aureport` output into `less` instead of into `grep` so
    that we can see the column headers:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们将`aureport`的输出导入`less`而不是`grep`，这样我们就可以看到列标题：
- en: '[PRE56]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: The status in the `success` column will be either `yes` or `no`, depending on
    if the user was able to successfully perform an action that violated a rule. Or,
    it could be a question mark if the event isn't the result of the rule getting
    triggered.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: '`success`列中的状态将是`yes`或`no`，取决于用户是否能够成功执行违反规则的操作。或者，如果事件不是触发规则的结果，它可能是一个问号。'
- en: 'For Charlie, we see a `yes` event in line 48, with the events in lines 49 through
    51 all having a `no` status. We also see that all of these entries were triggered
    by Charlie''s use of the `ls` command:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 对于查理，我们在第48行看到了一个`yes`事件，而在第49到51行的事件中都有一个`no`状态。我们还看到所有这些条目都是由查理使用`ls`命令触发的：
- en: '[PRE57]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'You''d be tempted to think that the `yes` event in line 48 indicates that Charlie
    was successful in reading the contents of the `secretcats` directory. To analyze
    further, look at the event numbers at the end of each line and correlate them
    to the output of our previous `ausearch` command. You''ll see that event numbers
    14152 through 14155 belong to records that all have the same timestamp. We can
    see that in the first line of each record:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会认为第48行的`yes`事件表明查理成功读取了`secretcats`目录的内容。要进一步分析，请查看每行末尾的事件编号，并将其与我们之前的`ausearch`命令的输出进行对照。你会发现事件编号14152到14155属于具有相同时间戳的记录。我们可以在每条记录的第一行看到这一点：
- en: '[PRE58]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: As we noted before, the last record of this series shows `Permission denied` for
    Charlie and that's what really counts.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前指出的，这个系列的最后一条记录显示了查理的`Permission denied`，这才是真正重要的。
- en: Space doesn't permit me to give a full explanation of each individual item in
    an audit log record. But, you can read about it here in the official Red Hat documentation: [https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/security_guide/sec-understanding_audit_log_files](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/security_guide/sec-understanding_audit_log_files).
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 空间不允许我对审计日志记录中的每个项目进行全面解释。但是，您可以在官方的Red Hat文档中阅读有关此处的内容：[https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/security_guide/sec-understanding_audit_log_files](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/security_guide/sec-understanding_audit_log_files)。
- en: Searching for system call rule violations
  id: totrans-221
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 搜索系统调用规则违规
- en: 'The third rule that we created was to monitor that sneaky Charlie. This rule
    will alert us whenever Charlie tries to open or create a file. (As we noted before,
    `1006` is Charlie''s user ID number.):'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 我们创建的第三条规则是监视这个狡猾的查尔斯。这条规则将在查尔斯尝试打开或创建文件时向我们发出警报。（正如我们之前指出的，`1006`是查尔斯的用户ID号。）
- en: '[PRE59]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'Even though Charlie hasn''t done that much on this system, this rule gives
    us a lot more log entries than what we bargained for. We''ll look at just a couple
    of entries:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管查尔斯在这个系统上并没有做太多事情，但这条规则给我们带来了比我们预期的更多的日志条目。我们只看其中的一些条目：
- en: '[PRE60]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'This record was generated when Charlie tried to access the `/secretcats/` directory.
    So, we can expect to see this one. But, what we didn''t expect to see was the
    exceedingly long list of records of files that Charlie indirectly accessed when
    he logged in to the system through Secure Shell. Here are just a couple:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 这条记录是在查尔斯试图访问`/secretcats/`目录时生成的。所以，我们可以期待看到这个。但是，我们没有预料到的是查尔斯通过安全外壳登录系统时间接访问的文件记录的数量之多。这里只是其中的一部分：
- en: '[PRE61]'
  id: totrans-227
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: In the first record, we see that Charlie accessed the `/usr/sbin/sshd` file.
    In the second, we see that he accessed the `/usr/bin/bash` file. It's not that
    Charlie chose to access those files. The operating system accessed those files
    for him in the course of just a normal login event. So as you can see, when you
    create audit rules, you have to be careful of what you wish because there's a
    definite danger that the wish might be granted. If you really need to monitor
    someone, you'll want to create a rule that won't give you quite this much information.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一条记录中，我们看到查尔斯访问了`/usr/sbin/sshd`文件。在第二条记录中，我们看到他访问了`/usr/bin/bash`文件。并不是查尔斯选择访问这些文件。操作系统在正常的登录事件中为他访问了这些文件。因此，正如您所看到的，当您创建审计规则时，您必须小心您的愿望，因为有明显的危险，愿望可能会实现。如果您真的需要监视某人，您将需要创建一个不会给您太多信息的规则。
- en: 'While we''re at it, we might as well see what the `aureport` output for this
    looks like:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 在此期间，我们也可以看看`aureport`的输出是什么样的：
- en: '[PRE62]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: In addition to what Charlie did, we also see what Vicky and Cleopatra did. That's
    because the rule that we set for the `/secretcats/` directory generated `openat` events
    when Vicky and Cleopatra accessed, viewed, or created files in that directory.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 除了查尔斯所做的事情，我们还可以看到维基和克利奥帕特拉所做的事情。这是因为我们为`/secretcats/`目录设置的规则在维基和克利奥帕特拉访问、查看或创建该目录中的文件时生成了`openat`事件。
- en: Generating authentication reports
  id: totrans-232
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 生成认证报告
- en: 'You can generate user authentication reports without having to define any audit
    rules. Just use `aureport` with the `-au` option switch. (Remember `au`, the first
    two letters of authentication.):'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以生成用户认证报告，而无需定义任何审计规则。只需使用`aureport`加上`-au`选项开关即可。（记住`au`，认证的前两个字母。）
- en: '[PRE63]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'For login events, this tells us whether the user logged in at the local terminal
    or remotely through Secure Shell. To see the details of any event, use `ausearch` with
    the `-a` option, followed by the event number that you see at the end of a line.
    (Strangely, the `-a` option stands for an event.) Let''s look at event number
    14122 for Charlie:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 对于登录事件，这告诉我们用户是在本地终端登录还是通过安全外壳远程登录。要查看任何事件的详细信息，请使用`ausearch`加上`-a`选项，然后跟上您在行末看到的事件编号。（奇怪的是，`-a`选项代表一个事件。）让我们看看查尔斯的事件编号14122：
- en: '[PRE64]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: 'The problem with this is that it really doesn''t make any sense. I''m the one
    who did the logins for Charlie, and I know for a fact that Charlie never had any
    failed logins. In fact, we can correlate this with the matching entry from the
    `/var/log/secure` file:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 问题在于这真的毫无意义。我是为查尔斯做的登录记录，我可以确定查尔斯从未有过任何登录失败。事实上，我们可以将其与`/var/log/secure`文件中的匹配条目进行关联：
- en: '[PRE65]'
  id: totrans-238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: The time stamps for these two entries are a few seconds later than the timestamp
    for the `ausearch` output, but that's okay. There's nothing in this log file to
    suggest that Charlie ever had a failed login, and these two entries clearly show
    that Charlie's login really was successful. The lesson here is that when you see
    something strange in either the `ausearch` or `aureport` output, be sure to correlate
    it with the matching entry in the proper authentication log file to get a better
    idea of what's going on. (By *authentication log file*, I mean `/var/log/secure` for
    Red Hat-type systems and `/var/log/auth.log` for Ubuntu systems. The names may
    vary for other Linux distros.)
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个条目的时间戳比`ausearch`输出的时间戳晚了几秒，但没关系。这个日志文件中没有任何迹象表明查尔斯曾经有过登录失败，这两个条目清楚地显示了查尔斯的登录确实成功了。这里的教训是，当您在`ausearch`或`aureport`输出中看到一些奇怪的东西时，一定要将其与适当的认证日志文件中的匹配条目进行关联，以更好地了解发生了什么。（通过*认证日志文件*，我指的是Red
    Hat类型系统的`/var/log/secure`和Ubuntu系统的`/var/log/auth.log`。其他Linux发行版的名称可能有所不同。）
- en: Using predefined rules sets
  id: totrans-240
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用预定义的规则集
- en: 'In the `/usr/share/doc/audit-version_number/` directory of your CentOS machine,
    you''ll see some premade rule sets for different scenarios. Once you install auditd
    on Ubuntu, you''ll have audit rules for it too, but the location is different
    for Ubuntu 16.04 and Ubuntu 17.10.  On Ubuntu 16.04, the rules are in the `/usr/share/doc/auditd/examples/` directory.
    On Ubuntu 17.10, they''re in the `/usr/share/doc/auditd/examples/rules/` directory.
    In any case, some of the rule sets are common among all three of these distros.
    Let''s look on the CentOS machine to see what we have there:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的CentOS机器的`/usr/share/doc/audit-version_number/`目录中，你会看到一些预先制定的不同场景的规则集。一旦你在Ubuntu上安装了auditd，你也会有适用于它的审计规则，但对于Ubuntu
    16.04和Ubuntu 17.10，位置是不同的。在Ubuntu 16.04上，规则位于`/usr/share/doc/auditd/examples/`目录中。在Ubuntu
    17.10上，它们位于`/usr/share/doc/auditd/examples/rules/`目录中。无论如何，这三个发行版中有一些规则集是共通的。让我们看看CentOS机器上有什么：
- en: '[PRE66]'
  id: totrans-242
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: 'The three files I want to focus on are the `nispom`, `pci-dss`, and `stig` files.
    Each of these three rule sets is designed to meet the auditing standards of a
    particular certifying agency. In order, these rules sets are:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 我想重点关注的三个文件是`nispom`、`pci-dss`和`stig`文件。这三个规则集分别设计用于满足特定认证机构的审计标准。依次来看，这些规则集是：
- en: '`nispom`: The National Industrial Security Program—you''ll see this rule set
    used at either the U.S. Department of Defense or its contractors'
  id: totrans-244
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nispom`：国家工业安全计划——你会看到这个规则集在美国国防部或其承包商处使用'
- en: '`pci-dss`: Payment Card Industry Data Security Standard—if you work in the
    banking or financial industries, or even if you''re just running an online business
    that accepts credit cards, you''ll likely become very familiar with this'
  id: totrans-245
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pci-dss`：支付卡行业数据安全标准——如果你在银行或金融行业工作，或者你只是经营一个接受信用卡的在线业务，你可能会对这个非常熟悉'
- en: '`stig`: Security Technical Implementation Guides—if you work for the U.S. Government
    or possibly other governments, you''ll be dealing with this one'
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`stig`：安全技术实施指南——如果你在美国政府工作，或者可能是其他政府，你将会处理这个'
- en: 'To use one of these rules sets, copy the appropriate files over to the `/etc/audit/rules.d/` directory:'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用这些规则集中的一个，将相应的文件复制到`/etc/audit/rules.d/`目录中：
- en: '[PRE67]'
  id: totrans-248
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: Then, restart the auditd daemon to read in the new rules.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，重新启动auditd守护程序以读取新规则。
- en: 'For Red Hat or CentOS:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Red Hat或CentOS：
- en: '[PRE68]'
  id: totrans-251
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: 'For Ubuntu:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Ubuntu：
- en: '[PRE69]'
  id: totrans-253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: Of course, there's always the chance that a particular rule in one of these
    sets might not work for you or that you might need to enable a rule that's currently
    disabled. If so, just open the rules file in your text editor, and comment out
    what doesn't work or uncomment what you need to enable.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，总会有可能某个规则集中的特定规则对你不起作用，或者你可能需要启用当前禁用的规则。如果是这样，只需在文本编辑器中打开规则文件，注释掉不起作用的部分，或取消注释你需要启用的部分。
- en: Even though auditd is very cool, bear in mind that it only alerts you about
    potential security breaches. It doesn't do anything to harden the system against
    them.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管auditd非常酷，但请记住它只会警告你可能存在的安全漏洞。它不会采取任何措施来加固系统。
- en: That pretty much wraps it up for our discussion of the auditd system. Give it
    a go and see what you think.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 这基本上就是我们对auditd系统的讨论。试一试，看看你的想法如何。
- en: Applying OpenSCAP policies with oscap
  id: totrans-257
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用oscap应用OpenSCAP策略
- en: 'SCAP, the **Security Content Automation Protocol** (**SCAP**), was created
    by the U.S. National Institute of Standards and Technology. It consists of hardening
    guides, hardening templates, and baseline configuration guides for setting up
    secure systems. OpenSCAP is a set of free open source software tools that can
    be used to implement SCAP. It consists of the following:'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: SCAP，即**安全内容自动化协议**（**SCAP**），是由美国国家标准与技术研究所创建的。它包括用于设置安全系统的加固指南、加固模板和基线配置指南。OpenSCAP是一套免费开源软件工具，可用于实施SCAP。它包括以下内容：
- en: Security profiles that you can apply to a system. There are different profiles
    for meeting the requirements of several different certifying agencies.
  id: totrans-259
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以应用于系统的安全配置文件。有不同的配置文件，满足几个不同认证机构的要求。
- en: Security guides to help with the initial setup of your system.
  id: totrans-260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全指南，帮助你进行系统的初始设置。
- en: The `oscap` command-line utility to apply security templates.
  id: totrans-261
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`oscap`命令行实用程序用于应用安全模板。'
- en: On Red Hat-type systems that have a desktop interface, you have SCAP Workbench,
    a GUI-type utility.
  id: totrans-262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在具有桌面界面的Red Hat类型系统上，你可以使用SCAP Workbench，这是一种图形界面实用程序。
- en: You can install OpenSCAP on either the Red Hat or the Ubuntu distros, but it's
    much better implemented on the Red Hat distros. For one thing, the Red Hat world
    has the very cool SCAP Workbench, but the Ubuntu world doesn't. When you install
    a Red Hat-type operating system, you can choose to apply a SCAP profile during
    installation. You can't do that with Ubuntu. Finally, the Red Hat distros come
    with a fairly complete set of ready-to-use profiles. Curiously, Ubuntu only comes
    with profiles for older versions of Fedora and Red Hat, which aren't usable on
    an Ubuntu system. If you want usable profiles for Ubuntu, you'll have to download
    them from the OpenSCAP website and manually install them yourself. (We'll cover
    that in the last section of the chapter.) Having said this, let's see how to install
    OpenSCAP and how to use the command-line utility that's common to both of our
    distros.  Since CentOS has the more complete implementation, I'll use it for the
    demos.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在Red Hat或Ubuntu发行版上安装OpenSCAP，但在Red Hat发行版上实现得更好。首先，Red Hat世界拥有非常酷的SCAP Workbench，而Ubuntu世界没有。当你安装Red
    Hat类型的操作系统时，可以选择在安装过程中应用SCAP配置文件。在Ubuntu上无法这样做。最后，Red Hat发行版配备了一套相当完整的可供使用的配置文件。耐人寻味的是，Ubuntu只配备了用于较旧版本的Fedora和Red
    Hat的配置文件，这些配置文件在Ubuntu系统上无法使用。如果你想要Ubuntu可用的配置文件，你需要从OpenSCAP网站下载并手动安装它们。（我们将在本章的最后一节中介绍这一点。）话虽如此，让我们看看如何安装OpenSCAP以及如何使用两种发行版都通用的命令行实用程序。由于CentOS具有更完整的实现，我将在演示中使用它。
- en: Installing OpenSCAP
  id: totrans-264
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装OpenSCAP
- en: 'On your CentOS machine, assuming that you didn''t install OpenSCAP during operating
    system installation, follow this:'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的CentOS机器上，假设你在操作系统安装过程中没有安装OpenSCAP，按照以下步骤进行：
- en: '[PRE70]'
  id: totrans-266
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: 'On the Ubuntu machine, do this:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 在Ubuntu机器上，执行以下操作：
- en: '[PRE71]'
  id: totrans-268
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: Viewing the profile files
  id: totrans-269
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 查看配置文件
- en: 'On the CentOS machine, you''ll see the profile files in the `/usr/share/xml/scap/ssg/content/` directory.
    On the Ubuntu machine, you''ll see what few profiles there are in the `/usr/share/openscap/` directory.
    The profile files are in the `.xml` format, and each one contains one or more
    profiles that you can apply to the system:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 在CentOS机器上，你会在`/usr/share/xml/scap/ssg/content/`目录中看到配置文件。在Ubuntu机器上，你会在`/usr/share/openscap/`目录中看到少量的配置文件。配置文件是`.xml`格式的，每个文件包含一个或多个可以应用到系统上的配置文件：
- en: '[PRE72]'
  id: totrans-271
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: 'The command-line utility for working with OpenSCAP is `oscap`. We can use this
    with the `info` switch to view information about any of the profile files. Let''s
    look at the `ssg-centos7-xccdf.xml` file:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 用于处理OpenSCAP的命令行实用程序是`oscap`。我们可以使用`info`开关来查看任何配置文件的信息。让我们看看`ssg-centos7-xccdf.xml`文件：
- en: '[PRE73]'
  id: totrans-273
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: We can see that this file contains 11 different profiles that we can apply to
    the system. Among them, you see profiles for `stig` and `pci-dss`, just as we
    had for the auditing rules. And, if you're running Docker containers, the `docker-host` profile
    would be extremely handy.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到这个文件包含了11个不同的配置文件，我们可以应用到系统上。其中，你可以看到`stig`和`pci-dss`的配置文件，就像我们为审计规则所做的那样。而且，如果你正在运行Docker容器，`docker-host`配置文件将非常方便。
- en: Scanning the system
  id: totrans-275
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 扫描系统
- en: Now, let's say that we need to ensure that our systems are compliant with Payment
    Card Industry standards. We'll first scan the CentOS machine to see what needs
    remediation. (Note that the following command is very long and wraps around on
    the printed page.)
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，假设我们需要确保我们的系统符合支付卡行业标准。我们首先要扫描CentOS机器，看看需要什么样的补救措施。（请注意，以下命令非常长，在打印页面上换行了。）
- en: '[PRE74]'
  id: totrans-277
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: 'As we always like to do,  let''s break this down:'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们一直喜欢做的那样，让我们来分解一下：
- en: '`xccdf eval`: The Extensible Configuration Checklist Description is one of
    the languages with which we can write security profile rules. We''re going to
    use a profile that was written in this language to perform an evaluation of the
    system.'
  id: totrans-279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`xccdf eval`：可扩展配置清单描述是我们可以编写安全配置规则的语言之一。我们将使用这种语言编写的配置文件来对系统进行评估。'
- en: '`--profile pci-dss`: Here, I specified that I want to use the Payment Card
    Industry Data Security Standard profile to evaluate the system.'
  id: totrans-280
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--profile pci-dss`：在这里，我指定我要使用支付卡行业数据安全标准配置文件来评估系统。'
- en: '`--results scan-xccdf-results.xml`: I''m going to save the scan results to
    this `.xml` format file. When the scan has finished, I''ll create a report from
    this file.'
  id: totrans-281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--results scan-xccdf-results.xml`：我将把扫描结果保存到这个`.xml`格式的文件中。扫描完成后，我将从这个文件中创建报告。'
- en: '`/usr/share/xml/scap/ssg/content/ssg-centos7-xccdf.xml`: This is the file that
    contains the `pci-dss` profile.'
  id: totrans-282
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/usr/share/xml/scap/ssg/content/ssg-centos7-xccdf.xml`：这个文件包含了`pci-dss`配置文件。'
- en: 'As the scan progresses, the output will get sent to the screen as well as to
    the designated output file.  It''s a long list of items, so I''ll only show you
    a few of them:'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 随着扫描的进行，输出将发送到屏幕以及指定的输出文件。这是一个很长的列表，所以我只会给你展示其中的一些：
- en: '[PRE75]'
  id: totrans-284
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: So, we have GPG encryption installed, which is good. But, it's a bad thing that
    we don't have the AIDE intrusion detection system installed.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，我们安装了GPG加密，这很好。但是，我们没有安装AIDE入侵检测系统，这是一个坏事。
- en: 'Now that I''ve run the scan and created an output file with the results, I
    can build my report:'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我已经运行了扫描并创建了一个包含结果的输出文件，我可以制作我的报告了：
- en: '[PRE76]'
  id: totrans-287
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: This extracts the information from the `.xml` format file, which isn't meant
    for humans to read, and transfers it to a `.html` file that you can open in your
    web browser. (For the record, the report says that there are total 20 problems
    that need to be fixed.)
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 这会从`.xml`格式文件中提取信息，这些文件不是为人类阅读而设计的，并将其转移到一个`.html`文件中，你可以在Web浏览器中打开。（记录上，报告显示有20个问题需要解决。）
- en: Remediating the system
  id: totrans-289
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 系统的补救措施
- en: 'So, we have 20 problems that we need to fix before our system can be considered
    as compliant with Payment Card Industry standards. Let''s see how many of them
    that `oscap` can fix for us:'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，我们有20个问题需要解决，才能使我们的系统符合支付卡行业标准。让我们看看`oscap`能为我们解决多少个问题：
- en: '[PRE77]'
  id: totrans-291
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: This is the same command that I used to perform the initial scan, except that
    I added the `--remediate` option, and I'm saving the results to a different file.
    You'll want to have a bit of patience when you run this command, because fixing
    some problems involves downloading and installing software packages. In fact,
    even as I type this, `oscap` is busy downloading and installing the missing AIDE
    intrusion detection system package.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我用来执行初始扫描的相同命令，只是我添加了`--remediate`选项，并将结果保存到不同的文件中。当你运行这个命令时，你需要有点耐心，因为修复一些问题涉及下载和安装软件包。事实上，就在我打字的时候，`oscap`正在忙着下载和安装缺失的AIDE入侵检测系统包。
- en: 'Okay, the remediation is still running, but I can still show you some of the
    things that got fixed:'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，补救措施仍在进行中，但我仍然可以向你展示一些已经修复的问题：
- en: '[PRE78]'
  id: totrans-294
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: There are a couple of errors because of things that `oscap` couldn't fix, but
    that's normal.  At least you know about them so that you can try to fix them yourself.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 由于`oscap`无法修复的一些问题，会出现一些错误，但这是正常的。至少你知道了这些问题，这样你就可以尝试自己修复它们。
- en: 'And, check this out. Do you remember how in [Chapter 2](bbe819e7-1d8f-414c-8de7-eab84959a9e6.xhtml), *Securing
    User Accounts*, I made you jump through hoops to ensure that users had strong
    passwords that expire on a regular basis? Well, by applying this OpenSCAP profile,
    you get all that fixed for you automatically:'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 还有，看看这个。你还记得在[第2章](bbe819e7-1d8f-414c-8de7-eab84959a9e6.xhtml)中，*保护用户账户*，我让你跳过一些步骤，以确保用户拥有定期过期的强密码吗？通过应用这个OpenSCAP配置文件，所有这些问题都会自动解决：
- en: '[PRE79]'
  id: totrans-297
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: So yeah, OpenSCAP is pretty cool, and even the command-line tools aren't hard
    to use.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，OpenSCAP非常酷，即使命令行工具也不难使用。
- en: Using SCAP Workbench
  id: totrans-299
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用SCAP Workbench
- en: For Red Hat and CentOS machines with a desktop environment installed, we have
    SCAP Workbench. However, if the last time you ever worked with SCAP Workbench
    was on Red Hat/CentOS 7.0 or Red Hat/CentOS 7.1, you were likely quite disappointed.
    Indeed, the early versions of the Workbench were so bad that they weren't even
    usable. Thankfully, things greatly improved with the introduction of Red Hat 7.2
    and CentOS 7.2\. Now, the Workbench is quite the nice little tool.
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 对于安装了桌面环境的Red Hat和CentOS机器，我们有SCAP Workbench。然而，如果你上次使用SCAP Workbench是在Red Hat/CentOS
    7.0或Red Hat/CentOS 7.1上，你可能会感到非常失望。事实上，早期版本的Workbench是如此糟糕，以至于根本无法使用。幸运的是，随着Red
    Hat 7.2和CentOS 7.2的推出，情况得到了很大改善。现在，Workbench是一个非常好用的小工具。
- en: 'To get it on your CentOS machine, just use the following code:'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 要在你的CentOS机器上安装它，只需使用以下代码：
- en: '[PRE80]'
  id: totrans-302
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: Yeah, the package name is just `scap-workbench` instead of `openscap-workbench`.
    I don't know why, but I do know that you'll never find it if you're searching
    for `openscap` packages.
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，包名只是“scap-workbench”，而不是“openscap-workbench”。我不知道为什么，但我知道如果你搜索“openscap”包，你永远也找不到它。
- en: Once you get it installed, you'll see its menu item under the System Tools menu.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，你会在“系统工具”菜单下看到它的菜单项。
- en: '![](img/26aaca25-75db-4280-974f-2a44a9db0dca.png)'
  id: totrans-305
  prefs: []
  type: TYPE_IMG
  zh: '![](img/26aaca25-75db-4280-974f-2a44a9db0dca.png)'
- en: When you first open the program, you would think that the system would ask you
    for a root or sudo password. But, it doesn't. We'll see in a moment if that affects
    us.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 当你第一次打开程序时，你可能会认为系统会要求你输入root或sudo密码。但是，它没有。我们马上就会看到这是否会影响我们。
- en: 'The thing you''ll see on the opening screen is a drop-down list for you to
    select the type of content that you want to load. I''ll select CentOS7 and then
    click on the Load content button:'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 在打开屏幕上你会看到一个下拉列表，让你选择要加载的内容类型。我会选择CentOS7，然后点击“加载内容”按钮：
- en: '![](img/3459006f-dc60-4e4b-b27c-ba2e94233104.png)'
  id: totrans-308
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3459006f-dc60-4e4b-b27c-ba2e94233104.png)'
- en: 'Next, you''ll see in the top panel where you can select the desired profile.
    You can also choose to customize the profile, and whether you want to run the
    scan on the local machine or on a remote machine. In the bottom pane, you''ll
    see a list of rules for that profile. You can expand each rule item to get a description
    of that rule:'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，你会在顶部面板看到可以选择所需配置文件的地方。你还可以选择自定义配置文件，以及是否要在本地机器上或远程机器上运行扫描。在底部面板上，你会看到该配置文件的规则列表。你可以展开每个规则项以获取该规则的描述：
- en: '![](img/abfefe14-1610-4ffe-b02a-9167e174e0a5.png)'
  id: totrans-310
  prefs: []
  type: TYPE_IMG
  zh: '![](img/abfefe14-1610-4ffe-b02a-9167e174e0a5.png)'
- en: 'Now, let''s click that Scan button to see what happens:'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们点击“扫描”按钮看看会发生什么：
- en: '![](img/24d3c1d1-303e-481e-a3f0-ab80761c44ff.png)'
  id: totrans-312
  prefs: []
  type: TYPE_IMG
  zh: '![](img/24d3c1d1-303e-481e-a3f0-ab80761c44ff.png)'
- en: Cool.  As I had hoped, it prompts you for your sudo password. Beyond that, I'll
    leave it to you to play with it. It's just another one of those GUI-thingies,
    so the rest of it should be fairly easy to figure out.
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 很好。正如我所希望的那样，它会提示你输入sudo密码。除此之外，我会让你自己去尝试。这只是另一个GUI工具，所以剩下的应该很容易弄清楚。
- en: More about OpenSCAP profiles
  id: totrans-314
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关于OpenSCAP配置文件的更多信息
- en: So now you're saying, "*Okay, this is all good, but how do I find out what's
    in these profiles and which one I need?*" Well, there are several ways.
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 所以现在你可能会说，“好吧，这都很好，但我怎么找出这些配置文件中有什么，我需要哪一个呢？”好吧，有几种方法。
- en: The first way, which I've just shown you, is to install the SCAP Workbench on
    a machine with a desktop interface and read through the descriptions of all the
    rules for each profile.
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 第一种方法，我刚刚向你展示的，是在安装了桌面界面的机器上安装SCAP Workbench，并阅读每个配置文件的所有规则的描述。
- en: The second way, which might be a bit easier, is to go to the OpenSCAP website
    and look through the documentation that they have there.
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 第二种方法可能更容易一些，就是去OpenSCAP网站查看他们那里的文档。
- en: You'll find information about the available OpenSCAP profiles at [https://www.open-scap.org/security-policies/choosing-policy/.](https://www.open-scap.org/security-policies/choosing-policy/)
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在[https://www.open-scap.org/security-policies/choosing-policy/](https://www.open-scap.org/security-policies/choosing-policy/)找到有关可用OpenSCAP配置文件的信息。
- en: 'As far as knowing which profile to choose, there are a few things to consider:'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 就选择哪个配置文件而言，有几件事情需要考虑：
- en: If you work in the financial sector or in a business that does online financial
    transactions, then go with the `pci-dss` profile.
  id: totrans-320
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你在金融领域工作，或者在从事在线金融交易的企业工作，那么选择“pci-dss”配置文件。
- en: If you work for a government agency, especially if it's the U.S. government,
    then go with either the `stig` profile or the `nispom` profile, as dictated by
    the particular agency.
  id: totrans-321
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你在政府机构工作，尤其是美国政府，那么根据特定机构的要求，选择“stig”配置文件或“nispom”配置文件。
- en: If neither of these two considerations applies to your situation, then you'll
    just want to do some research and planning, in order to figure out what really
    needs to be locked down. Look through the rules in each profile and read through
    the documentation at the OpenSCAP website to help decide what you need.
  id: totrans-322
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果这两种情况都不适用于你的情况，那么你只需要进行一些研究和规划，以找出真正需要被锁定的内容。浏览每个配置文件中的规则，并阅读OpenSCAP网站上的文档，以帮助决定你需要什么。
- en: 'The next thing on your mind is, "*What about Ubuntu?  We''ve already seen that
    the profiles that come with Ubuntu are useless because they''re for RHEL and Fedora.*"
    That''s true, but you''ll find profiles for various different distros, including
    for the Long Term Support versions of Ubuntu, at the OpenSCAP website:'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 你接下来会想，“那Ubuntu呢？我们已经知道Ubuntu附带的配置文件是无用的，因为它们是为RHEL和Fedora设计的。”这是真的，但你会在OpenSCAP网站上找到各种不同发行版的配置文件，包括Ubuntu的长期支持版本：
- en: '![](img/eb3ec2e6-131d-444a-aea6-1924176405a7.png)'
  id: totrans-324
  prefs: []
  type: TYPE_IMG
  zh: '![](img/eb3ec2e6-131d-444a-aea6-1924176405a7.png)'
- en: Applying an OpenSCAP profile during system installation
  id: totrans-325
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在系统安装过程中应用OpenSCAP配置文件
- en: One of the things that I love about the Red Hat folk is that they totally get
    this whole security thing. Yeah, we can lock down other distros and make them
    more secure, as we've already seen. But, with Red Hat distros, it's a bit easier.
    For a lot of things, the maintainers of the Red Hat-type distros have set secure
    default options that aren't securely set on other distros. (For example, Red Hat
    distros are the only ones that come with users' home directories locked down by
    default.) For other things, the Red Hat-type distros come with tools and installation
    options that help make life easier for a busy, security-conscious administrator.
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 我喜欢Red Hat的人的一点是，他们完全懂得这个安全问题。是的，我们可以锁定其他发行版并使它们更安全，就像我们已经看到的那样。但是，对于Red Hat发行版来说，这要容易一些。对于很多事情，Red
    Hat类型的发行版的维护者已经设置了安全的默认选项，而其他发行版上并没有被安全设置。（例如，Red Hat发行版是唯一默认锁定用户家目录的发行版。）对于其他事情，Red
    Hat类型的发行版提供了工具和安装选项，帮助那些忙碌、注重安全的管理员更轻松地工作。
- en: 'When you install a Red Hat 7-type distro, you''ll be given the chance to apply
    an OpenSCAP profile during the operating system installation. Here on this CentOS
    7 installer screen, you see the option to choose a security profile at the lower
    right-hand corner of the screen:'
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 当你安装Red Hat 7类型的发行版时，在操作系统安装过程中，你将有机会应用OpenSCAP配置文件。在这个CentOS 7安装程序屏幕上，你可以在右下角看到选择安全配置文件的选项：
- en: '![](img/4ef9ba2c-943b-4540-bc12-8be66cddc9b3.png)'
  id: totrans-328
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4ef9ba2c-943b-4540-bc12-8be66cddc9b3.png)'
- en: 'All you have to do is to click on that and then choose your profile:'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 你所需要做的就是点击那个，然后选择你的配置文件：
- en: '![](img/e4ccb457-c84a-4702-acd2-93e90b799d51.png)'
  id: totrans-330
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e4ccb457-c84a-4702-acd2-93e90b799d51.png)'
- en: Okay, that pretty much wraps it up for our discussion of OpenSCAP. The only
    thing left to add is that, as great as OpenSCAP is, it won't do everything. For
    example, some security standards require that you have certain directories, such
    as `/home/` or `/var/`, on their own separate partitions. An OpenSCAP scan will
    alert you if that's not the case, but it can't change your existing partitioning
    scheme. So for things like that, you'll need to get a checklist from the governing
    body that dictates your security requirements and do a bit of advanced work before
    you even touch OpenSCAP.
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，我们关于OpenSCAP的讨论基本上就到这里了。唯一剩下的要补充的是，尽管OpenSCAP很棒，但它并不能做到一切。例如，一些安全标准要求你必须有特定的目录，比如`/home/`或`/var/`，在它们自己独立的分区上。OpenSCAP扫描会提醒你如果情况不是这样，但它不能改变你现有的分区方案。所以对于这样的事情，你需要从规定你安全要求的管理机构那里得到一个清单，并在甚至触及OpenSCAP之前做一些高级工作。
- en: Summary
  id: totrans-332
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: We covered a lot of ground in this chapter, and we saw some really cool stuff.
    We began by looking at a couple of antivirus scanners so that we can prevent infecting
    any Windows machines that access our Linux servers. In the Rootkit Hunter section,
    we saw how to scan for those nasty rootkits. It's important to know how to audit
    systems, especially in high-security environments, and we saw how to do that.
    Finally, we wrapped things up with a discussion of hardening our systems with
    OpenSCAP.
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们涵盖了很多内容，看到了一些非常酷的东西。我们首先看了一些防病毒扫描器，这样我们就可以防止任何访问我们的Linux服务器的Windows机器感染。在Rootkit
    Hunter部分，我们看到了如何扫描这些讨厌的rootkit。了解如何审计系统非常重要，特别是在高安全环境中，我们看到了如何做到这一点。最后，我们讨论了如何使用OpenSCAP加固我们的系统。
- en: In the next chapter, we'll look at vulnerability scanning and intrusion detection.
    I'll see you there.
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将看一下漏洞扫描和入侵检测。到时候见。
