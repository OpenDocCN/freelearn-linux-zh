["```\necho '|/opt/ecfs/bin/ecfs_handler -t -e %e -p %p -o \\ /opt/ecfs/cores/%e.%p' > /proc/sys/kernel/core_pattern\n```", "```\n$ kill -ABRT `pidof sshd`\n$ ls -lh /opt/ecfs/cores\n-rwxrwx--- 1 root root 8244638 Jul 24 13:36 sshd.1211\n$\n```", "```\n$ ecfs_snapshot -p `pidof host` -o host_snapshot\n```", "```\nUsage: readecfs [-RAPSslphega] <ecfscore>\n-a  print all (equiv to -Sslphega)\n-s  print symbol table info\n-l  print shared library names\n-p  print ELF program headers\n-S  print ELF section headers\n-h  print ELF header\n-g  print PLTGOT info\n-A  print Auxiliary vector\n-P  print personality info\n-e  print ecfs specific (auiliary vector, process state, sockets, pipes, fd's, etc.)\n\n-[View raw data from a section]\n-R <ecfscore> <section>\n\n-[Copy an ELF section into a file (Similar to objcopy)]\n-O <ecfscore> .section <outfile>\n\n-[Extract and decompress /proc/$pid from .procfs.tgz section into directory]\n-X <ecfscore> <output_dir>\n\nExamples:\nreadecfs -e <ecfscore>\nreadecfs -Ag <ecfscore>\nreadecfs -R <ecfscore> .stack\nreadecfs -R <ecfscore> .bss\nreadecfs -eR <ecfscore> .heap\nreadecfs -O <ecfscore> .vdso vdso_elf.so\nreadecfs -X <ecfscore> procfs_dir\n```", "```\n$ ./host\nI am the host\nI am the host\nI am the host\n```", "```\n$ ./launcher `pidof host` ./server\n[+] Thread injection succeeded, tid: 16187\n[+] Saruman successfully injected program: ./server\n[+] PT_DETACHED -> 16186\n$\n```", "```\n readelf -s host.16186\n\nSymbol table '.dynsym' contains 6 entries:\n   Num:    Value          Size Type    Bind   Vis      Ndx Name\n     0: 00007fba3811e000     0 NOTYPE  LOCAL  DEFAULT  UND\n     1: 00007fba3818de30     0 FUNC    GLOBAL DEFAULT  UND puts\n     2: 00007fba38209860     0 FUNC    GLOBAL DEFAULT  UND write\n     3: 00007fba3813fdd0     0 FUNC    GLOBAL DEFAULT  UND __libc_start_main\n     4: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND __gmon_start__\n     5: 00007fba3818c4e0     0 FUNC    GLOBAL DEFAULT  UND fopen\n\nSymbol table '.symtab' contains 6 entries:\n   Num:    Value          Size Type    Bind   Vis      Ndx Name\n     0: 0000000000400470    96 FUNC    GLOBAL DEFAULT   10 sub_400470\n     1: 00000000004004d0    42 FUNC    GLOBAL DEFAULT   10 sub_4004d0\n     2: 00000000004005bd    50 FUNC    GLOBAL DEFAULT   10 sub_4005bd\n     3: 00000000004005ef    69 FUNC    GLOBAL DEFAULT   10 sub_4005ef\n     4: 0000000000400640   101 FUNC    GLOBAL DEFAULT   10 sub_400640\n     5: 00000000004006b0     2 FUNC    GLOBAL DEFAULT   10 sub_4006b0\n```", "```\n$ readelf -S host.16186\nThere are 46 section headers, starting at offset 0x255464:\n\nSection Headers:\n  [Nr] Name              Type             Address           Offset\n       Size              EntSize          Flags  Link  Info  Align\n  [ 0]                   NULL             0000000000000000  00000000\n       0000000000000000  0000000000000000           0     0     0\n  [ 1] .interp           PROGBITS         0000000000400238  00002238\n       000000000000001c  0000000000000000   A       0     0     1\n  [ 2] .note             NOTE             0000000000000000  000005f0\n       000000000000133c  0000000000000000   A       0     0     4\n  [ 3] .hash             GNU_HASH         0000000000400298  00002298\n       000000000000001c  0000000000000000   A       0     0     4\n  [ 4] .dynsym           DYNSYM           00000000004002b8  000022b8\n       0000000000000090  0000000000000018   A       5     0     8\n  [ 5] .dynstr           STRTAB           0000000000400348  00002348\n       0000000000000049  0000000000000018   A       0     0     1\n  [ 6] .rela.dyn         RELA             00000000004003c0  000023c0\n       0000000000000018  0000000000000018   A       4     0     8\n  [ 7] .rela.plt         RELA             00000000004003d8  000023d8\n       0000000000000078  0000000000000018   A       4     0     8\n  [ 8] .init             PROGBITS         0000000000400450  00002450\n       000000000000001a  0000000000000000  AX       0     0     8\n  [ 9] .plt              PROGBITS         0000000000400470  00002470\n       0000000000000060  0000000000000010  AX       0     0     16\n  [10] ._TEXT            PROGBITS         0000000000400000  00002000\n       0000000000001000  0000000000000000  AX       0     0     16\n  [11] .text             PROGBITS         00000000004004d0  000024d0\n       00000000000001e2  0000000000000000           0     0     16\n  [12] .fini             PROGBITS         00000000004006b4  000026b4\n       0000000000000009  0000000000000000  AX       0     0     16\n  [13] .eh_frame_hdr     PROGBITS         00000000004006e8  000026e8\n       000000000000003c  0000000000000000  AX       0     0     4\n  [14] .eh_frame         PROGBITS         0000000000400724  00002728\n       0000000000000114  0000000000000000  AX       0     0     8\n  [15] .ctors            PROGBITS         0000000000600e10  00003e10\n       0000000000000008  0000000000000008   A       0     0     8\n  [16] .dtors            PROGBITS         0000000000600e18  00003e18\n       0000000000000008  0000000000000008   A       0     0     8\n  [17] .dynamic          DYNAMIC          0000000000600e28  00003e28\n       00000000000001d0  0000000000000010  WA       0     0     8\n  [18] .got.plt          PROGBITS         0000000000601000  00004000\n       0000000000000048  0000000000000008  WA       0     0     8\n  [19] ._DATA            PROGBITS         0000000000600000  00003000\n       0000000000001000  0000000000000000  WA       0     0     8\n  [20] .data             PROGBITS         0000000000601040  00004040\n       0000000000000010  0000000000000000  WA       0     0     8\n  [21] .bss              PROGBITS         0000000000601050  00004050\n       0000000000000008  0000000000000000  WA       0     0     8\n  [22] .heap             PROGBITS         0000000000e9c000  00006000\n       0000000000021000  0000000000000000  WA       0     0     8\n  [23] .elf.dyn.0        INJECTED         00007fba37f1b000  00038000\n       0000000000001000  0000000000000000  AX       0     0     8\n  [24] libc-2.19.so.text SHLIB            00007fba3811e000  0003b000\n       00000000001bb000  0000000000000000   A       0     0     8\n  [25] libc-2.19.so.unde SHLIB            00007fba382d9000  001f6000\n       00000000001ff000  0000000000000000   A       0     0     8\n  [26] libc-2.19.so.relr SHLIB            00007fba384d8000  001f6000\n       0000000000004000  0000000000000000   A       0     0     8\n  [27] libc-2.19.so.data SHLIB            00007fba384dc000  001fa000\n       0000000000002000  0000000000000000   A       0     0     8\n  [28] ld-2.19.so.text   SHLIB            00007fba384e3000  00201000\n       0000000000023000  0000000000000000   A       0     0     8\n  [29] ld-2.19.so.relro  SHLIB            00007fba38705000  0022a000\n       0000000000001000  0000000000000000   A       0     0     8\n  [30] ld-2.19.so.data   SHLIB            00007fba38706000  0022b000\n       0000000000001000  0000000000000000   A       0     0     8\n  [31] .procfs.tgz       LOUSER+0         0000000000000000  00254388\n       00000000000010dc  0000000000000001           0     0     8\n  [32] .prstatus         PROGBITS         0000000000000000  00253000\n       00000000000002a0  0000000000000150           0     0     8\n  [33] .fdinfo           PROGBITS         0000000000000000  002532a0\n       0000000000000ac8  0000000000000228           0     0     4\n  [34] .siginfo          PROGBITS         0000000000000000  00253d68\n       0000000000000080  0000000000000080           0     0     4\n  [35] .auxvector        PROGBITS         0000000000000000  00253de8\n       0000000000000130  0000000000000008           0     0     8\n  [36] .exepath          PROGBITS         0000000000000000  00253f18\n       000000000000001c  0000000000000008           0     0     1\n  [37] .personality      PROGBITS         0000000000000000  00253f34\n       0000000000000004  0000000000000004           0     0     1\n  [38] .arglist          PROGBITS         0000000000000000  00253f38\n       0000000000000050  0000000000000001           0     0     1\n  [39] .fpregset         PROGBITS         0000000000000000  00253f88\n       0000000000000400  0000000000000200           0     0     8\n  [40] .stack            PROGBITS         00007fff4447c000  0022d000\n       0000000000021000  0000000000000000  WA       0     0     8\n  [41] .vdso             PROGBITS         00007fff444a9000  0024f000\n       0000000000002000  0000000000000000  WA       0     0     8\n  [42] .vsyscall         PROGBITS         ffffffffff600000  00251000\n       0000000000001000  0000000000000000  WA       0     0     8\n  [43] .symtab           SYMTAB           0000000000000000  0025619d\n       0000000000000090  0000000000000018          44     0     4\n  [44] .strtab           STRTAB           0000000000000000  0025622d\n       0000000000000042  0000000000000000           0     0     1\n  [45] .shstrtab         STRTAB           0000000000000000  00255fe4\n       00000000000001b9  0000000000000000           0     0     1\n```", "```\n  [23] .elf.dyn.0        INJECTED         00007fba37f1b000  00038000\n       0000000000001000  0000000000000000  AX       0     0     8 \n```", "```\n.elf.<type>.<count>\n```", "```\n$ readecfs -O host.16186 .elf.dyn.0 parasite_code.exe\n\n- readecfs output for file host.16186\n- Executable path (.exepath): /home/ryan/git/saruman/host\n- Command line: ./host                                                                          \n\n[+] Copying section data from '.elf.dyn.0' into output file 'parasite_code.exe'\n```", "```\nroot@elfmaster:~/ecfs/cores# readelf -l parasite_code.exe\nreadelf: Error: Unable to read in 0x40 bytes of section headers\nreadelf: Error: Unable to read in 0x780 bytes of section headers\n\nElf file type is DYN (Shared object file)\nEntry point 0xdb0\nThere are 9 program headers, starting at offset 64\n\nProgram Headers:\n Type        Offset             VirtAddr           PhysAddr\n              FileSiz            MemSiz              Flags  Align\n PHDR         0x0000000000000040 0x0000000000000040 0x0000000000000040\n              0x00000000000001f8 0x00000000000001f8  R E    8\n INTERP       0x0000000000000238 0x0000000000000238 0x0000000000000238\n              0x000000000000001c 0x000000000000001c  R      1\n      [Requesting program interpreter: /lib64/ld-linux-x86-64.so.2]\n LOAD         0x0000000000000000 0x0000000000000000 0x0000000000000000\n              0x0000000000001934 0x0000000000001934  R E    200000\n LOAD         0x0000000000001df0 0x0000000000201df0 0x0000000000201df0\n              0x0000000000000328 0x0000000000000330  RW     200000\n DYNAMIC      0x0000000000001e08 0x0000000000201e08 0x0000000000201e08\n              0x00000000000001d0 0x00000000000001d0  RW     8\n NOTE         0x0000000000000254 0x0000000000000254 0x0000000000000254\n              0x0000000000000044 0x0000000000000044  R      4\n GNU_EH_FRAME 0x00000000000017e0 0x00000000000017e0 0x00000000000017e0\n              0x000000000000003c 0x000000000000003c  R      4\n  GNU_STACK   0x0000000000000000 0x0000000000000000 0x0000000000000000\n              0x0000000000000000 0x0000000000000000  RW     10\n  GNU_RELRO   0x0000000000001df0 0x0000000000201df0 0x0000000000201df0\n              0x0000000000000210 0x0000000000000210  R      1\nreadelf: Error: Unable to read in 0x1d0 bytes of dynamic section\n```", "```\n$ readelf -s host2.7254\n\nSymbol table '.dynsym' contains 7 entries:\n   Num:    Value          Size Type    Bind   Vis      Ndx Name\n     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND\n     1: 00007f0a0d0ed070     0 FUNC    GLOBAL DEFAULT  UND unlink\n     2: 00007f0a0d06fe30     0 FUNC    GLOBAL DEFAULT  UND puts\n     3: 00007f0a0d0bcef0     0 FUNC    GLOBAL DEFAULT  UND opendir\n     4: 00007f0a0d021dd0     0 FUNC    GLOBAL DEFAULT  UND __libc_start_main\n     5: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND __gmon_start__\n     6: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND fopen\n\n Symbol table '.symtab' contains 5 entries:\n   Num:    Value          Size Type    Bind   Vis      Ndx Name\n     0: 00000000004004b0   112 FUNC    GLOBAL DEFAULT   10 sub_4004b0\n     1: 0000000000400520    42 FUNC    GLOBAL DEFAULT   10 sub_400520\n     2: 000000000040060d    68 FUNC    GLOBAL DEFAULT   10 sub_40060d\n     3: 0000000000400660   101 FUNC    GLOBAL DEFAULT   10 sub_400660\n     4: 00000000004006d0     2 FUNC    GLOBAL DEFAULT   10 sub_4006d0\n```", "```\n$ readelf -S host2.7254\n\nThere are 65 section headers, starting at offset 0x27e1ee:\n\nSection Headers:\n  [Nr] Name              Type             Address           Offset\n       Size              EntSize          Flags  Link  Info  Align\n  [ 0]                   NULL             0000000000000000  00000000\n       0000000000000000  0000000000000000           0     0     0\n  [ 1] .interp           PROGBITS         0000000000400238  00002238\n       000000000000001c  0000000000000000   A       0     0     1\n  [ 2] .note             NOTE             0000000000000000  00000900\n       000000000000105c  0000000000000000   A       0     0     4\n  [ 3] .hash             GNU_HASH         0000000000400298  00002298\n       000000000000001c  0000000000000000   A       0     0     4\n  [ 4] .dynsym           DYNSYM           00000000004002b8  000022b8\n       00000000000000a8  0000000000000018   A       5     0     8\n  [ 5] .dynstr           STRTAB           0000000000400360  00002360\n       0000000000000052  0000000000000018   A       0     0     1\n  [ 6] .rela.dyn         RELA             00000000004003e0  000023e0\n       0000000000000018  0000000000000018   A       4     0     8\n  [ 7] .rela.plt         RELA             00000000004003f8  000023f8\n       0000000000000090  0000000000000018   A       4     0     8\n  [ 8] .init             PROGBITS         0000000000400488  00002488\n       000000000000001a  0000000000000000  AX       0     0     8\n  [ 9] .plt              PROGBITS         00000000004004b0  000024b0\n       0000000000000070  0000000000000010  AX       0     0     16\n  [10] ._TEXT            PROGBITS         0000000000400000  00002000\n       0000000000001000  0000000000000000  AX       0     0     16\n  [11] .text             PROGBITS         0000000000400520  00002520\n       00000000000001b2  0000000000000000           0     0     16\n  [12] .fini             PROGBITS         00000000004006d4  000026d4\n       0000000000000009  0000000000000000  AX       0     0     16\n  [13] .eh_frame_hdr     PROGBITS         0000000000400708  00002708\n       0000000000000034  0000000000000000  AX       0     0     4\n  [14] .eh_frame         PROGBITS         000000000040073c  00002740\n       00000000000000f4  0000000000000000  AX       0     0     8\n  [15] .ctors            PROGBITS         0000000000600e10  00003e10\n       0000000000000008  0000000000000008   A       0     0     8\n  [16] .dtors            PROGBITS         0000000000600e18  00003e18\n       0000000000000008  0000000000000008   A       0     0     8\n  [17] .dynamic          DYNAMIC          0000000000600e28  00003e28\n       00000000000001d0  0000000000000010  WA       0     0     8\n  [18] .got.plt          PROGBITS         0000000000601000  00004000\n       0000000000000050  0000000000000008  WA       0     0     8\n  [19] ._DATA            PROGBITS         0000000000600000  00003000\n       0000000000001000  0000000000000000  WA       0     0     8\n  [20] .data             PROGBITS         0000000000601048  00004048\n       0000000000000010  0000000000000000  WA       0     0     8\n  [21] .bss              PROGBITS         0000000000601058  00004058\n       0000000000000008  0000000000000000  WA       0     0     8\n  [22] .heap             PROGBITS         0000000000602000  00005000\n       0000000000021000  0000000000000000  WA       0     0     8\n  [23] libaudit.so.1.0.0 SHLIB            0000003001000000  00026000\n       0000000000019000  0000000000000000   A       0     0     8\n  [24] libaudit.so.1.0.0 SHLIB            0000003001019000  0003f000\n       00000000001ff000  0000000000000000   A       0     0     8\n  [25] libaudit.so.1.0.0 SHLIB            0000003001218000  0003f000\n       0000000000001000  0000000000000000   A       0     0     8\n  [26] libaudit.so.1.0.0 SHLIB            0000003001219000  00040000\n       0000000000001000  0000000000000000   A       0     0     8\n  [27] libpam.so.0.83.1\\. SHLIB            0000003003400000  00041000\n       000000000000d000  0000000000000000   A       0     0     8\n  [28] libpam.so.0.83.1\\. SHLIB            000000300340d000  0004e000\n       00000000001ff000  0000000000000000   A       0     0     8\n  [29] libpam.so.0.83.1\\. SHLIB            000000300360c000  0004e000\n       0000000000001000  0000000000000000   A       0     0     8\n  [30] libpam.so.0.83.1\\. SHLIB            000000300360d000  0004f000\n       0000000000001000  0000000000000000   A       0     0     8\n  [31] libutil-2.19.so.t SHLIB            00007f0a0cbf9000  00050000\n       0000000000002000  0000000000000000   A       0     0     8\n  [32] libutil-2.19.so.u SHLIB            00007f0a0cbfb000  00052000\n       00000000001ff000  0000000000000000   A       0     0     8\n  [33] libutil-2.19.so.r SHLIB            00007f0a0cdfa000  00052000\n       0000000000001000  0000000000000000   A       0     0     8\n  [34] libutil-2.19.so.d SHLIB            00007f0a0cdfb000  00053000\n       0000000000001000  0000000000000000   A       0     0     8\n  [35] libdl-2.19.so.tex SHLIB            00007f0a0cdfc000  00054000\n       0000000000003000  0000000000000000   A       0     0     8\n  [36] libdl-2.19.so.und SHLIB            00007f0a0cdff000  00057000\n       00000000001ff000  0000000000000000   A       0     0     8\n  [37] libdl-2.19.so.rel SHLIB            00007f0a0cffe000  00057000\n       0000000000001000  0000000000000000   A       0     0     8\n  [38] libdl-2.19.so.dat SHLIB            00007f0a0cfff000  00058000\n       0000000000001000  0000000000000000   A       0     0     8\n  [39] libc-2.19.so.text SHLIB            00007f0a0d000000  00059000\n       00000000001bb000  0000000000000000   A       0     0     8\n  [40] libc-2.19.so.unde SHLIB            00007f0a0d1bb000  00214000\n       00000000001ff000  0000000000000000   A       0     0     8\n  [41] libc-2.19.so.relr SHLIB            00007f0a0d3ba000  00214000\n       0000000000004000  0000000000000000   A       0     0     8\n  [42] libc-2.19.so.data SHLIB            00007f0a0d3be000  00218000\n       0000000000002000  0000000000000000   A       0     0     8\n  [43] azazel.so.text    PRELOADED        00007f0a0d3c5000  0021f000\n       0000000000008000  0000000000000000   A       0     0     8\n  [44] azazel.so.undef   PRELOADED        00007f0a0d3cd000  00227000\n       00000000001ff000  0000000000000000   A       0     0     8\n  [45] azazel.so.relro   PRELOADED        00007f0a0d5cc000  00227000\n       0000000000001000  0000000000000000   A       0     0     8\n  [46] azazel.so.data    PRELOADED        00007f0a0d5cd000  00228000\n       0000000000001000  0000000000000000   A       0     0     8\n  [47] ld-2.19.so.text   SHLIB            00007f0a0d5ce000  00229000\n       0000000000023000  0000000000000000   A       0     0     8\n  [48] ld-2.19.so.relro  SHLIB            00007f0a0d7f0000  00254000\n       0000000000001000  0000000000000000   A       0     0     8\n  [49] ld-2.19.so.data   SHLIB            00007f0a0d7f1000  00255000\n       0000000000001000  0000000000000000   A       0     0     8\n  [50] .procfs.tgz       LOUSER+0         0000000000000000  0027d038\n       00000000000011b6  0000000000000001           0     0     8\n  [51] .prstatus         PROGBITS         0000000000000000  0027c000\n       0000000000000150  0000000000000150           0     0     8\n  [52] .fdinfo           PROGBITS         0000000000000000  0027c150\n       0000000000000ac8  0000000000000228           0     0     4\n  [53] .siginfo          PROGBITS         0000000000000000  0027cc18\n       0000000000000080  0000000000000080           0     0     4\n  [54] .auxvector        PROGBITS         0000000000000000  0027cc98\n       0000000000000130  0000000000000008           0     0     8\n  [55] .exepath          PROGBITS         0000000000000000  0027cdc8\n       000000000000001c  0000000000000008           0     0     1\n  [56] .personality      PROGBITS         0000000000000000  0027cde4\n       0000000000000004  0000000000000004           0     0     1\n  [57] .arglist          PROGBITS         0000000000000000  0027cde8\n       0000000000000050  0000000000000001           0     0     1\n  [58] .fpregset         PROGBITS         0000000000000000  0027ce38\n       0000000000000200  0000000000000200           0     0     8\n  [59] .stack            PROGBITS         00007ffdb9161000  00257000\n       0000000000021000  0000000000000000  WA       0     0     8\n  [60] .vdso             PROGBITS         00007ffdb918f000  00279000\n       0000000000002000  0000000000000000  WA       0     0     8\n  [61] .vsyscall         PROGBITS         ffffffffff600000  0027b000\n       0000000000001000  0000000000000000  WA       0     0     8\n  [62] .symtab           SYMTAB           0000000000000000  0027f576\n       0000000000000078  0000000000000018          63     0     4\n  [63] .strtab           STRTAB           0000000000000000  0027f5ee\n       0000000000000037  0000000000000000           0     0     1\n  [64] .shstrtab         STRTAB           0000000000000000  0027f22e\n       0000000000000348  0000000000000000           0     0     1\n```", "```\n  [43] azazel.so.text    PRELOADED        00007f0a0d3c5000  0021f000\n       0000000000008000  0000000000000000   A       0     0     8\n  [44] azazel.so.undef   PRELOADED        00007f0a0d3cd000  00227000\n       00000000001ff000  0000000000000000   A       0     0     8\n  [45] azazel.so.relro   PRELOADED        00007f0a0d5cc000  00227000\n       0000000000001000  0000000000000000   A       0     0     8\n  [46] azazel.so.data    PRELOADED        00007f0a0d5cd000  00228000\n       0000000000001000  0000000000000000   A       0     0     8\n```", "```\nssize_t get_pltgot_info(ecfs_elf_t *desc, pltgot_info_t **pginfo)\n```", "```\ntypedef struct pltgotinfo {\n   unsigned long got_site; // addr of the GOT entry itself\n   unsigned long got_entry_va; // pointer value stored in the GOT entry\n   unsigned long plt_entry_va; // the expected PLT address\n   unsigned long shl_entry_va; // the expected shared lib function addr\n} pltgot_info_t;\n```", "```\n- readecfs output for file host2.7254\n- Executable path (.exepath): /home/user/git/azazel/host2\n- Command line: ./host2\n- Printing out GOT/PLT characteristics (pltgot_info_t):\ngotsite    gotvalue       gotshlib          pltval         symbol\n0x601018   0x7f0a0d3c8c81  0x7f0a0d0ed070   0x4004c6      unlink\n0x601020   0x7f0a0d06fe30  0x7f0a0d06fe30   0x4004d6      puts\n0x601028   0x7f0a0d3c8d77  0x7f0a0d0bcef0   0x4004e6      opendir\n0x601030   0x7f0a0d021dd0  0x7f0a0d021dd0   0x4004f6      __libc_start_main\n```", "```\n#include \"../include/libecfs.h\"\n\nint main(int argc, char **argv)\n{\n    ecfs_elf_t *desc;\n    ecfs_sym_t *dsyms;\n    char *progname;\n    int i;\n    char *libname;\n    long evil_addr = 0;\n\n    if (argc < 2) {\n        printf(\"Usage: %s <ecfs_file>\\n\", argv[0]);\n        exit(0);\n    }\n\n    /*\n     * Load the ECFS file and creates descriptor\n     */\n    desc = load_ecfs_file(argv[1]);\n    /*\n     * Get the original program name\n    */\n    progname = get_exe_path(desc);\n\n    printf(\"Performing analysis on '%s' which corresponds to executable: %s\\n\", argv[1], progname);\n\n    /*\n     * Look for any sections that are marked as INJECTED\n     * or PRELOADED, indicating shared library injection\n     * or ELF object injection.\n     */\n    for (i = 0; i < desc->ehdr->e_shnum; i++) {\n        if (desc->shdr[i].sh_type == SHT_INJECTED) {\n            libname = strdup(&desc->shstrtab[desc->shdr[i].sh_name]);\n            printf(\"[!] Found malicously injected ET_DYN (Dynamic ELF): %s - base: %lx\\n\", libname, desc->shdr[i].sh_addr);\n        } else\n        if (desc->shdr[i].sh_type == SHT_PRELOADED) {\n            libname = strdup(&desc->shstrtab[desc->shdr[i].sh_name]);\n            printf(\"[!] Found a preloaded shared library (LD_PRELOAD): %s - base: %lx\\n\", libname, desc->shdr[i].sh_addr);\n        }\n    }\n    /*\n     * Load and validate the PLT/GOT to make sure that each\n     * GOT entry points to its proper respective location\n     * in either the PLT, or the correct shared lib function.\n     */\n    pltgot_info_t *pltgot;\n    int gotcount = get_pltgot_info(desc, &pltgot);\n    for (i = 0; i < gotcount; i++) {\n        if (pltgot[i].got_entry_va != pltgot[i].shl_entry_va &&\n            pltgot[i].got_entry_va != pltgot[i].plt_entry_va &&\n            pltgot[i].shl_entry_va != 0) {\n            printf(\"[!] Found PLT/GOT hook: A function is pointing at %lx instead of %lx\\n\",\n                pltgot[i].got_entry_va, evil_addr = pltgot[i].shl_entry_va);\n     /*\n      * Load the dynamic symbol table to print the\n      * hijacked function by name.\n      */\n            int symcount = get_dynamic_symbols(desc, &dsyms);\n            for (i = 0; i < symcount; i++) {\n                if (dsyms[i].symval == evil_addr) {\n                    printf(\"[!] %lx corresponds to hijacked function: %s\\n\", dsyms[i].symval, &dsyms[i].strtab[dsyms[i].nameoffset]);\n                break;\n                }\n            }\n        }\n    }\n    return 0;\n}\n```", "```\nint get_dynamic_symbols(ecfs_elf_t *desc, ecfs_sym_t **syms)\nint get_local_symbols(ecfs_elf_t *desc, ecfs_sym_t **syms)\n```", "```\n$ readelf -s host.6758\n\nSymbol table '.dynsym' contains 8 entries:\n   Num:    Value          Size Type    Bind   Vis      Ndx Name\n     0: 00007f3dfd48b000     0 NOTYPE  LOCAL  DEFAULT  UND\n     1: 00007f3dfd4f9730     0 FUNC    GLOBAL DEFAULT  UND fputs\n     2: 00007f3dfd4acdd0     0 FUNC    GLOBAL DEFAULT  UND __libc_start_main\n     3: 00007f3dfd4f9220     0 FUNC    GLOBAL DEFAULT  UND fgets\n     4: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND __gmon_start__\n     5: 00007f3dfd4f94e0     0 FUNC    GLOBAL DEFAULT  UND fopen\n     6: 00007f3dfd54bd00     0 FUNC    GLOBAL DEFAULT  UND sleep\n     7: 00007f3dfd84a870     8 OBJECT  GLOBAL DEFAULT   25 stdout\n\nSymbol table '.symtab' contains 5 entries:\n   Num:    Value          Size Type    Bind   Vis      Ndx Name\n     0: 00000000004004f0   112 FUNC    GLOBAL DEFAULT   10 sub_4004f0\n     1: 0000000000400560    42 FUNC    GLOBAL DEFAULT   10 sub_400560\n     2: 000000000040064d   138 FUNC    GLOBAL DEFAULT   10 sub_40064d\n     3: 00000000004006e0   101 FUNC    GLOBAL DEFAULT   10 sub_4006e0\n     4: 0000000000400750     2 FUNC    GLOBAL DEFAULT   10 sub_400750\n```", "```\nstruct elf_prstatus\n  {\n    struct elf_siginfo pr_info;         /* Info associated with signal.  */\n    short int pr_cursig;                /* Current signal.  */\n    unsigned long int pr_sigpend;       /* Set of pending signals.  */\n    unsigned long int pr_sighold;       /* Set of held signals.  */\n    __pid_t pr_pid;\n    __pid_t pr_ppid;\n    __pid_t pr_pgrp;\n    __pid_t pr_sid;\n    struct timeval pr_utime;            /* User time.  */\n    struct timeval pr_stime;            /* System time.  */\n    struct timeval pr_cutime;           /* Cumulative user time.  */\n    struct timeval pr_cstime;           /* Cumulative system time.  */\n    elf_gregset_t pr_reg;               /* GP registers.  */\n    int pr_fpvalid;                     /* True if math copro being used.  */\n  };\n```", "```\ntypedef struct fdinfo {\n        int fd;\n        char path[MAX_PATH];\n        loff_t pos;\n        unsigned int perms;\n        struct {\n                struct in_addr src_addr;\n                struct in_addr dst_addr;\n                uint16_t src_port;\n                uint16_t dst_port;\n        } socket;\n        char net;\n} fd_info_t;\n```", "```\n        [fd: 0:0] perms: 8002 path: /dev/null\n        [fd: 1:0] perms: 8002 path: /dev/null\n        [fd: 2:0] perms: 8002 path: /dev/null\n        [fd: 3:0] perms: 802 path: socket:[10161]\n        PROTOCOL: TCP\n        SRC: 0.0.0.0:22\n        DST: 0.0.0.0:0\n\n        [fd: 4:0] perms: 802 path: socket:[10163]\n        PROTOCOL: TCP\n        SRC: 0.0.0.0:22\n        DST: 0.0.0.0:0\n```", "```\n#define ELF_STATIC (1 << 1) // if it's statically linked (instead of dynamically)\n#define ELF_PIE (1 << 2)    // if it's a PIE executable\n#define ELF_LOCSYM (1 << 3) // was a .symtab symbol table created by ecfs?\n#define ELF_HEURISTICS (1 << 4) // were detection heuristics used by ecfs?\n#define ELF_STRIPPED_SHDRS (1 << 8) // did the binary have section headers?\n```", "```\n$ gdb -q /usr/sbin/sshd sshd.1195\nReading symbols from /usr/sbin/sshd...(no debugging symbols found)...done.\n\"/opt/ecfs/cores/sshd.1195\" is not a core dump: File format not recognized\n(gdb) quit\n```", "```\n$ et_flip sshd.1195\n$ gdb -q /usr/sbin/sshd sshd.1195\nReading symbols from /usr/sbin/sshd...(no debugging symbols found)...done.\n[New LWP 1195]\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\nCore was generated by `/usr/sbin/sshd -D'.\nProgram terminated with signal SIGSEGV, Segmentation fault.\n#0  0x00007ff4066b8d83 in __select_nocancel () at ../sysdeps/unix/syscall-template.S:81\n81  ../sysdeps/unix/syscall-template.S: No such file or directory.\n(gdb)\n```", "```\n$ ./print_passfile\nroot:x:0:0:root:/root:/bin/bash\ndaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin\nbin:x:2:2:bin:/bin:/usr/sbin/nologin\nsys:x:3:3:sys:/dev:/usr/sbin/nologin\nsync:x:4:65534:sync:/bin:/bin/sync\ngames:x:5:60:games:/usr/games:/usr/sbin/nologin\nman:x:6:12:man:/var/cache/man:/usr/sbin/nologin\nlp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin\n\n\u2013 interrupted by snapshot -\n```", "```\n$ ecfs_exec ./print_passfile.6627\n[+] Using entry point: 7f79a0473f20\n[+] Using stack vaddr: 7fff8c752738\nmail:x:8:8:mail:/var/mail:/usr/sbin/nologin\nnews:x:9:9:news:/var/spool/news:/usr/sbin/nologin\nuucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin\nproxy:x:13:13:proxy:/bin:/usr/sbin/nologin\nwww-data:x:33:33:www-data:/var/www:/usr/sbin/nologin\nbackup:x:34:34:backup:/var/backups:/usr/sbin/nologin\nlist:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin\nirc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin\ngnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin\nnobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin\nsyslog:x:101:104::/home/syslog:/bin/false\nmessagebus:x:102:106::/var/run/dbus:/bin/false\nusbmux:x:103:46:usbmux daemon,,,:/home/usbmux:/bin/false\ndnsmasq:x:104:65534:dnsmasq,,,:/var/lib/misc:/bin/false\navahi-autoipd:x:105:113:Avahi autoip daemon,,,:/var/lib/avahi-autoipd:/bin/false\nkernoops:x:106:65534:Kernel Oops Tracking Daemon,,,:/:/bin/false\nsaned:x:108:115::/home/saned:/bin/false\nwhoopsie:x:109:116::/nonexistent:/bin/false\nspeech-dispatcher:x:110:29:Speech Dispatcher,,,:/var/run/speech-dispatcher:/bin/sh\navahi:x:111:117:Avahi mDNS daemon,,,:/var/run/avahi-daemon:/bin/false\nlightdm:x:112:118:Light Display Manager:/var/lib/lightdm:/bin/false\ncolord:x:113:121:colord colour management daemon,,,:/var/lib/colord:/bin/false\nhplip:x:114:7:HPLIP system user,,,:/var/run/hplip:/bin/false\npulse:x:115:122:PulseAudio daemon,,,:/var/run/pulse:/bin/false\nstatd:x:116:65534::/var/lib/nfs:/bin/false\nguest-ieu5xg:x:117:126:Guest,,,:/tmp/guest-ieu5xg:/bin/bash\nsshd:x:118:65534::/var/run/sshd:/usr/sbin/nologin\ngdm:x:119:128:Gnome Display Manager:/var/lib/gdm:/bin/false\n```"]