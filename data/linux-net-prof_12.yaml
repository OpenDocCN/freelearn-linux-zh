- en: '*Chapter 9*: RADIUS Services for Linux'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第9章*：Linux的RADIUS服务'
- en: In this chapter, we'll cover **Remote Authentication Dial-In User Service**
    (**RADIUS**), one of the main methods of authenticating services over a network.
    We'll implement FreeRADIUS on our server, link it to a backend **Lightweight Directory
    Access Protocol** (**LDAP**)/**Secure LDAP** (**LDAPS**) directory, and use it
    to authenticate access to various services on the network.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍远程身份验证拨入用户服务（RADIUS），这是在网络上验证服务的主要方法之一。我们将在服务器上实现FreeRADIUS，将其链接到后端轻量级目录访问协议（LDAP）/安全LDAP（LDAPS）目录，并使用它来验证对网络上各种服务的访问。
- en: 'In particular, we''ll cover the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 特别是，我们将涵盖以下主题：
- en: RADIUS basics—what is RADIUS and how does it work?
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RADIUS基础知识-什么是RADIUS，它是如何工作的？
- en: Implementing RADIUS with local Linux authentication
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用本地Linux认证实现RADIUS
- en: RADIUS with LDAP/LDAPS backend authentication
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 具有LDAP/LDAPS后端认证的RADIUS
- en: Unlang—the unlanguage
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Unlang-非语言
- en: RADIUS use-case scenarios
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RADIUS使用案例场景
- en: Using Google Authenticator for **multi-factor authentication** (**MFA**) with
    RADIUS
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Google Authenticator进行RADIUS的多因素认证（MFA）
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: To follow the examples in this section, we'll use our existing Ubuntu host or
    **virtual machine** (**VM**). We'll be touching on some wireless topics in this
    chapter, so if you don't have a wireless card in your host or VM, you'll want
    a Wi-Fi adapter to work through those examples.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 为了跟随本节中的示例，我们将使用我们现有的Ubuntu主机或虚拟机（VM）。在本章中，我们将涉及一些无线主题，因此，如果您的主机或虚拟机中没有无线网卡，您将需要一个无线适配器来完成这些示例。
- en: As we work through the various examples, we'll be editing several configuration
    files. If not specifically referenced, the configuration files for `freeradius`
    are all held within the `/etc/freeradius/3.0/` directory.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们逐步进行各种示例时，我们将编辑多个配置文件。如果没有特别提到，`freeradius`的配置文件都存储在`/etc/freeradius/3.0/`目录中。
- en: For the packages we're installing that aren't included by default in Ubuntu,
    be sure that you have a working internet connection so that you can use the `apt`
    commands for installation.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Ubuntu默认未包含的我们正在安装的软件包，请确保您有可用的互联网连接，以便您可以使用`apt`命令进行安装。
- en: RADIUS basics – what is RADIUS and how does it work?
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: RADIUS基础知识-什么是RADIUS，它是如何工作的？
- en: Before we start, let's review a key concept—AAA. **AAA** is a common industry
    term that stands for **authentication**, **authorization**, and **accounting**—three
    key concepts for controlling access to resources.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始之前，让我们回顾一个关键概念-AAA。AAA是一个常见的行业术语，代表认证、授权和计费-这是控制资源访问的三个关键概念。
- en: Authentication is whatever is required to prove your identity. In many cases,
    this involves just a user **identifier** (**ID**) and a password, but we will
    explore more complex methods using MFA in this chapter as well.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 认证是证明您身份所需的一切。在许多情况下，这只涉及用户标识符（ID）和密码，但在本章中，我们还将探讨使用MFA的更复杂的方法。
- en: Authorization generally happens after authentication. Once you have proven your
    identity, various systems will use that identity information to work out what
    you have access to. This may mean which subnets, hosts, and services you have
    access to, or might involve which files or directories you can access. In regular
    language, authentication and authorization are often used interchangeably, but
    when discussing RADIUS and system access, they are quite different.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 授权通常发生在认证之后。一旦您证明了您的身份，各种系统将使用该身份信息来确定您可以访问什么。这可能意味着您可以访问哪些子网、主机和服务，或者可能涉及您可以访问哪些文件或目录。在常规语言中，认证和授权经常可以互换使用，但在讨论RADIUS和系统访问时，它们是完全不同的。
- en: Accounting is a bit of a throwback to dial-up days. When people were using dial-up
    modems to access corporate systems or the internet, they took up valuable resources
    during their session (namely, the receiving modem and circuit), so RADIUS was
    used to track their session times and durations for their monthly invoice. In
    more modern times, RADIUS accounting is still used to track session times and
    durations, but this information is now more for troubleshooting, or sometimes
    for forensics purposes.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 计费有点像回到拨号上网的日子。当人们使用拨号调制解调器访问公司系统或互联网时，他们在会话期间占用了宝贵的资源（即接收调制解调器和电路），因此RADIUS用于跟踪他们的会话时间和持续时间，以便进行月度发票。在现代，RADIUS计费仍然用于跟踪会话时间和持续时间，但这些信息现在更多用于故障排除，有时也用于取证目的。
- en: The primary use of RADIUS these days is for authentication, with accounting
    usually also being configured. Authorization is often done by other backend systems,
    though RADIUS can be used to assign a network-based **access-control list** (**ACL**)
    to each authentication session, which is one form of authorization.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: RADIUS这些天的主要用途是用于认证，通常也配置了计费。授权通常由其他后端系统完成，尽管RADIUS可以用于为每个认证会话分配基于网络的访问控制列表（ACL），这是一种授权形式。
- en: With that background covered, let's discuss RADIUS in more detail. The **RADIUS**
    authentication protocol is extremely simple, which makes it attractive for many
    different use cases, and so is supported by almost all devices and services that
    might require authentication. Let's go through a configuration as well as a typical
    authentication exchange (at a high level).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在掌握了这些背景知识之后，让我们更详细地讨论RADIUS。RADIUS认证协议非常简单，这使得它对许多不同的用例都很有吸引力，因此几乎所有可能需要认证的设备和服务都支持它。让我们通过一个配置以及一个典型的认证交换（在高层次上）来进行讨论。
- en: First, let's discuss a device that needs authentication, called a **network
    access server** (**NAS**) in this context. A NAS can be a **virtual private network**
    (**VPN**) device, a wireless controller or access point, or a switch—really, any
    device a user might access that requires authentication. A NAS is defined in the
    RADIUS server, usually by an **Internet Protocol** (**IP**) address, with an associated
    "shared secret" to allow for authentication of the device.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们讨论一个需要认证的设备，在这种情况下称为**网络访问服务器**（**NAS**）。NAS可以是**虚拟私人网络**（**VPN**）设备，无线控制器或接入点，或交换机
    - 实际上，任何用户可能需要认证的设备。NAS通常由RADIUS服务器定义，通常具有关联的“共享密钥”以允许对设备进行身份验证。
- en: Next, the device is configured to use RADIUS for authentication. If this is
    for administrative access, local authentication will often be left in place as
    a fallback method—so, if RADIUS isn't available, local authentication will still
    work.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，配置设备以使用RADIUS进行身份验证。如果这是用于管理访问，通常会保留本地身份验证作为备用方法 - 因此，如果RADIUS不可用，本地身份验证仍将起作用。
- en: 'That''s it for the device (NAS) configuration. When a client attempts to connect
    to the NAS, the NAS collects the login information and forwards it to the RADIUS
    server for verification (see *Figure 9.1* for a typical RADIUS request packet
    as captured in Wireshark). Things to notice in the packet include the following:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是设备（NAS）的配置。当客户端尝试连接到NAS时，NAS收集登录信息并将其转发到RADIUS服务器进行验证（请参阅*图9.1*，其中显示了在Wireshark中捕获的典型RADIUS请求数据包）。数据包中需要注意的内容包括以下内容：
- en: The port used for RADIUS requests is `1812/udp`. The matching port for RADIUS
    accounting is `1813/udp`—accounting tracks connection times and so on, and is
    historically used for billing. There is an older style set of ports (`1645` and
    `1646/udp`) that is still fully supported on many RADIUS servers.
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于RADIUS请求的端口是`1812/udp`。RADIUS会计的匹配端口是`1813/udp` - 会计跟踪连接时间等，通常用于计费。许多RADIUS服务器仍然完全支持一组较旧的端口（`1645`和`1646/udp`）。
- en: 'The `Code` field is used to identify the packet type—in this example, we''ll
    cover `Access-Request` (code `1`), `Accept` (code `2`), and `Reject` (code `3`).
    The full list of RADIUS codes includes the following ones:'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Code`字段用于标识数据包类型 - 在本例中，我们将涵盖`Access-Request`（代码`1`），`Accept`（代码`2`）和`Reject`（代码`3`）。RADIUS代码的完整列表包括以下内容：'
- en: '![Table 9.1 – RADIUS codes'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '![表9.1 - RADIUS代码'
- en: '](img/B16336_09_Table_01.jpg)'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16336_09_Table_01.jpg)'
- en: Table 9.1 – RADIUS codes
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 表9.1 - RADIUS代码
- en: The `Packet ID` field is what is used to tie together the request and the response
    packet. Since RADIUS is a **User Datagram Protocol** (**UDP**) protocol, there's
    no concept of a session at the protocol level—this has to be in the payload of
    the packet.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Packet ID`字段用于将请求和响应数据包联系在一起。由于RADIUS是**用户数据报协议**（**UDP**）协议，协议级别上没有会话的概念
    - 这必须在数据包的有效负载中。'
- en: The `Authenticator` field is unique to each packet and is supposed to be randomly
    generated.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Authenticator`字段对于每个数据包是唯一的，应该是随机生成的。'
- en: The remainder of the packet consists of `AVP` in the packet. This makes the
    protocol extensible; both the NAS and the RADIUS server can add AV pairs as circumstances
    dictate. There are several AV pairs commonly supported in all implementations,
    as well as several vendor-specific AV pairs that are usually tied to the NAS vendor
    and specific situations—for instance, to differentiate between administrative
    access to a device and user access to a VPN or wireless **service set ID** (**SSID**).
    We'll cover this in more depth as we explore some use cases later in this chapter.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据包的其余部分由数据包中的`AVP`组成。这使得协议具有可扩展性；NAS和RADIUS服务器都可以根据情况添加AV对。所有实现通常都支持几个AV对，以及几个特定于供应商的AV对，通常与NAS供应商和特定情况相关联
    - 例如，区分对设备的管理访问和对VPN或无线**服务集ID**（**SSID**）的用户访问。我们将在本章后面探讨更多用例时更深入地讨论这一点。
- en: 'In the following simple example, our two attributes are the `User-Name` AV
    pair, which is in clear text, and the `User-Password` AV pair, which is labeled
    as `Encrypted` but is, in fact, an MD5 hashed value (where `Request Authenticator`
    value. The **Request for Comments** (**RFC**) (*RFC 2865*—see the *Further reading*
    section) has a full explanation of how this is computed if you are interested
    in further details on this:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下简单示例中，我们的两个属性是`User-Name` AV对，它是明文的，以及`User-Password` AV对，它被标记为`Encrypted`，但实际上是MD5哈希值（其中`Request
    Authenticator`值。**请求评论**（**RFC**）（*RFC 2865* - 请参阅*进一步阅读*部分）对此的计算有详细的解释，如果您对此感兴趣：
- en: '![Figure 9.1 – Simple RADIUS request'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '![图9.1 - 简单的RADIUS请求'
- en: '](img/B16336_09_001.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16336_09_001.jpg)'
- en: Figure 9.1 – Simple RADIUS request
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 图9.1 - 简单的RADIUS请求
- en: 'The response is usually much simpler, as outlined here:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 响应通常要简单得多，如下所述：
- en: It's normally either a code 2 `Accept` (*Figure 9.2*) or a code 3 `Reject` (*Figure
    9.3*) response.
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通常要么是代码2 `Accept`（*图9.2*），要么是代码3 `Reject`（*图9.3*）的响应。
- en: The packet ID is the same as in the request.
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据包ID与请求中的相同。
- en: 'The response authenticator is computed from the response packet code (2 in
    this case), the length of the response (20 bytes in this case), the packet ID
    (2), the Request Authenticator, and the shared secret. Other AV pairs in the reply
    will also be used in computing this value. The key thing for this field is that
    the NAS will use it to authenticate that the response is coming from the RADIUS
    server it is expecting it from. This first packet example shows an `Access-Accept`
    response, where the access request is granted:'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 响应认证器是根据响应数据包代码（在本例中为2），响应的长度（在本例中为20字节），数据包ID（2），请求认证器和共享密钥计算出来的。回复中的其他AV对也将用于计算此值。该字段的关键是NAS将使用它来验证响应是否来自它期望的RADIUS服务器。这个第一个数据包示例显示了一个`Access-Accept`响应，其中访问请求被授予：
- en: '![Figure 9.2 – Simple RADIUS response (Access-Accept)'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '![图9.2 - 简单的RADIUS响应（Access-Accept）'
- en: '](img/B16336_09_002.jpg)'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16336_09_002.jpg)'
- en: Figure 9.2 – Simple RADIUS response (Access-Accept)
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 图9.2 - 简单的RADIUS响应（Access-Accept）
- en: 'This second response packet example shows an `Access-Reject` packet. All fields
    remain the same, except that the access request has been rejected. If there are
    no configuration errors, this result is usually seen when either the username
    or password values are incorrect:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 这个第二个响应数据包示例显示了一个`Access-Reject`数据包。所有字段都保持不变，只是访问请求被拒绝了。如果没有配置错误，通常会在用户名或密码值不正确时看到这个结果：
- en: '![Figure 9.3 – Simple RADIUS response (Access-Reject)'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '![图9.3-简单的RADIUS响应（Access-Reject）'
- en: '](img/B16336_09_003.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16336_09_003.jpg)'
- en: Figure 9.3 – Simple RADIUS response (Access-Reject)
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 图9.3-简单的RADIUS响应（Access-Reject）
- en: Now we know how a simple RADIUS request works, let's start building our RADIUS
    server.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道了简单的RADIUS请求是如何工作的，让我们开始构建我们的RADIUS服务器。
- en: Implementing RADIUS with local Linux authentication
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用本地Linux身份验证实现RADIUS
- en: 'This example shows the simplest RADIUS configuration, where the `UserID` and
    `Password` values are all locally defined in a configuration file. This is not
    recommended for any production environment for several reasons, detailed as follows:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 这个示例显示了最简单的RADIUS配置，其中`UserID`和`Password`值都在配置文件中定义。由于几个原因，这不建议用于任何生产环境，详细如下：
- en: The passwords are stored as clear-text strings, so in the event of a compromise,
    all RADIUS passwords can be collected by a malicious actor.
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 密码以明文字符串的形式存储，因此在发生妥协时，所有RADIUS密码都可以被恶意行为者收集。
- en: The passwords are entered by the administrator rather than the user. This means
    that the key security concept of "non-repudiation" is lost—if an event is tied
    to such an account, the affected user can always say "the administrator also knows
    my password—it must have been them."
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 密码是由管理员输入而不是用户。这意味着“不可否认”的关键安全概念丢失了-如果事件与这样的帐户相关联，受影响的用户总是可以说“管理员也知道我的密码-一定是他们”。
- en: Also related to the administrator-entered password—the user cannot change their
    password, which also means that in most cases, this RADIUS password will be different
    from other passwords that the user uses, making it more difficult to remember.
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与管理员输入密码相关的是-用户无法更改他们的密码，这也意味着在大多数情况下，这个RADIUS密码将与用户使用的其他密码不同，这使得记住它更困难。
- en: It is, however, a handy way to test an initial RADIUS configuration before we
    complicate it with backend authentication stores and more complex RADIUS exchanges.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这是一个方便的方法，在我们用后端身份验证存储和更复杂的RADIUS交换之前测试初始RADIUS配置。
- en: 'First, we''ll install `freeradius`, as follows:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将安装`freeradius`，如下所示：
- en: '[PRE0]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Next, let's edit the `client` configuration, which defines our various NAS devices
    that people will be making authentication requests to. To do this, use `sudo`
    to edit the `/etc/freeradius/3.0/clients.conf` file. As you'd expect, you'll see
    that the RADIUS configuration files cannot be edited or even viewed with normal
    rights, so `sudo` must be used for all access to these.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们编辑`client`配置，定义我们的各种NAS设备，人们将向其发出身份验证请求。为此，使用`sudo`编辑`/etc/freeradius/3.0/clients.conf`文件。正如您所期望的那样，RADIUS配置文件不能使用普通权限进行编辑或查看，因此对这些文件的所有访问都必须使用`sudo`。
- en: At the bottom of this file, we'll add a stanza for each RADIUS client device,
    with its name, IP address, and the shared secret for that device. Note that it's
    a best practice to use a long, random string for this, unique to each device.
    It's easy to write a quick script to generate this for you—see [https://isc.sans.edu/forums/diary/How+do+you+spell+PSK/16643](https://isc.sans.edu/forums/diary/How+do+you+spell+PSK/16643)
    for more details.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个文件的底部，我们将为每个RADIUS客户端设备添加一个段，其中包含其名称、IP地址和该设备的共享密钥。请注意，最好使用一个长的、随机的字符串，对于每个设备都是唯一的。您可以很容易地编写一个快速脚本来为您生成这个-有关更多详细信息，请参见[https://isc.sans.edu/forums/diary/How+do+you+spell+PSK/16643](https://isc.sans.edu/forums/diary/How+do+you+spell+PSK/16643)。
- en: 'In the following code example, we''ve added three switches (each having a name
    that starts with `sw`) and a wireless controller (`VWLC01`, a virtual wireless
    controller). A key concept here is to consistently name devices. It''s a common
    thing that you might need different rules or policies for different device types;
    giving them consistent names by device type is a handy concept that can simplify
    this. Also, something as simple as sorting a list becomes simpler if the device
    name standard is known and consistent:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下代码示例中，我们添加了三个交换机（每个交换机的名称都以“sw”开头）和一个无线控制器（`VWLC01`，一个虚拟无线控制器）。这里的一个关键概念是一致地命名设备。您可能需要为不同的设备类型制定不同的规则或策略；按设备类型给它们一致的名称是一个方便的概念，可以简化这一点。此外，如果设备名称标准是已知和一致的，那么简单的排序列表也会变得更简单：
- en: '[PRE1]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Note that in some situations, you may have to configure entire subnets—in that
    case, the client line might read something like this:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在某些情况下，您可能需要配置整个子网-在这种情况下，客户端行可能会读取类似于这样的内容：
- en: '[PRE2]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This normally isn't recommended as it opens the RADIUS server to attack from
    anything on that subnet. If at all possible, use fixed IP addresses. In some cases,
    however, you might be forced to use subnets—for instance, if you've got **wireless
    access points** (**WAPs**) authenticating for wireless clients directly to RADIUS,
    with IPs assigned dynamically using **Dynamic Host Configuration Protocol** (**DHCP**).
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 这通常不建议，因为它会使RADIUS服务器对该子网上的任何内容都开放。如果可能的话，请使用固定的IP地址。然而，在某些情况下，您可能被迫使用子网-例如，如果您有**无线接入点**（**WAPs**）直接对RADIUS进行无线客户端认证，使用**动态主机配置协议**（**DHCP**）动态分配IP。
- en: Note also the `nastype` line—this ties the device to a `dictionary` file that
    contains definitions for common AV pairs for that vendor.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 还要注意`nastype`行-这将设备与包含该供应商的常见AV对的定义的`dictionary`文件联系起来。
- en: 'Next, let''s create a test user—use `sudo` to edit the `/etc/freeradius/3.0/users`
    file and add a test account, like this:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们创建一个测试用户-使用`sudo`编辑`/etc/freeradius/3.0/users`文件，并添加一个测试帐户，就像这样：
- en: '[PRE3]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Finally, restart your service with the following command:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，使用以下命令重新启动您的服务：
- en: '[PRE4]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Now, some troubleshooting—to test the syntax of your configuration file, use
    the following command:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，一些故障排除-要测试配置文件的语法，请使用以下命令：
- en: '[PRE5]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'To test the authentication operation, verify that your RADIUS server information
    is defined as a RADIUS client (it is by default), then use the `radclient` command
    as shown:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 要测试身份验证操作，请验证您的RADIUS服务器信息是否定义为RADIUS客户端（默认情况下是这样），然后使用如下所示的`radclient`命令：
- en: '[PRE6]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: With this testing done, it's recommended that you delete your locally defined
    user—this isn't something you should forget as it could leave this available for
    an attacker later. Let's now expand our configuration to a more typical enterprise
    configuration—we'll add a backend directory based on LDAP.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 完成这些测试后，建议删除本地定义的用户——这不是您应该忘记的事情，因为这可能会使攻击者稍后可以使用。现在让我们将我们的配置扩展到更典型的企业配置——我们将添加一个基于LDAP的后端目录。
- en: RADIUS with LDAP/LDAPS backend authentication
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 具有LDAP/LDAPS后端身份验证的RADIUS
- en: 'Using a backend authentication store such as **LDAP** is useful for many reasons.
    Since this is usually using the same authentication store as regular logins, this
    gives us several advantages, detailed as follows:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 使用诸如**LDAP**之类的后端身份验证存储对许多原因都很有用。由于这通常使用与常规登录相同的身份验证存储，这给我们带来了几个优势，如下所述：
- en: Group membership in LDAP can be used to control access to critical accesses
    (such as administrative access).
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: LDAP中的组成员资格可用于控制对关键访问的访问权限（例如管理访问）。
- en: Passwords are the same for RADIUS access as for standard logins, making them
    easier to remember.
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RADIUS访问的密码与标准登录的密码相同，更容易记住。
- en: Passwords and password changes are under the user's control.
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 密码和密码更改由用户控制。
- en: Credentials maintenance is in one central location in the event of a user changing
    groups. In particular, if a user leaves the organization, their account is disabled
    in RADIUS as soon as it is disabled in LDAP.
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在用户更改组时，凭证维护位于一个中央位置。特别是，如果用户离开组织，他们的帐户在LDAP中被禁用后，RADIUS也会立即被禁用。
- en: 'The downside of this method is simple: users are horrible at picking good passwords.
    This is why, especially for any interfaces that face the public internet, it''s
    recommended to use MFA (we''ll cover this later in this chapter).'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法的缺点很简单：用户很难选择好的密码。这就是为什么，特别是对于面向公共互联网的任何接口，建议使用MFA（我们稍后将在本章中介绍）。
- en: 'Taking advantage of this, if access is controlled only by a simple user/password
    exchange, an attacker has a few great options to gain access, outlined as follows:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 利用这一点，如果访问仅由简单的用户/密码交换控制，攻击者有几种很好的选择来获取访问权限，如下所述：
- en: '**Using credential stuffing**: With this method, the attacker collects passwords
    from other compromises (these are freely available), as well as passwords that
    you might expect to see locally or within the company (local sports teams or company
    product names, for instance), or words that might be significant to the target
    account (children''s or spouse''s names, car model, street name, or phone number
    information, for instance). They then try all of these against their targets,
    which they normally collect from either the corporate website or social media
    sites (LinkedIn is a favorite for this). This is amazingly successful because
    people tend to have predictable passwords or use the same password across multiple
    sites, or both. In an organization of any size, the attacker is usually successful
    in this attack, with times typically ranging from a few minutes to a day. This
    is successful enough that it is automated in several malware strains, most notably
    starting with *Mirai* in 2017 (which attacked administrative access to common
    **Internet of Things** (**IoT**) devices), then expanded to include any number
    of derivative strains that use common word lists for password guessing.'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用凭证填充**：使用此方法，攻击者从其他泄漏中收集密码（这些是免费提供的），以及您可能期望在本地或公司内部看到的密码（例如本地体育队或公司产品名称），或者可能对目标帐户有重要意义的单词（例如孩子或配偶的姓名，汽车型号，街道名称或电话号码信息）。然后他们尝试所有这些针对他们的目标，通常是从企业网站或社交媒体网站（LinkedIn是其中的一个最爱）收集的。这非常成功，因为人们往往有可预测的密码，或者在多个网站上使用相同的密码，或两者兼而有之。在任何规模的组织中，攻击者通常在这种攻击中取得成功，通常需要几分钟到一天的时间。这是如此成功，以至于它在几种恶意软件中被自动化，最著名的是从2017年开始的*Mirai*（它攻击了常见的**物联网**（**IoT**）设备的管理访问），然后扩展到包括使用常见单词列表进行猜测密码的任意数量的衍生品系。'
- en: '**Brute forcing of credentials**: The same as credential stuffing, but using
    an entire password list against all accounts, as well as trying all combinations
    of characters after those words are exhausted. Really, this is the same as credential
    stuffing, but just "keeps going" after the initial attack. This shows the imbalance
    between the attacker and defender—continuing an attack is essentially free for
    the attacker (or as cheap as the compute time and bandwidth are), so why wouldn''t
    they just keep trying?'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 凭证的强制破解：与凭证填充相同，但是使用整个密码列表对所有帐户进行攻击，以及在用尽这些单词后尝试所有字符组合。实际上，这与凭证填充相同，但在初始攻击之后“继续进行”。这显示了攻击者和防御者之间的不平衡——继续攻击对于攻击者来说基本上是免费的（或者与计算时间和带宽一样便宜），那么他们为什么不继续尝试呢？
- en: Configuring RADIUS for an LDAP authentication store is easy. While we'll cover
    a standard LDAP configuration, it's important to keep in mind that this protocol
    is clear-text, so is a great target for attackers—**LDAPS** (**LDAP over Transport
    Layer Security (TLS)**) is always preferred. Normally, a standard LDAP configuration
    should only be used for testing, before layering on the encryption aspect with
    LDAPS.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 为LDAP身份验证存储配置RADIUS很容易。虽然我们将介绍标准的LDAP配置，但重要的是要记住这个协议是明文的，因此是攻击者的一个很好的目标——**LDAPS**（**LDAP
    over Transport Layer Security (TLS)**）始终是首选。通常，标准的LDAP配置应该仅用于测试，然后再使用LDAPS添加加密方面。
- en: First, let's configure our backend directory in RADIUS, using LDAP as the transport
    protocol. In this example, our LDAP directory is Microsoft's **Active Directory**
    (**AD**), but in a Linux-only environment, it's typical to have a Linux LDAP directory
    (using OpenLDAP, for instance).
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们使用LDAP作为传输协议在RADIUS中配置我们的后端目录。在此示例中，我们的LDAP目录是微软的**Active Directory**（**AD**），但在仅Linux环境中，通常会有一个Linux
    LDAP目录（例如使用OpenLDAP）。
- en: 'First, install the `freeradius-ldap` package, as follows:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，安装`freeradius-ldap`软件包，如下所示：
- en: '[PRE7]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Before we proceed with implementing LDAPS, you''ll need the public certificate
    of the CA server that is used by your LDAPS server. Collect this file in `/usr/share/ca-certificates/extra`
    directory (you''ll need to create this directory), as follows:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们继续实施LDAPS之前，您需要收集LDAPS服务器使用的CA服务器的公共证书。将此文件收集到`/usr/share/ca-certificates/extra`目录中（您需要创建此目录），如下所示：
- en: '[PRE8]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Copy or move the certificates into the new directory, like this:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 将证书复制或移动到新目录中，如下所示：
- en: '[PRE9]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Tell Ubuntu to add this directory to the `certs listgroups`, as follows:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 告诉Ubuntu将此目录添加到`certs listgroups`，如下所示：
- en: '[PRE10]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: You will be prompted to add any new certificates, so be sure to select the one
    you just added. If there are any certificates in the list that you do not expect
    to see, cancel this operation and verify that these are not malicious before proceeding.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 您将被提示添加任何新证书，因此请务必选择刚刚添加的证书。如果列表中有任何您不希望看到的证书，请取消此操作并在继续之前验证这些证书是否不恶意。
- en: Next, we'll edit the `/etc/freeradius/3.0/mods-enabled/ldap` file. This file
    won't be here—you can reference the `/etc/freeradius/3.0/mods-available/ldap`
    file as an example if needed, or link to that file directly.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将编辑`/etc/freeradius/3.0/mods-enabled/ldap`文件。这个文件不会在这里-如果需要，您可以参考`/etc/freeradius/3.0/mods-available/ldap`文件作为示例，或直接链接到该文件。
- en: The `server` line in the configuration shown next implies that your RADIUS server
    must be able to resolve that server name using the **Domain Name System** (**DNS**).
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 下面显示的配置中的`server`行意味着您的RADIUS服务器必须能够使用**域名系统**（**DNS**）解析该服务器名称。
- en: 'We''ll be configuring LDAPS using these lines:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用以下行配置LDAPS：
- en: '[PRE11]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: If you are forced to configure LDAP rather than LDAPS, the port changes to `389`,
    and of course there is no certificate, so the `tls` section in the `ldap` configuration
    file can be removed or commented out.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您被迫配置LDAP而不是LDAPS，则端口更改为`389`，当然也没有证书，因此可以删除或注释掉`ldap`配置文件中的`tls`部分。
- en: The `ldapuser` example user that we used typically doesn't need any exceptional
    access. However, be sure to use a lengthy (>16 characters) random password for
    this account as in most environments, this password is not likely to change frequently
    over time.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通常使用的`ldapuser`示例用户不需要任何特殊访问权限。但是，请确保为此帐户使用一个长度（> 16个字符）的随机密码，因为在大多数环境中，这个密码不太可能经常更改。
- en: 'Next, we direct `authenticate / pap` section of the `/etc/freeradius/3.0/sites-enabled/default`
    file (note that this is a link to the main file in `/etc/freeradius/3.0/sites-available`),
    as follows:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将指导`/etc/freeradius/3.0/sites-enabled/default`文件的`authenticate / pap`部分（请注意，这是指向`/etc/freeradius/3.0/sites-available`中主文件的链接），如下所示：
- en: '[PRE12]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Also, be sure to uncomment the `ldap` line in that same section, like so:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，请确保取消注释该部分中的`ldap`行，如下所示：
- en: '[PRE13]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'We can now run `freeradius` in the foreground. This will allow us to see message
    processing as it occurs—in particular, any errors that display. This means we
    won''t have to hunt down error logs during this initial set of tests. Here''s
    the code you''ll need for this:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以在前台运行`freeradius`。这将允许我们在发生时查看消息处理-特别是显示的任何错误。这意味着在进行这一系列初始测试期间，我们不必寻找错误日志。以下是您需要的代码：
- en: '[PRE14]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'If you need to debug further, you can run the `freeradius` server as a foreground
    application to display default logging in real time with the following code:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您需要进一步调试，可以使用以下代码将`freeradius`服务器作为前台应用程序运行，以实时显示默认日志记录：
- en: '[PRE15]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Finally, when everything is working, restart your RADIUS server to collect
    the configuration changes by running the following command:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，当一切正常工作时，通过运行以下命令重新启动您的RADIUS服务器以收集配置更改：
- en: '[PRE16]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'And again, to test a user login from your local machine, execute the following
    code:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，要从本地计算机测试用户登录，请执行以下代码：
- en: '[PRE17]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Finally, we''ll want to enable LDAP-enabled group support—we''ll see in a later
    section (*RADIUS use-case scenarios*) that we''ll want to use group membership
    in various policies. To do this, we''ll revisit the `ldap` file and add a `group`
    section, as follows:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们将希望启用LDAP启用的组支持-我们将在后面的部分（* RADIUS使用案例场景*）中看到，我们将希望在各种策略中使用组成员资格。为此，我们将重新访问`ldap`文件并添加一个`group`部分，如下所示：
- en: '[PRE18]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: With this done, one thing we should realize is that LDAP isn't meant so much
    for authentication as for authorization—it's a great method to check group membership,
    for instance. In fact, if you noticed as we were building, this was specifically
    called out in the configuration files.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 完成这些操作后，我们应该意识到的一件事是，LDAP并不是用于身份验证，而是用于授权-这是一个检查组成员资格的好方法，例如。实际上，如果您在构建过程中注意到，这在配置文件中是明确指出的。
- en: Let's fix this situation, and use **NT LAN Manager** (**NTLM**), one of the
    underlying AD protocols for authentication, instead.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们解决这种情况，并使用**NT LAN Manager**（**NTLM**）作为身份验证的底层AD协议。
- en: NTLM authentication (AD) – introducing CHAP
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: NTLM身份验证（AD）-引入CHAP
- en: Linking RADIUS back to AD for account information and group membership is by
    far the most common configuration that we see in most organizations. While Microsoft
    **Network Policy Server** (**NPS**) is free and easily installed on a domain-member
    Windows server, it does not have an easy configuration to link it to a **two-factor
    authentication** (**2FA**) service such as Google Authenticator. This makes a
    Linux-based RADIUS server with AD integration an attractive option for organizations
    requiring MFA that also takes advantage of AD group membership when establishing
    access rights.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 将RADIUS与AD链接以获取帐户信息和组成员资格，这是我们在大多数组织中看到的最常见的配置。虽然微软**网络策略服务器**（**NPS**）是免费的，并且可以轻松安装在域成员Windows服务器上，但它没有一个简单的配置来将其链接到**双因素身份验证**（**2FA**）服务，比如Google
    Authenticator。这使得基于Linux的RADIUS服务器与AD集成成为组织需要MFA并在建立访问权限时利用AD组成员资格的吸引人选择。
- en: 'What does the authentication look like for this method? Let''s look at the
    standard **Challenge-Handshake Authentication Protocol** (**CHAP**), **Microsoft
    CHAP** (**MS-CHAP**) or MS-CHAPv2, which adds password-change capabilities to
    the RADIUS exchange. A basic CHAP exchange looks like this:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法的身份验证是什么样的？让我们来看看标准的**挑战-握手认证协议**（**CHAP**），**Microsoft CHAP**（**MS-CHAP**）或MS-CHAPv2，它为RADIUS交换添加了更改密码的功能。基本的CHAP交换如下：
- en: '![Figure 9.4 – Basic CHAP exchange'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '![图9.4 - 基本CHAP交换'
- en: '](img/B16336_09_004.jpg)'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16336_09_004.jpg)'
- en: Figure 9.4 – Basic CHAP exchange
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 图9.4 - 基本CHAP交换
- en: 'Going through the preceding exchange in sequence, we can note the following:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 按顺序进行前述交换，我们可以注意到以下内容：
- en: First, the client sends the initial **Hello**, which includes the **USERID**
    (but not the password).
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 首先，客户端发送初始的**Hello**，其中包括**USERID**（但不包括密码）。
- en: The **CHAP Challenge** is sent from the NAS. This is the result of a random
    number and the RADIUS secret key, which is then hashed using MD5.
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CHAP Challenge**从NAS发送。这是随机数和RADIUS秘钥的结果，然后使用MD5进行哈希处理。'
- en: The client (**Supplicant**) uses that value to hash the password, then sends
    that value in the response.
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端（**Supplicant**）使用该值对密码进行哈希处理，然后将该值发送到响应中。
- en: The NAS sends that random number and the response value to the RADIUS server,
    which performs its own calculation.
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NAS将该随机数和响应值发送到RADIUS服务器，RADIUS服务器执行自己的计算。
- en: If the two values match, then the session gets a **RADIUS Access-Accept** response;
    if not, then it gets a **RADIUS Access-Reject** response.
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果两个值匹配，则会话会收到**RADIUS Access-Accept**响应；如果不匹配，则会收到**RADIUS Access-Reject**响应。
- en: The **Protected Extensible Authentication Protocol** (**PEAP**) adds one more
    wrinkle to this exchange – there is a TLS exchange between the client and the
    RADIUS server, which allows the client to verify the identity of the server, as
    well as encrypt the exchange of data using standard TLS. For this, the RADIUS
    server needs a certificate, and the clients need the issuing CA in their store
    of trusted CAs.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '**受保护的可扩展认证协议**（**PEAP**）为此交换增加了一个额外的复杂性 - 客户端和RADIUS服务器之间存在TLS交换，这允许客户端验证服务器的身份，并使用标准TLS加密数据交换。为此，RADIUS服务器需要一个证书，并且客户端需要在其受信任的CA存储中拥有发行CA。'
- en: To configure AD integration (using PEAP MS-CHAPv2) for FreeRADIUS, we'll configure
    `ntlm_auth` for authentication, and move LDAP as-is to the `authorize` section
    of the configuration.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 要为FreeRADIUS配置AD集成（使用PEAP MS-CHAPv2），我们将为身份验证配置`ntlm_auth`，并将LDAP原样移动到配置的`authorize`部分。
- en: 'To start things rolling with `ntlm_auth`, we''ll need to install `samba` (a
    play on **SMB**, which stands for **Server Message Block**). First, make sure
    that it isn''t already installed, as follows:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始使用`ntlm_auth`，我们需要安装`samba`（这是**SMB**的玩笑，代表**服务器消息块**）。首先，确保它尚未安装，如下所示：
- en: '[PRE19]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'From this listing, we see that it''s not installed in our VM, so let''s add
    it to our configuration with the following command:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 从此列表中，我们看到它没有安装在我们的VM中，所以让我们使用以下命令将其添加到我们的配置中：
- en: '[PRE20]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Also, install the following:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 还要安装以下内容：
- en: '[PRE21]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Edit `/etc/samba/smb.conf`, and update the lines shown in the following code
    snippet for your domain (our test domain is shown). Be sure to use `sudo` when
    you edit—you''ll need root rights to modify this file (note that the `[homes]`
    line is likely commented out by default):'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑`/etc/samba/smb.conf`，并根据您的域更新以下代码段中显示的行（我们的测试域已显示）。在编辑时确保使用`sudo` - 您需要root权限来修改此文件（请注意，默认情况下`[homes]`行可能已被注释掉）：
- en: '[PRE22]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Next, we''ll edit the `krb5.conf` file. The example file is in `/usr/share/samba/setup`—copy
    that file to `/etc` and edit that copy. Note that the `EXAMPLE.COM` entries are
    there by default, and in most installations, these should be removed (`example.com`
    is a reserved domain for examples and documentation). The code is illustrated
    in the following snippet:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将编辑`krb5.conf`文件。示例文件位于`/usr/share/samba/setup`中 - 将该文件复制到`/etc`并编辑该副本。请注意，默认情况下`EXAMPLE.COM`条目是存在的，在大多数安装中，这些条目应该被删除（`example.com`是用于示例和文档的保留域）。代码如下所示：
- en: '[PRE23]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Edit the `/etc/nsswitch.conf` file and add the `winbind` keyword, as shown
    in the following code snippet. Note that the `automount` line isn''t there by
    default in Ubuntu 20, so you may wish to add that:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑`/etc/nsswitch.conf`文件，并添加`winbind`关键字，如下代码段所示。请注意，在Ubuntu 20中，默认情况下可能没有`automount`行，因此您可能希望添加它：
- en: '[PRE24]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Things should be partially configured for you now—restart your Linux host,
    then verify that the following two services are running:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 现在应该为您部分配置了 - 重新启动Linux主机，然后验证以下两个服务是否正在运行：
- en: '`smbd` provides the file- and printer-sharing services.'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`smbd`提供文件和打印共享服务。'
- en: '`nmbd` provides the NetBIOS-to-IP-address name service.'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nmbd`提供NetBIOS到IP地址名称服务。'
- en: 'At this point, you can join your Linux host to the AD domain (you''ll be prompted
    for the password), as follows:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，您可以将Linux主机加入AD域（将提示您输入密码），如下所示：
- en: '[PRE25]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Restart the `smbd` and `windbind` daemons, like this:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 重新启动`smbd`和`windbind`守护程序，如下所示：
- en: '[PRE26]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'You can check the status with the following code:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用以下代码检查状态：
- en: '[PRE27]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Or, for more detail, you could run the following code:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，要获取更多详细信息，您可以运行以下代码：
- en: '[PRE28]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'You should now be able to list users and groups in the Windows domain, as illustrated
    in the following code snippet:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您应该能够列出Windows域中的用户和组，如下面的代码片段所示：
- en: '[PRE29]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'If this doesn''t work, the first place to look for the answer is likely the
    DNS. Remember the age-old proverb, phrased here as a haiku:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这行不通，那么寻找答案的第一个地方很可能是DNS。请记住这句古老的谚语，这里以俳句的形式表达：
- en: '*It''s not DNS*'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '*不是DNS*'
- en: '*There is no way it''s DNS*'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '*绝对不是DNS*'
- en: '*It was DNS*'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '*是DNS的问题*'
- en: This is so funny because it's true. If the DNS configuration isn't perfect,
    then all kinds of other things don't work as expected. In order to get this to
    all work, your Linux station will need to resolve records on the Windows DNS server.
    The easiest way to make that happen is to have your station's DNS server setting
    point to that IP (refer to [*Chapter 2*](B16336_02_Final_NM_ePub.xhtml#_idTextAnchor035),
    *Basic Linux Network Configuration and Operations – Working with Local Interfaces*,
    if you need a refresh on the `nmcli` command). Alternatively, you could set up
    a conditional forwarder on your Linux DNS server, or add a secondary zone of the
    AD DNS on your Linux host—there are several alternatives available, depending
    on which service you need to be "primary" in your situation.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 这太有趣了，因为这是真的。如果DNS配置不完美，那么各种其他事情都不会按预期工作。为了使所有这些工作正常，您的Linux站点将需要在Windows DNS服务器上解析记录。使这成为现实的最简单方法是将您站点的DNS服务器设置指向该IP（如果您需要刷新`nmcli`命令，请参考[*第2章*](B16336_02_Final_NM_ePub.xhtml#_idTextAnchor035)，*基本Linux网络配置和操作
    – 使用本地接口*）。或者，您可以在Linux DNS服务器上设置有条件的转发器，或者在Linux主机上添加AD DNS的辅助区域—根据您需要在您的情况下“主要”的服务，有几种可用的替代方案。
- en: 'To test DNS resolution, try to ping your domain controller by name. If that
    works, try to look up some **service** (**SRV**) records (which are part of the
    underpinnings of AD)—for instance, you could look at this one:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 要测试DNS解析，请尝试按名称ping您的域控制器。如果成功，请尝试查找一些**service**（**SRV**）记录（这些记录是AD的基础组成部分）—例如，您可以查看这个：
- en: '[PRE30]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Next, verify that you can authenticate to AD using `wbinfo`, then again using
    the `ntlm_auth` command (which RADIUS uses), as follows:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，验证您是否可以使用`wbinfo`进行AD身份验证，然后再次使用RADIUS使用的`ntlm_auth`命令，如下所示：
- en: '[PRE31]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Note that plain text passwords failed for the `wbinfo` login attempt—this (of
    course) is the desired situation.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，纯文本密码在“wbinfo”登录尝试中失败了，这（当然）是期望的情况。
- en: With our connection to the domain working, we're now set to get to work on the
    RADIUS configuration.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 通过与域的连接正常工作，我们现在可以开始配置RADIUS了。
- en: 'Our first step is to update the `/etc/freeradius/3.0/mods-available/mschap`
    file, to configure a setting to fix an issue in the challenge/response handshake.
    Your `mschap` file needs to contain the following code:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的第一步是更新`/etc/freeradius/3.0/mods-available/mschap`文件，以配置一个设置来修复挑战/响应握手中的问题。您的`mschap`文件需要包含以下代码：
- en: '[PRE32]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Also, if you scroll down in the file, you''ll see a line starting with `ntlm_auth
    ="`. You''ll want that line to read like this:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，如果您在文件中向下滚动，您会看到以`ntlm_auth =“`开头的一行。您希望该行读起来像这样：
- en: '[PRE33]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'If you are doing machine authentication, you might need to change the `username`
    parameter to the following:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您正在进行机器身份验证，您可能需要将`username`参数更改为以下内容：
- en: '[PRE34]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Finally, to enable PEAP, we go to the `mods-available/eap` file and update the
    `default_eap_type` line, and change that method from `md5` to `peap`. Then, in
    the `tls-config tls-common` section, update the `random_file` line from the default
    value of `${certdir}/random` to now display as `random_file = /dev/urandom`.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，要启用PEAP，我们转到`mods-available/eap`文件并更新`default_eap_type`行，并将该方法从`md5`更改为`peap`。然后，在`tls-config
    tls-common`部分，将`random_file`行从`${certdir}/random`的默认值更新为现在显示为`random_file = /dev/urandom`。
- en: 'When completed, you want the changes to the `eap` file to look like this:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，您希望对`eap`文件的更改如下所示：
- en: '[PRE35]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: This finishes the typical server-side configuration for PEAP authentication.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 这完成了PEAP身份验证的典型服务器端配置。
- en: On the client (supplicant) side, we simply enable CHAP or PEAP authentication.
    In this configuration, the station sends the user ID or machine name as the authenticating
    account, along with a hashed version of the user's or workstation's password.
    On the server side, this hash is compared to its own set of calculations. The
    password never gets transmitted in the clear; however, the "challenge" that the
    server sends is sent as an extra step.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 在客户端（请求者）端，我们只需启用CHAP或PEAP身份验证。在这种配置中，站点发送用户ID或机器名称作为认证帐户，以及用户或工作站密码的哈希版本。在服务器端，此哈希与其自己的计算进行比较。密码永远不会以明文形式传输；然而，服务器发送的“挑战”作为额外步骤发送。
- en: On the NAS device (for instance, a VPN gateway or wireless system), we enable
    `MS-CHAP` authentication, or `MS-CHAPv2` (which adds the capability for password
    changes over RADIUS).
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 在NAS设备上（例如，VPN网关或无线系统），我们启用`MS-CHAP`身份验证，或者`MS-CHAPv2`（它增加了通过RADIUS进行密码更改的功能）。
- en: Now, we'll see things get a bit more complex; what if you want to use RADIUS
    for multiple things—for instance, to control VPN access and admin access to that
    VPN server at the same time, using the same RADIUS servers? Let's explore how
    we can set up rules using the *U**nlang* language to do exactly that.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将看到事情变得更加复杂；如果您想要使用RADIUS来控制多个事物，例如同时控制VPN访问和对该VPN服务器的管理员访问，使用相同的RADIUS服务器？让我们探讨如何使用*U**nlang*语言设置规则来实现这一点。
- en: Unlang – the unlanguage
  id: totrans-178
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Unlang – 无语言
- en: FreeRADIUS supports a simple processing language called **Unlang** (short for
    **unlanguage**). This allows us to make rules that add additional controls to
    the RADIUS authentication flow and final decision.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: FreeRADIUS支持一种称为**Unlang**（**无语言**的缩写）的简单处理语言。这使我们能够制定规则，为RADIUS身份验证流程和最终决策添加额外的控制。
- en: Unlang syntax is generally found in the virtual server files—in our case, that
    would be `/etc/freeradius/3.0/sites-enabled/default`, and can be in the sections
    titled `authorize`, `authenticate`, `post-auth`, `preacct`, `accounting`, `pre-proxy`,
    `post-proxy`, and `session`.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: Unlang语法通常可以在虚拟服务器文件中找到，例如在我们的情况下，可能是`/etc/freeradius/3.0/sites-enabled/default`，并且可以在标题为`authorize`、`authenticate`、`post-auth`、`preacct`、`accounting`、`pre-proxy`、`post-proxy`和`session`的部分中找到。
- en: In most common deploys, we might look for an incoming RADIUS variable or AV
    pair—for instance, `Service-Type`, which might be `Administrative` or `Authenticate-Only`,
    and in the Unlang code, match that up with a check against group membership—for
    instance, network admins, VPN users, or wireless users.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数常见的部署中，我们可能会寻找一个传入的RADIUS变量或AV对，例如`Service-Type`，可能是`Administrative`或`Authenticate-Only`，在Unlang代码中，将其与组成员资格进行匹配，例如网络管理员、VPN用户或无线用户。
- en: 'For the simple case of the two firewall login requirements (`VPN-Only` or `Administrative`
    access), you might have a rule like this:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 对于两个防火墙登录要求的简单情况（`仅VPN`或`管理`访问），您可能会有这样的规则：
- en: '[PRE36]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: You can add further to this example, knowing that if a user is VPNing in, `Called-Station-ID`
    will be the external IP address of the firewall, whereas an administrative login
    request will be to the inside IP or management IP (depending on your configuration).
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以进一步添加到这个示例中，如果用户正在VPN连接，`Called-Station-ID`将是防火墙的外部IP地址，而管理登录请求将是内部IP或管理IP（取决于您的配置）。
- en: If a large number of devices are in play, a `switch/case` construct can come
    in handy to simplify a never-ending list of `if/else-if` statements. You can also
    use `all switches` with (for instance) `NAS-Identifier =~ /SW*/`.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 如果有大量设备在运行，`switch/case`结构可以很方便地简化永无止境的`if/else-if`语句列表。您还可以使用`all switches`与（例如）`NAS-Identifier
    =~ /SW*/`。
- en: If authenticating for wireless access, the `NAS-Port-Type` setting will be `Wireless-802.11`,
    and for an 802.1x wired access request, the `NAS-Port-Type` setting will be `Ethernet`.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 如果要进行无线访问的身份验证，`NAS-Port-Type`设置将是`Wireless-802.11`，对于802.1x有线访问请求，`NAS-Port-Type`设置将是`Ethernet`。
- en: You can also include different authentication criteria per wireless SSID, as
    the SSID is typically in the `Called-Station-SSID` variable, in the format `<Mac
    Address of the AP>:SSIDNAME`, with `-` characters to delimit the `58-97-bd-bc-3e-c0:WLCORP`.
    So, to just return the MAC address, you would match on the last six characters—so,
    something such as `.\.WLCORP$`.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以根据不同的无线SSID包含不同的身份验证标准，因为SSID通常在`Called-Station-SSID`变量中，格式为`<AP的MAC地址>:SSID名称`，用`-`字符分隔`58-97-bd-bc-3e-c0:WLCORP`。因此，要返回MAC地址，您将匹配最后六个字符，例如`.\.WLCORP$`。
- en: In a typical corporate environment, we might have two to three SSIDs for various
    access levels, administrative users to different network device types, users with
    VPN access or access to a specific SSID—you can see how this coding exercise can
    become very complex very quickly. It's recommended that changes to your `unlang`
    syntax be first tested in a small test environment (perhaps with virtual network
    devices), then deployed and given production testing during scheduled outage/test
    maintenance windows.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 在典型的企业环境中，我们可能会有两到三个不同访问级别的SSID，对不同网络设备类型的管理用户，具有VPN访问权限或访问特定SSID的用户。您可以看到这种编码练习如何迅速变得非常复杂。建议首先在小型测试环境中测试您的`unlang`语法的更改（也许使用虚拟网络设备），然后在计划的停机/测试维护窗口期间进行部署和生产测试。
- en: Now that we have all the bits and pieces built, let's configure some real-world
    devices for various authentication requirements.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经构建好了所有的部分，让我们为各种身份验证需求配置一些真实的设备。
- en: RADIUS use-case scenarios
  id: totrans-190
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: RADIUS使用案例场景
- en: In this section, we'll look at several device types and the various authentication
    options and requirements those devices might have, and explore how we can address
    them all using RADIUS. Let's start with a VPN gateway, using standard user ID
    and password authentication (don't worry—we won't leave it like that).
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将看看几种设备类型以及这些设备可能具有的各种身份验证选项和要求，并探讨如何使用RADIUS来解决它们。让我们从VPN网关开始，使用标准的用户ID和密码身份验证（不用担心，我们不会就这样留下它）。
- en: VPN authentication using user ID and password
  id: totrans-192
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用用户ID和密码进行VPN身份验证
- en: Authentication to VPN services (or, before that, dial-up services) is what most
    organizations put RADIUS in for in the first place. As time has marched on, however,
    a single-factor user ID and password login is no longer a safe option for any
    public-facing service. We'll discuss this in this section, but we'll update it
    to a more modern approach when we get to our section on MFA.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: VPN服务（或者在此之前，拨号服务）的身份验证是大多数组织首先使用RADIUS的原因。然而，随着时间的推移，单因素用户ID和密码登录对于任何面向公众的服务来说已经不再是安全选项。我们将在本节讨论这一点，但当我们在MFA部分时，我们将更新为更现代的方法。
- en: 'First, add your VPN gateway (usually your firewall) as a client for RADIUS—add
    it to your `/etc/freeradius/3.0/clients.conf` file, like this:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，将您的VPN网关（通常是防火墙）添加为RADIUS的客户端-将其添加到您的`/etc/freeradius/3.0/clients.conf`文件中，如下所示：
- en: '[PRE37]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Next, configure your firewall to point to RADIUS for VPN user authentication.
    For a Cisco **Adaptive Security Appliance** (**ASA**) firewall, for instance,
    you would make the following changes:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，配置您的防火墙指向RADIUS进行VPN用户身份验证。例如，对于Cisco自适应安全设备（ASA）防火墙，您可以进行以下更改：
- en: '[PRE38]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Next, update the tunnel-group to use the `RADIUS` server group for authentication,
    as follows:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，更新隧道组以使用`RADIUS`服务器组进行身份验证，如下所示：
- en: '[PRE39]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Now that this is working, let's add `RADIUS` as the authentication method for
    administrative access to this same box.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 现在这个已经可以工作了，让我们将`RADIUS`作为对这个相同设备的管理访问的身份验证方法。
- en: Administrative access to network devices
  id: totrans-201
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 对网络设备的管理访问
- en: The next thing we'll want to layer in is administrative access to that same
    firewall. How do we do this for administrators, but somehow prevent regular VPN
    users from accessing administrative functions? Easy—we'll take advantage of some
    additional AV pairs (remember we discussed those earlier in the chapter?).
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将要添加的是对同一防火墙的管理访问。我们如何为管理员做到这一点，但又防止常规VPN用户访问管理功能？很简单 - 我们将利用一些额外的AV对（记得我们在本章前面讨论过吗？）。
- en: 'We''ll start by adding a new network policy with the following credentials:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先添加一个新的网络策略，具有以下凭据：
- en: For VPN users, we'll add an AV pair for `Service-Type`, with a value of `Authenticate
    Only`.
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于VPN用户，我们将添加一个`服务类型`的AV对，值为`仅认证`。
- en: For administrative users, we'll add an AV pair for `Service-Type`, with a value
    of `Administrative`.
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于管理用户，我们将添加一个`服务类型`的AV对，值为`管理`。
- en: On the RADIUS side, the policy will require group membership for each policy,
    so we'll create groups called `VPN Users` and `Network Administrators` in the
    backend authentication store and populate them appropriately. Note that when this
    is all put together, admins will have VPN access and admin access, but people
    with regular VPN accounts will only have VPN access.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 在RADIUS端，策略将要求每个策略的组成员资格，因此我们将在后端身份验证存储中创建名为`VPN用户`和`网络管理员`的组，并适当填充它们。请注意，当所有这些放在一起时，管理员将具有VPN访问权限和管理访问权限，但具有常规VPN帐户的人只能具有VPN访问权限。
- en: To get the actual rule syntax for this, we'll go back to the previous section
    on Unlang and use that example, which does exactly what we need. If you are requesting
    administrative access, you need to be in the `Network Admins` group, and if you
    need VPN access, you need to be in the `VPN Users` group. If the access and group
    membership don't align, then you are denied access.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取此规则的实际语法，我们将回到Unlang的上一节，并使用那个例子，它恰好满足我们的需求。如果您正在请求管理访问权限，您需要在`网络管理员`组中，如果您需要VPN访问权限，您需要在`VPN用户`组中。如果访问和组成员资格不符，则将拒绝访问。
- en: 'Now that RADIUS is set up, let''s direct administrative access to the **graphical
    user interface** (**GUI**) and **Secure Shell** (**SSH**) interfaces to RADIUS
    for authentication. On the firewall, add the following changes to the ASA firewall
    configuration we discussed in the VPN illustration:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 现在RADIUS已经设置好了，让我们将对**图形用户界面**（**GUI**）和**安全外壳**（**SSH**）接口的管理访问指向RADIUS进行身份验证。在防火墙上，将以下更改添加到我们在VPN示例中讨论过的ASA防火墙配置中：
- en: '[PRE40]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Note that there is an "authentication list" for each login method. We're using
    RADIUS first, but if that fails (for instance, if the RADIUS server is down or
    not reachable), authentication to local accounts will fail. Also, note that we
    have RADIUS in the list for `enable` mode. This means that we no longer need to
    have a single, shared enable password that all administrators must use. Finally,
    the `aaa authentication log-history` command means that when you enter `enable`
    mode, the firewall will inject your username into the RADIUS request, so you'll
    only need to type your password when entering `enable` mode.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，每种登录方法都有一个“身份验证列表”。我们首先使用RADIUS，但如果失败（例如，如果RADIUS服务器宕机或无法访问），则对本地帐户的身份验证将失败。还要注意，我们在`enable`模式的列表中有RADIUS。这意味着我们不再需要一个所有管理员必须使用的单一共享启用密码。最后，`aaa
    authentication log-history`命令意味着当您进入`enable`模式时，防火墙将将您的用户名注入RADIUS请求，因此您只需要在输入`enable`模式时输入密码。
- en: If we did not have the `unlang` rule in place, just the preceding configuration
    would allow regular access VPN users to request and obtain administrative access.
    Once you have RADIUS controlling multiple accesses on one device, it's imperative
    that you have rules written to keep them straight.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们没有设置`unlang`规则，那么仅仅前面的配置将允许常规访问VPN用户请求和获取管理访问权限。一旦RADIUS控制了一个设备上的多个访问权限，就必须编写规则来保持它们的清晰。
- en: With our firewall configured, let's take a look at administrative access to
    our routers and switches.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 配置好我们的防火墙后，让我们来看看对路由器和交换机的管理访问。
- en: Administrative access to routers and switches
  id: totrans-213
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 对路由器和交换机的管理访问
- en: 'We''ll start with a Cisco router or switch configuration. This configuration
    will vary slightly between platforms or **Internetwork Operating System** (**IOS**)
    versions, but should look very similar to this:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从思科路由器或交换机配置开始。这个配置在不同平台或** Internetwork Operating System **（** IOS **）版本之间会有轻微差异，但应该看起来非常类似于这样：
- en: '[PRE41]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'A **Hewlett-Packard** (**HP**) ProCurve equivalent configuration would look
    like this:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: '**惠普**（**HP**）ProCurve等效配置将如下所示：'
- en: '[PRE42]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Note that when entering `enable` mode, the HP switch will want a full authentication
    (user ID and password) a second time, not just the password, as you might expect.,
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，当进入`enable`模式时，HP交换机将需要第二次进行完整身份验证（用户ID和密码），而不仅仅是密码，这可能出乎您的意料。
- en: 'At the RADIUS server, administrative access requests from the Cisco and HP
    switches will include the same AV pair we saw for administrative access to the
    firewall: `Service-type: Administrative`. You will likely pair this with a requirement
    for group membership in RADIUS, as we did for the firewall.'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 在RADIUS服务器上，来自思科和惠普交换机的管理访问请求将包括我们在防火墙管理访问中看到的相同AV对：`服务类型：管理`。您可能会将此与RADIUS中的组成员资格要求配对，就像我们为防火墙所做的那样。
- en: Now that we have RADIUS controlling admin access to our switches, let's expand
    our RADIUS control to include more secure methods of authentication. Let's start
    this by exploring EAP-TLS (where **EAP** stands for **Extensible Authentication
    Protocol**), which uses certificates for mutual authentication exchange between
    the client and the RADIUS server.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们已经让RADIUS控制我们的交换机的管理访问权限，让我们将RADIUS控制扩展到包括更安全的身份验证方法。让我们从探索EAP-TLS（其中**
    EAP **代表**可扩展身份验证协议**）开始，它使用证书进行客户端和RADIUS服务器之间的相互身份验证交换。
- en: RADIUS configuration for EAP-TLS authentication
  id: totrans-221
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: EAP-TLS身份验证的RADIUS配置
- en: To start this section, let's discuss what EAP-TLS really is. **EAP** is a method
    of extending RADIUS past its traditional user ID/password exchange. We're familiar
    with TLS from [*Chapter 8*](B16336_08_Final_NM_ePub.xhtml#_idTextAnchor133), *Certificate
    Services on Linux*. So, stated simply, EAP-TLS is the use of certificates to prove
    identity and provide authentication services within RADIUS.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始本节，让我们讨论一下EAP-TLS到底是什么。**EAP**是一种扩展RADIUS传统用户ID/密码交换的方法。我们在[*第8章*](B16336_08_Final_NM_ePub.xhtml#_idTextAnchor133)中熟悉了TLS，*Linux上的证书服务*。因此，简单地说，EAP-TLS是在RADIUS内使用证书来证明身份和提供认证服务。
- en: In most "regular company" use cases, EAP-TLS is paired with a second protocol
    called 802.1x, which is used to control access to the network—for instance, access
    to a wireless SSID or wired Ethernet port. We'll be a while getting there, but
    let's start looking at the nuts and bolts of EAP-TLS, then add in network access.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数“常规公司”使用情况下，EAP-TLS与一个名为802.1x的第二协议配对使用，该协议用于控制对网络的访问，例如对无线SSID或有线以太网端口的访问。我们将花一些时间来了解这一点，但让我们开始看看EAP-TLS的具体细节，然后加入网络访问。
- en: 'So, how does this look from a protocol perspective? If you review the *Using
    a certificate – web server* example that we discussed in [*Chapter 8*](B16336_08_Final_NM_ePub.xhtml#_idTextAnchor133),
    *Certificate Services on Linux*, it looks exactly like that, but in both directions.
    Drawing it out (in *Figure 9.5*), we see the same information exchange as we saw
    in the web-server example, but in both directions, outlined as follows:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，从协议的角度来看，这是什么样子的呢？如果您回顾我们在[*第8章*](B16336_08_Final_NM_ePub.xhtml#_idTextAnchor133)中讨论的*使用证书–Web服务器*示例，它看起来与那个例子完全一样，但是在双向上。绘制出来（在*图9.5*中），我们看到与Web服务器示例中相同的信息交换，但在双向上，如下所述：
- en: The client (or supplicant) sends their identity information to RADIUS, using
    their user or device certificate instead of the user ID and password—this information
    is used by the RADIUS server to verify the identity of the supplicant, and either
    permit or deny access based on that information (and associated rules within RADIUS).
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端（或supplicant）使用其用户或设备证书向RADIUS发送其身份信息，而不是使用用户ID和密码——RADIUS服务器使用这些信息来验证supplicant的身份，并根据该信息（和RADIUS内的相关规则）允许或拒绝访问。
- en: Meanwhile, the supplicant verifies the identity of the RADIUS server in the
    same way—verifying that the server name matches the **Common Name** (**CN**) in
    the certificate and that the certificate is trusted. This guards against malicious
    RADIUS servers being deployed (for instance, in an "evil twin" wireless attack).
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 同时，supplicant以相同的方式验证RADIUS服务器的身份——验证服务器名称是否与证书中的**通用名称**（**CN**）匹配，并且证书是否受信任。这可以防范恶意部署的RADIUS服务器（例如，在“恶意双胞胎”无线攻击中）。
- en: Once this mutual authentication is completed, the network connection is completed
    between the supplicant and the network device (NAS)—usually, that device is a
    switch or a WAP (or a wireless controller).
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一旦完成了这种相互认证，网络连接就在supplicant和网络设备（NAS）之间完成了——通常，该设备是交换机或WAP（或无线控制器）。
- en: 'You can see an illustration of this in the following diagram:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在以下图表中看到这一点的说明：
- en: '![Figure 9.5 – Authentication flow for 802.1x/EAP-TLS session'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: '![图9.5 – 802.1x/EAP-TLS会话的认证流程'
- en: '](img/B16336_09_005.jpg)'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16336_09_005.jpg)'
- en: Figure 9.5 – Authentication flow for 802.1x/EAP-TLS session
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 图9.5 – 802.1x/EAP-TLS会话的认证流程
- en: 'Here are a few things to note:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些需要注意的事项：
- en: All of this stipulates that all the required certificates are distributed in
    advance. This means that the RADIUS server needs its certificate installed, and
    the supplicants need their device certificate and/or user certificate installed.
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有这些都要求提前分发所有必需的证书。这意味着RADIUS服务器需要安装其证书，而supplicants需要安装其设备证书和/或用户证书。
- en: As part of this, the CA has to be trusted by the devices, the users, and the
    RADIUS server. While all of this can be done using a public CA, it's normally
    done by a private CA.
  id: totrans-234
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作为其中的一部分，CA必须得到设备、用户和RADIUS服务器的信任。虽然所有这些都可以通过公共CA完成，但通常由私有CA完成。
- en: During the authentication process, neither the supplicant nor the RADIUS server
    (of course) communicates with the CA.
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在认证过程中，supplicant和RADIUS服务器（当然）都不与CA通信。
- en: Now that we understand how EAP-TLS works conceptually, what does an EAP-TLS
    configuration look like on a wireless controller?
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们理解了EAP-TLS的工作原理，那么在无线控制器上，EAP-TLS配置是什么样子的呢？
- en: Wireless network authentication using 802.1x/EAP-TLS
  id: totrans-237
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用802.1x/EAP-TLS进行无线网络认证
- en: EAP-TLS for 802.1x authentication is introduced into many companies as their
    wireless client authentication mechanism, mostly because every other authentication
    method for wireless is subject to one or more simple attacks. EAP-TLS is literally
    the only secure method to authenticate to wireless.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 对于许多公司来说，EAP-TLS用于802.1x认证作为其无线客户端认证机制，主要是因为无线的其他任何认证方法都容易受到一种或多种简单攻击的影响。EAP-TLS实际上是唯一安全的无线认证方法。
- en: That being said, the configuration on the NAS (the wireless controller, in this
    case) is very simple—the heavy lifting for preparation and configuration is all
    on the RADIUS server and the client station. For a Cisco wireless controller,
    the configuration is normally done primarily through the GUI, though of course,
    a command line is there as well.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 也就是说，在NAS上（在这种情况下是无线控制器）的配置非常简单——准备和配置的大部分工作都在RADIUS服务器和客户端站上。对于思科无线控制器，配置通常主要通过GUI完成，当然，也有命令行。
- en: 'In the GUI, EAP-TLS authentication is very simple—we''re just setting up a
    pass-through for the client to authenticate directly to the RADIUS server (and
    vice versa). The steps are outlined here:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 在GUI中，EAP-TLS认证非常简单——我们只是为客户端建立一个直接向RADIUS服务器进行认证的通道（反之亦然）。步骤如下：
- en: First, define a RADIUS server for authentication. There's an almost identical
    configuration for the same server for RADIUS accounting, using port `1813`. You
    can see a sample configuration in the following screenshot:![Figure 9.6 – Wireless
    controller configuration for RADIUS server
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，为身份验证定义一个RADIUS服务器。几乎相同的配置也适用于相同服务器的RADIUS计费，使用端口`1813`。您可以在以下截图中看到一个示例配置：![图9.6
    – 无线控制器配置的RADIUS服务器
- en: '](img/B16336_09_006.jpg)'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16336_09_006.jpg)'
- en: Figure 9.6 – Wireless controller configuration for RADIUS server
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 图9.6 – 无线控制器配置的RADIUS服务器
- en: Next, under **SSID Definition**, we'll set up the authentication as 802.1x,
    as illustrated in the following screenshot:![Figure 9.7 – Configuring SSID to
    use 802.1x authentication
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在SSID定义下，我们将设置802.1x身份验证，如以下截图所示：![图9.7 – 配置SSID使用802.1x身份验证
- en: '](img/B16336_09_007.jpg)'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16336_09_007.jpg)'
- en: Figure 9.7 – Configuring SSID to use 802.1x authentication
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 图9.7 – 配置SSID使用802.1x身份验证
- en: 'Finally, under **AAA Servers**, we link the RADIUS server to the **SSID**,
    as illustrated in the following screenshot:'
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，在AAA服务器下，我们将RADIUS服务器链接到SSID，如以下截图所示：
- en: '![Figure 9.8 – Assigning RADIUS server for 802.1x authentication and accounting'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: '![图9.8 – 为802.1x身份验证和计费分配RADIUS服务器'
- en: '](img/B16336_09_008.jpg)'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16336_09_008.jpg)'
- en: Figure 9.8 – Assigning RADIUS server for 802.1x authentication and accounting
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 图9.8 – 为802.1x身份验证和计费分配RADIUS服务器
- en: To make this all work, both the clients and the RADIUS server need appropriate
    certificates and need to be configured for EAP-TLS authentication. Distributing
    the certificates well in advance is recommended—especially if you are issuing
    certificates using automation, you want to give your client stations enough lead
    time so that they will all have connected up and triggered their certificate issuance
    and installation.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使所有这些工作正常运行，客户端和RADIUS服务器都需要适当的证书，并且需要配置EAP-TLS身份验证。建议提前分发证书，特别是如果您正在使用自动化发放证书，您需要给客户端足够的时间，以便它们都连接并触发证书的发放和安装。
- en: With the wireless network authentication now secured with EAP-TLS, what does
    the analogous configuration look like on a typical workstation switch?
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 现在使用EAP-TLS安全认证的无线网络，典型的工作站交换机上的类似配置是什么样的？
- en: Wired network authentication using 802.1x/EAP-TLS
  id: totrans-253
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用802.1x/EAP-TLS的有线网络身份验证
- en: In this example, we'll show the switch-side configuration (Cisco) for 802.1x
    authentication of network devices. In this configuration, the workstations authenticate
    using EAP-TLS, and we tell the switch to "trust" the phones. While this is a common
    configuration, it's easy to circumvent—an attacker can just tell their laptop
    to "tag" its packets (using the `nmcli` command, for instance) as **virtual local-area
    network** (**VLAN**) 105 (the voice VLAN). As long as the switch trusts the device
    to set its own VLAN, this attack is not so hard, though getting all the parameters
    "just perfect" to continue an attack from there can take some effort. For this
    reason, it's by far preferred to have both PCs and phones authenticate, but this
    requires an additional setup—the phones need device certificates to complete this
    recommended configuration.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们将展示网络设备的802.1x身份验证的交换机端配置（思科）。在这种配置中，工作站使用EAP-TLS进行身份验证，我们告诉交换机“信任”电话。虽然这是一种常见的配置，但很容易被规避——攻击者可以告诉他们的笔记本电脑将其数据包“标记”（例如使用`nmcli`命令）为虚拟局域网（VLAN）105（语音VLAN）。只要交换机信任设备设置自己的VLAN，这种攻击就不那么困难，尽管从那里继续攻击需要一些努力来使所有参数“完美”。因此，最好是让PC和电话都进行身份验证，但这需要额外的设置——电话需要设备证书才能完成这种推荐的配置。
- en: Let's get on with our example switch configuration. First, we define the RADIUS
    servers and group (this should look familiar from the section on administrative
    access).
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续我们的示例交换机配置。首先，我们定义RADIUS服务器和组（这应该看起来很熟悉，来自管理访问部分）。
- en: 'The switch configuration to allow 802.1x includes several global commands,
    setting up the RADIUS servers and the RADIUS group, and linking 802.1x authentication
    back to the RADIUS configuration. These commands are illustrated in the following
    code snippet:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 允许802.1x的交换机配置包括一些全局命令，设置RADIUS服务器和RADIUS组，并将802.1x身份验证链接回RADIUS配置。这些命令在以下代码片段中说明：
- en: '[PRE43]'
  id: totrans-257
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: Next, we configure the switch ports. A typical switch port, with 802.1x authentication
    for the workstation on VLAN 101, using workstation and/or user certificates (previously
    issued) and no authentication for **Voice over IP** (**VOIP**) phones (on VLAN
    105). Note that as we discussed, the authentication is mutual—the workstations
    authenticate the RADIUS server as valid in the same exchange that the RADIUS server
    authenticates the workstation.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们配置交换机端口。典型的交换机端口，使用VLAN 101上的工作站的802.1x身份验证，使用工作站和/或用户证书（之前发放），并且对语音IP电话（在VLAN
    105上）不进行身份验证。请注意，正如我们讨论的那样，身份验证是相互的——工作站在RADIUS服务器认证有效的同时，RADIUS服务器也认证工作站。
- en: '![Table 9.2 – Interface configuration for switch 802.1x/EAP-TLS configuration'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: '![表9.2 – 交换机802.1x/EAP-TLS配置的接口配置'
- en: '](img/B16336_09_Table_02.jpg)'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16336_09_Table_02.jpg)'
- en: Table 9.2 – Interface configuration for switch 802.1x/EAP-TLS configuration
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 表9.2 – 交换机802.1x/EAP-TLS配置的接口配置
- en: To force the VOIP phones to also authenticate using 802.1x and certificates,
    remove the `trust device cisco-phone` line. There is some political risk in this
    change—if a person's PC can't authenticate and they can't call the Helpdesk because
    their phone is out, that immediately raises the "temperature" of the entire troubleshooting
    and solution process, even if they can call the Helpdesk using their cellphone.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 强制VOIP电话也使用802.1x和证书进行身份验证，删除`trust device cisco-phone`行。这种改变存在一定的政治风险——如果一个人的个人电脑无法进行身份验证，他们又无法打电话给帮助台，那么整个故障排除和解决过程的“温度”立即升高，即使他们可以使用手机打电话给帮助台。
- en: Next, let's backtrack a bit and add MFA, in the form of Google Authenticator.
    This is normally used when a user ID and password might be the legacy solution.
    For instance, this is a great solution for protecting VPN authentication from
    things such as password-stuffing attacks.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们稍微回顾一下，并添加Google Authenticator的多因素认证。当用户ID和密码可能是传统解决方案时，通常会使用这种方式。例如，这是保护VPN认证免受诸如密码填充攻击之类的问题的绝佳解决方案。
- en: Using Google Authenticator for MFA with RADIUS
  id: totrans-264
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Google Authenticator进行RADIUS的多因素认证
- en: As discussed, a 2FA authentication scheme is the best option for accessing public-facing
    services, especially any services facing the public internet, whereas in days
    gone by, you might have configured a simple user ID and password for authentication.
    With the ongoing **Short Message Service** (**SMS**) compromises, we see it illustrated
    in the press why SMS messages are a poor choice for 2FA—it's lucky that tools
    such as Google Authenticator can be configured for this use case at no cost.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 正如讨论的那样，对于访问公共服务，特别是面向公共互联网的任何服务，2FA认证方案是最佳选择，而在过去，您可能已经配置了简单的用户ID和密码进行认证。随着持续发生的**短信服务**（**SMS**）泄露事件，我们看到了新闻报道中为什么短信消息不适合作为2FA的例子，幸运的是，像Google
    Authenticator这样的工具可以免费配置用于这种情况。
- en: 'First, we''ll install a new package that allows authentication to Google Authenticator,
    as follows:'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将安装一个新的软件包，允许对Google Authenticator进行认证，如下所示：
- en: '[PRE44]'
  id: totrans-267
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'In the `users` file, we''ll change user authentication to use **pluggable authentication
    modules** (**PAMs**), as follows:'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 在`users`文件中，我们将更改用户认证以使用**可插拔认证模块**（**PAMs**），如下所示：
- en: '[PRE45]'
  id: totrans-269
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'Uncomment the `pam` line, like this:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 取消注释`pam`行，如下所示：
- en: '[PRE46]'
  id: totrans-271
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'Next, we need to edit the `/etc/pam.d/radiusd` file. Comment out the default
    `include` files, as shown in the following code snippet, and add the lines for
    Google Authenticator. Note that `freeraduser` is a local Linux user ID that will
    be the process owner for this module:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们需要编辑`/etc/pam.d/radiusd`文件。注释掉默认的`include`文件，如下面的代码片段所示，并添加Google Authenticator的行。请注意，`freeraduser`是一个本地Linux用户ID，将成为该模块的进程所有者：
- en: '[PRE47]'
  id: totrans-273
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: If your Google Authenticator service is working, then the RADIUS link to it
    should be working now too!
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的Google Authenticator服务正常工作，那么与之相关的RADIUS链接现在也应该正常工作了！
- en: Next, generate the Google Authenticator secret key and supply the **Quick Response**
    (**QR**) code, account recovery information, and other account information to
    the client (this is likely a self-serve implementation in most environments).
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，生成Google Authenticator的秘钥并提供**快速响应**（**QR**）码、账户恢复信息和其他账户信息给客户（在大多数环境中，这可能是一个自助实现）。
- en: Now, when users authenticate to RADIUS (for a VPN, administrative access, or
    whatever, really), they use their regular password and their Google key. In most
    cases, you don't want this overhead for wireless authentication. Certificates
    tend to work best for that—to the point that if your wireless isn't using EAP-TLS
    for authentication, it's susceptible to one or more common attacks.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，当用户对RADIUS进行认证（对于VPN、管理访问或其他任何情况），他们使用常规密码和他们的Google秘钥。在大多数情况下，您不希望为无线认证增加这种开销。证书往往是最适合的解决方案，甚至可以说，如果您的无线网络没有使用EAP-TLS进行认证，那么它就容易受到一种或多种常见攻击。
- en: Summary
  id: totrans-277
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: This concludes our journey into using RADIUS for authentication of various servers.
    As with many of the Linux services we've explored in this book, this chapter just
    scratches the surface of common configurations, use cases, and combinations that
    RADIUS can be used to address.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 这结束了我们对使用RADIUS对各种服务器进行认证的旅程。与我们在本书中探讨过的许多Linux服务一样，本章只是对RADIUS可以用来解决的常见配置、用例和组合进行了初步探讨。
- en: At this point, you should have the expertise to understand how RADIUS works
    and be able to configure secure RADIUS authentication for VPN services and administrative
    access, as well as wireless and wired network access. You should have the basics
    to understand the PAP, CHAP, LDAP, EAP-TLS, and 802.1x authentication protocols.
    The EAP-TLS use cases, in particular, should illustrate why having an internal
    CA can really help in securing your network infrastructure.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，您应该具备理解RADIUS工作原理并能够为VPN服务和管理访问配置安全的RADIUS认证，以及无线和有线网络访问的基础知识。您应该具备理解PAP、CHAP、LDAP、EAP-TLS和802.1x认证协议的基础知识。特别是EAP-TLS的使用案例应该说明为什么拥有内部CA可以真正帮助您保护网络基础设施。
- en: Finally, we touched on integrating Google Authenticator with RADIUS for MFA.
    We didn't cover the detailed configuration of the Google Authenticator service,
    though—this seems to be changing so frequently of late that the Google documentation
    for that service is the best reference.
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们提到了将Google Authenticator与RADIUS集成以实现多因素认证。尽管我们没有详细介绍Google Authenticator服务的配置，但是这似乎最近变化如此频繁，以至于该服务的Google文档是最好的参考资料。
- en: In the next chapter, we'll discuss using Linux as a load balancer. Load balancers
    have been with us for many years, but in recent years, they are being deployed
    both more frequently and quite differently in both physical and virtual data centers—stay
    tuned!
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将讨论如何将Linux用作负载均衡器。负载均衡器已经存在多年了，但近年来，它们在物理和虚拟数据中心中的部署频率和方式都有了很大的变化，敬请关注！
- en: Questions
  id: totrans-282
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: 'As we conclude, here is a list of questions for you to test your knowledge
    regarding this chapter''s material. You will find the answers in the *Assessments*
    section of the *Appendix*:'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，这里有一些问题供您测试对本章材料的了解。您将在*附录*的*评估*部分找到答案：
- en: For a firewall that you intend to authenticate administrative access and VPN
    access to, how can you allow a regular user VPN access but not administrative
    access?
  id: totrans-284
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于您打算对其进行管理访问和VPN访问认证的防火墙，您如何允许普通用户进行VPN访问，但不允许进行管理访问？
- en: Why is EAP-TLS such a good authentication mechanism for wireless networks?
  id: totrans-285
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为什么EAP-TLS是无线网络的一个很好的认证机制？
- en: IF EAP-TLS is so great, why is MFA preferred over EAP-TLS with certificates
    for VPN access authentication?
  id: totrans-286
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果EAP-TLS如此出色，为什么MFA优先于具有证书的EAP-TLS进行VPN访问认证？
- en: Further reading
  id: totrans-287
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'The basic RFCs that were referenced in this chapter are listed here:'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 本章引用的基本RFC列在这里：
- en: '*RFC 2865*: *RADIUS* ([https://tools.ietf.org/html/rfc2865](https://tools.ietf.org/html/rfc2865))'
  id: totrans-289
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'RFC 2865: *RADIUS* ([https://tools.ietf.org/html/rfc2865](https://tools.ietf.org/html/rfc2865))'
- en: '*RFC 3579*: *RADIUS Support for EAP* ([https://tools.ietf.org/html/rfc3579](https://tools.ietf.org/html/rfc3579))'
  id: totrans-290
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'RFC 3579: *EAP的RADIUS支持* ([https://tools.ietf.org/html/rfc3579](https://tools.ietf.org/html/rfc3579))'
- en: '*RFC 3580*: *IEEE 802.1X RADIUS Usage Guidelines* ([https://tools.ietf.org/html/rfc3580](https://tools.ietf.org/html/rfc3580))'
  id: totrans-291
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'RFC 3580: *IEEE 802.1X RADIUS使用指南* ([https://tools.ietf.org/html/rfc3580](https://tools.ietf.org/html/rfc3580))'
- en: However, the full list of RFCs for the DNS is sizable. The following list shows
    current RFCs only—obsoleted and experimental RFCs have been removed. These can
    all, of course, be found at [https://tools.ietf.org](https://tools.ietf.org) as
    well as at [https://www.rfc-editor.org:](https://www.rfc-editor.org:)
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，DNS的完整RFC列表很长。以下列表仅显示当前的RFC - 已废弃和实验性的RFC已被删除。当然，这些都可以在[https://tools.ietf.org](https://tools.ietf.org)以及[https://www.rfc-editor.org:](https://www.rfc-editor.org:)找到。
- en: '*RFC 2548*: *Microsoft Vendor-specific RADIUS Attributes*'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 'RFC 2548: *Microsoft特定供应商的RADIUS属性*'
- en: '*RFC 2607*: *Proxy Chaining and Policy Implementation in Roaming*'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 'RFC 2607: *漫游中的代理链接和策略实施*'
- en: '*RFC 2809*: *Implementation of L2TP Compulsory Tunneling via RADIUS*'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 'RFC 2809: *通过RADIUS实现L2TP强制隧道*'
- en: '*RFC 2865*: *Remote Authentication Dial-In User Service (RADIUS)*'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 'RFC 2865: *远程认证拨号用户服务（RADIUS）*'
- en: '*RFC 2866*: *RADIUS Accounting*'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 'RFC 2866: *RADIUS会计*'
- en: '*RFC 2867*: *RADIUS Accounting Modifications for Tunnel Protocol Support*'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 'RFC 2867: *用于隧道协议支持的RADIUS会计修改*'
- en: '*RFC 2868*: *RADIUS Attributes for Tunnel Protocol Support*'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 'RFC 2868: *用于隧道协议支持的RADIUS属性*'
- en: '*RFC 2869*: *RADIUS Extensions*'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 'RFC 2869: *RADIUS扩展*'
- en: '*RFC 2882*: *Network Access Servers Requirements: Extended RADIUS Practices*'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 'RFC 2882: *网络访问服务器要求：扩展的RADIUS实践*'
- en: '*RFC 3162*: *RADIUS and IPv6*'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 'RFC 3162: *RADIUS和IPv6*'
- en: '*RFC 3575*: *IANA Considerations for RADIUS*'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 'RFC 3575: *RADIUS的IANA考虑事项*'
- en: '*RFC 3579*: *RADIUS Support for EAP*'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 'RFC 3579: *EAP的RADIUS支持*'
- en: '*RFC 3580*: *IEEE 802.1X RADIUS Usage Guidelines*'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 'RFC 3580: *IEEE 802.1X RADIUS使用指南*'
- en: '*RFC 4014*: *RADIUS Attributes Suboption for the DHCP Relay Agent Information
    Option*'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 'RFC 4014: *DHCP中继代理信息选项的RADIUS属性子选项*'
- en: '*RFC 4372*: *Chargeable User Identity*'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 'RFC 4372: *可计费用户身份*'
- en: '*RFC 4668*: *RADIUS Authentication Client MIB for IPv6*'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 'RFC 4668: *IPv6的RADIUS认证客户端MIB*'
- en: '*RFC 4669*: *RADIUS Authentication Server MIB for IPv6*'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 'RFC 4669: *IPv6的RADIUS认证服务器MIB*'
- en: '*RFC 4670*: *RADIUS Accounting Client MIB for IPv6*'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 'RFC 4670: *IPv6的RADIUS会计客户端MIB*'
- en: '*RFC 4671*: *RADIUS Accounting Server MIB for IPv6*'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 'RFC 4671: *IPv6的RADIUS会计服务器MIB*'
- en: '*RFC 4675*: *RADIUS Attributes for Virtual LAN and Priority Support*'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 'RFC 4675: *虚拟局域网和优先级支持的RADIUS属性*'
- en: '*RFC 4679*: *DSL Forum Vendor-Specific RADIUS Attributes*'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 'RFC 4679: *DSL论坛特定供应商的RADIUS属性*'
- en: '*RFC 4818*: *RADIUS Delegated-IPv6-Prefix Attribute*'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 'RFC 4818: *RADIUS委派IPv6前缀属性*'
- en: '*RFC 4849*: *RADIUS Filter Rule Attribute*'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 'RFC 4849: *RADIUS过滤规则属性*'
- en: '*RFC 5080*: *Common RADIUS Implementation Issues and Suggested Fixes*'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 'RFC 5080: *常见的RADIUS实施问题和建议的修复*'
- en: '*RFC 5090*: *RADIUS Extension for Digest Authentication*'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 'RFC 5090: *摘要认证的RADIUS扩展*'
- en: '*RFC 5176*: *Dynamic Authorization Extensions to RADIUS*'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 'RFC 5176: *RADIUS的动态授权扩展*'
- en: '*RFC 5607*: *RADIUS Authorization for NAS Management*'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 'RFC 5607: *NAS管理的RADIUS授权*'
- en: '*RFC 5997*: *Use of Status-Server Packets in the RADIUS Protocol*'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 'RFC 5997: *RADIUS协议中状态服务器数据包的使用*'
- en: '*RFC 6158*: *RADIUS Design Guidelines*'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 'RFC 6158: *RADIUS设计指南*'
- en: '*RFC 6218*: *Cisco Vendor-Specific RADIUS Attributes for the Delivery of Keying
    Material*'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 'RFC 6218: *Cisco特定供应商的RADIUS属性用于密钥材料的传递*'
- en: '*RFC 6421*: *Crypto-Agility Requirements for Remote Authentication Dial-In
    User Service (RADIUS)*'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 'RFC 6421: *远程认证拨号用户服务（RADIUS）的密码敏捷要求*'
- en: '*RFC 6911*: *RADIUS Attributes for IPv6 Access Networks*'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 'RFC 6911: *IPv6访问网络的RADIUS属性*'
- en: '*RFC 6929*: *Remote Authentication Dial-In User Service (RADIUS) Protocol Extensions*'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 'RFC 6929: *远程认证拨号用户服务（RADIUS）协议扩展*'
- en: '*RFC 8044*: *Data Types in RADIUS*'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 'RFC 8044: *RADIUS中的数据类型*'
- en: 'AD/SMB integration:'
  id: totrans-327
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'AD/SMB集成:'
- en: '[https://wiki.freeradius.org/guide/freeradius-active-directory-integration-howto](https://wiki.freeradius.org/guide/freeradius-active-directory-integration-howto)'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://wiki.freeradius.org/guide/freeradius-active-directory-integration-howto](https://wiki.freeradius.org/guide/freeradius-active-directory-integration-howto)'
- en: '[https://web.mit.edu/rhel-doc/5/RHEL-5-manual/Deployment_Guide-en-US/s1-samba-security-modes.html](https://web.mit.edu/rhel-doc/5/RHEL-5-manual/Deployment_Guide-en-US/s1-samba-security-modes.html)'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://web.mit.edu/rhel-doc/5/RHEL-5-manual/Deployment_Guide-en-US/s1-samba-security-modes.html](https://web.mit.edu/rhel-doc/5/RHEL-5-manual/Deployment_Guide-en-US/s1-samba-security-modes.html)'
- en: '[https://wiki.samba.org/index.php/Setting_up_Samba_as_a_Domain_Member](https://wiki.samba.org/index.php/Setting_up_Samba_as_a_Domain_Member)'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://wiki.samba.org/index.php/Setting_up_Samba_as_a_Domain_Member](https://wiki.samba.org/index.php/Setting_up_Samba_as_a_Domain_Member)'
- en: '802.1x: [https://isc.sans.edu/diary/The+Other+Side+of+Critical +Control+1%3A+802.1x+Wired+Network+Access+Controls/25146](https://isc.sans.edu/diary/The+Other+Side+of+Critical+Control+1%3A+802.1x+Wired+Network+Access+Controls/25146)'
  id: totrans-331
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '802.1x: [https://isc.sans.edu/diary/The+Other+Side+of+Critical +Control+1%3A+802.1x+Wired+Network+Access+Controls/25146](https://isc.sans.edu/diary/The+Other+Side+of+Critical+Control+1%3A+802.1x+Wired+Network+Access+Controls/25146)'
- en: 'Unlang references:'
  id: totrans-332
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Unlang参考:'
- en: '[https://networkradius.com/doc/3.0.10/unlang/home.html](https://networkradius.com/doc/3.0.10/unlang/home.html)'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://networkradius.com/doc/3.0.10/unlang/home.html](https://networkradius.com/doc/3.0.10/unlang/home.html)'
- en: '[https://freeradius.org/radiusd/man/unlang.txt](https://freeradius.org/radiusd/man/unlang.txt)'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://freeradius.org/radiusd/man/unlang.txt](https://freeradius.org/radiusd/man/unlang.txt)'
