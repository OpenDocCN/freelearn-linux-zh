["```\n$ declare -F\n\n```", "```\n$ type quote\n\n```", "```\nfunction <function-name> {\n<code to execute>\n}\n```", "```\n$ function show_system {\necho \"The uptime is:\"\nuptime\necho\necho \"CPU Detail\"\nlscpu\necho\necho \"User list\"\nwho\n}\n\n```", "```\n$ sed -i.bak '/^\\s*#/d;/^$/d' <filename>\n\n```", "```\n$ function clean_file {\n sed -i.bak '/^\\s*#/d;/^$/d' \"$1\"\n}\n\n```", "```\n#!/bin/bash\n# Script will prompt for filename\n# then remove commented and blank lines\n\nfunction is_file {\n    if [ ! -f \"$1\" ] ; then\n        echo \"$1 does not seem to be a file\"\n        exit 2\n    fi\n}\n\nfunction clean_file {\n    is_file \"$1\"\n    BEFORE=$(wc -l \"$1\")\n    echo \"The file $1 starts with $BEFORE\"\n    sed -i.bak '/^\\s*#/d;/^$/d' \"$1\"\n    AFTER=$(wc -l \"$1\")\n    echo \"The file $1 is now $AFTER\"\n}\n\nread -p \"Enter a file to clean: \"\nclean_file \"$REPLY\"\nexit 1\n```", "```\n$ cd $HOME\n$ rm $HOME/ntp.conf\n$ mv ntp.conf.bak ntp.conf\n\n```", "```\nfunction to_lower ()\n{\n    input=\"$1\"\n    output=$(tr [A-Z] [a-z] <<<\"$input\")\nreturn $output\n}\n```", "```\nfunction to_lower ()\n{\n    input=\"$1\"\n    output=$(tr [A-Z] [a-z] <<< \"$input\")\nreturn $output\n}\n\nwhile true\ndo\n  read -p \"Enter c to continue or q to exit: \"\n  $REPLY=$(to_lower \"$REPLY\")\n  if [ $REPLY = \"q\" ] ; then\n    break\n  fi\n\ndone\necho \"Finished\"\n```", "```\n#!/bin/bash\n# Author: @theurbanpenguin\n# Web: www.theurbapenguin.com\n# Sample menu with functions\n# Last Edited: Sept 2015\n\nfunction to_lower {\n    input=\"$1\"\n    output=$(tr [A-Z] [a-z] <<< \"$input\")\nreturn $output\n}\n\nfunction do_backup {\n    tar -czvf $HOME/backup.tgz ${HOME}/bin\n}\n\nfunction show_cal {\n    if [ -x /usr/bin/ncal ] ; then\n      command=\"/usr/bin/ncal -w\"\n    else\n      command=\"/usr/bin/cal\"\n    fi\n    $command\n}\n\nwhile true\ndo\n  clear\n  echo \"Choose an item: a, b or c\"\n  echo \"a: Backup\"\n  echo \"b: Display Calendar\"\n  echo \"c: Exit\"\n  read -sn1\n  REPLY=$(to_lower \"$REPLY\")\n  case \"$REPLY\" in\n    a) do_backup;;\n    b) show_cal;;\n    c) exit 0;;\n  esac\n  read -n1 -p \"Press any key to continue\"\ndone\n```"]