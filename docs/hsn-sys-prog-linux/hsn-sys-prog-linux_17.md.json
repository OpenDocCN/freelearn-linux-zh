["```\n$ chrt -p $$\npid 1618's current scheduling policy: SCHED_OTHER\npid 1618's current scheduling priority: 0\n$ \n```", "```\n#define _GNU_SOURCE /* See feature_test_macros(7) */\n#include <sched.h>\nint sched_setaffinity(pid_t pid, size_t cpusetsize,\n                        const cpu_set_t *mask);\nint sched_getaffinity(pid_t pid, size_t cpusetsize,\n                        cpu_set_t *mask);\n```", "```\n$ taskset -p 1\npid 1's current affinity mask: f\n$ taskset -p 12446\npid 12446's current affinity mask: 7\n$ \n```", "```\n# ch17/query_sched_allprcs.sh\nfor p in $(ps -A -To pid)\ndo\n    chrt -p $p 2>/dev/null\n    taskset -p $p 2>/dev/null\ndone\n```", "```\n$ ./query_sched_allprcs.sh | grep -A2 -w SCHED_FIFO\npid 12's current scheduling policy: SCHED_FIFO\npid 12's current scheduling priority: 99\npid 12's current affinity mask: 1\npid 13's current scheduling policy: SCHED_FIFO\npid 13's current scheduling priority: 99\npid 13's current affinity mask: 1\n--\npid 16's current scheduling policy: SCHED_FIFO\npid 16's current scheduling priority: 99\npid 16's current affinity mask: 2\npid 17's current scheduling policy: SCHED_FIFO\npid 17's current scheduling priority: 99\npid 17's current affinity mask: 2\n--\n[...]\n```", "```\n$ ps aux | awk '$2==12 || $2==13 || $2==16 || $2==17 {print $0}'\nUSER PID %CPU %MEM  VSZ  RSS TTY STAT   START  TIME   COMMAND\nroot 12  0.0  0.0     0    0   ?    S   13:42  0:00   [migration/0]\nroot 13  0.0  0.0     0    0   ?    S   13:42  0:00   [watchdog/0]\nroot 16  0.0  0.0     0    0   ?    S   13:42  0:00   [watchdog/1]\nroot 17  0.0  0.0     0    0   ?    S   13:42  0:00   [migration/1]\n$ \n```", "```\n#include <pthread.h>\nint pthread_setschedparam(pthread_t thread, int policy,\n                           const struct sched_param *param);\nint pthread_getschedparam(pthread_t thread, int *policy,\n                           struct sched_param *param);\n```", "```\n#include <sched.h>\nint sched_setscheduler(pid_t pid, int policy,\n                        const struct sched_param *param);\nint sched_getscheduler(pid_t pid);\n```", "```\n#define NUMWORK   200\n...\n  min = sched_get_priority_min(SCHED_FIFO);\n  max = sched_get_priority_max(SCHED_FIFO);\n  printf(\"SCHED_FIFO: priority range is %d to %d\\n\", min, max);\n  rt_prio = atoi(argv[1]);\n...\n  ret = pthread_create(&tid[0], &attr, worker1, (void *)rt_prio);\n  ret = pthread_create(&tid[1], &attr, worker2, (void *)rt_prio);\n  pthread_attr_destroy(&attr);\n  DELAY_LOOP('m', NUMWORK+100);\n  printf(\"\\nmain: all done, app exiting ...\\n\");\n  pthread_exit((void *)0);\n}\n```", "```\nvoid *worker1(void *msg)\n{\n  struct sched_param p;\n  printf(\" RT Thread p1 (%s():%d:PID %d):\\n\"\n   \" Setting sched policy to SCHED_RR and RT priority to %ld\"\n   \" and sleeping for 2s ...\\n\", __func__, __LINE__, getpid(), (long)msg);\n\n   p.sched_priority = (long)msg;\n   pthread_setschedparam(pthread_self(), SCHED_RR, &p);\n   sleep(2);\n   puts(\" p1 working\");\n   DELAY_LOOP('1', NUMWORK);\n   puts(\" p1: exiting..\");\n   pthread_exit((void *)0);\n}\n```", "```\n  p.sched_priority = prio + 10;\n  pthread_setschedparam(pthread_self(), SCHED_FIFO, &p);\n  sleep(4);\n  puts(\" p2 working\");\n  DELAY_LOOP('2', NUMWORK);\n```", "```\n$ make sched_rt_eg_dbg\ngcc -g -ggdb -gdwarf-4 -O0 -Wall -Wextra -DDEBUG -pthread -c sched_rt_eg.c -o sched_rt_eg_dbg.o\ngcc -o sched_rt_eg_dbg sched_rt_eg_dbg.o common_dbg.o -pthread -lrt\n$ \n```", "```\n$ sudo ./sched_rt_eg_dbg 14\nSCHED_FIFO: priority range is 1 to 99\nmain: creating RT worker thread #1 ...\nmain: creating RT worker thread #2 ...\n  RT Thread p1 (worker1():68:PID 18632):\n Setting sched policy to SCHED_RR and RT priority to 14 and sleeping for 2s ...\nm RT Thread p2 (worker2():101:PID 18632):\n Setting sched policy to SCHED_FIFO and RT priority to 24 and sleeping for 4s ...\nmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm p1 working\n1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m11m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m11m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m1m11m1m1m p2 working\n2m12m12m1m2m12m12m1m2m12m12m1m2m12m12m12m12m12m112m12m12m12m112m12m12m112m12m12m112m12m12m12m112m12m12m121m211m21m21m21m211m21m21m21m211m21m21m21m211m21m21m21m211m21m21m21m211m21m21m21\nmain: all done, app exiting ...\n$ \n```", "```\n$ sudo taskset 01 ./sched_rt_eg_dbg 14\n[sudo] password for <username>: xxx \nSCHED_FIFO: priority range is 1 to 99\nmain: creating RT worker thread #1 ...\nmain: creating RT worker thread #2 ...\nm RT Thread p2 (worker2():101:PID 19073):\n Setting sched policy to SCHED_FIFO and RT priority to 24 and sleeping for 4s ...\n RT Thread p1 (worker1():68:PID 19073):\n Setting sched policy to SCHED_RR and RT priority to 14 and sleeping for 2s ...\nmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm p1 working\n11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111 p2 working\n22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222 p2 exiting ...\n111111111111111111111111111111111111111111111111111111111111111111111111 p1: exiting..\nmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm\nmain: all done, app exiting ...\n$ \n```"]