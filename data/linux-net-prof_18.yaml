- en: Assessments
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 评估
- en: In the following pages, we will review all of the practice questions from each
    of the chapters in this book and provide the correct answers.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的页面中，我们将回顾本书各章节的所有练习问题，并提供正确答案。
- en: Chapter 2 – Basic Linux Network Configuration and Operations – Working with
    Local Interfaces
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第2章 - 基本Linux网络配置和操作 - 使用本地接口
- en: A default gateway is a special route, usually denoted as `0.0.0.0/0` (in other
    binary, this indicates "all networks"). A host always has a local routing table,
    with an order of precedence.
  id: totrans-3
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 默认网关是一个特殊路由，通常表示为`0.0.0.0/0`（在其他二进制中，这表示“所有网络”）。主机始终具有本地路由表，具有优先顺序。
- en: Any network that is directly connected to an interface is processed first. These
    are called `ip` command of the `route` command.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 直接连接到接口的任何网络都首先进行处理。这些被称为`route`命令的`ip`命令。
- en: Finally, the default route is referenced. If the traffic being sent does not
    match a connected route or a route in the routing table, it is sent to the IP
    defined in the default gateway. Usually, this device will be a special router
    or firewall device, which in turn will usually have both a local table, statically
    defined routes, and a default gateway (among several other routing mechanisms
    that are not in the scope of this book).
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，引用了默认路由。如果发送的流量与连接的路由或路由表中的路由不匹配，则将其发送到默认网关中定义的IP。通常，此设备将是一个特殊的路由器或防火墙设备，该设备通常具有本地表、静态定义的路由和默认网关（以及本书范围之外的其他几种路由机制）。
- en: For this network, the subnet mask is `255.255.255.0` (24 binary bits). The broadcast
    address is `192.158.25.255`.
  id: totrans-6
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于这个网络，子网掩码是`255.255.255.0`（24位二进制）。广播地址是`192.158.25.255`。
- en: Traffic sent to the broadcast address is sent to the entire subnet and is processed
    by all hosts in that subnet. An example of this is a standard ARP request (which
    we will cover in more depth in the next chapter).
  id: totrans-7
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 发送到广播地址的流量将发送到整个子网，并由该子网中的所有主机处理。其中一个例子是标准ARP请求（我们将在下一章中更深入地讨论）。
- en: The host addresses can range from `192.168.25.1` to `192.168.25.254`. The `0`
    address is the network address, so it cannot be used for a host. The `255` address
    is the broadcast address.
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 主机地址可以从`192.168.25.1`到`192.168.25.254`范围。`0`地址是网络地址，因此不能用于主机。`255`地址是广播地址。
- en: 'The `nmcli` command is the recommended method of making this change. For instance,
    to set interface connection wired Ethernet 1 to 100 Mbps/full duplex, use this
    command:'
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`nmcli`命令是推荐的更改方法。例如，要将接口连接有线以太网1设置为100 Mbps/全双工，请使用以下命令：'
- en: '[PRE0]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Chapter 3 – Using Linux and Linux Tools for Network Diagnostics
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第3章 - 使用Linux和Linux工具进行网络诊断
- en: You will never see this. From the network perspective, sessions, connections,
    and conversations only exist for the TCP protocol (at OSI Layer 5). UDP conversations
    are stateless – the network does not have a way to relate a UDP request to a UDP
    response – this all has to happen within the application. Often the application
    will include something like a session number or sequence number (or both, depending
    on the application) in the packet data to accomplish this. Keep in mind though
    that if the application does maintain a session over UDP somehow, it's the application's
    responsibility to keep it straight – there's nothing on the host or network at
    Layer 5 that will track this as we see in TCP.
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您永远不会看到这一点。从网络的角度来看，会话、连接和对话只存在于TCP协议（在OSI第5层）。UDP对话是无状态的 - 网络无法将UDP请求与UDP响应关联起来
    - 所有这些都必须在应用程序内部发生。通常，应用程序将在数据包中包含会话号或序列号（或两者，取决于应用程序）来完成这一点。但请记住，如果应用程序以某种方式在UDP上维护会话，那么应用程序有责任保持其正确
    - 在OSI第5层的主机或网络上没有任何东西会像我们在TCP中看到的那样跟踪这一点。
- en: If you are troubleshooting network or application issues, this is critical information.
    If, for instance, you have an application issue that may be network related, understanding
    which ports that host listens on can be key – for instance, those ports might
    need to be configured on the host firewall or on some other in-path firewall.
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您正在解决网络或应用程序问题，这是关键信息。例如，如果您遇到可能与网络有关的应用程序问题，了解主机监听的端口可以是关键 - 例如，这些端口可能需要在主机防火墙上配置或在某些其他路径防火墙上配置。
- en: From the other perspective, if you are seeing firewall errors on specific ports,
    such as long-running sessions that are being terminated, for instance, then you
    need to relate the port back to the application.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 从另一个角度来看，如果您在特定端口上看到防火墙错误，例如长时间运行的会话被终止，那么您需要将端口与应用程序联系起来。
- en: For a third example, when investigating malware, you may see malware activity
    that is tied to a sending or listening port. Being able to diagnose this quickly
    can make finding other stations that might be affected by that malware much simpler.
    For instance, malware listening on a specific port can be found using Nmap or
    finding malware transmitting on a specific port can be quickly found using firewall
    logs. A great example of this would be malware exfiltrating data on DNS ports
    – in that case, you would be looking for firewall log entries for `tcp/53` or
    `udp/53`, either from internal hosts that are not DNS servers, or to external
    hosts that are not DNS servers. In most corporate environments, only DNS servers
    should be making DNS queries to specific internet DNS forwarding hosts (see [*Chapter
    6*](B16336_06_Final_NM_ePub.xhtml#_idTextAnchor100), *DNS Services on Linux*,
    for more detail on this).
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 第三个例子，当调查恶意软件时，您可能会看到与发送或监听端口相关联的恶意软件活动。能够快速诊断这一点可以使查找可能受到该恶意软件影响的其他站点变得更加简单。例如，可以使用Nmap找到在特定端口上监听的恶意软件，或者可以使用防火墙日志快速找到在特定端口上传输的恶意软件。这种情况的一个很好的例子是恶意软件在DNS端口上外泄数据
    - 在这种情况下，您将寻找`tcp/53`或`udp/53`的防火墙日志条目，要么来自不是DNS服务器的内部主机，要么发送到不是DNS服务器的外部主机。在大多数公司环境中，只有DNS服务器应该向特定的互联网DNS转发主机发出DNS查询（有关此内容的更多详细信息，请参见[*第6章*](B16336_06_Final_NM_ePub.xhtml#_idTextAnchor100)，*Linux上的DNS服务*）。
- en: In a well-run network, the internet firewall will typically have rules in both
    directions. The inbound set of rules (from the internet to the inside network)
    will describe which listening ports you might want to allow internet clients to
    connect to. This is often called an `deny all` as its last entry and with appropriate
    alerts will often alert administrators to malware, unwanted software installed
    on the desktop or server, misconfigured hosts or devices, or *I brought it from
    home* hardware that doesn't belong on the organization's network.
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在一个良好运行的网络中，互联网防火墙通常会有双向规则。入站规则（从互联网到内部网络）将描述您可能希望允许互联网客户端连接的监听端口。这通常被称为“拒绝所有”作为最后一个条目，并且适当的警报通常会提醒管理员有恶意软件，不需要的软件安装在桌面或服务器上，配置错误的主机或设备，或者不属于组织网络的硬件。
- en: Certificates are used to secure many services, and HTTPS (on `tcp/443`) is just
    the most popular. Certificates are also used to authenticate or secure lots of
    other services. A short list of the most commonly found ones are shown in the
    following table (there are **lots** more):![](img/B16336_Assesment_Table_01.jpg)
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 证书用于保护许多服务，HTTPS（在`tcp/443`上）只是最受欢迎的。证书也用于认证或保护许多其他服务。最常见的一些服务如下表所示（还有**很多**）：![](img/B16336_Assesment_Table_01.jpg)
- en: If a certificate expires, in the best-case users who connect to that service
    will receive an error. Depending on their browser settings, they may not be able
    to proceed. If the connection is from a program to a service (that is, not a browser),
    the connection may just error out, depending on how the application error-handling
    and logging code was written.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 如果证书过期，在最好的情况下，连接到该服务的用户将收到错误。根据其浏览器设置，他们可能无法继续。如果连接是从程序到服务的（即不是浏览器），则连接可能会出错，这取决于应用程序错误处理和日志记录代码的编写方式。
- en: All ports under `1024` are server ports, so administrative rights are needed
    in order to open a listener on any of them.
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 所有`1024`以下的端口都是服务器端口，因此需要管理权限才能在其中任何一个上打开监听器。
- en: Assuming a 20 GHz channel width, channels 1, 6, and 11 do not overlap.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 假设20 GHz的通道宽度，通道1、6和11不会重叠。
- en: Channel width will generally improve performance, depending on what the client
    stations are attempting to do on the media. However, in the 2.4 GHz band, with
    only 11 channels available (and only 3 choices that don't create interference),
    increasing the channel width will almost certainly increase interference for most
    environments. There is a much better opportunity for wider channel use in the
    5 GHz band, because there are so many more channels available.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通道宽度通常会提高性能，这取决于客户端站点在媒体上尝试执行的操作。然而，在2.4 GHz频段，只有11个可用频道（并且只有3个选择不会产生干扰），增加通道宽度几乎肯定会增加大多数环境的干扰。在5
    GHz频段中，有更多的频道可用，因此更有机会使用更宽的频道。
- en: Chapter 4 – The Linux Firewall
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第4章- Linux防火墙
- en: Hopefully, you would consider using nftables. While iptables will still be supported
    for several years, nftables is more efficient (CPU-wise), and supports IPv6\.
    It's also more flexible in "matching" traffic, allowing easier matches on individual
    fields in packets for further processing.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 希望您考虑使用nftables。虽然iptables在未来几年仍将得到支持，但nftables更高效（在CPU方面），并支持IPv6。它在“匹配”流量方面也更灵活，允许更容易地匹配数据包中的各个字段以进行进一步处理。
- en: An easy method to support central firewall standards (without adding orchestration
    or configuration management tools into the mix) would be to use `nft` `include`
    files. These files can be managed in a single location, given meaningful names,
    then copied out to target servers that match the use case for each of these `include`
    files. For instance, having an `include` file for web servers, DNS hosts, or DHCP
    servers is commonly seen. Having a separate `include` file to allow host administration
    only from a small set of administrative "jump hosts," address ranges, or subnets
    is another very common use case.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 支持中央防火墙标准的简单方法（而不需要添加编排或配置管理工具）是使用`nft` `include`文件。这些文件可以在单个位置进行管理，赋予有意义的名称，然后复制到符合每个`include`文件用例的目标服务器上。例如，通常会看到为Web服务器，DNS主机或DHCP服务器创建一个`include`文件。另一个非常常见的用例是创建一个单独的`include`文件，以允许仅从一小组管理“跳转主机”，地址范围或子网进行主机管理。
- en: Even without `include` files, though, orchestration tools such as Terraform,
    Ansible, Puppet, Chef, or Salt can be used to centrally manage many facets of
    Linux hosts and services, including the firewall. It's wise in this case to at
    least hardcode the access needed by the orchestration tool you are using – it's
    never fun to find out that a simple configuration typo in the orchestration tool
    has just removed all administrative access to your server farm.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 即使没有`include`文件，编排工具如Terraform，Ansible，Puppet，Chef或Salt也可以用于集中管理Linux主机和服务的许多方面，包括防火墙。在这种情况下，至少明智地硬编码编排工具所需的访问权限-发现编排工具中的简单配置错误刚刚删除了对服务器群的所有管理访问权限是不愉快的。
- en: Chapter 5 – Linux Security Standards with Real-Life Examples
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第5章-具有现实生活示例的Linux安全标准
- en: Sadly, at this time, the USA does not have any federal privacy legislation.
    Hopefully, that will change in the near future!
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可悲的是，此时美国没有任何联邦隐私立法。希望这在不久的将来会改变！
- en: No, the critical controls are not meant as an audit framework. However, you
    can certainly be assessed against them.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不，关键控件并不是作为审计框架。但是，您当然可以根据它们进行评估。
- en: For instance, in critical control 1, there is a recommendation to deploy 802.1x
    authentication for network access. This implies that your workstations and/or
    user accounts "authenticate" to the network and that the authentication process
    dictates what that station and userid combination has access to. While this isn't
    an audit item (it doesn't discuss specific settings or even specific services
    or accesses), whether you have implemented 802.1x in your infrastructure or not
    can be assessed in a larger security program or set of projects.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，在关键控制 1 中，建议为网络访问部署 802.1x 认证。这意味着您的工作站和/或用户帐户需要向网络“认证”，认证过程决定了该站点和用户 ID
    组合可以访问什么。虽然这不是一个审计项目（它不讨论具体的设置或特定的服务或访问权限），但您是否在您的基础设施中实施了 802.1x 可以在更大的安全程序或一系列项目中进行评估。
- en: The first answer to this is that the first check might not be accurate, and
    a parallax view can be helpful in determining that. For instance, if a change
    is made but an operating system or application bug means that the configuration
    change isn't implemented correctly, a second tool to assess the setting can identify
    this.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对此的第一个答案是，第一个检查可能不准确，视差视图可以帮助确定这一点。例如，如果进行了更改，但操作系统或应用程序错误意味着配置更改没有正确实施，那么第二个工具来评估设置就可以识别出这一点。
- en: More importantly, configuration changes and checks are often made locally on
    the host and need to be repeated host by host. Assessing a setting "over the wire"
    – for instance, with an Nmap scan – allows you to assess hundreds of hosts in
    just a few minutes. Not only is this a time-saver, but it's also the time-saving
    method used by auditors, penetration testers, and yes, malware.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 更重要的是，配置更改和检查通常是在主机上本地进行的，并且需要逐个主机重复。通过“通过网络”评估设置，例如使用 Nmap 扫描，可以让您在几分钟内评估数百台主机。这不仅节省时间，而且也是审计员、渗透测试人员和恶意软件使用的节省时间的方法。
- en: Chapter 6 – DNS Services on Linux
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第六章 – Linux 上的 DNS 服务
- en: DNSSEC implements records that allow "signing" to validate DNS response data.
    It does not encrypt either the request or the response, so it can operate using
    the standard DNS ports of `udp/53` and `tcp/53`. DoT fully encrypts DNS requests
    and responses using TLS. Because DoT is an entirely different protocol, it uses
    port `tcp/853`.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: DNSSEC 实现了允许“签名”以验证 DNS 响应数据的记录。它既不加密请求也不加密响应，因此可以使用标准的 DNS 端口 `udp/53` 和 `tcp/53`
    运行。DoT 完全使用 TLS 加密 DNS 请求和响应。因为 DoT 是一个完全不同的协议，它使用端口 `tcp/853`。
- en: DoH behaves as an API—the requests and responses are carried within HTTPS traffic
    with a specific HTTP header. A DoT `/dns-query`, and because of the HTTPS transport,
    the protocol uses only `tcp/443`.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: DoH 作为一个 API 运行——请求和响应都在特定的 HTTP 头部的 HTTPS 流量中传输。DoT `/dns-query`，由于使用了 HTTPS
    传输，该协议只使用 `tcp/443`。
- en: An internal DNS server would definitely implement recursion and forwarders,
    to allow the resolution of internet hosts. Usually, auto-registration is enabled,
    and requests are normally limited to "known" subnets that are within the organization.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 内部 DNS 服务器肯定会实现递归和转发器，以允许解析互联网主机。通常情况下，自动注册是启用的，并且请求通常仅限于组织内的“已知”子网。
- en: External DNS servers for an organization's zone will normally not implement
    recursion or forwarders and will almost never implement auto-registration. Rate
    limiting of some kind is almost always implemented.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 组织区域的外部 DNS 服务器通常不会实现递归或转发器，几乎永远不会实现自动注册。几乎总是实现某种形式的速率限制。
- en: Chapter 7 – DHCP Services on Linux
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第七章 – Linux 上的 DHCP 服务
- en: First, this may be a problem only for the person who called the Helpdesk. Make
    sure that this is a branch-wide issue. Make sure that the person who called is
    plugged into the network (or is associated properly if they are wireless). Make
    sure that they are not working from home; if they're not even in the office, then
    this isn't likely a problem with your server.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，这可能只是打电话给帮助台的人的问题。确保这是一个分公司范围的问题。确保打电话的人已经插入网络（或者如果他们是无线的，确保他们已经正确关联）。确保他们不是在家工作；如果他们甚至不在办公室，那么这很可能不是您服务器的问题。
- en: With the *Do we have a problem* questions done, see if you can reach anything
    in the remote office. If the WAN link, VPN link, router, or switches for the office
    are not all working, then DHCP won't be working either. Make sure that you can
    ping or otherwise test each of these devices before digging too deep into the
    DHCP side of things.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 完成了“我们有问题吗”的问题后，看看你是否能在远程办公室找到任何东西。如果 WAN 链路、VPN 链路、路由器或办公室的交换机都没有工作，那么 DHCP
    也不会工作。在深入研究 DHCP 方面之前，请确保您可以 ping 或以其他方式测试这些设备中的每一个。
- en: 'Next, start by ensuring that the DHCP server is actually working. Check whether
    the service is running – note that the following `systemctl` command provides
    you with some of the recent DHCP packet information:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，首先确保 DHCP 服务器实际上正在工作。检查服务是否正在运行——请注意，以下 `systemctl` 命令为您提供了一些最近的 DHCP 数据包信息：
- en: '[PRE1]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'tail command to just pull the last few log entries. If the dates are not for
    today, note the date to see when the DHCP last assigned an address. You will likely
    have this from the systemctl output, but you can also get it from syslog:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 tail 命令只提取最后几个日志条目。如果日期不是今天的，请注意日期，以查看 DHCP 上次分配地址的时间。您可能已经从 systemctl 输出中得到了这个信息，但您也可以从
    syslog 中获取：
- en: '[PRE2]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'On any Linux client, get the IP of the DHCP server. There are a few methods
    for doing this. You could check the `syslog` file:'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在任何 Linux 客户端上，获取 DHCP 服务器的 IP。有几种方法可以做到这一点。您可以检查 `syslog` 文件：
- en: '[PRE4]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Or just dump the server information from the DHCP client leases file on the
    workstation (this updates as the various client interfaces renew):'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 或者只需从工作站上的 DHCP 客户端租约文件中转储服务器信息（这会在各种客户端接口更新时更新）：
- en: '[PRE5]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Finally, you can renew the lease in the foreground and get the information
    from there. Note that if you are connected to the client via SSH, your address
    may change with this method. The client will also appear to "hang" at the last
    line shown here. Keep in mind that it''s the background DHCP client process running
    in the foreground, so rather than "hung," it''s "waiting." Press *Ctrl + C* to
    exit:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，你可以在前台更新租约并从那里获取信息。请注意，如果你通过SSH连接到客户端，你的地址可能会因为这种方法而改变。客户端也会在这里显示的最后一行上“挂起”。请记住，这是在前台运行的后台DHCP客户端进程，所以不是“挂起”，而是“等待”。按下*Ctrl
    + C*退出：
- en: '[PRE6]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Or, if the remote client is Windows-based, there''s a simple command to get
    the DHCP server address:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，如果远程客户端是基于Windows的，有一个简单的命令可以获取DHCP服务器地址：
- en: '[PRE7]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: No matter how you get the DHCP server IP address, if the IP address you get
    from your troubleshooting isn't your server, then you have a rogue DHCP problem.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 无论你如何获取DHCP服务器IP地址，如果你从你的故障排除中得到的IP地址不是你的服务器，那么你就有一个流氓DHCP问题。
- en: 'Since we now have the DHCP IP address, ping it quickly from an affected host
    and then collect the MAC address of the rogue server:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们现在有了DHCP IP地址，从受影响的主机快速ping它，然后收集流氓服务器的MAC地址：
- en: '[PRE8]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: From the OUI, get the manufacturer of the offending device. In this case, it's
    a Linksys home router. You can easily get this from the Wireshark OUI lookup site
    ([https://www.wireshark.org/tools/oui-lookup.html](https://www.wireshark.org/tools/oui-lookup.html)
    ), or, as noted in [*Chapter 2*](B16336_02_Final_NM_ePub.xhtml#_idTextAnchor035),
    *Basic Linux Network Configuration and Operations – Working with Local Interfaces*,
    I have a script hosted on GitHub ([https://github.com/robvandenbrink/ouilookup](https://github.com/robvandenbrink/ouilookup)).
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 从OUI中获取有问题设备的制造商。在这种情况下，这是一个Linksys家用路由器。你可以很容易地从Wireshark OUI查找站点([https://www.wireshark.org/tools/oui-lookup.html](https://www.wireshark.org/tools/oui-lookup.html))获取这个信息，或者如[*第2章*](B16336_02_Final_NM_ePub.xhtml#_idTextAnchor035)中所述，*基本Linux网络配置和操作-使用本地接口*，我在GitHub上托管了一个脚本([https://github.com/robvandenbrink/ouilookup](https://github.com/robvandenbrink/ouilookup))。
- en: 'Now go to your switch (or loop your networking person in) and find out which
    switch port that host is connected to. Note that we''re just looking for the last
    part of the MAC address:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 现在去你的交换机（或者让你的网络人员参与进来），找出那个主机连接的交换机端口。注意，我们只是在寻找MAC地址的最后一部分：
- en: '[PRE9]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'At this point, you likely want to work toward shutting that port down and start
    making some phone calls. Be very sure that you are not shutting down a port that
    connects an entire switch when you do this. First check for other MAC addresses
    on that port, looking in particular at the count of MAC addresses found:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，你可能想要开始关闭那个端口并开始打电话。一定要确保你在这样做时不要关闭连接整个交换机的端口。首先检查该端口上的其他MAC地址，特别是查找MAC地址的计数：
- en: '[PRE10]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Also, check the LLDP neighbor list for that port – it should tell you whether
    there''s a switch there:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 还要检查该端口的LLDP邻居列表-它应该告诉你那里是否有一个交换机：
- en: '[PRE11]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Also, look for CDP neighbors on that port, while also looking for a switch:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，查找该端口上的CDP邻居，同时查找交换机：
- en: '[PRE12]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: If there's a switch on that port, connect to that adjacent switch and repeat
    the process until you find your offending DHCP server's port.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 如果该端口上有一个交换机，连接到相邻的交换机并重复这个过程，直到找到你的有问题的DHCP服务器的端口。
- en: After shutting down the offending port, your users should be able to start getting
    DHCP addresses again. Since you have the OUI of the server, your next step is
    to ask a trusted person in the office to go and look for a new box that has a
    <insert brand name here> label on it.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 关闭有问题的端口后，你的用户应该能够重新开始获取DHCP地址。由于你有服务器的OUI，你的下一步是要求办公室的一个值得信任的人去寻找一个上面贴有<插入品牌名称>标签的新盒子。
- en: Chapter 8 – Certificate Services on Linux
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第8章- Linux上的证书服务
- en: The first function is the most important and is most often overlooked. A certificate
    provides trust and authentication. The fact that the hostname matches either the
    CN or SAN fields in the certificate provides the authentication needed to start
    the session. The fact that the certificate is signed by a trusted CA means that
    the authentication can be trusted by the client. This will be revisited again
    in the next chapter of this book, [*Chapter 9*](B16336_09_Final_NM_ePub.xhtml#_idTextAnchor153),
    *RADIUS Services for Linux*.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一个功能是最重要的，也是最容易被忽视的。证书提供了信任和身份验证。主机名与证书中的CN或SAN字段匹配提供了启动会话所需的身份验证。证书由受信任的CA签名意味着客户端可以信任身份验证。这将在本书的下一章[*第9章*](B16336_09_Final_NM_ePub.xhtml#_idTextAnchor153)中再次讨论，*Linux的RADIUS服务*。
- en: The second function is that the certificate material is used to provide some
    of the material for the secret key that is used in the symmetrical encryption
    of the subsequent session. Note, though, that as we progress to other use cases,
    many situations that make use of certificates do not do session encryption at
    all—the certificates are there purely for authentication.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个功能是证书材料用于提供用于对后续会话进行对称加密的密钥的一些材料。但需要注意的是，随着我们进展到其他用例，许多使用证书的情况根本不进行会话加密——证书纯粹用于身份验证。
- en: The `PKCS#12` format, often seen with a suffix of `.pfx` or sometimes `.p12`,
    combines the public certificate of a service with its private key. This combination
    is often required for situations where the normal installation process might get
    the normally have a *let's start with a CSR* starting point, but the certificate
    is a pre-existing one, such as a wildcard.
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`PKCS#12`格式，通常以`.pfx`或有时`.p12`为后缀，将服务的公共证书与其私钥结合在一起。这种组合通常在正常安装过程可能会得到通常有一个*让我们从CSR开始*的起点，但证书是一个预先存在的，比如通配符的情况下是必需的。'
- en: CT is key in the trust model that is needed for public CAs. Since all certificates
    are posted publicly, this means that the CT log can be audited for fraudulent
    certificates.
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: CT在公共CA所需的信任模型中至关重要。由于所有证书都是公开发布的，这意味着CT日志可以进行欺诈证书的审计。
- en: As a side benefit, it means that organizations can audit certificates issued
    to them for certificates purchased without authorization, to previously unknown
    services. This helps in curtailing the proliferation of *shadow IT*, where non-IT
    departments purchase IT services directly, outside of normal channels.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一个附带好处，这意味着组织可以审计发放给他们的证书，以防止未经授权购买的证书，以及以前未知的服务。这有助于遏制非IT部门直接购买IT服务的*影子IT*的蔓延，超出了正常渠道。
- en: 'While the CA is never consulted as certificates are used after they are issued,
    there are several reasons for maintaining the details of issued certificates,
    outlined as follows:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 虽然CA在发放证书后从未被咨询，但保留已发放证书的详细信息有几个原因，如下所述：
- en: The most important reason is *trust*. Keeping a register of issued certificates
    means that this list can be audited.
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最重要的原因是*信任*。保留已发放证书的注册表意味着可以对此列表进行审计。
- en: The second reason is also *trust*. Keeping a log of issued certificates means
    that when the time comes that you need to revoke one or more certificates, you
    are able to identify them by their name in the `index.txt` file, and then revoke
    those certificates by using their serial number (which matches their filename).
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第二个原因也是*信任*。保留已发放证书的日志意味着当您需要撤销一个或多个证书时，您可以通过`index.txt`文件中的名称识别它们，然后使用它们的序列号（与它们的文件名匹配）来撤销这些证书。
- en: Lastly, when operating an internal CA and server infrastructure, you'll often
    reach a point when troubleshooting when you'll say *it's almost as though that
    certificate came from somewhere else*—for instance, it could be self-signed or
    might have been issued by another CA. While you can get that information from
    the certificate itself, the index on the private CA gives you the tools needed
    to check which certificates were issued and when, by another method.
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，当操作内部CA和服务器基础设施时，通常会达到一个疑难解答的时刻，您会说*几乎就像那个证书来自其他地方*——例如，它可能是自签名的，或者可能是由另一个CA发放的。虽然您可以从证书本身获取这些信息，但私人CA上的索引为您提供了检查哪些证书是通过其他方法何时发放的所需工具。
- en: For instance, if an attacker stands up a malicious CA with the same name as
    yours, this gives you a quick check without verifying keys and signatures, using
    `openssl` commands.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果攻击者建立了一个与您相同名称的恶意CA，这样您可以快速检查而无需使用`openssl`命令验证密钥和签名。
- en: Or worse still, if that attacker has built that malicious CA using stolen (and
    valid) key material from your actual server, the index file on the real CA will
    be your only clue to lead you toward that final diagnosis.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 更糟糕的是，如果攻击者使用从您实际服务器中窃取的（有效的）密钥材料构建了恶意CA，那么真实CA上的索引文件将是您指向最终诊断的唯一线索。
- en: Chapter 9 – RADIUS Services for Linux
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第9章-用于Linux的RADIUS服务
- en: 'Using an `unlang` rule that references both the authentication request and
    backend group membership is the classic solution to this. The rule should specify
    the following:'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用同时引用身份验证请求和后端组成员资格的`unlang`规则是解决此问题的经典方法。规则应指定以下内容：
- en: If you are making a VPN request, then you need to be in the `VPN users` group
    to authenticate.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您正在提出VPN请求，则需要加入“VPN用户”组进行身份验证。
- en: If you are making an administrative access request, then you need to be in a
    `network admins` group.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您正在提出管理访问请求，则需要加入“网络管理员”组。
- en: This approach can be extended to include any number of authentication types,
    device types, RADIUS attribute values, and group memberships.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这种方法可以扩展到包括任意数量的身份验证类型、设备类型、RADIUS属性值和组成员资格。
- en: 'An example `unlang` rule that delivers the requested functions might look like
    this:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 提供所请求功能的一个示例`unlang`规则可能如下所示：
- en: '[PRE13]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'There are several reasons for this, and these are outlined here:'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 有几个原因，这些在这里概述：
- en: Since it uses certificates, and usually a local certificate store, the entire
    trust model
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于它使用证书，并且通常使用本地证书存储，整个信任模型
- en: Because it uses TLS—if implemented correctly, then attacks against the encryption
    of the authentication exchange are a significant challenge.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 因为它使用TLS-如果实施正确，那么对身份验证交换的加密的攻击是一个重大挑战。
- en: Each wireless user has their own session keys that rotate frequently.
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 每个无线用户都有自己的会话密钥，这些密钥经常轮换。
- en: There are no passwords for an attacker to capture or exploit. All other wireless
    authentication and encryption mechanisms use either a user ID/password (PEAP,
    for instance) or a pre-shared key.
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 攻击者无法捕获或利用密码。所有其他无线身份验证和加密机制都使用用户ID/密码（例如PEAP）或预共享密钥。
- en: The obstacle in deploying EAP-TLS is in the preparation—notably, issuing and
    installing certificates on the RADIUS servers and, particularly, the endpoint
    clients. This is very doable in a typical organization, where the stations are
    owned by the company, or you can walk your people through installing certificates
    on any authorized gear that they own. In addition, **mobile device management**
    (**MDM**) platforms can be used to issue and install certificates on cellphones
    and tablets.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 部署EAP-TLS的障碍在于准备工作，特别是在RADIUS服务器和端点客户端上发布和安装证书。在典型的组织中，这是完全可行的，其中工作站由公司拥有，或者您可以指导员工在其拥有的任何授权设备上安装证书。此外，移动设备管理（MDM）平台可用于在手机和平板电脑上发布和安装证书。
- en: However, if a device is not owned by the company—for instance, if the device
    is a consultant's or vendor's laptop or a home computer that is owned by an employee,
    getting a company certificate issued and installed securely on that machine can
    be a real challenge. In particular, it becomes common to see **certificate signing
    requests** (**CSRs**) and certificates being sent back and forth over email, which
    isn't recommended for transporting sensitive data of this type.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，如果设备不是公司所有，例如，如果设备是顾问或供应商的笔记本电脑或员工拥有的家用电脑，那么在该设备上安全地发放和安装公司证书可能是一个真正的挑战。特别是，常见的情况是看到**证书签名请求**（**CSR**）和证书通过电子邮件来回发送，这不建议用于传输此类敏感数据。
- en: MFA solutions leave the user ID-password interface in place for things such
    as VPN services but remove the risk of things such as password-stuffing or brute-force
    attacks from those interfaces. In addition, enrollment of remote stations in a
    system such as Google Authenticator is extremely simple—simply scanning the QR
    code that you are issued does the job!
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: MFA解决方案保留了用户ID密码界面，用于诸如VPN服务之类的事物，但消除了这些界面的密码填充或暴力攻击的风险。此外，将远程站点注册到Google Authenticator等系统中非常简单——只需扫描您获得的QR码即可完成！
- en: Chapter 10 – Load Balancer Services for Linux
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第10章–Linux负载均衡器服务
- en: If you are in a situation where your total load might be reaching the capacity
    of the load balancer, a DSR solution means that only the client to server traffic
    needs to be routed through the load balancer. This is especially impactful as
    most workloads have much more return traffic (server to client) than send traffic
    (from client to server). This means that changing to a DSR solution can easily
    reduce the traffic through the load balancer by 90%.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您的总负载可能达到负载均衡器的容量，DSR解决方案意味着只有客户端到服务器的流量需要通过负载均衡器路由。这对大多数工作负载来说影响很大，因为大多数工作负载的返回流量（服务器到客户端）要比发送流量（从客户端到服务器）多得多。这意味着改用DSR解决方案可以很容易地将通过负载均衡器的流量减少90%。
- en: This performance is less of a consideration if smaller load balancers are matched
    1:1 with each discrete workload that needs to be balanced. Especially in a virtualized
    environment, adding CPU and memory resources to a VM-based load balancer is also
    much simpler than the matching hardware upgrade might be in a legacy, hardware-based
    appliance situation.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 如果较小的负载均衡器与需要平衡的每个离散工作负载匹配1:1，那么性能就不太重要了。特别是在虚拟化环境中，向基于VM的负载均衡器添加CPU和内存资源也比在传统的基于硬件的设备情况下进行硬件升级要简单得多。
- en: A DSR load balancer also needs a fair bit of server and network "tinkering"
    to make all the pieces work. Once it works, figuring it all out again a year later
    when it's time to troubleshoot it can be a real issue as well.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: DSR负载均衡器还需要相当多的服务器和网络“调整”才能使所有部件正常工作。一旦它工作，当需要排除故障时，再次弄清楚所有这些可能会成为一个真正的问题。
- en: DSR solutions also lose a fair bit of intelligence on the traffic between the
    clients and servers, as only half of the conversation is seen.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: DSR解决方案在客户端和服务器之间的流量中也会失去一些智能，因为只能看到对话的一半。
- en: The main reason you would use a proxy-based load balancer is to allow for session
    persistence in HTTPS settings. This works by terminating the client sessions on
    the frontend **Virtual IP** (**VIP**), then starting a new HTTPS session on the
    backend interface. This approach allows the load balancer to insert a cookie into
    the session on the client side of this equation. When the client sends the next
    request (which will include this cookie), the load balancer then directs the session
    to the server that this client HTTPS session is assigned to.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您会使用基于代理的负载均衡器的主要原因是允许在HTTPS设置中进行会话持久性。这通过在前端虚拟IP（VIP）上终止客户端会话，然后在后端接口上启动新的HTTPS会话来实现。这种方法允许负载均衡器在此方程式的客户端部分插入一个cookie。当客户端发送下一个请求（其中将包括此cookie）时，负载均衡器将会将会话引导到分配给此客户端HTTPS会话的服务器。
- en: Chapter 11 – Packet Capture and Analysis in Linux
  id: totrans-100
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第11章–Linux中的数据包捕获和分析
- en: 'You would capture from an intermediate device for a few reasons:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您会从中间设备捕获出于几个原因：
- en: You don't have access to the hosts at either end or don't have permission to
    capture packets on them.
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您无法访问任一端的主机，也没有权限在它们上捕获数据包。
- en: You don't have access to a switch port that would allow you to use a host and
    Wireshark, either because you're not on-premises or don't have switch access.
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您无法访问允许您使用主机和Wireshark的交换机端口，要么是因为您不在现场，要么是因为没有交换机访问权限。
- en: If the intermediate device is a firewall, capturing from there will allow you
    to account for NAT (capturing before and after translation), as well as any ACLs
    on the firewall.
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果中间设备是防火墙，从那里进行捕获将允许您考虑NAT（在翻译之前和之后进行捕获），以及防火墙上的任何ACL。
- en: You would capture from a host at either end if you are troubleshooting host
    services and have access to either host, and have permission to install a packet
    capture tool on one or both. In addition, capturing from either end may allow
    you to capture encrypted traffic before or after decryption.
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您正在解决主机服务问题并且可以访问任一主机并且有权限在一个或两个主机上安装数据包捕获工具，那么您可以从任一端捕获。此外，从任一端捕获可能允许您在解密之前或之后捕获加密流量。
- en: Capturing using a SPAN port is the go-to solution in almost all cases. This
    allows you to capture traffic in either direction, but does not require access
    to or permission to change either endpoint host.
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用SPAN端口进行捕获几乎是所有情况下的首选解决方案。这允许您捕获任一方向的流量，但不需要访问或权限更改任一端点主机。
- en: tcpdump is the underlying packet capture mechanism on Linux. Almost all tools,
    including Wireshark use tcpdump. Wireshark has the advantage of giving the operator
    a GUI to work from, which is very attractive if that person isn't a "CLI person."
    In addition, Wireshark will fully decode packets and allow you to interactively
    drill down to your target traffic using display filters.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: tcpdump是Linux上的底层数据包捕获机制。几乎所有工具，包括Wireshark都使用tcpdump。Wireshark的优势在于它为操作员提供了一个GUI界面，这对那些不擅长“CLI人员”来说非常有吸引力。此外，Wireshark将完全解码数据包，并允许您使用显示过滤器交互式地深入到目标流量中。
- en: TCPdump, on the other hand, has the advantage that it will run anywhere, which
    is very attractive if the capture session is being run over an SSH session, or
    if the host doing the capture has no GUI running. TCPdump also gives you more
    control over lower-level functions that will affect the performance or capacity
    of the capture. For instance, the size of the ring buffer can easily be modified
    from the `tcpdump` command line.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，TCPdump的优势在于它可以在任何地方运行，这在捕获会话通过SSH会话运行时非常有吸引力，或者如果进行捕获的主机没有运行GUI。 TCPdump还可以让您更好地控制会影响捕获性能或容量的低级功能。例如，环形缓冲区的大小可以很容易地从`tcpdump`命令行进行修改。
- en: The RTP protocol's ports will be different from one call to the next. They are
    always UDP, but the port numbers for a session's RTP call are negotiated during
    the call's setup, but SIP/SDP, specifically by the `INVITE` packets (one from
    each endpoint in the call).
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'RTP协议的端口将在每次呼叫中都不同。它们始终是UDP，但会在呼叫设置期间通过SIP/SDP（特别是通过`INVITE`数据包）进行协商。 '
- en: Chapter 12 – Network Monitoring Using Linux
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第12章-使用Linux进行网络监控
- en: 'Write access for SNMP allows you to monitor (read) device or host parameters,
    as well as set (write) those same parameters. So, with read-write access, you
    could change the interface speed or duplex, reboot or shut down a device, or download
    a configuration. There is a nmap script that makes such a configuration download
    simple: `snmp-ios-config.nse`.'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: SNMP的写访问权限允许您监视（读取）设备或主机参数，并设置（写入）相同的参数。因此，通过读写访问权限，您可以更改接口速度或双工，重新启动或关闭设备，或下载配置。有一个nmap脚本可以使这样的配置下载变得简单：`snmp-ios-config.nse`。
- en: Syslog is most often sent in clear text over `514/udp`. There is an option to
    encrypt this traffic using IPSEC, but it is not widely implemented. The risks
    are that sensitive information is sent using syslog, and as it's clear text, anyone
    in a position to read it can either collect that information for later use or
    modify it as it is sent.
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Syslog通常以明文形式通过`514/udp`发送。有一个选项可以使用IPSEC加密这些流量，但它并没有被广泛实现。风险在于敏感信息是通过syslog发送的，因为它是明文，所以任何有能力阅读它的人都可以收集这些信息以备后用，或者在发送时对其进行修改。
- en: For instance, it's fairly common to have an administrator put their password
    in the `userid` field, which means that the password is possibly compromised at
    that point. The next step that person usually takes is to try again, correctly,
    which means that the attacker now has both the userid and the password. You want
    to log this information though, to help detect malicious login attempts.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，管理员通常会将他们的密码放在`userid`字段中，这意味着密码在那一点上可能已经泄露。这个人通常会采取的下一步是再次尝试，这意味着攻击者现在既有userid又有密码。然而，您希望记录这些信息，以帮助检测恶意登录尝试。
- en: One option is to enable SNMPv3 and use SNMPv3 traps for logging instead of Syslog.
    This does, however, move your logging platform to one that is usually less flexible
    and often more difficult to use.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 一种选择是启用SNMPv3并使用SNMPv3陷阱来记录日志，而不是使用Syslog。然而，这将把您的日志平台转移到通常不太灵活且更难使用的平台。
- en: 'To enable SNMPv3 traps on a Cisco IOS device, use the following code:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 要在Cisco IOS设备上启用SNMPv3陷阱，请使用以下代码：
- en: '[PRE14]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Your SNMP trap server must have matching account information and encryption
    options. If you are going this far, you must also hardcode host information for
    each device sending traps as well.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 您的SNMP陷阱服务器必须具有匹配的帐户信息和加密选项。如果您走到这一步，您还必须为发送陷阱的每个设备硬编码主机信息。
- en: NetFlow collects and aggregates summary information for network traffic. At
    a minimum, this includes the "tuple" of Source IP, Destination IP, Protocol, Source
    Port Number, and Destination Port Number. Times are added for analytics, usually
    by the collecting server, so that flows from multiple servers can be combined
    and correlated without the need to worry about clock drift between the various
    networking devices.
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: NetFlow收集和汇总网络流量的摘要信息。至少包括源IP、目的IP、协议、源端口号和目的端口号的“元组”。通常由收集服务器添加时间以进行分析，以便可以组合和相关多个服务器的流量，而无需担心各种网络设备之间的时钟漂移。
- en: All that being said, the information that is sent is not usually sensitive –
    essentially, it's the source and destination IP addresses and a guess at the application
    in use (usually derived from the destination port). Most organizations would not
    consider this sensitive.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管如此，发送的信息通常不是敏感的-基本上，它是源和目的地IP地址以及所使用应用程序的猜测（通常是从目的地端口推导出来的）。大多数组织不会认为这是敏感信息。
- en: However, if your organization does consider this a risk, it's easy enough to
    direct this data back to the collection server over an IPSEC tunnel. The architecture
    of this might be somewhat tricky as you may have to maintain two routing **Virtual
    Routing Frameworks** (**VRFs**) to do this, but it is certainly doable. It might
    be simpler to just encrypt all WAN traffic, then apply layer 2 protections between
    the core router and the NetFlow collection server (assuming that they are on the
    same subnet).
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，如果您的组织认为这是一个风险，那么将这些数据通过IPSEC隧道传回到收集服务器就足够简单了。这个架构可能有些棘手，因为您可能需要维护两个路由**虚拟路由框架**（**VRFs**）来实现这一点，但这当然是可行的。也许更简单的方法是加密所有WAN流量，然后在核心路由器和NetFlow收集服务器之间应用第2层保护（假设它们在同一子网上）。
- en: Chapter 13 – Intrusion Prevention Systems on Linux
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第13章- Linux上的入侵防范系统
- en: Zeek would be your tool of choice. As we saw in the Zeek example, drilling down
    through all traffic in a specific time window to a specific TLS version is very
    quick. Adding geolocation information partway through the search just takes a
    few mouse clicks. The source and destination IP addresses are summarized for you
    as you narrow your search down, so no additional action is required to collect
    that.
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Zeek将是您的首选工具。正如我们在Zeek示例中看到的，通过特定时间窗口内的所有流量快速钻取到特定的TLS版本。在搜索过程中添加地理位置信息只需要几次鼠标点击。源和目的地IP地址在您缩小搜索范围时为您总结，因此不需要采取额外的行动来收集它们。
- en: SSH clients, when used, generate traffic. A tool such as P0F (or a commercial
    tool such as Teneble PVS) can passively collect all traffic, and then associate
    this traffic with the client workstations. By using algorithms such as JA3 or
    HASSH, passively collected data can often tell you about the client application,
    very often right down to its version. This allows you to target out-of-date clients
    for software upgrades.
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: SSH客户端在使用时会生成流量。诸如P0F（或商业工具如Teneble PVS）之类的工具可以被动地收集所有流量，然后将这些流量与客户端工作站关联起来。通过使用诸如JA3或HASSH之类的算法，被动收集的数据通常可以告诉您有关客户端应用程序的信息，甚至可以精确到其版本。这使您可以针对过时的客户端进行软件升级。
- en: PuTTY is a good example of this, since this application often isn't installed
    using a full MSI-based Windows installer. This means that it typically isn't easy
    to inventory using PowerShell or commercial inventory tools.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: PuTTY就是一个很好的例子，因为这个应用程序通常不是使用完整的基于MSI的Windows安装程序安装的。这意味着通常不容易使用PowerShell或商业清单工具进行清点。
- en: The downfall of this method is that you can only inventory the target applications
    when they are in use. Identifying hardware clients – for instance, unsanctioned
    **Internet of Things** (**IoT**) devices – is particularly effective since these
    devices tend to reach out to their various cloud services very frequently.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法的缺点是只能在应用程序使用时对目标应用程序进行清点。识别硬件客户端-例如，未经授权的**物联网**（**IoT**）设备-特别有效，因为这些设备倾向于非常频繁地与各种云服务联系。
- en: To start with, intentionally placing an IPS on the public internet side of a
    firewall isn't productive these days, given the hostile nature of that network
    – it will simply alert continuously, which makes for just too much "noise" to
    filter through.
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，故意将IPS放置在防火墙的公共互联网侧在当今并不是很有效，考虑到该网络的敌对性-它将不断发出警报，这将导致太多的“噪音”需要过滤。
- en: Placing an IPS to primarily catch outbound traffic or inbound traffic that makes
    it past the firewall narrows down the assessed traffic considerably to potential
    attack traffic (inbound) and traffic that may indicate internal hosts being compromised
    (outbound). This placement usually amounts to being on a SPAN port, monitoring
    the inside and DMZ interfaces of the firewall. This may be expanded to additional
    ports or entire VLANs (reference the section on SPAN ports in [*Chapter 11*](B16336_11_Final_NM_ePub.xhtml#_idTextAnchor192),
    *Packet Capture and Analysis in Linux*).
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 将IPS放置在主要捕获出站流量或绕过防火墙的入站流量的位置，可以大大减少评估的流量，将其缩小到潜在的攻击流量（入站）和可能指示内部主机受到威胁的流量（出站）。这种放置通常是在SPAN端口上，监视防火墙的内部和DMZ接口。这可能扩展到其他端口或整个VLAN（参考[*第11章*](B16336_11_Final_NM_ePub.xhtml#_idTextAnchor192)，*Linux中的数据包捕获和分析*中的SPAN端口部分）。
- en: Placing an IPS in such a way that it can inspect decrypted traffic allows it
    to assess otherwise "invisible" payloads; for instance, in RDP, SSH, or HTTPS
    traffic. In modern architectures, this often means that the IPS is actually on
    the firewall itself, often dubbed a **Unified Threat Management** (**UTM**) firewall
    or **next-generation firewall** (**NGFW**).
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 将IPS放置在可以检查解密流量的位置，可以评估否则“不可见”的有效载荷；例如，在RDP、SSH或HTTPS流量中。在现代架构中，这通常意味着IPS实际上位于防火墙本身上，通常被称为**统一威胁管理**（**UTM**）防火墙或**下一代防火墙**（**NGFW**）。
- en: Chapter 14 – Honeypot Services on Linux
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第14章- Linux上的蜜罐服务
- en: Honeypots are deployed to catch attacker traffic "on film." Especially on internal
    networks, their primary goal is to keep the attacker engaged on the honeypot host
    for long enough that you can mount some defenses.
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 蜜罐被部署来“拍摄”攻击者的流量。特别是在内部网络上，它们的主要目标是让攻击者在蜜罐主机上忙碌足够长的时间，以便你可以采取一些防御措施。
- en: Lighting up an unexpected combination of ports on one host is a dead giveaway
    to your attacker that the target is a honeypot. Not only will they skip that host,
    but they'll proceed with additional caution, knowing that you have honeypots deployed.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 点亮一个主机上意想不到的端口组合会立即暴露你的攻击者，目标是一个蜜罐。他们不仅会跳过那个主机，而且会更加谨慎地继续，知道你部署了蜜罐。
- en: 'An AD domain controller typically has many of these ports enabled:'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: AD域控制器通常启用了许多这些端口：
- en: '![](img/B16336_Assesment_Table_02.jpg)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16336_Assesment_Table_02.jpg)'
- en: This list isn't complete and focuses on TCP ports. An attacker will often skip
    scanning UDP ports entirely, especially if the profile of open TCP ports is enough
    to identify target hosts.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 这个列表并不完整，重点是TCP端口。攻击者通常会完全跳过扫描UDP端口，特别是如果开放的TCP端口的配置足以识别目标主机。
- en: On the internet, the exception will be scans for `500/udp` and `4500/udp`, which
    usually indicate open VPN endpoints.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 在互联网上，例外情况将是对`500/udp`和`4500/udp`的扫描，这通常表示开放的VPN端点。
