- en: '*Chapter 5*: Securing Systems with Users, Groups, and Permissions'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第5章*：使用用户、用户组和权限保护系统'
- en: Security is a key part of managing a system, and understanding the security
    concepts in order to provide the right access to the right resource to the right
    user, or group of users, is required for any system administrator.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 安全性是管理系统的关键部分，了解安全概念以便为任何系统管理员提供正确的资源访问权限是必要的。
- en: In this chapter, we will review the basics of security in `sudo` as a way to
    assign admin privileges to different users in the system (and even disable the
    root account). We will also take a deeper look into file permissions and how to
    change them, using an extended capability to enable commands to be run with a
    different user or group or simplify group collaboration in directories.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将回顾`sudo`中的安全基础知识，作为为系统中不同用户分配管理员权限的一种方式（甚至禁用root帐户）。我们还将深入研究文件权限以及如何改变它们，使用扩展功能来使命令以不同的用户或组运行，或者简化目录中的组协作。
- en: 'We will cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将涵盖以下主题：
- en: Creating, modifying, and deleting local user accounts and groups
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建、修改和删除本地用户账户和用户组
- en: Managing groups and reviewing assignments
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理用户组和审查分配
- en: Adjusting password policies
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调整密码策略
- en: Configuring sudo access for administrative tasks
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为管理任务配置sudo访问权限
- en: Checking, reviewing, and modifying file permissions
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查、审查和修改文件权限
- en: Using special permissions
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用特殊权限
- en: Let's get started in the world of permissions and security with user accounts
    and groups.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始学习权限和安全性，包括用户账户和用户组。
- en: Creating, modifying, and deleting local user accounts and groups
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建、修改和删除本地用户账户和用户组
- en: One of the first tasks that a system administrator has to do when preparing
    a system to be accessed by users is to create new user accounts for the people
    accessing the system. In this section, we will review how local accounts are created
    and deleted, as well as how they are assigned to groups.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 当准备系统供用户访问时，系统管理员必须做的第一项任务之一是为访问系统的人创建新的用户帐户。在本节中，我们将回顾如何创建和删除本地帐户，以及如何将它们分配给用户组。
- en: 'The first step is to create a new user account in the system. That is done
    by using the `useradd` command. Let''s add `user01` to the system by running the
    following:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是在系统中创建一个新用户帐户。这是通过使用`useradd`命令完成的。让我们通过运行以下命令将`user01`添加到系统中：
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: With that, the user is created.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这个，用户就创建好了。
- en: Important note
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: To be able to add users, we need administrative privileges. In the current configuration,
    we do that by running the commands as `root`.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 为了能够添加用户，我们需要管理员权限。在当前配置中，我们通过以`root`身份运行命令来实现这一点。
- en: 'The account is created using the default options configured in the system,
    such as the following:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 帐户是使用系统中配置的默认选项创建的，例如以下选项：
- en: '`su` as `root`. We will see how to add a password to the user next.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`su` as `root`. We will see how to add a password to the user next.'
- en: '`user01`, the UID is `1001`.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`user01`，UID为`1001`。'
- en: '`1001`.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`1001`。'
- en: '**Description**: No description is added when creating the user. This field
    is left empty.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**描述**：在创建用户时未添加描述。此字段为空白。'
- en: '`home` directory is created in `/home/$USER`, in this case `/home/user01`.
    This will be default and main directory for the user and is where their personal
    preferences and files will be stored. Initial contents are copied from `/etc/skel`.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`home`目录创建在`/home/$USER`中，在本例中为`/home/user01`。这将是用户的默认和主目录，也是存储他们个人偏好和文件的地方。初始内容从`/etc/skel`复制而来。'
- en: '`bash`.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`bash`。'
- en: Tip
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: The default options applied when a new user is created are defined in the `/etc/default/useradd`
    file.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 创建新用户时应用的默认选项在`/etc/default/useradd`文件中定义。
- en: 'Once the user is created, we can add (or change) the password by running, as
    `root`, the command `passwd` followed by the username to change it:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 用户创建后，我们可以通过以`root`身份运行`passwd`命令，后跟要更改的用户名，来添加（或更改）密码：
- en: '[PRE1]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Now the user has the new password assigned. Note two things:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 现在用户有了新分配的密码。请注意两件事：
- en: User `root` can change the password to any user without knowing the previous
    one (a full password reset). This is useful when a user comes back from their
    holidays and doesn't remember their password.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户`root`可以更改任何用户的密码，而无需知道先前的密码（完全重置密码）。当用户度假回来后不记得密码时，这是很有用的。
- en: In the example, we show the password assigned, `redhat`, but that is not shown
    on the screen. The password is too simple and does not meet the default complexity
    criteria, however, as `root` we can still assign it.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在示例中，我们显示了分配的密码`redhat`，但屏幕上没有显示。密码太简单，不符合默认的复杂性标准，但是作为`root`，我们仍然可以分配它。
- en: 'Let''s check the new user with the `id` command we learned before:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用之前学过的`id`命令来检查新用户：
- en: '[PRE2]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'After the steps taken in this section, we now have the user in the system and
    ready to be used. The main options we could have used to customize the user creation
    with `useradd` are the following:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中采取的步骤之后，我们现在在系统中有了用户，并且可以使用。我们可以用`useradd`自定义用户创建的主要选项如下：
- en: '`-u` or `--uid`: Assign a specific UID to the user.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-u`或`--uid`：为用户分配特定的UID。'
- en: '`-g` or `--gid`: Assign a main group to the user. It can be specified by number
    (GID) or by name. The group needs to be created first.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-g`或`--gid`：为用户分配一个主组。可以通过编号（GID）或名称指定。该组需要先创建。'
- en: '`-G` or `--groups`: Make the user part of other groups by providing a comma-separated
    list of them.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-G`或`--groups`：通过提供逗号分隔的列表使用户成为其他组的一部分。'
- en: '`-c` or `--comment`: Provide a description for the user, specified between
    quotes if you want to use spaces.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-c`或`--comment`：为用户提供描述，如果要使用空格，则在引号之间指定。'
- en: '`-d` or `--home-dir`: Define the home directory for the user.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-d`或`--home-dir`：为用户定义主目录。'
- en: '`-s` or `--shell`: Assign a custom shell to the user.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-s`或`--shell`：为用户分配自定义shell。'
- en: '`-p` or `--password`: A way to provide a password to the user. The password
    should be already encrypted to use this method. It is recommended *not* to use
    this option as there are ways to capture the encrypted password. Please use `passwd`
    instead.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-p`或`--password`：提供密码给用户的一种方法。密码应该已经加密才能使用这种方法。建议*不*使用此选项，因为有捕获加密密码的方法。请改用`passwd`。'
- en: '`-r` or `--system`: To create a system account instead of a user account.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-r`或`--system`：创建系统账户而不是用户账户。'
- en: 'What if we need to change any of the user''s properties, such as, for example,
    the description? The tool for that is `usermod`. Let''s modify the description
    to `user01`:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们需要更改用户的任何属性，例如描述，我们可以使用`usermod`工具。让我们将描述修改为`user01`：
- en: '[PRE3]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The `usermod` command uses the same options as `useradd`. It will be easy to
    customize your current users now.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '`usermod`命令使用与`useradd`相同的选项。现在定制您当前的用户将会很容易。'
- en: 'Let''s create `user02` as an example of how to use the options:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们以创建`user02`为例，演示如何使用选项：
- en: '[PRE4]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Tip
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: When the command line is too long, the character `\` can be added, then press
    *Enter* and continue the command on a new line.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 当命令行太长时，可以添加字符`\`，然后按*Enter*并在新行上继续命令。
- en: 'Now we know how to create a user, but we may need to create a group too and
    add our users to it. Let''s create the `finance` group, with the `groupadd` command:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道如何创建用户，但我们可能也需要创建一个组并将我们的用户添加到其中。让我们使用`groupadd`命令创建`finance`组：
- en: '[PRE5]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'We can add the `user01` and `user02` users to the `finance` group:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将`user01`和`user02`用户添加到`finance`组：
- en: '[PRE6]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Important note
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: We are using the `-aG` option to add the user to the group, instead of modifying
    the groups the user belongs to.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用`-aG`选项将用户添加到组中，而不是修改用户所属的组。
- en: 'Once we know how to create users and groups, let''s check how to delete them
    with the `userdel` command:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们知道如何创建用户和组，让我们看看如何使用`userdel`命令删除它们：
- en: '[PRE7]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: As you can see, we needed to manually delete the `home` directory. This way
    of removing a user is good if we want to keep its data for future use.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，我们需要手动删除`home`目录。这种删除用户的方式很好，如果我们想保留其数据以备将来使用。
- en: 'To fully remove a user, we shall apply the option `-r`. Let'' try it with `user02`:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 要完全删除用户，我们应用选项`-r`。让我们尝试使用`user02`：
- en: '[PRE8]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Now let''s remove the `finance` group with the `groupdel` command:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们使用`groupdel`命令删除`finance`组：
- en: '[PRE9]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: As we have seen, it's simple and easy to create users and groups in RHEL and
    make simple assignments. In the next section, let's check in more depth how to
    manage groups and assignments to them.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所见，简单易行地在RHEL中创建用户和组并进行简单分配。在下一节中，让我们更深入地了解如何管理组和对其进行分配。
- en: Managing groups and reviewing assignments
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 管理组和审查分配
- en: We have seen how to create a group with `groupadd` and delete it with `groupdel`.
    Let's see how to modify a created group with `groupmod`.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到如何使用`groupadd`创建组，并使用`groupdel`删除组。让我们看看如何使用`groupmod`修改已创建的组。
- en: 'Let''s create a group to work with. We will create the misspelled `acounting`
    group by running the following:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个要操作的组。我们将通过运行以下命令创建拼写错误的`acounting`组：
- en: '[PRE10]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'You see we made a mistake in the name by not spelling it `accounting`. We may
    even have added some user accounts to it, and we need to modify it. We can do
    so using `groupmod` and running the following:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 您看到我们在名称上犯了一个错误，没有拼写成`accounting`。我们甚至可能已经向其中添加了一些用户账户，我们需要修改它。我们可以使用`groupmod`并运行以下命令来这样做：
- en: '[PRE11]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Now we''ve seen how we modify the group name. We can modify not just the name
    but the GID by using the `-g` option:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经看到了如何修改组名。我们可以使用`-g`选项修改不仅名称，还有GID：
- en: '[PRE12]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'We can see which groups are assigned to a user by running the `groups` command%:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过运行`groups`命令来查看分配给用户的组：
- en: '[PRE13]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: With this, we are ready to manage groups and users in a Linux system. Let's
    move on to password policies.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这个，我们已经准备好在Linux系统中管理组和用户。让我们继续讨论密码策略。
- en: Adjusting password policies
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 调整密码策略
- en: As was mentioned in [*Chapter 3*](B16799_03_Final_SK_ePub.xhtml#_idTextAnchor029),
    *Basic Commands and Simple Shell Scripts*, users are stored in the `/etc/passwd`
    file while the encrypted passwords, or `/etc/shadow` file.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 如[*第3章*](B16799_03_Final_SK_ePub.xhtml#_idTextAnchor029)中提到的，*基本命令和简单的Shell脚本*，用户存储在`/etc/passwd`文件中，而加密密码存储在`/etc/shadow`文件中。
- en: Tip
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: A hashing algorithm is made so that it generates a precise string of characters,
    or a hash, from a provided piece of data (that is, a file or a word). It does
    it in a way so that it will always generate the same hash from the same original
    data, but the original data is almost impossible to recreate from the hash. That's
    why they are used to store passwords or verify the integrity of a downloaded file.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 哈希算法是这样做的，它从提供的数据（即文件或单词）生成一串精确的字符，或哈希。它以一种方式进行，以便它总是从相同的原始数据生成相同的哈希，但是几乎不可能从哈希中重新创建原始数据。这就是为什么它们用于存储密码或验证下载文件的完整性。
- en: 'Let''s take a look at one example by running `grep` user as `root` against
    `/etc/shadow`:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过以`root`身份运行`grep`用户对`/etc/shadow`进行查找来看一个例子：
- en: '[PRE14]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: As with the password file, the data stored in `/etc/shadow` has an entry per
    line and the fields are separated by colons (`:`).
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 与密码文件一样，`/etc/shadow`中存储的数据每行有一个条目，字段由冒号(`:`)分隔。
- en: '`user`: Account name. It should be the same one as in `/etc/passwd`.'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`user`：账户名称。它应该与`/etc/passwd`中的名称相同。'
- en: '`$6$tOT/cvZ4PWRcl8XX$0v3.ADE/ibzlUGbDLer0ZYaMPNRJ5gK17LeKnoMfKK 9.nFz8grN3IafmHvoHPuh3XrU81nJu0.is5znztB64Y/`:
    Password hash. It contains three parts separated by `$`:'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`$6$tOT/cvZ4PWRcl8XX$0v3.ADE/ibzlUGbDLer0ZYaMPNRJ5gK17LeKnoMfKK 9.nFz8grN3IafmHvoHPuh3XrU81nJu0.is5znztB64Y/`：密码哈希。它包含三个由`$`分隔的部分：'
- en: '- `$6`: Algorithm used to encrypt the file. In this case, the value `6` indicates
    that it is SHA-512\. The number `1` is for the old, now insecure, MD5 algorithm.'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '- `$6`：用于加密文件的算法。在这种情况下，值`6`表示SHA-512。数字`1`是用于旧的、现在不安全的MD5算法。'
- en: '- `$tOT/cvZ4PWRcl8XX`: The password `$0v3.ADE/ibzlUGbDLer0ZYaMPNRJ5gK17LeKnoMfKK9.nFz8grN3IafmHvoHPuh3XrU81nJu0.is5znztB64Y/`:
    Encrypted password hash. Using the salt and the SHA-512 algorithm, this token
    is created. When the user validates, the process is run again and if the same
    hash is generated, the password is validated and access is granted.'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '- `$tOT/cvZ4PWRcl8XX`：密码`$0v3.ADE/ibzlUGbDLer0ZYaMPNRJ5gK17LeKnoMfKK9.nFz8grN3IafmHvoHPuh3XrU81nJu0.is5znztB64Y/`：加密密码哈希。使用盐和SHA-512算法，创建此令牌。当用户验证时，该过程再次运行，如果生成相同的哈希，则验证密码并授予访问权限。'
- en: '`18650`: The time and date when the password was last changed. The format is
    the number of days since 1970-01-01 00:00 UTC (this date is also known as **the
    epoch**).'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`18650`：密码上次更改的时间和日期。格式是自1970-01-01 00:00 UTC以来的天数（这个日期也被称为**纪元**）。'
- en: '`0`: Minimum number of days until the user can change the password again.'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`0`：用户可以再次更改密码之前的最少天数。'
- en: '`99999`: Maximum number of days until the user has to change the password again.
    If empty, it won''t expire.'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`99999`：用户必须再次更改密码之前的最大天数。如果为空，密码不会过期。'
- en: '`7`: Number of days the user will be warned that the password is about to expire.'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`7`：用户将被警告密码即将过期的天数。'
- en: '`3`: Number of days the user can still log in even when the password has expired.'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`3`：用户即使密码过期仍然可以登录的天数。'
- en: '`19113`: Date on which the password should expire. If empty, it won''t expire
    on a specific date.'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`19113`：密码应该过期的日期。如果为空，它不会在特定日期过期。'
- en: '`<empty>`: The last colon is left to allow us to add new fields easily.'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<empty>`：最后一个冒号留下来方便我们轻松添加新字段。'
- en: Tip
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: 'To convert the `date` field to a human-readable date, you can run the following
    command: `date -d ''1970-01-01 UTC + 18650 days''`.'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 要将`date`字段转换为可读日期，可以运行以下命令：`date -d '1970-01-01 UTC + 18650 days'`。
- en: 'How do we change the expiration dates for passwords? The tool to do so is `chage`,
    for `/etc/shadow`:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 我们如何更改密码的过期日期？用于此操作的工具是`chage`，用于`/etc/shadow`：
- en: '`-d` or `--lastday`: The time and date when the password was last changed.
    The format for it is `YYYY-MM-DD`.'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-d`或`--lastday`：密码上次更改的时间和日期。格式为`YYYY-MM-DD`。'
- en: '`-m` or `--mindays`: Minimum number of days until the user can change the password
    again.'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-m`或`--mindays`：用户可以再次更改密码之前的最少天数。'
- en: '`-W` or `--warndays`: Number of days the user will be warned that the password
    is about to expire.'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-W`或`--warndays`：用户将被警告密码即将过期的天数。'
- en: '`-I` or `--inactive`: Number of days, once the password has expired, that will
    have to pass before the account is locked.'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-I`或`--inactive`：密码过期后，账户被锁定之前必须经过的天数。'
- en: '`-E` or `--expiredate`: Date after which the user''s account will be locked.
    The date should be expressed in the format `YYYY-MM-DD`.'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-E`或`--expiredate`：用户账户将被锁定的日期。日期应以`YYYY-MM-DD`格式表示。'
- en: 'Let''s try it. First, we create the `usertest` account:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们试一下。首先，我们创建`usertest`账户：
- en: '[PRE15]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Important note
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: The tools `adduser` and `useradd` are the same tool in RHEL 8\. Feel free to
    type it the way you feel most comfortable with.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在RHEL 8中，`adduser`和`useradd`工具是相同的工具。随时以您感觉最舒适的方式输入。
- en: 'You''ll notice in the previous example, from the two exclamation marks, `!!`,
    in bold that the password is not set, and we are using the defaults. Let''s change
    the password and check the difference. Use any password you like:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 您会注意到在前面的示例中，从两个感叹号`!!`中，粗体显示密码未设置，并且我们正在使用默认值。让我们更改密码并检查差异。使用您喜欢的任何密码：
- en: '[PRE16]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The password hash is created and the date for the last change is just kept
    the same as the current date. Let''s establish some options:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 密码哈希已创建，并且上次更改的日期与当前日期相同。让我们建立一些选项：
- en: '[PRE17]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Please notice the changes in the `/etc/shadow` file corresponding to the values
    specified for `chage`. We can check the changes with the option `–l` of `chage`:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意`/etc/shadow`文件中与`chage`指定的值对应的更改。我们可以使用`chage`的`-l`选项检查更改：
- en: '[PRE18]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'To change the default values, we shall edit `/etc/login.defs`. Let''s check
    the section for the most common changes:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 要更改默认值，我们应该编辑`/etc/login.defs`。让我们检查最常见更改的部分：
- en: '[PRE19]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Please take some minutes to review the options in `/etc/login.defs`.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 请花几分钟时间查看`/etc/login.defs`中的选项。
- en: 'Now, we could have a situation in which a user has left the company. How can
    we lock the account so the user cannot access the system? The `usermod` command
    has the `–L` option, for **lock**, to do so. Let''s try it. First, let''s log
    into the system:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可能会遇到一个用户已经离开公司的情况。我们如何锁定账户，使用户无法访问系统？`usermod`命令有`-L`选项，用于**锁定**账户。让我们试一下。首先，让我们登录系统：
- en: '![Figure 5.1 – User account usertest logging into the system'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.1 - 用户账户usertest登录系统'
- en: '](img/B16799_05_001.jpg)'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_05_001.jpg)'
- en: Figure 5.1 – User account usertest logging into the system
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.1 - 用户账户usertest登录系统
- en: 'Now let''s lock the account:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们锁定账户：
- en: '[PRE20]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Notice that there is a `!` character added before the password hash. This is
    the mechanism used to lock it. Let''s try to log in again:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在密码哈希之前添加了`!`字符。这是用于锁定的机制。让我们再次尝试登录：
- en: '![Figure 5.2 – User account usertest not being able to log into the system'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.2 - 用户账户usertest无法登录系统'
- en: '](img/B16799_05_002.jpg)'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16799_05_002.jpg)'
- en: Figure 5.2 – User account usertest not being able to log into the system
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.2 - 用户账户usertest无法登录系统
- en: 'The account can be unlocked by using the `–U` option:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用`-U`选项解锁账户：
- en: '[PRE21]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Now you can see that the `!` character is removed. Feel free to try logging
    in again.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您可以看到`!`字符已被移除。随时尝试再次登录。
- en: Important note
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: To fully lock the account from access, not just from logging in with a password
    (there are other mechanisms), we should set the expiry date to `1`.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 要完全阻止访问账户，而不仅仅是使用密码登录（还有其他机制），我们应该将到期日期设置为`1`。
- en: 'Another common use case is when you want users to access the system, such as
    having a network shared directory (that is, via NFS or CIFS, as explained in [*Chapter
    12*](B16799_12_Final_SK_ePub.xhtml#_idTextAnchor160), *Managing Local Storage
    and Filesystems*) but you do not want them to be able to run commands in the system.
    For that, we can use a very special shell, the `nologin` shell. Let''s assign
    that shell to the `usertest` user account using `usermod`:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个常见的用例是当您希望用户访问系统时，比如拥有一个网络共享目录（即通过NFS或CIFS，如[*第12章*](B16799_12_Final_SK_ePub.xhtml#_idTextAnchor160)中所解释的，*管理本地存储和文件系统*），但您不希望他们能够在系统中运行命令。为此，我们可以使用一个非常特殊的shell，即`nologin`
    shell。让我们使用`usermod`将该shell分配给`usertest`用户账户：
- en: '[PRE22]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Note that we are reviewing the changes in `/etc/passwd` this time as it is where
    the modification is applied.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这次我们正在审查`/etc/passwd`中的更改，因为这是修改所应用的地方。
- en: As you can see, it's easy to set the values for password aging for any user,
    lock them, or restrict access to the system. Let's move on to more administrative
    tasks and how to delegate admin access.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，很容易为任何用户设置密码过期的值，锁定它们，或限制对系统的访问。让我们继续进行更多的管理任务以及如何委派管理员访问权限。
- en: Configuring sudo access for administrative tasks
  id: totrans-133
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为管理任务配置sudo访问权限
- en: There is a way to delegate administrative access to users in RHEL, and it is
    done so with a tool called **sudo**, which stands for **Super User Do**.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 在RHEL中，有一种方法可以将管理访问权限委派给用户，这是通过一个名为**sudo**的工具来实现的，它代表**Super User Do**。
- en: It not only allows you to grant full administrative privileges to users or groups
    but also be very granular on the privileged commands that some users may be able
    to execute.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 它不仅允许您授予用户或组完整的管理员特权，还可以对某些用户可以执行的特权命令进行非常精细的控制。
- en: Let's start by understanding the default configuration and how to change it.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们首先了解默认配置以及如何更改它。
- en: Understanding sudo configuration
  id: totrans-137
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解sudo配置
- en: 'The tool has its main configuration file in `/etc/sudoers` and includes this
    part in the default configuration:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 该工具的主要配置文件位于`/etc/sudoers`中，并包括默认配置的这一部分：
- en: '[PRE23]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Let's analyze the lines one by one to understand what they do.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们逐行分析这些行，以了解它们的作用。
- en: 'The first line enables the `root` user to use `sudo` for any command that they
    want to run:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 第一行使`root`用户可以使用`sudo`运行任何命令：
- en: '[PRE24]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'The second line enables the user in the `wheel` group to use `sudo` for any
    command that they want to run. We will explain the details of the syntax later:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 第二行使`wheel`组中的用户可以使用`sudo`运行任何命令。我们稍后将解释语法的细节：
- en: '[PRE25]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Important note
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: Please do not disable the `wheel` group directive unless there is an important
    reason to do so. This behavior is expected by other programs to be available,
    and disabling it may cause some problems.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 除非有重要原因，否则请不要禁用`wheel`组指令。其他程序期望它可用，并且禁用它可能会导致一些问题。
- en: 'The third line, and all the lines starting with `#`, are considered comments,
    and they are intended only to add descriptive content with no effect on the final
    configuration:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 第三行和所有以`#`开头的行都被视为注释，它们仅用于添加描述性内容，对最终配置没有影响：
- en: '[PRE26]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'The fourth line is the only exception to the previous rule. This line enables
    the directory `/etc/sudoers.d` as a source for configuration files. We can drop
    a file in that folder, and it will be used by `sudo`:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 第四行是对前一规则的唯一例外。此行使目录`/etc/sudoers.d`成为配置文件的来源。我们可以在该文件夹中放置一个文件，`sudo`将使用它：
- en: '[PRE27]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: The exception to this last rule is files that end with `~` or contain a `.`
    (dot) character.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一条规则的例外是以`~`结尾或包含`.`（点）字符的文件。
- en: As you have seen, the default configuration enables `root` and the members of
    the `wheel` group to run any command as an administrator using `sudo`.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所见，默认配置使`root`和`wheel`组的成员能够使用`sudo`作为管理员运行任何命令。
- en: 'The easiest way to use it is to add a user to the `wheel` group to grant that
    user full admin privileges. An example of how to modify the `usertest` account
    to make it an admin account is as follows:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 最简单的方法是将用户添加到`wheel`组，以授予该用户完整的管理员特权。修改`usertest`账户使其成为管理员账户的示例如下：
- en: '[PRE28]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Important note
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: For cloud instances, the account root does not have a valid password assigned.
    To be able to manage the mentioned cloud instance, in some clouds such as `wheel`
    group. In the case of AWS, the default user account is `ec2-user`. In other clouds,
    a custom user is also created and also added to the `wheel` group.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 对于云实例，账户root没有分配有效密码。为了能够管理所述的云实例，在某些云中，如`wheel`组。在AWS的情况下，默认用户账户是`ec2-user`。在其他云中，还创建了一个自定义用户，并将其添加到`wheel`组中。
- en: To edit the `/etc/sudoers` file, as happens with other sensitive files, there
    is a tool that helps not only ensure that two admins are not editing it simultaneously
    but also that the syntax is correct. In this case, the tool to edit it is `visudo`.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 与其他敏感文件一样，为了编辑`/etc/sudoers`文件，有一个工具不仅可以确保两个管理员不同时编辑它，还可以确保语法正确。在这种情况下，编辑它的工具是`visudo`。
- en: Using sudo to run admin commands
  id: totrans-158
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用sudo运行管理员命令
- en: We will use the `user` account in these examples. As you may remember, in [*Chapter
    1*](B16799_01_Final_SK_ePub.xhtml#_idTextAnchor014), *Installing RHEL8*, we enabled
    the checkbox in which we requested the account to be the administrator. Under
    the hood, the account was added to the `wheel` group, so we can start using `sudo`
    to run admin commands.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些示例中，我们将使用`user`账户。您可能还记得，在[*第1章*](B16799_01_Final_SK_ePub.xhtml#_idTextAnchor014)中，*安装RHEL8*，我们启用了请求账户成为管理员的复选框。在幕后，该账户被添加到`wheel`组中，因此我们可以开始使用`sudo`来运行管理员命令。
- en: 'Let''s log in with the `user` account and try to run an administrative command
    such as `adduser`:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用`user`账户登录并尝试运行一个管理命令，比如`adduser`：
- en: '[PRE29]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'As you can see, we receive a `Permission denied` error message. To be able
    to run it with `sudo`, we only need to add it to the beginning of the command
    line:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所见，我们收到了`Permission denied`的错误消息。要能够使用`sudo`运行它，我们只需要将其添加到命令行的开头：
- en: '[PRE30]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'In this case, we see that we have been shown a warning message that is shown
    the first time we run `sudo` successfully. Then we are asked for *our own password*
    – not the admin password as there may not even be one, but the one we have for
    the user running `sudo`. Once the password is correctly typed, the command is
    run and registered in the system journal:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我们看到第一次成功运行`sudo`时显示了一个警告消息。然后我们被要求输入*我们自己的密码* - 不是管理员密码，因为可能根本就没有管理员密码，而是我们为运行`sudo`的用户设置的密码。一旦密码正确输入，命令就会运行并在系统日志中注册：
- en: '[PRE31]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Important note
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: 'Once you have run `sudo` successfully, it will remember that validation for
    15 minutes (as the default behavior). This is done so you don''t have to type
    your password again and again if you need to run more than one administrative
    command in a session. To increase it to 30 minutes, we can add the following line
    using `visudo`: `Defaults:USER timestamp_timeout=30`.'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦成功运行了`sudo`，它将记住验证15分钟（作为默认行为）。这样做是为了在一个会话中运行多个管理命令时，你不必一遍又一遍地输入密码。要将其增加到30分钟，我们可以使用`visudo`添加以下行：`Defaults:USER
    timestamp_timeout=30`。
- en: 'Sometimes you want to have an interactive session so that there is no need
    to type `sudo` again and again. For that, the `–i` option is really useful. Let''s
    try it:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候你想要一个交互式会话，这样就不需要一遍又一遍地输入`sudo`。为此，`-i`选项非常有用。让我们试一下：
- en: '[PRE32]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Let's now move on to customizing the configuration of `sudo` in the `sudoers`
    file.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们开始定制`sudoers`文件中`sudo`的配置。
- en: Configuring sudoers
  id: totrans-171
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置sudoers
- en: We have seen the details of the default `/etc/sudoers` file in the previous
    section. Let's see a couple of examples of how to make a more granular configuration.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 在前一节中，我们已经看到了默认的`/etc/sudoers`文件的详细信息。让我们看几个例子，如何进行更细粒度的配置。
- en: 'Let''s start by making `sudo` run admin commands without requesting a password
    for the users in the `wheel` group. We can run `visudo` and make the line that
    starts with `%wheel` look like this:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们首先让`sudo`在`sudoers`文件中运行管理员命令时不需要为`wheel`组中的用户请求密码。我们可以运行`visudo`，并使以`%wheel`开头的行如下所示：
- en: '[PRE33]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Save it. Note that there is a commented line in the configuration file with
    that configuration. Now let''s try it:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 保存它。注意配置文件中有一行被注释掉的配置。现在让我们试一下：
- en: '[PRE34]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'We can now create a file, with your favorite editor, to make the new user account,
    `ellen`, able to run admin commands. Let''s create the `/etc/sudoers.d/ellen`
    file with this content:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以使用你喜欢的编辑器创建一个文件，使新用户账户`ellen`能够运行管理员命令。让我们创建`/etc/sudoers.d/ellen`文件，并添加以下内容：
- en: '[PRE35]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: With this, we are using the `/etc/sudoers.d` directory to extend the `sudo`
    configuration.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这个，我们正在使用`/etc/sudoers.d`目录来扩展`sudo`配置。
- en: 'We will review the detailed configuration of `sudoers` here despite it not
    being part of the RHCSA exam. As you can see, there are three fields, separated
    by spaces or tabs, to define policies in the configuration files. Let''s review
    them:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管它不是RHCSA考试的一部分，我们将在这里回顾`sudoers`的详细配置。正如你所看到的，有三个字段，用空格或制表符分隔，来定义配置文件中的策略。让我们来回顾一下：
- en: 'The first field is to specify who is affected by the policy:'
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第一个字段是指定受策略影响的对象：
- en: '- We can add users by simply putting the username in the first field.'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: '- 我们可以通过简单地在第一个字段中放入用户名来添加用户。'
- en: '- We can add groups by using the `%` character before the name of the group
    in the first field.'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '- 我们可以通过在第一个字段中使用`％`字符来添加组。'
- en: 'The second field is for where the policy applies:'
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第二个字段是策略适用的位置：
- en: '- We have so far used `ALL=(ALL)` to specify everything.'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: '- 到目前为止，我们使用了`ALL=(ALL)`来指定一切。'
- en: '- In the first part of this field, we can define a group of computers to be
    run such as `SERVERS=10.0.0.0/255.255.255.0`.'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '- 在这个字段的第一部分，我们可以定义要运行的计算机组，比如`SERVERS=10.0.0.0/255.255.255.0`。'
- en: '- In the second part, we can specify commands such as `NETWORK=/usr/sbin/ip`.'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '- 在第二部分，我们可以指定命令，比如`NETWORK=/usr/sbin/ip`。'
- en: '- Between parentheses is the user account that can be used to run the command.'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '- 括号中是可以用来运行命令的用户账户。'
- en: The third field is to specify which commands will use the password and which
    won't.
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第三个字段是指定哪些命令将使用密码，哪些不会。
- en: 'The syntax goes like this:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 语法如下：
- en: '[PRE36]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Let''s see an example:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一个例子：
- en: '[PRE37]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: We have already seen how to provide administrative access to users in RHEL,
    and even how to do it in a very granular manner. Let's move on now to the section
    on working with file permissions.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到了如何在RHEL中为用户提供管理访问权限，甚至如何以非常细粒度的方式进行。现在让我们继续看看如何处理文件权限的部分。
- en: Checking, reviewing, and modifying file permissions
  id: totrans-195
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查、回顾和修改文件权限
- en: We have learned so far how to create users and groups, and even provide administrative
    capabilities to them. It's time now to see how permissions work at the files and
    directories level.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经学会了如何创建用户和组，甚至为它们提供管理能力。现在是时候看看权限是如何在文件和目录级别工作的了。
- en: As you'll remember, in [*Chapter 3*](B16799_03_Final_SK_ePub.xhtml#_idTextAnchor029),
    *Basic Commands and Simple Shell Scripts*, we already saw how to see the permissions
    that are applied to a file. Let's review them now and dive deeper.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你记得的，在[*第3章*](B16799_03_Final_SK_ePub.xhtml#_idTextAnchor029)，*基本命令和简单Shell脚本*中，我们已经看到了如何查看应用于文件的权限。现在让我们回顾一下并深入了解。
- en: 'Let''s get the permissions info for some example files by listing it with the
    `–l`, for long, option. Remember to run this as the `root` user (or using `sudo`):'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用`-l`选项列出一些示例文件的权限信息。记得以`root`用户身份运行（或使用`sudo`）：
- en: '[PRE38]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: Remember that, in Linux, *everything is a file*.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，在Linux中，*一切都是文件*。
- en: 'Now let''s review the five different blocks of information that the permissions
    include by using the ones for `/usr/bin/bash`:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们使用`/usr/bin/bash`的权限来回顾一下权限包括的五个不同信息块：
- en: '[PRE39]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'The blocks are as follows:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 这些块如下：
- en: '![](img/B16799_05_Table_01.jpg)'
  id: totrans-204
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16799_05_Table_01.jpg)'
- en: Let's review them again, as they are very important.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们再次回顾一下，因为它们非常重要。
- en: 'Block 1 is for the special permissions that the file may have. If it is a regular
    file and has no special permissions (as in this case), it will appear as `-`:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 块1是文件可能具有的特殊权限。如果它是一个常规文件并且没有特殊权限（就像在这种情况下一样），它将显示为`-`：
- en: Directories will appear with `d`.
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目录将显示为`d`。
- en: Links, usually symbolic links, will appear with an `l`.
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 链接，通常是符号链接，将显示为`l`。
- en: Special permissions to run a file as a different user or group, called `s`.
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 特殊权限以不同的用户或组运行文件，称为`s`。
- en: A special permission for directories, so that the owner can only remove or rename
    the file, called the `t`.
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个特殊权限，以便所有者只能删除或重命名文件，称为`t`。
- en: 'Block 2 is permissions for the *user* owning the file, and consists of three
    characters:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 块2是文件所有者的*用户*的权限，由三个字符组成：
- en: The first one, `r`, is the read permission assigned.
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第一个，`r`，是分配的读权限。
- en: The second one, `w`, is the write permission assigned.
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第二个，`w`，是分配的写权限。
- en: The third one, `x`, is the executable permission. (Note that the executable
    permission for directories means being able to enter them.)
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第三个，`x`，是可执行权限。（请注意，目录的可执行权限意味着能够进入它们。）
- en: Block 3 is permissions for the *group*. It consists of the same three characters
    for read, write, and execute (`rwx`). In this case, write is missing.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 块3是*组*的权限。它由相同的三个字符组成，用于读、写和执行（`rwx`）。在这种情况下，缺少写权限。
- en: Block 4 is the permissions for *others*. It also consists of the same three
    characters for read, write, and execute (`rwx`) as before. As in the previous
    block, write is missing.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 块4是*其他*的权限。它也由相同的三个字符组成，用于读、写和执行（`rwx`），就像之前一样。和之前的块一样，缺少写权限。
- en: Block 5 indicates that there is an **SELinux** context applied to the file.
    More on this topic in [*Chapter 10*](B16799_10_Final_SK_ePub.xhtml#_idTextAnchor143),
    *Keeping Your System Hardened with SELinux*.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 块5表示文件应用了**SELinux**上下文。有关此主题的更多信息，请参见[*第10章*](B16799_10_Final_SK_ePub.xhtml#_idTextAnchor143)，*使用SELinux使系统更加安全*。
- en: To change permissions for a file, we will use the `chmod` command.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 要更改文件的权限，我们将使用`chmod`命令。
- en: 'First, let''s create a file:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们创建一个文件：
- en: '[PRE40]'
  id: totrans-220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'As you can see, the file is created with your username as the owner, your main
    group as the group, and a default set of permissions. The default set of permissions
    are defined by `umask`, and in RHEL, the defaults for newly created file permissions
    are as follows:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所看到的，文件是以您的用户名作为所有者，您的主要组作为组，并且具有一组默认权限创建的。新创建的文件权限的默认值由`umask`定义，在RHEL中，新创建的文件权限的默认值如下：
- en: '**User**: Read and write'
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户**：读和写'
- en: '**Group**: Read'
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**组**：读'
- en: '**Others**: Read'
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**其他人**：读'
- en: 'To change permissions using `chmod`, we specify the changes with three characters:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用`chmod`更改权限，我们使用三个字符指定更改：
- en: 'The first one, which determines whom the change affects:'
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第一个，确定更改影响的对象：
- en: '- `u`: User'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: '- `u`：用户'
- en: '- `g`: Group'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: '- `g`：组'
- en: '- `o`: Others'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: '- `o`：其他'
- en: 'The second one to add or remove permissions:'
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第二个是添加或删除权限：
- en: '- `+`: Add'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: '- `+`：添加'
- en: '- `-`: Remove'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: '- `-`：删除'
- en: 'The third one, which determines the permission to be changed:'
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第三个，确定要更改的权限：
- en: '- `r`: Read'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: '- `r`：读'
- en: '- `w`: Write'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: '- `w`：写'
- en: '- `x`: Execute'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: '- `x`：执行'
- en: 'So, to add write permissions to the group, we can run the following:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，要向组添加写权限，我们可以运行以下命令：
- en: '[PRE41]'
  id: totrans-238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'And to remove read permissions from others, we run the following:'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 要删除其他人的读权限，我们运行以下命令：
- en: '[PRE42]'
  id: totrans-240
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: The permissions are stored in four octal digits. This means that special permissions
    are stored in a number from 0 to 7, the same way user, group, and other permissions
    are stored, each one of them with a number from 0 to 7.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 权限以四个八进制数字存储。这意味着特殊权限以0到7的数字存储，与用户、组和其他权限的存储方式相同，每个权限都有0到7的数字。
- en: 'Some examples are shown as follows:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 一些示例如下所示：
- en: '![](img/B16799_05_Table_02.jpg)'
  id: totrans-243
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16799_05_Table_02.jpg)'
- en: 'How does it work? We assign a number (power of 2) for each permission:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 它是如何工作的？我们为每个权限分配一个数字（2的幂）：
- en: '**Nothing**: 0'
  id: totrans-245
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**无**：0'
- en: '**Execute**: 2^0 = 1'
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**执行**：2^0 = 1'
- en: '**Write**: 2^1 = 2'
  id: totrans-247
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**写**：2^1 = 2'
- en: '**Read**: 2^2 = 4'
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**读**：2^2 = 4'
- en: 'We add them:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 我们添加它们：
- en: '[PRE43]'
  id: totrans-250
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'This is how we can assign permissions using numbers. Now let''s try it:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我们可以使用数字分配权限的方式。现在让我们试一试：
- en: '[PRE44]'
  id: totrans-252
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'As we said before, the default configuration of permissions is set by `umask`.
    We can very easily see the value:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前所说，权限的默认配置是由`umask`设置的。我们可以很容易地看到这个值：
- en: '[PRE45]'
  id: totrans-254
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: All the newly created files have `execute` permissions removed (`1`).
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 所有新创建的文件都删除了`执行`权限（`1`）。
- en: With this `umask`, `0022`, the one provided by default in RHEL, we will have
    `write` permissions for `group` and `others` also removed (`2`).
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这个`umask`，`0022`，这是RHEL中默认提供的，我们将删除`组`和`其他`的`写`权限（`2`）。
- en: 'Even when it is not recommended to change `umask`, we could give it a try to
    learn how it works. Let''s start by using the most permissive `umask`, `0000`,
    to see how all `read` and `write` permissions are assigned to newly created files:'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 即使不建议更改`umask`，我们可以尝试一下来了解它是如何工作的。让我们从使用最宽松的`umask`，`0000`开始，看看如何将所有`读`和`写`权限分配给新创建的文件：
- en: '[PRE46]'
  id: totrans-258
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'Now let''s use the more restrictive `umask` for `group` and `others` permissions:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们使用更严格的`umask`来限制`组`和`其他`的权限：
- en: '[PRE47]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'If we try a higher number, it won''t work and will return an error:'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们尝试更高的数字，它将无法工作并返回错误：
- en: '[PRE48]'
  id: totrans-262
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'You can see that the effect of `0066` and `0077` is the same:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以看到`0066`和`0077`的效果是一样的：
- en: '[PRE49]'
  id: totrans-264
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Let''s re-establish `umask` in our session, to the defaults, to continue practicing:'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在我们的会话中重新建立`umask`，以默认值继续练习：
- en: '[PRE50]'
  id: totrans-266
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'Now we may find ourselves with the need to create a directory for a specific
    user or group, or to change the owner of a file. To be able to change the ownership
    of a file or directory, the `chown` or `chgrp` tools are used. Let''s see how
    it works. Let''s move to `/var/tmp` and create the folders for `finance` and `accounting`:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可能需要为特定用户或组创建一个目录，或更改文件的所有者。为了能够更改文件或目录的所有权，使用`chown`或`chgrp`工具。让我们看看它是如何工作的。让我们移动到`/var/tmp`并为`finance`和`accounting`创建文件夹：
- en: '[PRE51]'
  id: totrans-268
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'Now let''s create the groups for `finance` and `accounting`:'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们创建`finance`和`accounting`的组：
- en: '[PRE52]'
  id: totrans-270
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'In this example, the `accounting` group was already created. Let''s change
    the group for each directory with `chgrp`:'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，`accounting`组已经创建。让我们使用`chgrp`为每个目录更改组：
- en: '[PRE53]'
  id: totrans-272
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'Now we create users for `sonia` and `matilde`, and assign them to `finance`
    and `accounting` respectively:'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们为`sonia`和`matilde`创建用户，并将它们分别分配给`finance`和`accounting`：
- en: '[PRE54]'
  id: totrans-274
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'Now we can create a personal folder for each under their group folder:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以为每个用户在其组文件夹下创建一个个人文件夹：
- en: '[PRE55]'
  id: totrans-276
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'There is a way to specify a user and group to `chown`, using the `:` separator.
    Let''s use it with `matilde`:'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 有一种方法可以使用`:`分隔符指定用户和组给`chown`。让我们用`matilde`试试：
- en: '[PRE56]'
  id: totrans-278
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'If we want to change the permissions for a full branch, we can use `chown`
    with the `–R`, for recursive, option. Let''s copy a branch and change its permissions:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想要更改整个分支的权限，我们可以使用`chown`命令的`-R`选项进行递归。让我们复制一个分支并更改其权限：
- en: '[PRE57]'
  id: totrans-280
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: With this, we have a good understanding of permissions in RHEL, their default
    behaviors, and how to work with them.
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这些，我们对RHEL中的权限、它们的默认行为以及如何使用它们有了很好的理解。
- en: Let's move on to some more advanced topics about permissions.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续讨论一些关于权限的更高级的话题。
- en: Using special permissions
  id: totrans-283
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用特殊权限
- en: As we've seen in the previous section, there are special permissions that could
    be applied to files and directories. Let's start by reviewing Set-UID (or **suid**)
    and Set-GUID (or **sgid**).
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在前一节中看到的，有一些特殊权限可以应用到文件和目录。让我们从回顾Set-UID（或**suid**）和Set-GUID（或**sgid**）开始。
- en: Understanding and applying Set-UID
  id: totrans-285
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解和应用Set-UID
- en: 'Let''s review how Set-UID applies to files and directories:'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回顾一下Set-UID如何应用到文件和目录：
- en: '**Set-UID permission applied to a file**: When applied to an executable file,
    this file will run as if the owner of the file was running it, applying the permissions.'
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**应用到文件的Set-UID权限**：当应用到可执行文件时，该文件将以文件所有者运行，应用权限。'
- en: '**Set-UID permission applied to a directory**: No effect.'
  id: totrans-288
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**应用到目录的Set-UID权限**：没有效果。'
- en: 'Let''s check a file with Set-UID:'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们检查一个具有Set-UID的文件：
- en: '[PRE58]'
  id: totrans-290
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: The `passwd` command requires `root` permissions to change hashes in the `/etc/shadow`
    file.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: '`passwd`命令需要`root`权限才能更改`/etc/shadow`文件中的哈希值。'
- en: 'To apply this permission, we can use the `chmod` command, applying `u+s` permissions:'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 要应用这些权限，我们可以使用`chmod`命令，应用`u+s`权限：
- en: '[PRE59]'
  id: totrans-293
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: Tip
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: Be very careful when assigning `suid` to files as `root`. If you leave write
    permissions on the file, any user will be able to change the content and execute
    anything as `root`.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 在将`root`分配给文件时，给文件分配`suid`时要非常小心。如果您将文件的写权限留下，任何用户都可以更改内容并以`root`身份执行任何操作。
- en: Understanding and applying Set-GID
  id: totrans-296
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解和应用Set-GID
- en: 'Let''s review how Set-GID applies to files and directories:'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回顾一下Set-GID如何应用到文件和目录：
- en: '**Set-GID permission applied to a file**: When applied to an executable file,
    this file will run with the group permissions of the file.'
  id: totrans-298
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**应用到文件的Set-GID权限**：当应用到可执行文件时，该文件将以文件的组权限运行。'
- en: '**Set-GID permission applied to a directory**: New files created in that directory
    will have the group of the directory applied to them.'
  id: totrans-299
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**应用到目录的Set-GID权限**：在该目录中创建的新文件将具有该目录的组应用到它们。'
- en: 'Let''s check a file with Set-GID:'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们检查一个具有Set-GID的文件：
- en: '[PRE60]'
  id: totrans-301
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'We can try applying the permission to a file with `chmod` using `g+s`:'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以尝试使用`chmod`命令将权限应用到文件，使用`g+s`：
- en: '[PRE61]'
  id: totrans-303
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'Now let''s try it with a directory. Let''s go to our previous example:'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们尝试一下目录。让我们回到我们之前的例子：
- en: '[PRE62]'
  id: totrans-305
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: You can see how, after applying Set-GID to the folders, they show the `s` permission
    for the group (in bold). Also, when creating new files in those directories the
    group assigned to them is the same as the group that the parent directory has
    (also in bold). This way we ensure group permissions are properly assigned.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以看到，在将Set-GID应用到文件夹后，它们显示了组的`s`权限（加粗显示）。此外，在这些目录中创建新文件时，分配给它们的组与父目录的组相同（也加粗显示）。这样我们就确保了组权限被正确分配。
- en: Using the sticky bit
  id: totrans-307
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用粘着位
- en: 'The last of the permissions to be used is the **sticky bit**. It only has an
    effect on directories and what it does is simple: when a user creates a file in
    a directory with the sticky bit, only that user can edit or delete that file.'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 最后要使用的权限是**粘着位**。它只对目录产生影响，它的作用很简单：当用户在具有粘着位的目录中创建文件时，只有该用户才能编辑或删除该文件。
- en: 'Let''s check an example:'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一个例子：
- en: '[PRE63]'
  id: totrans-310
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'We could apply those to the previous example, also with `chmod` using `o+t`:'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将这些应用到前面的例子中，也可以使用`chmod`来使用`o+t`：
- en: '[PRE64]'
  id: totrans-312
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: 'Let''s give it a try. We will add the user `sonia` to the `accounting` group.
    We will grant a write permission to the group for the `/var/tmp/accounting` directory.
    Then, we will create a file with the user `matilde` and try to delete it with
    the user `sonia`. Let''s go:'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们试一试。我们将用户`sonia`添加到`accounting`组。我们将为`/var/tmp/accounting`目录的组授予写权限。然后，我们将使用用户`matilde`创建一个文件，并尝试使用用户`sonia`删除它。让我们开始：
- en: '[PRE65]'
  id: totrans-314
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: Tip
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: 'The numeric values for special permissions are: `suid` = `4`; `sgid` = `2`;
    `sticky bit` = `1`.'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 特殊权限的数字值为：`suid` = `4`；`sgid` = `2`；`粘着位` = `1`。
- en: With this, we have completed how to manage permissions in RHEL.
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这些，我们已经完成了如何管理RHEL中的权限。
- en: Summary
  id: totrans-318
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we have reviewed the permission management system in RHEL,
    implemented using traditional permissions. We have learned how to create user
    accounts and groups, and how to ensure that passwords are managed correctly. We
    have also learned how passwords are stored in the system, and even how to block
    shell access to a user. We have created files and folders, assigning permissions
    to them and ensuring that users can collaborate with an enforced set of rules.
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们已经回顾了RHEL中使用传统权限实现的权限管理系统。我们已经学会了如何创建用户帐户和组，以及如何确保密码被正确管理。我们还学会了系统中密码是如何存储的，甚至学会了如何阻止用户访问shell。我们创建了文件和文件夹，为它们分配了权限，并确保用户可以遵守一套规则进行协作。
- en: These are the basics of managing access in RHEL and will be very useful to avoid
    security issues when managing systems. As this is such an important topic, we
    recommend reviewing this chapter carefully, reading the `man` pages for the commands
    shown, and making an effort to have a really good understanding of the topic as
    it will avoid any uncomfortable situations in the future.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是在RHEL中管理访问权限的基础知识，当管理系统时，这将非常有用，以避免安全问题。由于这是一个非常重要的话题，我们建议仔细阅读本章内容，阅读所示命令的“man”页面，并努力对该主题有一个真正的理解，这将避免将来出现任何不舒服的情况。
- en: Now you are ready to start providing services to users and managing their access,
    which is what we will cover in the next chapter. Remember to practice and test
    thoroughly the lessons learned here.
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您已经准备好开始为用户提供服务并管理他们的访问权限了，这将是我们下一章要涵盖的内容。请记住要在这里学到的知识进行充分的练习和测试。
